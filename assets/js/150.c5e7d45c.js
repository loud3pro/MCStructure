(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{460:function(t,a,e){"use strict";e.r(a);var n=e(27),s=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"r-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#r-3"}},[t._v("#")]),t._v(" R~3")]),t._v(" "),a("h3",{attrs:{id:"raknet-replica3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-replica3"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::Replica3")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::Replica3 : RakNet::NetworkIDObject\n{\n  RakNet::RakNetGUID creatingSystemGUID;\n  RakNet::RakNetGUID deletingSystemGUID;\n  RakNet::ReplicaManager3 *replicaManager;\n  RakNet::LastSerializationResultBS lastSentSerialization;\n  bool forceSendUntilNextUpdate;\n  RakNet::LastSerializationResult *lsr;\n  unsigned int referenceIndex;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-replicamanager3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-replicamanager3"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::ReplicaManager3")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::ReplicaManager3 : RakNet::PluginInterface2\n{\n  RakNet::PRO defaultSendParameters;\n  unsigned __int64 autoSerializeInterval;\n  unsigned __int64 lastAutoSerializeOccurance;\n  bool autoCreateConnections;\n  bool autoDestroyConnections;\n  RakNet::Replica3 *currentlyDeallocatingReplica;\n  unsigned int nextReferenceIndex;\n  RakNet::ReplicaManager3::RM3World *worldsArray[255];\n  DataStructures::List<RakNet::ReplicaManager3::RM3World *> worldsList;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-pro"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-pro"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::PRO")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct RakNet::PRO\n{\n  PacketPriority priority;\n  PacketReliability reliability;\n  char orderingChannel;\n  unsigned int sendReceipt;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-serializeparameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-serializeparameters"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::SerializeParameters")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::SerializeParameters\n{\n  RakNet::BitStream outputBitstream[16];\n  RakNet::BitStream *lastSentBitstream[16];\n  unsigned __int64 messageTimestamp;\n  RakNet::PRO pro[16];\n  RakNet::Connection_RM3 *destinationConnection;\n  unsigned int bitsWrittenSoFar;\n  unsigned __int64 whenLastSerialized;\n  unsigned __int64 curTime;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-deserializeparameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-deserializeparameters"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::DeserializeParameters")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::DeserializeParameters\n{\n  RakNet::BitStream serializationBitstream[16];\n  bool bitstreamWrittenTo[16];\n  unsigned __int64 timeStamp;\n  RakNet::Connection_RM3 *sourceConnection;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-lastserializationresultbs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-lastserializationresultbs"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::LastSerializationResultBS")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::LastSerializationResultBS\n{\n  RakNet::BitStream bitStream[16];\n  bool indicesToSend[16];\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-lastserializationresult"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-lastserializationresult"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::LastSerializationResult")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::LastSerializationResult\n{\n  RakNet::Replica3 *replica;\n  unsigned __int64 whenLastSerialized;\n  RakNet::LastSerializationResultBS *lastSerializationResultBS;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-replica3-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-replica3-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::Replica3_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::Replica3_vtbl\n{\n  void (__fastcall *~NetworkIDObject)(RakNet::NetworkIDObject *this);\n  void (__fastcall *SetNetworkIDManager)(RakNet::NetworkIDObject *this, RakNet::NetworkIDManager *);\n  RakNet::NetworkIDManager *(__fastcall *GetNetworkIDManager)(RakNet::NetworkIDObject *this);\n  unsigned __int64 (__fastcall *GetNetworkID)(RakNet::NetworkIDObject *this);\n  void (__fastcall *SetNetworkID)(RakNet::NetworkIDObject *this, unsigned __int64);\n  void (__fastcall *SetParent)(RakNet::NetworkIDObject *this, void *);\n  void *(__fastcall *GetParent)(RakNet::NetworkIDObject *this);\n  void (__fastcall *WriteAllocationID)(RakNet::Replica3 *this, RakNet::Connection_RM3 *, RakNet::BitStream *);\n  RakNet::RM3ConstructionState (__fastcall *QueryConstruction)(RakNet::Replica3 *this, RakNet::Connection_RM3 *, RakNet::ReplicaManager3 *);\n  RakNet::RM3DestructionState (__fastcall *QueryDestruction)(RakNet::Replica3 *this, RakNet::Connection_RM3 *, RakNet::ReplicaManager3 *);\n  bool (__fastcall *QueryRemoteConstruction)(RakNet::Replica3 *this, RakNet::Connection_RM3 *);\n  bool (__fastcall *QueryRelayDestruction)(RakNet::Replica3 *this, RakNet::Connection_RM3 *);\n  void (__fastcall *SerializeConstruction)(RakNet::Replica3 *this, RakNet::BitStream *, RakNet::Connection_RM3 *);\n  bool (__fastcall *DeserializeConstruction)(RakNet::Replica3 *this, RakNet::BitStream *, RakNet::Connection_RM3 *);\n  void (__fastcall *SerializeConstructionExisting)(RakNet::Replica3 *this, RakNet::BitStream *, RakNet::Connection_RM3 *);\n  void (__fastcall *DeserializeConstructionExisting)(RakNet::Replica3 *this, RakNet::BitStream *, RakNet::Connection_RM3 *);\n  void (__fastcall *SerializeDestruction)(RakNet::Replica3 *this, RakNet::BitStream *, RakNet::Connection_RM3 *);\n  bool (__fastcall *DeserializeDestruction)(RakNet::Replica3 *this, RakNet::BitStream *, RakNet::Connection_RM3 *);\n  RakNet::RM3ActionOnPopConnection (__fastcall *QueryActionOnPopConnection)(RakNet::Replica3 *this, RakNet::Connection_RM3 *);\n  void (__fastcall *OnPoppedConnection)(RakNet::Replica3 *this, RakNet::Connection_RM3 *);\n  void (__fastcall *DeallocReplica)(RakNet::Replica3 *this, RakNet::Connection_RM3 *);\n  RakNet::RM3QuerySerializationResult (__fastcall *QuerySerialization)(RakNet::Replica3 *this, RakNet::Connection_RM3 *);\n  void (__fastcall *OnUserReplicaPreSerializeTick)(RakNet::Replica3 *this);\n  RakNet::RM3SerializationResult (__fastcall *Serialize)(RakNet::Replica3 *this, RakNet::SerializeParameters *);\n  void (__fastcall *OnSerializeTransmission)(RakNet::Replica3 *this, RakNet::BitStream *, RakNet::Connection_RM3 *, unsigned int *, unsigned __int64);\n  void (__fastcall *Deserialize)(RakNet::Replica3 *this, RakNet::DeserializeParameters *);\n  void (__fastcall *PostSerializeConstruction)(RakNet::Replica3 *this, RakNet::BitStream *, RakNet::Connection_RM3 *);\n  void (__fastcall *PostDeserializeConstruction)(RakNet::Replica3 *this, RakNet::BitStream *, RakNet::Connection_RM3 *);\n  void (__fastcall *PostSerializeConstructionExisting)(RakNet::Replica3 *this, RakNet::BitStream *, RakNet::Connection_RM3 *);\n  void (__fastcall *PostDeserializeConstructionExisting)(RakNet::Replica3 *this, RakNet::BitStream *, RakNet::Connection_RM3 *);\n  void (__fastcall *PreDestruction)(RakNet::Replica3 *this, RakNet::Connection_RM3 *);\n  RakNet::RM3ConstructionState (__fastcall *QueryConstruction_ClientConstruction)(RakNet::Replica3 *this, RakNet::Connection_RM3 *, bool);\n  bool (__fastcall *QueryRemoteConstruction_ClientConstruction)(RakNet::Replica3 *this, RakNet::Connection_RM3 *, bool);\n  RakNet::RM3ConstructionState (__fastcall *QueryConstruction_ServerConstruction)(RakNet::Replica3 *this, RakNet::Connection_RM3 *, bool);\n  bool (__fastcall *QueryRemoteConstruction_ServerConstruction)(RakNet::Replica3 *this, RakNet::Connection_RM3 *, bool);\n  RakNet::RM3ConstructionState (__fastcall *QueryConstruction_PeerToPeer)(RakNet::Replica3 *this, RakNet::Connection_RM3 *, RakNet::Replica3P2PMode);\n  bool (__fastcall *QueryRemoteConstruction_PeerToPeer)(RakNet::Replica3 *this, RakNet::Connection_RM3 *);\n  RakNet::RM3QuerySerializationResult (__fastcall *QuerySerialization_ClientSerializable)(RakNet::Replica3 *this, RakNet::Connection_RM3 *, bool);\n  RakNet::RM3QuerySerializationResult (__fastcall *QuerySerialization_ServerSerializable)(RakNet::Replica3 *this, RakNet::Connection_RM3 *, bool);\n  RakNet::RM3QuerySerializationResult (__fastcall *QuerySerialization_PeerToPeer)(RakNet::Replica3 *this, RakNet::Connection_RM3 *, RakNet::Replica3P2PMode);\n  RakNet::RM3ActionOnPopConnection (__fastcall *QueryActionOnPopConnection_Client)(RakNet::Replica3 *this, RakNet::Connection_RM3 *);\n  RakNet::RM3ActionOnPopConnection (__fastcall *QueryActionOnPopConnection_Server)(RakNet::Replica3 *this, RakNet::Connection_RM3 *);\n  RakNet::RM3ActionOnPopConnection (__fastcall *QueryActionOnPopConnection_PeerToPeer)(RakNet::Replica3 *this, RakNet::Connection_RM3 *);\n  void (__fastcall *BroadcastDestruction)(RakNet::Replica3 *this);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-connection-rm3-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-connection-rm3-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::Connection_RM3_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::Connection_RM3_vtbl\n{\n  void (__fastcall *~Connection_RM3)(RakNet::Connection_RM3 *this);\n  RakNet::Replica3 *(__fastcall *AllocReplica)(RakNet::Connection_RM3 *this, RakNet::BitStream *, RakNet::ReplicaManager3 *);\n  void (__fastcall *GetConstructedReplicas)(RakNet::Connection_RM3 *this, DataStructures::List<RakNet::Replica3 *> *);\n  void (__fastcall *SerializeOnDownloadStarted)(RakNet::Connection_RM3 *this, RakNet::BitStream *);\n  void (__fastcall *DeserializeOnDownloadStarted)(RakNet::Connection_RM3 *this, RakNet::BitStream *);\n  void (__fastcall *SerializeOnDownloadComplete)(RakNet::Connection_RM3 *this, RakNet::BitStream *);\n  void (__fastcall *DeserializeOnDownloadComplete)(RakNet::Connection_RM3 *this, RakNet::BitStream *);\n  bool (__fastcall *QueryGroupDownloadMessages)(RakNet::Connection_RM3 *this);\n  RakNet::Connection_RM3::ConstructionMode (__fastcall *QueryConstructionMode)(RakNet::Connection_RM3 *this);\n  void (__fastcall *QueryReplicaList)(RakNet::Connection_RM3 *this, DataStructures::List<RakNet::Replica3 *> *, DataStructures::List<RakNet::Replica3 *> *);\n  bool (__fastcall *QuerySerializationList)(RakNet::Connection_RM3 *this, DataStructures::List<RakNet::Replica3 *> *);\n  RakNet::SendSerializeIfChangedResult (__fastcall *SendSerialize)(RakNet::Connection_RM3 *this, RakNet::Replica3 *, bool *, RakNet::BitStream *, unsigned __int64, RakNet::PRO *, RakNet::RakPeerInterface *, unsigned __int8, unsigned __int64);\n  RakNet::SendSerializeIfChangedResult (__fastcall *SendSerializeIfChanged)(RakNet::Connection_RM3 *this, RakNet::LastSerializationResult *, RakNet::SerializeParameters *, RakNet::RakPeerInterface *, unsigned __int8, RakNet::ReplicaManager3 *, unsigned __int64);\n  void (__fastcall *SendConstruction)(RakNet::Connection_RM3 *this, DataStructures::List<RakNet::Replica3 *> *, DataStructures::List<RakNet::Replica3 *> *, RakNet::PRO, RakNet::RakPeerInterface *, unsigned __int8, RakNet::ReplicaManager3 *);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-replicamanager3-rm3world"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-replicamanager3-rm3world"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::ReplicaManager3::RM3World")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::ReplicaManager3::RM3World\n{\n  DataStructures::List<RakNet::Connection_RM3 *> connectionList;\n  DataStructures::List<RakNet::Replica3 *> userReplicaList;\n  unsigned __int8 worldId;\n  RakNet::NetworkIDManager *networkIDManager;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-replicamanager3-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-replicamanager3-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::ReplicaManager3_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::ReplicaManager3_vtbl\n{\n  void (__fastcall *~PluginInterface2)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnAttach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDetach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *Update)(RakNet::PluginInterface2 *this);\n  RakNet::PluginReceiveResult (__fastcall *OnReceive)(RakNet::PluginInterface2 *this, RakNet::Packet *);\n  void (__fastcall *OnRakPeerStartup)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnRakPeerShutdown)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnClosedConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n  void (__fastcall *OnFailedConnectionAttempt)(RakNet::PluginInterface2 *this, RakNet::Packet *, RakNet::PI2_FailedConnectionAttemptReason);\n  bool (__fastcall *UsesReliabilityLayer)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDirectSocketSend)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnDirectSocketReceive)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnReliabilityLayerNotification)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress, bool);\n  void (__fastcall *OnInternalPacket)(RakNet::PluginInterface2 *this, RakNet::InternalPacket *, unsigned int, RakNet::SystemAddress, unsigned int, int);\n  void (__fastcall *OnAck)(RakNet::PluginInterface2 *this, unsigned int, RakNet::SystemAddress, unsigned int);\n  void (__fastcall *OnPushBackPacket)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  RakNet::Connection_RM3 *(__fastcall *AllocConnection)(RakNet::ReplicaManager3 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID);\n  void (__fastcall *DeallocConnection)(RakNet::ReplicaManager3 *this, RakNet::Connection_RM3 *);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpforwarder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpforwarder"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPForwarder")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::UDPForwarder\n{\n  RakNet::UDPForwarder_vtbl *__vftable /*VFT*/;\n  DataStructures::ThreadsafeAllocatingQueue<RakNet::UDPForwarder::StartForwardingInputStruct> startForwardingInput;\n  DataStructures::Queue<RakNet::UDPForwarder::StartForwardingOutputStruct> startForwardingOutput;\n  RakNet::SimpleMutex startForwardingOutputMutex;\n  DataStructures::ThreadsafeAllocatingQueue<RakNet::UDPForwarder::StopForwardingStruct> stopForwardingCommands;\n  unsigned int nextInputId;\n  DataStructures::List<RakNet::UDPForwarder::ForwardEntry *> forwardListNotUpdated;\n  unsigned __int16 maxForwardEntries;\n  RakNet::LocklessUint32_t isRunning;\n  RakNet::LocklessUint32_t threadRunning;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpforwarder-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpforwarder-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPForwarder_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::UDPForwarder_vtbl\n{\n  void (__fastcall *~UDPForwarder)(RakNet::UDPForwarder *this);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpforwarder-startforwardinginputstruct"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpforwarder-startforwardinginputstruct"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPForwarder::StartForwardingInputStruct")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::UDPForwarder::StartForwardingInputStruct\n{\n  RakNet::SystemAddress source;\n  RakNet::SystemAddress destination;\n  unsigned int timeoutOnNoDataMS;\n  RakNet::RakString forceHostAddress;\n  unsigned __int16 socketFamily;\n  unsigned int inputId;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpforwarder-startforwardingoutputstruct"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpforwarder-startforwardingoutputstruct"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPForwarder::StartForwardingOutputStruct")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct RakNet::UDPForwarder::StartForwardingOutputStruct\n{\n  unsigned __int16 forwardingPort;\n  unsigned __int64 forwardingSocket;\n  RakNet::UDPForwarderResult result;\n  unsigned int inputId;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpforwarder-stopforwardingstruct"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpforwarder-stopforwardingstruct"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPForwarder::StopForwardingStruct")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::UDPForwarder::StopForwardingStruct\n{\n  RakNet::SystemAddress source;\n  RakNet::SystemAddress destination;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpforwarder-forwardentry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpforwarder-forwardentry"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPForwarder::ForwardEntry")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(4)) RakNet::UDPForwarder::ForwardEntry\n{\n  RakNet::SystemAddress addr1Unconfirmed;\n  RakNet::SystemAddress addr2Unconfirmed;\n  RakNet::SystemAddress addr1Confirmed;\n  RakNet::SystemAddress addr2Confirmed;\n  unsigned int timeLastDatagramForwarded;\n  unsigned __int64 socket;\n  unsigned int timeoutOnNoDataMS;\n  __int16 socketFamily;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-router2-connectionrequestsystem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-router2-connectionrequestsystem"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::Router2::ConnectionRequestSystem")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(4)) RakNet::Router2::ConnectionRequestSystem\n{\n  RakNet::RakNetGUID guid;\n  int pingToEndpoint;\n  unsigned __int16 usedForwardingEntries;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-router2-connnectrequest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-router2-connnectrequest"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::Router2::ConnnectRequest")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::Router2::ConnnectRequest\n{\n  DataStructures::List<RakNet::Router2::ConnectionRequestSystem> connectionRequestSystems;\n  RakNet::SimpleMutex connectionRequestSystemsMutex;\n  RakNet::Router2::Router2RequestStates requestState;\n  unsigned int pingTimeout;\n  RakNet::RakNetGUID endpointGuid;\n  RakNet::RakNetGUID lastRequestedForwardingSystem;\n  bool returnConnectionLostOnFailure;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-router2-minipunchrequest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-router2-minipunchrequest"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::Router2::MiniPunchRequest")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::Router2::MiniPunchRequest\n{\n  RakNet::RakNetGUID endpointGuid;\n  RakNet::SystemAddress endpointAddress;\n  bool gotReplyFromEndpoint;\n  RakNet::RakNetGUID sourceGuid;\n  RakNet::SystemAddress sourceAddress;\n  bool gotReplyFromSource;\n  unsigned int timeout;\n  unsigned int nextAction;\n  unsigned __int16 forwardingPort;\n  unsigned __int64 forwardingSocket;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-router2-forwardedconnection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-router2-forwardedconnection"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::Router2::ForwardedConnection")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::Router2::ForwardedConnection\n{\n  RakNet::RakNetGUID endpointGuid;\n  RakNet::RakNetGUID intermediaryGuid;\n  RakNet::SystemAddress intermediaryAddress;\n  bool returnConnectionLostOnFailure;\n  bool weInitiatedForwarding;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-router2debuginterface"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-router2debuginterface"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::Router2DebugInterface")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::Router2DebugInterface\n{\n  RakNet::Router2DebugInterface_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-router2debuginterface-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-router2debuginterface-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::Router2DebugInterface_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::Router2DebugInterface_vtbl\n{\n  void (__fastcall *~Router2DebugInterface)(RakNet::Router2DebugInterface *this);\n  void (__fastcall *ShowFailure)(RakNet::Router2DebugInterface *this, const char *);\n  void (__fastcall *ShowDiagnostic)(RakNet::Router2DebugInterface *this, const char *);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-router2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-router2"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::Router2")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::Router2 : RakNet::PluginInterface2\n{\n  RakNet::UDPForwarder *udpForwarder;\n  int maximumForwardingRequests;\n  RakNet::SimpleMutex connectionRequestsMutex;\n  RakNet::SimpleMutex miniPunchesInProgressMutex;\n  RakNet::SimpleMutex forwardedConnectionListMutex;\n  DataStructures::List<RakNet::Router2::ConnnectRequest *> connectionRequests;\n  DataStructures::List<RakNet::Router2::MiniPunchRequest> miniPunchesInProgress;\n  DataStructures::List<RakNet::Router2::ForwardedConnection> forwardedConnectionList;\n  RakNet::Router2DebugInterface *debugInterface;\n  unsigned __int16 socketFamily;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-router2-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-router2-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::Router2_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::Router2_vtbl\n{\n  void (__fastcall *~PluginInterface2)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnAttach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDetach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *Update)(RakNet::PluginInterface2 *this);\n  RakNet::PluginReceiveResult (__fastcall *OnReceive)(RakNet::PluginInterface2 *this, RakNet::Packet *);\n  void (__fastcall *OnRakPeerStartup)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnRakPeerShutdown)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnClosedConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n  void (__fastcall *OnFailedConnectionAttempt)(RakNet::PluginInterface2 *this, RakNet::Packet *, RakNet::PI2_FailedConnectionAttemptReason);\n  bool (__fastcall *UsesReliabilityLayer)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDirectSocketSend)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnDirectSocketReceive)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnReliabilityLayerNotification)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress, bool);\n  void (__fastcall *OnInternalPacket)(RakNet::PluginInterface2 *this, RakNet::InternalPacket *, unsigned int, RakNet::SystemAddress, unsigned int, int);\n  void (__fastcall *OnAck)(RakNet::PluginInterface2 *this, unsigned int, RakNet::SystemAddress, unsigned int);\n  void (__fastcall *OnPushBackPacket)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-rpc4globalregistration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-rpc4globalregistration"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::RPC4GlobalRegistration")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::RPC4GlobalRegistration\n{\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-relayplugin-strandguidandroom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-relayplugin-strandguidandroom"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::RelayPlugin::StrAndGuidAndRoom")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::RelayPlugin::StrAndGuidAndRoom\n{\n  RakNet::RakString str;\n  RakNet::RakNetGUID guid;\n  RakNet::RakString currentRoom;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-relayplugin-strandguid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-relayplugin-strandguid"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::RelayPlugin::StrAndGuid")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::RelayPlugin::StrAndGuid\n{\n  RakNet::RakString str;\n  RakNet::RakNetGUID guid;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-relayplugin-rp-group"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-relayplugin-rp-group"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::RelayPlugin::RP_Group")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::RelayPlugin::RP_Group\n{\n  RakNet::RakString roomName;\n  DataStructures::List<RakNet::RelayPlugin::StrAndGuid> usersInRoom;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-relayplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-relayplugin"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::RelayPlugin")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::RelayPlugin : RakNet::PluginInterface2\n{\n  DataStructures::Hash<RakNet::RakString,RakNet::RelayPlugin::StrAndGuidAndRoom *,8096,&RakNet::RakString::ToInteger> strToGuidHash;\n  DataStructures::Hash<RakNet::RakNetGUID,RakNet::RelayPlugin::StrAndGuidAndRoom *,8096,&RakNet::RakNetGUID::ToUint32> guidToStrHash;\n  DataStructures::List<RakNet::RelayPlugin::RP_Group *> chatRooms;\n  bool acceptAddParticipantRequests;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-relayplugin-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-relayplugin-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::RelayPlugin_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::RelayPlugin_vtbl\n{\n  void (__fastcall *~PluginInterface2)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnAttach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDetach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *Update)(RakNet::PluginInterface2 *this);\n  RakNet::PluginReceiveResult (__fastcall *OnReceive)(RakNet::PluginInterface2 *this, RakNet::Packet *);\n  void (__fastcall *OnRakPeerStartup)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnRakPeerShutdown)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnClosedConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n  void (__fastcall *OnFailedConnectionAttempt)(RakNet::PluginInterface2 *this, RakNet::Packet *, RakNet::PI2_FailedConnectionAttemptReason);\n  bool (__fastcall *UsesReliabilityLayer)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDirectSocketSend)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnDirectSocketReceive)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnReliabilityLayerNotification)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress, bool);\n  void (__fastcall *OnInternalPacket)(RakNet::PluginInterface2 *this, RakNet::InternalPacket *, unsigned int, RakNet::SystemAddress, unsigned int, int);\n  void (__fastcall *OnAck)(RakNet::PluginInterface2 *this, unsigned int, RakNet::SystemAddress, unsigned int);\n  void (__fastcall *OnPushBackPacket)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-rpc4-localslotobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-rpc4-localslotobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::RPC4::LocalSlotObject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::RPC4::LocalSlotObject\n{\n  unsigned int registrationCount;\n  int callPriority;\n  void (__fastcall *functionPointer)(RakNet::BitStream *, RakNet::Packet *);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-rpc4-localslot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-rpc4-localslot"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::RPC4::LocalSlot")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::RPC4::LocalSlot\n{\n  DataStructures::OrderedList<RakNet::RPC4::LocalSlotObject,RakNet::RPC4::LocalSlotObject,&RakNet::RPC4::LocalSlotObjectComp> slotObjects;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-rpc4-localcallback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-rpc4-localcallback"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::RPC4::LocalCallback")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::RPC4::LocalCallback\n{\n  unsigned __int8 messageId;\n  DataStructures::OrderedList<RakNet::RakString,RakNet::RakString,&DataStructures::defaultOrderedListComparison<RakNet::RakString,RakNet::RakString> > functions;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-rpc4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-rpc4"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::RPC4")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::RPC4 : RakNet::PluginInterface2\n{\n  DataStructures::Hash<RakNet::RakString,RakNet::RPC4::LocalSlot *,256,&RakNet::RakString::ToInteger> localSlots;\n  DataStructures::Hash<RakNet::RakString,void (__cdecl*)(RakNet::BitStream *,RakNet::Packet *),64,&RakNet::RakString::ToInteger> registeredNonblockingFunctions;\n  DataStructures::Hash<RakNet::RakString,void (__cdecl*)(RakNet::BitStream *,RakNet::BitStream *,RakNet::Packet *),64,&RakNet::RakString::ToInteger> registeredBlockingFunctions;\n  DataStructures::OrderedList<unsigned char,RakNet::RPC4::LocalCallback *,&RakNet::RPC4::LocalCallbackComp> localCallbacks;\n  RakNet::BitStream blockingReturnValue;\n  bool gotBlockingReturnValue;\n  unsigned int nextSlotRegistrationCount;\n  bool interruptSignal;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-rpc4-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-rpc4-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::RPC4_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::RPC4_vtbl\n{\n  void (__fastcall *~PluginInterface2)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnAttach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDetach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *Update)(RakNet::PluginInterface2 *this);\n  RakNet::PluginReceiveResult (__fastcall *OnReceive)(RakNet::PluginInterface2 *this, RakNet::Packet *);\n  void (__fastcall *OnRakPeerStartup)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnRakPeerShutdown)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnClosedConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n  void (__fastcall *OnFailedConnectionAttempt)(RakNet::PluginInterface2 *this, RakNet::Packet *, RakNet::PI2_FailedConnectionAttemptReason);\n  bool (__fastcall *UsesReliabilityLayer)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDirectSocketSend)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnDirectSocketReceive)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnReliabilityLayerNotification)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress, bool);\n  void (__fastcall *OnInternalPacket)(RakNet::PluginInterface2 *this, RakNet::InternalPacket *, unsigned int, RakNet::SystemAddress, unsigned int, int);\n  void (__fastcall *OnAck)(RakNet::PluginInterface2 *this, unsigned int, RakNet::SystemAddress, unsigned int);\n  void (__fastcall *OnPushBackPacket)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-tableserializer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-tableserializer"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TableSerializer")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::TableSerializer\n{\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-telnettransport-telnetclient"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-telnettransport-telnetclient"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TelnetTransport::TelnetClient")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::TelnetTransport::TelnetClient\n{\n  RakNet::SystemAddress systemAddress;\n  char textInput[2048];\n  char lastSentTextInput[2048];\n  unsigned int cursorPosition;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-telnettransport"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-telnettransport"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TelnetTransport")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::TelnetTransport : RakNet::TransportInterface\n{\n  RakNet::TCPInterface *tcpInterface;\n  DataStructures::List<RakNet::TelnetTransport::TelnetClient *> remoteClients;\n  char *sendSuffix;\n  char *sendPrefix;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-telnettransport-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-telnettransport-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TelnetTransport_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::TelnetTransport_vtbl\n{\n  void (__fastcall *~TransportInterface)(RakNet::TransportInterface *this);\n  bool (__fastcall *Start)(RakNet::TransportInterface *this, unsigned __int16, bool);\n  void (__fastcall *Stop)(RakNet::TransportInterface *this);\n  void (*Send)(RakNet::TransportInterface *this, RakNet::SystemAddress, const char *, ...);\n  void (__fastcall *CloseConnection)(RakNet::TransportInterface *this, RakNet::SystemAddress);\n  RakNet::Packet *(__fastcall *Receive)(RakNet::TransportInterface *this);\n  void (__fastcall *DeallocatePacket)(RakNet::TransportInterface *this, RakNet::Packet *);\n  RakNet::SystemAddress *(__fastcall *HasNewIncomingConnection)(RakNet::TransportInterface *this, RakNet::SystemAddress *result);\n  RakNet::SystemAddress *(__fastcall *HasLostConnection)(RakNet::TransportInterface *this, RakNet::SystemAddress *result);\n  RakNet::CommandParserInterface *(__fastcall *GetCommandParser)(RakNet::TransportInterface *this);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-tm-team"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-tm-team"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TM_Team")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::TM_Team\n{\n  RakNet::TM_Team_vtbl *__vftable /*VFT*/;\n  unsigned __int64 ID;\n  RakNet::TM_World *world;\n  DataStructures::List<RakNet::TM_TeamMember *> teamMembers;\n  unsigned __int8 joinPermissions;\n  bool balancingApplies;\n  unsigned __int16 teamMemberLimit;\n  void *owner;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-tm-team-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-tm-team-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TM_Team_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::TM_Team_vtbl\n{\n  void (__fastcall *~TM_Team)(RakNet::TM_Team *this);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-tm-world"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-tm-world"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TM_World")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::TM_World\n{\n  RakNet::TM_World_vtbl *__vftable /*VFT*/;\n  DataStructures::Hash<unsigned __int64,RakNet::TM_Team *,256,&RakNet::TM_Team::ToUint32> teamsHash;\n  DataStructures::Hash<unsigned __int64,RakNet::TM_TeamMember *,256,&RakNet::TM_TeamMember::ToUint32> teamMembersHash;\n  RakNet::TeamManager *teamManager;\n  DataStructures::List<RakNet::RakNetGUID> participants;\n  DataStructures::List<RakNet::TM_Team *> teams;\n  DataStructures::List<RakNet::TM_TeamMember *> teamMembers;\n  bool balanceTeamsIsActive;\n  RakNet::RakNetGUID hostGuid;\n  unsigned __int8 worldId;\n  bool autoAddParticipants;\n  int teamRequestIndex;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-tm-world-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-tm-world-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TM_World_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::TM_World_vtbl\n{\n  void (__fastcall *~TM_World)(RakNet::TM_World *this);\n  void (__fastcall *OnClosedConnection)(RakNet::TM_World *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::TM_World *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-tm-teammember"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-tm-teammember"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TM_TeamMember")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::TM_TeamMember\n{\n  RakNet::TM_TeamMember_vtbl *__vftable /*VFT*/;\n  unsigned __int64 networkId;\n  RakNet::TM_World *world;\n  DataStructures::List<RakNet::TM_Team *> teams;\n  unsigned __int8 noTeamSubcategory;\n  DataStructures::List<RakNet::TM_TeamMember::RequestedTeam> teamsRequested;\n  RakNet::JoinTeamType joinTeamType;\n  DataStructures::List<RakNet::TM_Team *> lastTeams;\n  unsigned __int64 whenJoinAnyRequested;\n  unsigned int joinAnyRequestIndex;\n  void *owner;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-tm-teammember-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-tm-teammember-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TM_TeamMember_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::TM_TeamMember_vtbl\n{\n  void (__fastcall *~TM_TeamMember)(RakNet::TM_TeamMember *this);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-tm-teammember-requestedteam"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-tm-teammember-requestedteam"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TM_TeamMember::RequestedTeam")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct RakNet::TM_TeamMember::RequestedTeam\n{\n  unsigned __int64 whenRequested;\n  unsigned int requestIndex;\n  RakNet::TM_Team *requested;\n  bool isTeamSwitch;\n  RakNet::TM_Team *teamToLeave;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-teammanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-teammanager"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TeamManager")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::TeamManager : RakNet::PluginInterface2\n{\n  RakNet::TM_World *worldsArray[255];\n  DataStructures::List<RakNet::TM_World *> worldsList;\n  bool autoAddParticipants;\n  RakNet::TMTopology topology;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-teammanager-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-teammanager-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TeamManager_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::TeamManager_vtbl\n{\n  void (__fastcall *~PluginInterface2)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnAttach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDetach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *Update)(RakNet::PluginInterface2 *this);\n  RakNet::PluginReceiveResult (__fastcall *OnReceive)(RakNet::PluginInterface2 *this, RakNet::Packet *);\n  void (__fastcall *OnRakPeerStartup)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnRakPeerShutdown)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnClosedConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n  void (__fastcall *OnFailedConnectionAttempt)(RakNet::PluginInterface2 *this, RakNet::Packet *, RakNet::PI2_FailedConnectionAttemptReason);\n  bool (__fastcall *UsesReliabilityLayer)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDirectSocketSend)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnDirectSocketReceive)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnReliabilityLayerNotification)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress, bool);\n  void (__fastcall *OnInternalPacket)(RakNet::PluginInterface2 *this, RakNet::InternalPacket *, unsigned int, RakNet::SystemAddress, unsigned int, int);\n  void (__fastcall *OnAck)(RakNet::PluginInterface2 *this, unsigned int, RakNet::SystemAddress, unsigned int);\n  void (__fastcall *OnPushBackPacket)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-statisticshistory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-statisticshistory"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::StatisticsHistory")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::StatisticsHistory\n{\n  RakNet::StatisticsHistory_vtbl *__vftable /*VFT*/;\n  DataStructures::OrderedList<unsigned __int64,RakNet::StatisticsHistory::TrackedObject *,&RakNet::StatisticsHistory::TrackedObjectComp> objects;\n  unsigned __int64 timeToTrack;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-statisticshistory-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-statisticshistory-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::StatisticsHistory_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::StatisticsHistory_vtbl\n{\n  void (__fastcall *~StatisticsHistory)(RakNet::StatisticsHistory *this);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-statisticshistory-trackedobjectdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-statisticshistory-trackedobjectdata"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::StatisticsHistory::TrackedObjectData")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::StatisticsHistory::TrackedObjectData\n{\n  unsigned __int64 objectId;\n  int objectType;\n  void *userData;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-statisticshistory-timeandvalue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-statisticshistory-timeandvalue"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::StatisticsHistory::TimeAndValue")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct RakNet::StatisticsHistory::TimeAndValue\n{\n  unsigned __int64 time;\n  long double val;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-statisticshistory-timeandvaluequeue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-statisticshistory-timeandvaluequeue"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::StatisticsHistory::TimeAndValueQueue")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::StatisticsHistory::TimeAndValueQueue\n{\n  DataStructures::Queue<RakNet::StatisticsHistory::TimeAndValue> values;\n  unsigned __int64 timeToTrackValues;\n  RakNet::RakString key;\n  long double recentSum;\n  long double recentSumOfSquares;\n  long double longTermSum;\n  long double longTermCount;\n  long double longTermLowest;\n  long double longTermHighest;\n  long double sortValue;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-statisticshistory-trackedobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-statisticshistory-trackedobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::StatisticsHistory::TrackedObject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::StatisticsHistory::TrackedObject\n{\n  RakNet::StatisticsHistory::TrackedObjectData trackedObjectData;\n  DataStructures::Hash<RakNet::RakString,RakNet::StatisticsHistory::TimeAndValueQueue *,32,&RakNet::RakString::ToInteger> dataQueues;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-teamselection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-teamselection"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TeamSelection")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::TeamSelection\n{\n  RakNet::JoinTeamType joinTeamType;\n  RakNet::TeamSelection::<unnamed_type_teamParameter> teamParameter;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-twowayauthentication-pendingchallenge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-twowayauthentication-pendingchallenge"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TwoWayAuthentication::PendingChallenge")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::TwoWayAuthentication::PendingChallenge\n{\n  RakNet::RakString identifier;\n  RakNet::AddressOrGUID remoteSystem;\n  unsigned __int64 time;\n  bool sentHash;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-twowayauthentication-nonceandremotesystemrequest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-twowayauthentication-nonceandremotesystemrequest"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TwoWayAuthentication::NonceAndRemoteSystemRequest")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::TwoWayAuthentication::NonceAndRemoteSystemRequest\n{\n  char nonce[20];\n  RakNet::AddressOrGUID remoteSystem;\n  unsigned __int16 requestId;\n  unsigned __int64 whenGenerated;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-twowayauthentication-noncegenerator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-twowayauthentication-noncegenerator"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TwoWayAuthentication::NonceGenerator")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::TwoWayAuthentication::NonceGenerator\n{\n  DataStructures::List<RakNet::TwoWayAuthentication::NonceAndRemoteSystemRequest *> generatedNonces;\n  unsigned __int16 nextRequestId;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-twowayauthentication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-twowayauthentication"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TwoWayAuthentication")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::TwoWayAuthentication : RakNet::PluginInterface2\n{\n  DataStructures::Queue<RakNet::TwoWayAuthentication::PendingChallenge> outgoingChallenges;\n  DataStructures::Hash<RakNet::RakString,RakNet::RakString,16,&RakNet::RakString::ToInteger> passwords;\n  unsigned __int64 whenLastTimeoutCheck;\n  RakNet::TwoWayAuthentication::NonceGenerator nonceGenerator;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-twowayauthentication-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-twowayauthentication-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TwoWayAuthentication_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::TwoWayAuthentication_vtbl\n{\n  void (__fastcall *~PluginInterface2)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnAttach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDetach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *Update)(RakNet::PluginInterface2 *this);\n  RakNet::PluginReceiveResult (__fastcall *OnReceive)(RakNet::PluginInterface2 *this, RakNet::Packet *);\n  void (__fastcall *OnRakPeerStartup)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnRakPeerShutdown)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnClosedConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n  void (__fastcall *OnFailedConnectionAttempt)(RakNet::PluginInterface2 *this, RakNet::Packet *, RakNet::PI2_FailedConnectionAttemptReason);\n  bool (__fastcall *UsesReliabilityLayer)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDirectSocketSend)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnDirectSocketReceive)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnReliabilityLayerNotification)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress, bool);\n  void (__fastcall *OnInternalPacket)(RakNet::PluginInterface2 *this, RakNet::InternalPacket *, unsigned int, RakNet::SystemAddress, unsigned int, int);\n  void (__fastcall *OnAck)(RakNet::PluginInterface2 *this, unsigned int, RakNet::SystemAddress, unsigned int);\n  void (__fastcall *OnPushBackPacket)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-teambalancer-myteammembers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-teambalancer-myteammembers"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TeamBalancer::MyTeamMembers")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __declspec(align(8)) RakNet::TeamBalancer::MyTeamMembers\n{\n  unsigned __int64 memberId;\n  unsigned __int8 currentTeam;\n  unsigned __int8 requestedTeam;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-teambalancer-teammember"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-teambalancer-teammember"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TeamBalancer::TeamMember")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::TeamBalancer::TeamMember\n{\n  RakNet::RakNetGUID memberGuid;\n  unsigned __int64 memberId;\n  unsigned __int8 currentTeam;\n  unsigned __int8 requestedTeam;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-teambalancer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-teambalancer"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TeamBalancer")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::TeamBalancer : RakNet::PluginInterface2\n{\n  RakNet::RakNetGUID hostGuid;\n  RakNet::TeamBalancer::DefaultAssigmentAlgorithm defaultAssigmentAlgorithm;\n  bool forceTeamsToBeEven;\n  bool lockTeams;\n  DataStructures::List<RakNet::TeamBalancer::MyTeamMembers> myTeamMembers;\n  DataStructures::List<unsigned short> teamLimits;\n  DataStructures::List<unsigned short> teamMemberCounts;\n  DataStructures::List<RakNet::TeamBalancer::TeamMember> teamMembers;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-teambalancer-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-teambalancer-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TeamBalancer_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::TeamBalancer_vtbl\n{\n  void (__fastcall *~PluginInterface2)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnAttach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDetach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *Update)(RakNet::PluginInterface2 *this);\n  RakNet::PluginReceiveResult (__fastcall *OnReceive)(RakNet::PluginInterface2 *this, RakNet::Packet *);\n  void (__fastcall *OnRakPeerStartup)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnRakPeerShutdown)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnClosedConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n  void (__fastcall *OnFailedConnectionAttempt)(RakNet::PluginInterface2 *this, RakNet::Packet *, RakNet::PI2_FailedConnectionAttemptReason);\n  bool (__fastcall *UsesReliabilityLayer)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDirectSocketSend)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnDirectSocketReceive)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnReliabilityLayerNotification)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress, bool);\n  void (__fastcall *OnInternalPacket)(RakNet::PluginInterface2 *this, RakNet::InternalPacket *, unsigned int, RakNet::SystemAddress, unsigned int, int);\n  void (__fastcall *OnAck)(RakNet::PluginInterface2 *this, unsigned int, RakNet::SystemAddress, unsigned int);\n  void (__fastcall *OnPushBackPacket)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-threadsafepacketlogger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-threadsafepacketlogger"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::ThreadsafePacketLogger")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::ThreadsafePacketLogger : RakNet::PacketLogger\n{\n  DataStructures::SingleProducerConsumer<char *> logMessages;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-threadsafepacketlogger-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-threadsafepacketlogger-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::ThreadsafePacketLogger_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::ThreadsafePacketLogger_vtbl\n{\n  void (__fastcall *~PluginInterface2)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnAttach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDetach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *Update)(RakNet::PluginInterface2 *this);\n  RakNet::PluginReceiveResult (__fastcall *OnReceive)(RakNet::PluginInterface2 *this, RakNet::Packet *);\n  void (__fastcall *OnRakPeerStartup)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnRakPeerShutdown)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnClosedConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n  void (__fastcall *OnFailedConnectionAttempt)(RakNet::PluginInterface2 *this, RakNet::Packet *, RakNet::PI2_FailedConnectionAttemptReason);\n  bool (__fastcall *UsesReliabilityLayer)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDirectSocketSend)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnDirectSocketReceive)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnReliabilityLayerNotification)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress, bool);\n  void (__fastcall *OnInternalPacket)(RakNet::PluginInterface2 *this, RakNet::InternalPacket *, unsigned int, RakNet::SystemAddress, unsigned int, int);\n  void (__fastcall *OnAck)(RakNet::PluginInterface2 *this, unsigned int, RakNet::SystemAddress, unsigned int);\n  void (__fastcall *OnPushBackPacket)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *FormatLine)(RakNet::PacketLogger *this, char *, const char *, const char *, unsigned int, unsigned int, const char *, const unsigned int, unsigned __int64, const RakNet::SystemAddress *, const RakNet::SystemAddress *, unsigned int, unsigned int, unsigned int, unsigned int);\n  void (__fastcall *FormatLine)(RakNet::PacketLogger *this, char *, const char *, const char *, unsigned int, unsigned int, unsigned __int8, const unsigned int, unsigned __int64, const RakNet::SystemAddress *, const RakNet::SystemAddress *, unsigned int, unsigned int, unsigned int, unsigned int);\n  void (__fastcall *LogHeader)(RakNet::PacketLogger *this);\n  void (__fastcall *WriteLog)(RakNet::PacketLogger *this, const char *);\n  void (__fastcall *WriteMiscellaneous)(RakNet::PacketLogger *this, const char *, const char *);\n  void (__fastcall *SetPrintID)(RakNet::PacketLogger *this, bool);\n  void (__fastcall *SetPrintAcks)(RakNet::PacketLogger *this, bool);\n  void (__fastcall *SetPrefix)(RakNet::PacketLogger *this, const char *);\n  void (__fastcall *SetSuffix)(RakNet::PacketLogger *this, const char *);\n  void (__fastcall *AddToLog)(RakNet::PacketLogger *this, const char *);\n  const char *(__fastcall *UserIDTOString)(RakNet::PacketLogger *this, unsigned __int8);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-statisticshistoryplugin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-statisticshistoryplugin"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::StatisticsHistoryPlugin")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::StatisticsHistoryPlugin : RakNet::PluginInterface2\n{\n  RakNet::StatisticsHistory statistics;\n  bool addNewConnections;\n  bool removeLostConnections;\n  int newConnectionsObjectType;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-statisticshistoryplugin-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-statisticshistoryplugin-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::StatisticsHistoryPlugin_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::StatisticsHistoryPlugin_vtbl\n{\n  void (__fastcall *~PluginInterface2)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnAttach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDetach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *Update)(RakNet::PluginInterface2 *this);\n  RakNet::PluginReceiveResult (__fastcall *OnReceive)(RakNet::PluginInterface2 *this, RakNet::Packet *);\n  void (__fastcall *OnRakPeerStartup)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnRakPeerShutdown)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnClosedConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n  void (__fastcall *OnFailedConnectionAttempt)(RakNet::PluginInterface2 *this, RakNet::Packet *, RakNet::PI2_FailedConnectionAttemptReason);\n  bool (__fastcall *UsesReliabilityLayer)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDirectSocketSend)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnDirectSocketReceive)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnReliabilityLayerNotification)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress, bool);\n  void (__fastcall *OnInternalPacket)(RakNet::PluginInterface2 *this, RakNet::InternalPacket *, unsigned int, RakNet::SystemAddress, unsigned int, int);\n  void (__fastcall *OnAck)(RakNet::PluginInterface2 *this, unsigned int, RakNet::SystemAddress, unsigned int);\n  void (__fastcall *OnPushBackPacket)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-tm-world-joinrequesthelper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-tm-world-joinrequesthelper"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::TM_World::JoinRequestHelper")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __declspec(align(8)) RakNet::TM_World::JoinRequestHelper\n{\n  unsigned __int64 whenRequestMade;\n  unsigned int teamMemberIndex;\n  unsigned int indexIntoTeamsRequested;\n  unsigned int requestIndex;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxyclient-senderandtargetaddress"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxyclient-senderandtargetaddress"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyClient::SenderAndTargetAddress")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::UDPProxyClient::SenderAndTargetAddress\n{\n  RakNet::SystemAddress senderClientAddress;\n  RakNet::SystemAddress targetClientAddress;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxyclient-serverwithping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxyclient-serverwithping"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyClient::ServerWithPing")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::UDPProxyClient::ServerWithPing\n{\n  unsigned __int16 ping;\n  RakNet::SystemAddress serverAddress;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxyclient-pingservergroup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxyclient-pingservergroup"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyClient::PingServerGroup")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::UDPProxyClient::PingServerGroup\n{\n  RakNet::UDPProxyClient::SenderAndTargetAddress sata;\n  unsigned int startPingTime;\n  RakNet::SystemAddress coordinatorAddressForPings;\n  DataStructures::List<RakNet::UDPProxyClient::ServerWithPing> serversToPing;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxyclientresulthandler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxyclientresulthandler"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyClientResultHandler")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::UDPProxyClientResultHandler\n{\n  RakNet::UDPProxyClientResultHandler_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxyclient"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxyclient"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyClient")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::UDPProxyClient : RakNet::PluginInterface2\n{\n  DataStructures::List<RakNet::UDPProxyClient::PingServerGroup *> pingServerGroups;\n  RakNet::UDPProxyClientResultHandler *resultHandler;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxyclientresulthandler-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxyclientresulthandler-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyClientResultHandler_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::UDPProxyClientResultHandler_vtbl\n{\n  void (__fastcall *~UDPProxyClientResultHandler)(RakNet::UDPProxyClientResultHandler *this);\n  void (__fastcall *OnForwardingSuccess)(RakNet::UDPProxyClientResultHandler *this, const char *, unsigned __int16, RakNet::SystemAddress, RakNet::SystemAddress, RakNet::SystemAddress, RakNet::RakNetGUID, RakNet::UDPProxyClient *);\n  void (__fastcall *OnForwardingNotification)(RakNet::UDPProxyClientResultHandler *this, const char *, unsigned __int16, RakNet::SystemAddress, RakNet::SystemAddress, RakNet::SystemAddress, RakNet::RakNetGUID, RakNet::UDPProxyClient *);\n  void (__fastcall *OnNoServersOnline)(RakNet::UDPProxyClientResultHandler *this, RakNet::SystemAddress, RakNet::SystemAddress, RakNet::SystemAddress, RakNet::RakNetGUID, RakNet::UDPProxyClient *);\n  void (__fastcall *OnRecipientNotConnected)(RakNet::UDPProxyClientResultHandler *this, RakNet::SystemAddress, RakNet::SystemAddress, RakNet::SystemAddress, RakNet::RakNetGUID, RakNet::UDPProxyClient *);\n  void (__fastcall *OnAllServersBusy)(RakNet::UDPProxyClientResultHandler *this, RakNet::SystemAddress, RakNet::SystemAddress, RakNet::SystemAddress, RakNet::RakNetGUID, RakNet::UDPProxyClient *);\n  void (__fastcall *OnForwardingInProgress)(RakNet::UDPProxyClientResultHandler *this, const char *, unsigned __int16, RakNet::SystemAddress, RakNet::SystemAddress, RakNet::SystemAddress, RakNet::RakNetGUID, RakNet::UDPProxyClient *);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxyclient-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxyclient-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyClient_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::UDPProxyClient_vtbl\n{\n  void (__fastcall *~PluginInterface2)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnAttach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDetach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *Update)(RakNet::PluginInterface2 *this);\n  RakNet::PluginReceiveResult (__fastcall *OnReceive)(RakNet::PluginInterface2 *this, RakNet::Packet *);\n  void (__fastcall *OnRakPeerStartup)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnRakPeerShutdown)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnClosedConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n  void (__fastcall *OnFailedConnectionAttempt)(RakNet::PluginInterface2 *this, RakNet::Packet *, RakNet::PI2_FailedConnectionAttemptReason);\n  bool (__fastcall *UsesReliabilityLayer)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDirectSocketSend)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnDirectSocketReceive)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnReliabilityLayerNotification)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress, bool);\n  void (__fastcall *OnInternalPacket)(RakNet::PluginInterface2 *this, RakNet::InternalPacket *, unsigned int, RakNet::SystemAddress, unsigned int, int);\n  void (__fastcall *OnAck)(RakNet::PluginInterface2 *this, unsigned int, RakNet::SystemAddress, unsigned int);\n  void (__fastcall *OnPushBackPacket)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxycoordinator-senderandtargetaddress"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxycoordinator-senderandtargetaddress"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyCoordinator::SenderAndTargetAddress")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::UDPProxyCoordinator::SenderAndTargetAddress\n{\n  RakNet::SystemAddress senderClientAddress;\n  RakNet::RakNetGUID senderClientGuid;\n  RakNet::SystemAddress targetClientAddress;\n  RakNet::RakNetGUID targetClientGuid;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxycoordinator-serverwithping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxycoordinator-serverwithping"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyCoordinator::ServerWithPing")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::UDPProxyCoordinator::ServerWithPing\n{\n  unsigned __int16 ping;\n  RakNet::SystemAddress serverAddress;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxycoordinator-forwardingrequest"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxycoordinator-forwardingrequest"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyCoordinator::ForwardingRequest")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::UDPProxyCoordinator::ForwardingRequest\n{\n  unsigned int timeoutOnNoDataMS;\n  unsigned int timeoutAfterSuccess;\n  RakNet::UDPProxyCoordinator::SenderAndTargetAddress sata;\n  RakNet::SystemAddress requestingAddress;\n  RakNet::SystemAddress currentlyAttemptedServerAddress;\n  DataStructures::Queue<RakNet::SystemAddress> remainingServersToTry;\n  RakNet::BitStream serverSelectionBitstream;\n  DataStructures::List<RakNet::UDPProxyCoordinator::ServerWithPing> sourceServerPings;\n  DataStructures::List<RakNet::UDPProxyCoordinator::ServerWithPing> targetServerPings;\n  unsigned int timeRequestedPings;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxycoordinator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxycoordinator"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyCoordinator")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::UDPProxyCoordinator : RakNet::PluginInterface2\n{\n  DataStructures::List<RakNet::SystemAddress> serverList;\n  DataStructures::OrderedList<RakNet::UDPProxyCoordinator::SenderAndTargetAddress,RakNet::UDPProxyCoordinator::ForwardingRequest *,&RakNet::UDPProxyCoordinator::ForwardingRequestComp> forwardingRequestList;\n  RakNet::RakString remoteLoginPassword;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxycoordinator-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxycoordinator-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyCoordinator_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::UDPProxyCoordinator_vtbl\n{\n  void (__fastcall *~PluginInterface2)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnAttach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDetach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *Update)(RakNet::PluginInterface2 *this);\n  RakNet::PluginReceiveResult (__fastcall *OnReceive)(RakNet::PluginInterface2 *this, RakNet::Packet *);\n  void (__fastcall *OnRakPeerStartup)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnRakPeerShutdown)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnClosedConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n  void (__fastcall *OnFailedConnectionAttempt)(RakNet::PluginInterface2 *this, RakNet::Packet *, RakNet::PI2_FailedConnectionAttemptReason);\n  bool (__fastcall *UsesReliabilityLayer)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDirectSocketSend)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnDirectSocketReceive)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnReliabilityLayerNotification)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress, bool);\n  void (__fastcall *OnInternalPacket)(RakNet::PluginInterface2 *this, RakNet::InternalPacket *, unsigned int, RakNet::SystemAddress, unsigned int, int);\n  void (__fastcall *OnAck)(RakNet::PluginInterface2 *this, unsigned int, RakNet::SystemAddress, unsigned int);\n  void (__fastcall *OnPushBackPacket)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-variablelistdeltatracker-variablelastvaluenode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-variablelistdeltatracker-variablelastvaluenode"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::VariableListDeltaTracker::VariableLastValueNode")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(4)) RakNet::VariableListDeltaTracker::VariableLastValueNode\n{\n  char *lastData;\n  unsigned int byteLength;\n  bool isDirty;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-variablelistdeltatracker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-variablelistdeltatracker"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::VariableListDeltaTracker")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::VariableListDeltaTracker\n{\n  DataStructures::List<RakNet::VariableListDeltaTracker::VariableLastValueNode> variableList;\n  unsigned int nextWriteIndex;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxyserverresulthandler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxyserverresulthandler"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyServerResultHandler")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::UDPProxyServerResultHandler\n{\n  RakNet::UDPProxyServerResultHandler_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxyserver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxyserver"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyServer")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::UDPProxyServer : RakNet::PluginInterface2\n{\n  RakNet::UDPForwarder udpForwarder;\n  DataStructures::OrderedList<RakNet::SystemAddress,RakNet::SystemAddress,&DataStructures::defaultOrderedListComparison<RakNet::SystemAddress,RakNet::SystemAddress> > loggingInCoordinators;\n  DataStructures::OrderedList<RakNet::SystemAddress,RakNet::SystemAddress,&DataStructures::defaultOrderedListComparison<RakNet::SystemAddress,RakNet::SystemAddress> > loggedInCoordinators;\n  RakNet::UDPProxyServerResultHandler *resultHandler;\n  unsigned __int16 socketFamily;\n  RakNet::RakString serverPublicIp;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxyserverresulthandler-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxyserverresulthandler-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyServerResultHandler_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::UDPProxyServerResultHandler_vtbl\n{\n  void (__fastcall *~UDPProxyServerResultHandler)(RakNet::UDPProxyServerResultHandler *this);\n  void (__fastcall *OnLoginSuccess)(RakNet::UDPProxyServerResultHandler *this, RakNet::RakString, RakNet::UDPProxyServer *);\n  void (__fastcall *OnAlreadyLoggedIn)(RakNet::UDPProxyServerResultHandler *this, RakNet::RakString, RakNet::UDPProxyServer *);\n  void (__fastcall *OnNoPasswordSet)(RakNet::UDPProxyServerResultHandler *this, RakNet::RakString, RakNet::UDPProxyServer *);\n  void (__fastcall *OnWrongPassword)(RakNet::UDPProxyServerResultHandler *this, RakNet::RakString, RakNet::UDPProxyServer *);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-udpproxyserver-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-udpproxyserver-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::UDPProxyServer_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RakNet::UDPProxyServer_vtbl\n{\n  void (__fastcall *~PluginInterface2)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnAttach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDetach)(RakNet::PluginInterface2 *this);\n  void (__fastcall *Update)(RakNet::PluginInterface2 *this);\n  RakNet::PluginReceiveResult (__fastcall *OnReceive)(RakNet::PluginInterface2 *this, RakNet::Packet *);\n  void (__fastcall *OnRakPeerStartup)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnRakPeerShutdown)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnClosedConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, RakNet::PI2_LostConnectionReason);\n  void (__fastcall *OnNewConnection)(RakNet::PluginInterface2 *this, const RakNet::SystemAddress *, RakNet::RakNetGUID, bool);\n  void (__fastcall *OnFailedConnectionAttempt)(RakNet::PluginInterface2 *this, RakNet::Packet *, RakNet::PI2_FailedConnectionAttemptReason);\n  bool (__fastcall *UsesReliabilityLayer)(RakNet::PluginInterface2 *this);\n  void (__fastcall *OnDirectSocketSend)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnDirectSocketReceive)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n  void (__fastcall *OnReliabilityLayerNotification)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress, bool);\n  void (__fastcall *OnInternalPacket)(RakNet::PluginInterface2 *this, RakNet::InternalPacket *, unsigned int, RakNet::SystemAddress, unsigned int, int);\n  void (__fastcall *OnAck)(RakNet::PluginInterface2 *this, unsigned int, RakNet::SystemAddress, unsigned int);\n  void (__fastcall *OnPushBackPacket)(RakNet::PluginInterface2 *this, const char *, const unsigned int, RakNet::SystemAddress);\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-variabledeltaserializer-changedvariableslist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-variabledeltaserializer-changedvariableslist"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::VariableDeltaSerializer::ChangedVariablesList")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __declspec(align(4)) RakNet::VariableDeltaSerializer::ChangedVariablesList\n{\n  unsigned int sendReceipt;\n  unsigned __int16 bitWriteIndex;\n  unsigned __int8 bitField[56];\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-variabledeltaserializer-remotesystemvariablehistory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-variabledeltaserializer-remotesystemvariablehistory"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::VariableDeltaSerializer::RemoteSystemVariableHistory")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::VariableDeltaSerializer::RemoteSystemVariableHistory\n{\n  RakNet::RakNetGUID guid;\n  RakNet::VariableListDeltaTracker variableListDeltaTracker;\n  DataStructures::OrderedList<unsigned int,RakNet::VariableDeltaSerializer::ChangedVariablesList *,&RakNet::VariableDeltaSerializer::UpdatedVariablesListPtrComp> updatedVariablesHistory;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-variabledeltaserializer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-variabledeltaserializer"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::VariableDeltaSerializer")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNet::VariableDeltaSerializer\n{\n  DataStructures::List<RakNet::VariableDeltaSerializer::RemoteSystemVariableHistory *> remoteSystemVariableHistoryList;\n  DataStructures::MemoryPool<RakNet::VariableDeltaSerializer::ChangedVariablesList> updatedVariablesMemoryPool;\n  bool didComparisonThisTick;\n  RakNet::BitStream identicalSerializationBs;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-variabledeltaserializer-serializationcontext"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-variabledeltaserializer-serializationcontext"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::VariableDeltaSerializer::SerializationContext")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) RakNet::VariableDeltaSerializer::SerializationContext\n{\n  RakNet::RakNetGUID guid;\n  RakNet::BitStream *bitStream;\n  unsigned int rakPeerSendReceipt;\n  RakNet::VariableDeltaSerializer::RemoteSystemVariableHistory *variableHistory;\n  RakNet::VariableDeltaSerializer::RemoteSystemVariableHistory *variableHistoryIdentical;\n  RakNet::VariableDeltaSerializer::RemoteSystemVariableHistory *variableHistoryUnique;\n  RakNet::VariableDeltaSerializer::ChangedVariablesList *changedVariables;\n  unsigned int sendReceipt;\n  PacketReliability serializationMode;\n  bool anyVariablesWritten;\n  bool newSystemSend;\n};\n\n")])])]),a("h3",{attrs:{id:"raknet-variabledeltaserializer-deserializationcontext"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknet-variabledeltaserializer-deserializationcontext"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNet::VariableDeltaSerializer::DeserializationContext")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct RakNet::VariableDeltaSerializer::DeserializationContext\n{\n  RakNet::BitStream *bitStream;\n};\n\n")])])]),a("h3",{attrs:{id:"ratelimiter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ratelimiter"}},[t._v("#")]),t._v(" "),a("code",[t._v("RateLimiter")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RateLimiter\n{\n  const unsigned __int64 mLimit;\n  const std::chrono::duration<__int64,std::ratio<1,1> > mTimeIntervalSeconds;\n  std::vector<std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >> mInstances;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-genericinsitustringstream-rapidjson-utf8-char"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-genericinsitustringstream-rapidjson-utf8-char"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::GenericInsituStringStream<rapidjson::UTF8<char> >")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::GenericInsituStringStream<rapidjson::UTF8<char> >\n{\n  char *src_;\n  char *dst_;\n  char *head_;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-basicistreamwrapper-std-istream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-basicistreamwrapper-std-istream"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::BasicIStreamWrapper<std::istream >")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) rapidjson::BasicIStreamWrapper<std::istream >\n{\n  std::istream *stream_;\n  char peekBuffer_[4];\n  char *buffer_;\n  unsigned __int64 bufferSize_;\n  char *bufferLast_;\n  char *current_;\n  unsigned __int64 readCount_;\n  unsigned __int64 count_;\n  bool eof_;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-basicostreamwrapper-std-ostream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-basicostreamwrapper-std-ostream"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::BasicOStreamWrapper<std::ostream >")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::BasicOStreamWrapper<std::ostream >\n{\n  std::ostream *stream_;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-writer-rapidjson-genericstringbuffer-rapidjson-utf8-char-rapidjson-crtallocator-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-0-level"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-writer-rapidjson-genericstringbuffer-rapidjson-utf8-char-rapidjson-crtallocator-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-0-level"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Level")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<char>,rapidjson::CrtAllocator>,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Level\n{\n  unsigned __int64 valueCount;\n  bool inArray;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-basereaderhandler-rapidjson-utf8-char-bedrock-jsonobject-parsehandler"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-basereaderhandler-rapidjson-utf8-char-bedrock-jsonobject-parsehandler"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::BaseReaderHandler<rapidjson::UTF8<char>,Bedrock::JSONObject::ParseHandler>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::BaseReaderHandler<rapidjson::UTF8<char>,Bedrock::JSONObject::ParseHandler>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-internal-stack-bedrock-jsonobject-document-loadstring-5-donotallocate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-internal-stack-bedrock-jsonobject-document-loadstring-5-donotallocate"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::internal::Stack<")]),t._v("Bedrock::JSONObject::Document::loadString'::"),a("code",[t._v("5'::DoNotAllocate>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::internal::Stack<`Bedrock::JSONObject::Document::loadString'::`5'::DoNotAllocate>\n{\n  struct Bedrock::JSONObject::Document::loadString::__l5::DoNotAllocate *allocator_;\n  struct Bedrock::JSONObject::Document::loadString::__l5::DoNotAllocate *ownAllocator_;\n  char *stack_;\n  char *stackTop_;\n  char *stackEnd_;\n  unsigned __int64 initialCapacity_;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-bedrock-jsonobject-document-loadstring-5-donotallocate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-bedrock-jsonobject-document-loadstring-5-donotallocate"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,")]),t._v("Bedrock::JSONObject::Document::loadString'::"),a("code",[t._v("5'::DoNotAllocate>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,`Bedrock::JSONObject::Document::loadString'::`5'::DoNotAllocate>\n{\n  rapidjson::internal::Stack<`Bedrock::JSONObject::Document::loadString'::`5'::DoNotAllocate> stack_;\n  rapidjson::ParseResult parseResult_;\n  rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,`Bedrock::JSONObject::Document::loadString'::`5'::DoNotAllocate>::IterativeParsingState state_;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-bedrock-jsonobject-document-loadstring-5-donotallocate-clearstackonexit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-bedrock-jsonobject-document-loadstring-5-donotallocate-clearstackonexit"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,")]),t._v("Bedrock::JSONObject::Document::loadString'::"),a("code",[t._v("5'::DoNotAllocate>::ClearStackOnExit")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,`Bedrock::JSONObject::Document::loadString'::`5'::DoNotAllocate>::ClearStackOnExit\n{\n  rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,`Bedrock::JSONObject::Document::loadString'::`5'::DoNotAllocate> *r_;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-writer-rapidjson-basicostreamwrapper-std-ostream-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-writer-rapidjson-basicostreamwrapper-std-ostream-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-0"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::Writer<rapidjson::BasicOStreamWrapper<std::ostream >,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(4)) rapidjson::Writer<rapidjson::BasicOStreamWrapper<std::ostream >,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>\n{\n  rapidjson::BasicOStreamWrapper<std::ostream > *os_;\n  rapidjson::internal::Stack<rapidjson::CrtAllocator> level_stack_;\n  int maxDecimalPlaces_;\n  bool hasRoot_;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-prettywriter-rapidjson-basicostreamwrapper-std-ostream-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-prettywriter-rapidjson-basicostreamwrapper-std-ostream-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-0"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::PrettyWriter<rapidjson::BasicOStreamWrapper<std::ostream >,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) rapidjson::PrettyWriter<rapidjson::BasicOStreamWrapper<std::ostream >,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0> : rapidjson::Writer<rapidjson::BasicOStreamWrapper<std::ostream >,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>\n{\n  char indentChar_;\n  unsigned int indentCharCount_;\n  rapidjson::PrettyFormatOptions formatOptions_;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-writer-rapidjson-basicostreamwrapper-std-ostream-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-0-level"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-writer-rapidjson-basicostreamwrapper-std-ostream-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-0-level"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::Writer<rapidjson::BasicOStreamWrapper<std::ostream >,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Level")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) rapidjson::Writer<rapidjson::BasicOStreamWrapper<std::ostream >,rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator,0>::Level\n{\n  unsigned __int64 valueCount;\n  bool inArray;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-streamtraits-rapidjson-genericinsitustringstream-rapidjson-utf8-char"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-streamtraits-rapidjson-genericinsitustringstream-rapidjson-utf8-char"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::StreamTraits<rapidjson::GenericInsituStringStream<rapidjson::UTF8<char> > >")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::StreamTraits<rapidjson::GenericInsituStringStream<rapidjson::UTF8<char> > >\n{\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-internal-streamlocalcopy-rapidjson-genericinsitustringstream-rapidjson-utf8-char-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-internal-streamlocalcopy-rapidjson-genericinsitustringstream-rapidjson-utf8-char-1"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::internal::StreamLocalCopy<rapidjson::GenericInsituStringStream<rapidjson::UTF8<char> >,1>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::internal::StreamLocalCopy<rapidjson::GenericInsituStringStream<rapidjson::UTF8<char> >,1>\n{\n  rapidjson::GenericInsituStringStream<rapidjson::UTF8<char> > s;\n  rapidjson::GenericInsituStringStream<rapidjson::UTF8<char> > *original_;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-bedrock-jsonobject-document-loadstring-5-donotallocate-stackstream-char"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-bedrock-jsonobject-document-loadstring-5-donotallocate-stackstream-char"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,")]),t._v("Bedrock::JSONObject::Document::loadString'::"),a("code",[t._v("5'::DoNotAllocate>::StackStream<char>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,`Bedrock::JSONObject::Document::loadString'::`5'::DoNotAllocate>::StackStream<char>\n{\n  rapidjson::internal::Stack<`Bedrock::JSONObject::Document::loadString'::`5'::DoNotAllocate> *stack_;\n  unsigned int length_;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-bedrock-jsonobject-document-loadstring-5-donotallocate-numberstream-rapidjson-genericinsitustringstream-rapidjson-utf8-char-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-bedrock-jsonobject-document-loadstring-5-donotallocate-numberstream-rapidjson-genericinsitustringstream-rapidjson-utf8-char-0-0"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,")]),t._v("Bedrock::JSONObject::Document::loadString'::"),a("code",[t._v("5'::DoNotAllocate>::NumberStream<rapidjson::GenericInsituStringStream<rapidjson::UTF8<char> >,0,0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,`Bedrock::JSONObject::Document::loadString'::`5'::DoNotAllocate>::NumberStream<rapidjson::GenericInsituStringStream<rapidjson::UTF8<char> >,0,0>\n{\n  rapidjson::GenericInsituStringStream<rapidjson::UTF8<char> > *is;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-streamtraits-rapidjson-genericstringstream-rapidjson-utf8-char"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-streamtraits-rapidjson-genericstringstream-rapidjson-utf8-char"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::StreamTraits<rapidjson::GenericStringStream<rapidjson::UTF8<char> > >")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::StreamTraits<rapidjson::GenericStringStream<rapidjson::UTF8<char> > >\n{\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-numberstream-rapidjson-genericstringstream-rapidjson-utf8-char-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-numberstream-rapidjson-genericstringstream-rapidjson-utf8-char-0-0"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::NumberStream<rapidjson::GenericStringStream<rapidjson::UTF8<char> >,0,0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::NumberStream<rapidjson::GenericStringStream<rapidjson::UTF8<char> >,0,0>\n{\n  rapidjson::GenericStringStream<rapidjson::UTF8<char> > *is;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-streamtraits-rapidjson-basicistreamwrapper-std-istream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-streamtraits-rapidjson-basicistreamwrapper-std-istream"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::StreamTraits<rapidjson::BasicIStreamWrapper<std::istream > >")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::StreamTraits<rapidjson::BasicIStreamWrapper<std::istream > >\n{\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-internal-streamlocalcopy-rapidjson-basicistreamwrapper-std-istream-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-internal-streamlocalcopy-rapidjson-basicistreamwrapper-std-istream-0"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::internal::StreamLocalCopy<rapidjson::BasicIStreamWrapper<std::istream >,0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::internal::StreamLocalCopy<rapidjson::BasicIStreamWrapper<std::istream >,0>\n{\n  rapidjson::BasicIStreamWrapper<std::istream > *s;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-numberstream-rapidjson-basicistreamwrapper-std-istream-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-numberstream-rapidjson-basicistreamwrapper-std-istream-0-0"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::NumberStream<rapidjson::BasicIStreamWrapper<std::istream >,0,0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::NumberStream<rapidjson::BasicIStreamWrapper<std::istream >,0,0>\n{\n  rapidjson::BasicIStreamWrapper<std::istream > *is;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-streamtraits-rapidjson-encodedinputstream-rapidjson-utf8-char-rapidjson-memorystream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-streamtraits-rapidjson-encodedinputstream-rapidjson-utf8-char-rapidjson-memorystream"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::StreamTraits<rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream> >")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::StreamTraits<rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream> >\n{\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-internal-streamlocalcopy-rapidjson-encodedinputstream-rapidjson-utf8-char-rapidjson-memorystream-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-internal-streamlocalcopy-rapidjson-encodedinputstream-rapidjson-utf8-char-rapidjson-memorystream-0"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::internal::StreamLocalCopy<rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream>,0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::internal::StreamLocalCopy<rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream>,0>\n{\n  rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream> *s;\n};\n\n")])])]),a("h3",{attrs:{id:"rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-numberstream-rapidjson-encodedinputstream-rapidjson-utf8-char-rapidjson-memorystream-0-0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rapidjson-genericreader-rapidjson-utf8-char-rapidjson-utf8-char-rapidjson-crtallocator-numberstream-rapidjson-encodedinputstream-rapidjson-utf8-char-rapidjson-memorystream-0-0"}},[t._v("#")]),t._v(" "),a("code",[t._v("rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::NumberStream<rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream>,0,0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rapidjson::GenericReader<rapidjson::UTF8<char>,rapidjson::UTF8<char>,rapidjson::CrtAllocator>::NumberStream<rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream>,0,0>\n{\n  rapidjson::EncodedInputStream<rapidjson::UTF8<char>,rapidjson::MemoryStream> *is;\n};\n\n")])])]),a("h3",{attrs:{id:"repeatobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repeatobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("repeatobject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct repeatobject\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  _object *element;\n  __int64 cnt;\n};\n\n")])])]),a("h3",{attrs:{id:"rotorobj"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rotorobj"}},[t._v("#")]),t._v(" "),a("code",[t._v("Rotorobj")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct Rotorobj\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  int seed[3];\n  __int16 key[5];\n  int isinited;\n  int size;\n  int size_mask;\n  int rotors;\n  unsigned __int8 *e_rotor;\n  unsigned __int8 *d_rotor;\n  unsigned __int8 *positions;\n  unsigned __int8 *advances;\n};\n\n")])])]),a("h3",{attrs:{id:"rwpair"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rwpair"}},[t._v("#")]),t._v(" "),a("code",[t._v("rwpair")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct rwpair\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  buffered *reader;\n  buffered *writer;\n  _object *dict;\n  _object *weakreflist;\n};\n\n")])])]),a("h3",{attrs:{id:"randomobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#randomobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("RandomObject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __declspec(align(8)) RandomObject\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  unsigned int state[624];\n  int index;\n};\n\n")])])]),a("h3",{attrs:{id:"reversedobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reversedobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("reversedobject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct reversedobject\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  __int64 index;\n  _object *seq;\n};\n\n")])])]),a("h3",{attrs:{id:"rangeiterobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rangeiterobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("rangeiterobject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct rangeiterobject\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  int index;\n  int start;\n  int step;\n  int len;\n};\n\n")])])]),a("h3",{attrs:{id:"realmsallowlistscreencontroller-getblocklistprofiles-l2-lambda-b260cb933b54af63cd24f86d910dbaeb-l16-lambda-dee76db620d71a5205cbda91ce10fae1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realmsallowlistscreencontroller-getblocklistprofiles-l2-lambda-b260cb933b54af63cd24f86d910dbaeb-l16-lambda-dee76db620d71a5205cbda91ce10fae1"}},[t._v("#")]),t._v(" "),a("code",[t._v("RealmsAllowListScreenController::_getBlocklistProfiles::__l2::<lambda_b260cb933b54af63cd24f86d910dbaeb>::()::__l16::<lambda_dee76db620d71a5205cbda91ce10fae1>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RealmsAllowListScreenController::_getBlocklistProfiles::__l2::<lambda_b260cb933b54af63cd24f86d910dbaeb>::()::__l16::<lambda_dee76db620d71a5205cbda91ce10fae1>\n{\n  const std::string *blockedPlayerXuid;\n};\n\n")])])]),a("h3",{attrs:{id:"realmsallowlistscreencontroller-getblocklistprofiles-l2-lambda-b260cb933b54af63cd24f86d910dbaeb-l9-lambda-992da3f45e69802d7745b80c63684147"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realmsallowlistscreencontroller-getblocklistprofiles-l2-lambda-b260cb933b54af63cd24f86d910dbaeb-l9-lambda-992da3f45e69802d7745b80c63684147"}},[t._v("#")]),t._v(" "),a("code",[t._v("RealmsAllowListScreenController::_getBlocklistProfiles::__l2::<lambda_b260cb933b54af63cd24f86d910dbaeb>::()::__l9::<lambda_992da3f45e69802d7745b80c63684147>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RealmsAllowListScreenController::_getBlocklistProfiles::__l2::<lambda_b260cb933b54af63cd24f86d910dbaeb>::()::__l9::<lambda_992da3f45e69802d7745b80c63684147>\n{\n  const Social::XboxLiveUserProfileData *const *user;\n};\n\n")])])]),a("h3",{attrs:{id:"realmsallowlistscreencontroller-registereventhandlers-l2-lambda-54df864d97304a9fd7002809f95393fe-l5-lambda-488c1c54c019eaab5170715498d78b0e-l18-lambda-fcd873b71d770463fcaaad98d696bed2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realmsallowlistscreencontroller-registereventhandlers-l2-lambda-54df864d97304a9fd7002809f95393fe-l5-lambda-488c1c54c019eaab5170715498d78b0e-l18-lambda-fcd873b71d770463fcaaad98d696bed2"}},[t._v("#")]),t._v(" "),a("code",[t._v("RealmsAllowListScreenController::_registerEventHandlers::__l2::<lambda_54df864d97304a9fd7002809f95393fe>::()::__l5::<lambda_488c1c54c019eaab5170715498d78b0e>::()::__l18::<lambda_fcd873b71d770463fcaaad98d696bed2>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RealmsAllowListScreenController::_registerEventHandlers::__l2::<lambda_54df864d97304a9fd7002809f95393fe>::()::__l5::<lambda_488c1c54c019eaab5170715498d78b0e>::()::__l18::<lambda_fcd873b71d770463fcaaad98d696bed2>\n{\n  RealmPlayer player;\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-d75cf26140eb8a26eb9cd9a973485a4f-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-d75cf26140eb8a26eb9cd9a973485a4f-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_d75cf26140eb8a26eb9cd9a973485a4f>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_d75cf26140eb8a26eb9cd9a973485a4f>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-6ce318143c4b4a557433459f49f54428-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-6ce318143c4b4a557433459f49f54428-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_6ce318143c4b4a557433459f49f54428>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_6ce318143c4b4a557433459f49f54428>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-233eeafa68b413ea64392239f6c8a713-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-233eeafa68b413ea64392239f6c8a713-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_233eeafa68b413ea64392239f6c8a713>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_233eeafa68b413ea64392239f6c8a713>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-921b46f6d3e58ade01ef3e9b10711ff6-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-921b46f6d3e58ade01ef3e9b10711ff6-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_921b46f6d3e58ade01ef3e9b10711ff6>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_921b46f6d3e58ade01ef3e9b10711ff6>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-bf167fc65479b58720a8e14d972d34f0-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-bf167fc65479b58720a8e14d972d34f0-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_bf167fc65479b58720a8e14d972d34f0>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_bf167fc65479b58720a8e14d972d34f0>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-956041713ef9836cf8d79f38c05af3d0-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-956041713ef9836cf8d79f38c05af3d0-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_956041713ef9836cf8d79f38c05af3d0>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_956041713ef9836cf8d79f38c05af3d0>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-d013e233ed7fc7a38019af6a55814b67-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-d013e233ed7fc7a38019af6a55814b67-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_d013e233ed7fc7a38019af6a55814b67>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_d013e233ed7fc7a38019af6a55814b67>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-319d458d329902513d4b8348d4cf85fe-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-319d458d329902513d4b8348d4cf85fe-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_319d458d329902513d4b8348d4cf85fe>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_319d458d329902513d4b8348d4cf85fe>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-e90a2aa2b19b627f1ba800a518147b58-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-e90a2aa2b19b627f1ba800a518147b58-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_e90a2aa2b19b627f1ba800a518147b58>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_e90a2aa2b19b627f1ba800a518147b58>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-25b48501db3671cfb37c8677881678ab-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-25b48501db3671cfb37c8677881678ab-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_25b48501db3671cfb37c8677881678ab>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_25b48501db3671cfb37c8677881678ab>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-4484119286ae3f0b3225758df58d3e4b-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-4484119286ae3f0b3225758df58d3e4b-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_4484119286ae3f0b3225758df58d3e4b>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_4484119286ae3f0b3225758df58d3e4b>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-1feeb6911eff5bc502e3e91b40dc2828-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-1feeb6911eff5bc502e3e91b40dc2828-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_1feeb6911eff5bc502e3e91b40dc2828>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_1feeb6911eff5bc502e3e91b40dc2828>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-b1c86a361327ba6e2750ec26070a2374-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-b1c86a361327ba6e2750ec26070a2374-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_b1c86a361327ba6e2750ec26070a2374>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_b1c86a361327ba6e2750ec26070a2374>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-6b8eecb2c92f3cc5a2670141f928f559-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-6b8eecb2c92f3cc5a2670141f928f559-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_6b8eecb2c92f3cc5a2670141f928f559>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_6b8eecb2c92f3cc5a2670141f928f559>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-1feeb6911eff5bc502e3e91b40dc2828"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-1feeb6911eff5bc502e3e91b40dc2828"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_1feeb6911eff5bc502e3e91b40dc2828>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_1feeb6911eff5bc502e3e91b40dc2828>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-233eeafa68b413ea64392239f6c8a713"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-233eeafa68b413ea64392239f6c8a713"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_233eeafa68b413ea64392239f6c8a713>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_233eeafa68b413ea64392239f6c8a713>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-25b48501db3671cfb37c8677881678ab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-25b48501db3671cfb37c8677881678ab"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_25b48501db3671cfb37c8677881678ab>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_25b48501db3671cfb37c8677881678ab>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-319d458d329902513d4b8348d4cf85fe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-319d458d329902513d4b8348d4cf85fe"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_319d458d329902513d4b8348d4cf85fe>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_319d458d329902513d4b8348d4cf85fe>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-4484119286ae3f0b3225758df58d3e4b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-4484119286ae3f0b3225758df58d3e4b"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_4484119286ae3f0b3225758df58d3e4b>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_4484119286ae3f0b3225758df58d3e4b>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-6b8eecb2c92f3cc5a2670141f928f559"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-6b8eecb2c92f3cc5a2670141f928f559"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_6b8eecb2c92f3cc5a2670141f928f559>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_6b8eecb2c92f3cc5a2670141f928f559>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-6ce318143c4b4a557433459f49f54428"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-6ce318143c4b4a557433459f49f54428"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_6ce318143c4b4a557433459f49f54428>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_6ce318143c4b4a557433459f49f54428>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-921b46f6d3e58ade01ef3e9b10711ff6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-921b46f6d3e58ade01ef3e9b10711ff6"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_921b46f6d3e58ade01ef3e9b10711ff6>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_921b46f6d3e58ade01ef3e9b10711ff6>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-956041713ef9836cf8d79f38c05af3d0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-956041713ef9836cf8d79f38c05af3d0"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_956041713ef9836cf8d79f38c05af3d0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_956041713ef9836cf8d79f38c05af3d0>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-b1c86a361327ba6e2750ec26070a2374"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-b1c86a361327ba6e2750ec26070a2374"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_b1c86a361327ba6e2750ec26070a2374>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_b1c86a361327ba6e2750ec26070a2374>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-bf167fc65479b58720a8e14d972d34f0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-bf167fc65479b58720a8e14d972d34f0"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_bf167fc65479b58720a8e14d972d34f0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_bf167fc65479b58720a8e14d972d34f0>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-d013e233ed7fc7a38019af6a55814b67"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-d013e233ed7fc7a38019af6a55814b67"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_d013e233ed7fc7a38019af6a55814b67>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_d013e233ed7fc7a38019af6a55814b67>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-d75cf26140eb8a26eb9cd9a973485a4f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-d75cf26140eb8a26eb9cd9a973485a4f"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_d75cf26140eb8a26eb9cd9a973485a4f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_d75cf26140eb8a26eb9cd9a973485a4f>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderablecomponent-getuimaterialname-l2-lambda-e90a2aa2b19b627f1ba800a518147b58"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderablecomponent-getuimaterialname-l2-lambda-e90a2aa2b19b627f1ba800a518147b58"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderableComponent::getUIMaterialName::__l2::<lambda_e90a2aa2b19b627f1ba800a518147b58>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderableComponent::getUIMaterialName::__l2::<lambda_e90a2aa2b19b627f1ba800a518147b58>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"realmssettingsscreencontroller-updateworld-l2-lambda-171cf9e84184033586cecc5fe1a1d0c1-l5-lambda-87a6a684392dd938b2301e6a1aa7a585-l5-lambda-ba4c6226bdf76407e8db388ab671b19c-l16-lambda-b22c6d5c3439483febd015944d77aa68"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realmssettingsscreencontroller-updateworld-l2-lambda-171cf9e84184033586cecc5fe1a1d0c1-l5-lambda-87a6a684392dd938b2301e6a1aa7a585-l5-lambda-ba4c6226bdf76407e8db388ab671b19c-l16-lambda-b22c6d5c3439483febd015944d77aa68"}},[t._v("#")]),t._v(" "),a("code",[t._v("RealmsSettingsScreenController::_updateWorld::__l2::<lambda_171cf9e84184033586cecc5fe1a1d0c1>::()::__l5::<lambda_87a6a684392dd938b2301e6a1aa7a585>::()::__l5::<lambda_ba4c6226bdf76407e8db388ab671b19c>::()::__l16::<lambda_b22c6d5c3439483febd015944d77aa68>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RealmsSettingsScreenController::_updateWorld::__l2::<lambda_171cf9e84184033586cecc5fe1a1d0c1>::()::__l5::<lambda_87a6a684392dd938b2301e6a1aa7a585>::()::__l5::<lambda_ba4c6226bdf76407e8db388ab671b19c>::()::__l16::<lambda_b22c6d5c3439483febd015944d77aa68>\n{\n  const std::string *blockedPlayerXuid;\n};\n\n")])])]),a("h3",{attrs:{id:"realmspendinginvitationsscreencontroller-fetchpendinginvites-l2-lambda-e6ba7fa5dac6f44deecd421314ed9baf-l19-lambda-cc9aa27289a4d0700a4c608ec0bed045"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realmspendinginvitationsscreencontroller-fetchpendinginvites-l2-lambda-e6ba7fa5dac6f44deecd421314ed9baf-l19-lambda-cc9aa27289a4d0700a4c608ec0bed045"}},[t._v("#")]),t._v(" "),a("code",[t._v("RealmsPendingInvitationsScreenController::_fetchPendingInvites::__l2::<lambda_e6ba7fa5dac6f44deecd421314ed9baf>::()::__l19::<lambda_cc9aa27289a4d0700a4c608ec0bed045>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RealmsPendingInvitationsScreenController::_fetchPendingInvites::__l2::<lambda_e6ba7fa5dac6f44deecd421314ed9baf>::()::__l19::<lambda_cc9aa27289a4d0700a4c608ec0bed045>\n{\n  Realms::Invite *r;\n};\n\n")])])]),a("h3",{attrs:{id:"resourcepacksscreencontroller-adddependencies-l36-lambda-b494e23e9a0b64ac3cad0e2dc8ab1ca3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resourcepacksscreencontroller-adddependencies-l36-lambda-b494e23e9a0b64ac3cad0e2dc8ab1ca3"}},[t._v("#")]),t._v(" "),a("code",[t._v("ResourcePacksScreenController::_addDependencies::__l36::<lambda_b494e23e9a0b64ac3cad0e2dc8ab1ca3>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ResourcePacksScreenController::_addDependencies::__l36::<lambda_b494e23e9a0b64ac3cad0e2dc8ab1ca3>\n{\n  PackContentItem *packContentItem;\n};\n\n")])])]),a("h3",{attrs:{id:"realmssettingsscreencontroller-setrealmscontentselected-l15-lambda-d829c3b4cfd0725d45c2da7cb2752e8c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realmssettingsscreencontroller-setrealmscontentselected-l15-lambda-d829c3b4cfd0725d45c2da7cb2752e8c"}},[t._v("#")]),t._v(" "),a("code",[t._v("RealmsSettingsScreenController::_setRealmsContentSelected::__l15::<lambda_d829c3b4cfd0725d45c2da7cb2752e8c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RealmsSettingsScreenController::_setRealmsContentSelected::__l15::<lambda_d829c3b4cfd0725d45c2da7cb2752e8c>\n{\n  PackContentItem *packItem;\n};\n\n")])])]),a("h3",{attrs:{id:"realmssettingsscreencontroller-updateworld-l2-lambda-171cf9e84184033586cecc5fe1a1d0c1-l5-lambda-87a6a684392dd938b2301e6a1aa7a585-l5-lambda-ba4c6226bdf76407e8db388ab671b19c-l9-lambda-6b806c22352b5a7278e603a6afd4c54b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realmssettingsscreencontroller-updateworld-l2-lambda-171cf9e84184033586cecc5fe1a1d0c1-l5-lambda-87a6a684392dd938b2301e6a1aa7a585-l5-lambda-ba4c6226bdf76407e8db388ab671b19c-l9-lambda-6b806c22352b5a7278e603a6afd4c54b"}},[t._v("#")]),t._v(" "),a("code",[t._v("RealmsSettingsScreenController::_updateWorld::__l2::<lambda_171cf9e84184033586cecc5fe1a1d0c1>::()::__l5::<lambda_87a6a684392dd938b2301e6a1aa7a585>::()::__l5::<lambda_ba4c6226bdf76407e8db388ab671b19c>::()::__l9::<lambda_6b806c22352b5a7278e603a6afd4c54b>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RealmsSettingsScreenController::_updateWorld::__l2::<lambda_171cf9e84184033586cecc5fe1a1d0c1>::()::__l5::<lambda_87a6a684392dd938b2301e6a1aa7a585>::()::__l5::<lambda_ba4c6226bdf76407e8db388ab671b19c>::()::__l9::<lambda_6b806c22352b5a7278e603a6afd4c54b>\n{\n  const Social::XboxLiveUserProfileData *const *user;\n};\n\n")])])]),a("h3",{attrs:{id:"realmspluspdpscreencontroller-getrealmsubscriptionfromworld-l2-lambda-47ea2d851de30b3b20023f023d182025-l15-lambda-e4a4d330a45c86f1c887ff973f2bff1b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realmspluspdpscreencontroller-getrealmsubscriptionfromworld-l2-lambda-47ea2d851de30b3b20023f023d182025-l15-lambda-e4a4d330a45c86f1c887ff973f2bff1b"}},[t._v("#")]),t._v(" "),a("code",[t._v("RealmsPlusPDPScreenController::_getRealmSubscriptionFromWorld::__l2::<lambda_47ea2d851de30b3b20023f023d182025>::()::__l15::<lambda_e4a4d330a45c86f1c887ff973f2bff1b>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RealmsPlusPDPScreenController::_getRealmSubscriptionFromWorld::__l2::<lambda_47ea2d851de30b3b20023f023d182025>::()::__l15::<lambda_e4a4d330a45c86f1c887ff973f2bff1b>\n{\n  const Realms::RealmId *realmId;\n};\n\n")])])]),a("h3",{attrs:{id:"realmspluspdpscreencontroller-getrealmsubscriptionfromworld-l2-lambda-47ea2d851de30b3b20023f023d182025-l8-lambda-eb50376216bf927ced5a22701d869224"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realmspluspdpscreencontroller-getrealmsubscriptionfromworld-l2-lambda-47ea2d851de30b3b20023f023d182025-l8-lambda-eb50376216bf927ced5a22701d869224"}},[t._v("#")]),t._v(" "),a("code",[t._v("RealmsPlusPDPScreenController::_getRealmSubscriptionFromWorld::__l2::<lambda_47ea2d851de30b3b20023f023d182025>::()::__l8::<lambda_eb50376216bf927ced5a22701d869224>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RealmsPlusPDPScreenController::_getRealmSubscriptionFromWorld::__l2::<lambda_47ea2d851de30b3b20023f023d182025>::()::__l8::<lambda_eb50376216bf927ced5a22701d869224>\n{\n  const Realms::RealmId *realmId;\n};\n\n")])])]),a("h3",{attrs:{id:"realmssettingsscreencontroller-refreshrealmsconfigdetails-l5-lambda-7ae19e3732fa7c006dc5ae260ace94af"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realmssettingsscreencontroller-refreshrealmsconfigdetails-l5-lambda-7ae19e3732fa7c006dc5ae260ace94af"}},[t._v("#")]),t._v(" "),a("code",[t._v("RealmsSettingsScreenController::_refreshRealmsConfigDetails::__l5::<lambda_7ae19e3732fa7c006dc5ae260ace94af>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RealmsSettingsScreenController::_refreshRealmsConfigDetails::__l5::<lambda_7ae19e3732fa7c006dc5ae260ace94af>\n{\n  const std::string sha;\n};\n\n")])])]),a("h3",{attrs:{id:"realms-subscriptionservice-getcachedsubscription-l2-lambda-4ae63eb1df66b4cec8c9f209cf1d0f56"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realms-subscriptionservice-getcachedsubscription-l2-lambda-4ae63eb1df66b4cec8c9f209cf1d0f56"}},[t._v("#")]),t._v(" "),a("code",[t._v("Realms::SubscriptionService::_getCachedSubscription::__l2::<lambda_4ae63eb1df66b4cec8c9f209cf1d0f56>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Realms::SubscriptionService::_getCachedSubscription::__l2::<lambda_4ae63eb1df66b4cec8c9f209cf1d0f56>\n{\n  const Realms::RealmId *realmId;\n};\n\n")])])]),a("h3",{attrs:{id:"realms-subscriptionservice-removecacheforrealm-l2-lambda-9b65787d7c1e8bb6c3ebaf99bdccaffb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realms-subscriptionservice-removecacheforrealm-l2-lambda-9b65787d7c1e8bb6c3ebaf99bdccaffb"}},[t._v("#")]),t._v(" "),a("code",[t._v("Realms::SubscriptionService::_removeCacheForRealm::__l2::<lambda_9b65787d7c1e8bb6c3ebaf99bdccaffb>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Realms::SubscriptionService::_removeCacheForRealm::__l2::<lambda_9b65787d7c1e8bb6c3ebaf99bdccaffb>\n{\n  const Realms::RealmId *realmId;\n};\n\n")])])]),a("h3",{attrs:{id:"realms-subscriptionservice-getsubscriptionquery-l2-lambda-114f41db29b1a2e0e460484b1fec01ea"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realms-subscriptionservice-getsubscriptionquery-l2-lambda-114f41db29b1a2e0e460484b1fec01ea"}},[t._v("#")]),t._v(" "),a("code",[t._v("Realms::SubscriptionService::_getSubscriptionQuery::__l2::<lambda_114f41db29b1a2e0e460484b1fec01ea>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Realms::SubscriptionService::_getSubscriptionQuery::__l2::<lambda_114f41db29b1a2e0e460484b1fec01ea>\n{\n  const Realms::RealmId *realmId;\n};\n\n")])])]),a("h3",{attrs:{id:"realms-subscriptionservice-updatesubscriptionquerystatus-l2-lambda-cda3f7165f26af0f26a99c42d6cce66d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#realms-subscriptionservice-updatesubscriptionquerystatus-l2-lambda-cda3f7165f26af0f26a99c42d6cce66d"}},[t._v("#")]),t._v(" "),a("code",[t._v("Realms::SubscriptionService::_updateSubscriptionQueryStatus::__l2::<lambda_cda3f7165f26af0f26a99c42d6cce66d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Realms::SubscriptionService::_updateSubscriptionQueryStatus::__l2::<lambda_cda3f7165f26af0f26a99c42d6cce66d>\n{\n  const Realms::RealmId *realmId;\n};\n\n")])])]),a("h3",{attrs:{id:"rendergraph-renderorder-link-l2-lambda-a85dd026e523765d26081779aa373fe0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rendergraph-renderorder-link-l2-lambda-a85dd026e523765d26081779aa373fe0"}},[t._v("#")]),t._v(" "),a("code",[t._v("rendergraph::RenderOrder::link::__l2::<lambda_a85dd026e523765d26081779aa373fe0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rendergraph::RenderOrder::link::__l2::<lambda_a85dd026e523765d26081779aa373fe0>\n{\n  rendergraph::RenderOrder *const __this;\n  rendergraph::APIResourcePool *resources;\n};\n\n")])])]),a("h3",{attrs:{id:"replaystatecomponent-applyframecorrection-l2-lambda-b82497fba36dae9def6255320e746696"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replaystatecomponent-applyframecorrection-l2-lambda-b82497fba36dae9def6255320e746696"}},[t._v("#")]),t._v(" "),a("code",[t._v("ReplayStateComponent::applyFrameCorrection::__l2::<lambda_b82497fba36dae9def6255320e746696>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) ReplayStateComponent::applyFrameCorrection::__l2::<lambda_b82497fba36dae9def6255320e746696>\n{\n  std::unique_ptr<IReplayableActorInput> correction;\n  IActorMovementProxy *actor;\n  ReplayStateComponent *const __this;\n  const unsigned __int64 destinationTimestamp;\n  const bool destinationFrameExists;\n};\n\n")])])]),a("h3",{attrs:{id:"repairableitemcomponent-repairitem-l2-lambda-a2a775e2722c0eed27572dfbbc5bebbc-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repairableitemcomponent-repairitem-l2-lambda-a2a775e2722c0eed27572dfbbc5bebbc-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RepairableItemComponent::_repairItem::__l2::<lambda_a2a775e2722c0eed27572dfbbc5bebbc>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RepairableItemComponent::_repairItem::__l2::<lambda_a2a775e2722c0eed27572dfbbc5bebbc>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"repairableitemcomponent-repairitem-l2-lambda-a2a775e2722c0eed27572dfbbc5bebbc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repairableitemcomponent-repairitem-l2-lambda-a2a775e2722c0eed27572dfbbc5bebbc"}},[t._v("#")]),t._v(" "),a("code",[t._v("RepairableItemComponent::_repairItem::__l2::<lambda_a2a775e2722c0eed27572dfbbc5bebbc>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RepairableItemComponent::_repairItem::__l2::<lambda_a2a775e2722c0eed27572dfbbc5bebbc>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"raidbosscomponent-handleregisterplayers-l9-lambda-15af12567fd8e78472a1c6012ea9d14e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raidbosscomponent-handleregisterplayers-l9-lambda-15af12567fd8e78472a1c6012ea9d14e"}},[t._v("#")]),t._v(" "),a("code",[t._v("RaidBossComponent::_handleRegisterPlayers::__l9::<lambda_15af12567fd8e78472a1c6012ea9d14e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RaidBossComponent::_handleRegisterPlayers::__l9::<lambda_15af12567fd8e78472a1c6012ea9d14e>\n{\n  RaidBossComponent *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"raknetinstance-storelocalip-l13-lambda-d0c9ba039f2f939fe7f4e6a42726e2c8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raknetinstance-storelocalip-l13-lambda-d0c9ba039f2f939fe7f4e6a42726e2c8"}},[t._v("#")]),t._v(" "),a("code",[t._v("RakNetInstance::_storeLocalIP::__l13::<lambda_d0c9ba039f2f939fe7f4e6a42726e2c8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RakNetInstance::_storeLocalIP::__l13::<lambda_d0c9ba039f2f939fe7f4e6a42726e2c8>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"resourcepackmanager-findalltexturesinuse-l16-lambda-77a7f0a46859c7652cd2af3371509138"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resourcepackmanager-findalltexturesinuse-l16-lambda-77a7f0a46859c7652cd2af3371509138"}},[t._v("#")]),t._v(" "),a("code",[t._v("ResourcePackManager::findAllTexturesInUse::__l16::<lambda_77a7f0a46859c7652cd2af3371509138>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ResourcePackManager::findAllTexturesInUse::__l16::<lambda_77a7f0a46859c7652cd2af3371509138>\n{\n  std::vector<std::string> *textureSetLayers;\n};\n\n")])])]),a("h3",{attrs:{id:"resourcepackmanager-checkhasextralocaleresources-l2-lambda-8e0c88cf2983974e9e8d677199248319"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resourcepackmanager-checkhasextralocaleresources-l2-lambda-8e0c88cf2983974e9e8d677199248319"}},[t._v("#")]),t._v(" "),a("code",[t._v("ResourcePackManager::checkHasExtraLocaleResources::__l2::<lambda_8e0c88cf2983974e9e8d677199248319>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ResourcePackManager::checkHasExtraLocaleResources::__l2::<lambda_8e0c88cf2983974e9e8d677199248319>\n{\n  const std::string *locale;\n};\n\n")])])]),a("h3",{attrs:{id:"resourcepackrepository-getresourcepacksatisfiespackid-l9-lambda-9a538935dba0ba85c1b073ba68921656"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resourcepackrepository-getresourcepacksatisfiespackid-l9-lambda-9a538935dba0ba85c1b073ba68921656"}},[t._v("#")]),t._v(" "),a("code",[t._v("ResourcePackRepository::getResourcePackSatisfiesPackId::__l9::<lambda_9a538935dba0ba85c1b073ba68921656>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ResourcePackRepository::getResourcePackSatisfiesPackId::__l9::<lambda_9a538935dba0ba85c1b073ba68921656>\n{\n  ResourcePack *beginPack;\n};\n\n")])])]),a("h3",{attrs:{id:"resourcepackrepository-removepack-l2-lambda-a8d60394ba5e3b950d268d58fb336608"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resourcepackrepository-removepack-l2-lambda-a8d60394ba5e3b950d268d58fb336608"}},[t._v("#")]),t._v(" "),a("code",[t._v("ResourcePackRepository::_removePack::__l2::<lambda_a8d60394ba5e3b950d268d58fb336608>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ResourcePackRepository::_removePack::__l2::<lambda_a8d60394ba5e3b950d268d58fb336608>\n{\n  const ResourceLocation packLocation;\n};\n\n")])])]),a("h3",{attrs:{id:"resourcepack-createencryptor-l2-lambda-0881763b333a7ea6ccc669b884692af6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resourcepack-createencryptor-l2-lambda-0881763b333a7ea6ccc669b884692af6"}},[t._v("#")]),t._v(" "),a("code",[t._v("ResourcePack::createEncryptor::__l2::<lambda_0881763b333a7ea6ccc669b884692af6>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ResourcePack::createEncryptor::__l2::<lambda_0881763b333a7ea6ccc669b884692af6>\n{\n  IDataOutput *original;\n};\n\n")])])]),a("h3",{attrs:{id:"resourcepack-createdecryptor-l2-lambda-de3a97f4d57821714af0f38aa60da239"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#resourcepack-createdecryptor-l2-lambda-de3a97f4d57821714af0f38aa60da239"}},[t._v("#")]),t._v(" "),a("code",[t._v("ResourcePack::createDecryptor::__l2::<lambda_de3a97f4d57821714af0f38aa60da239>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ResourcePack::createDecryptor::__l2::<lambda_de3a97f4d57821714af0f38aa60da239>\n{\n  IDataInput *original;\n};\n\n")])])]),a("h3",{attrs:{id:"rabbit-updateentityspecificmolangvariables-l2-lambda-63f15397bfead5abe4ffe3acde7e9d7d-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbit-updateentityspecificmolangvariables-l2-lambda-63f15397bfead5abe4ffe3acde7e9d7d-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Rabbit::updateEntitySpecificMolangVariables::__l2::<lambda_63f15397bfead5abe4ffe3acde7e9d7d>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Rabbit::updateEntitySpecificMolangVariables::__l2::<lambda_63f15397bfead5abe4ffe3acde7e9d7d>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"rabbit-updateentityspecificmolangvariables-l2-lambda-63f15397bfead5abe4ffe3acde7e9d7d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbit-updateentityspecificmolangvariables-l2-lambda-63f15397bfead5abe4ffe3acde7e9d7d"}},[t._v("#")]),t._v(" "),a("code",[t._v("Rabbit::updateEntitySpecificMolangVariables::__l2::<lambda_63f15397bfead5abe4ffe3acde7e9d7d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Rabbit::updateEntitySpecificMolangVariables::__l2::<lambda_63f15397bfead5abe4ffe3acde7e9d7d>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"recipes-addshapedrecipe-l48-lambda-47332ffee318a4b61331a8c4a0805fac"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recipes-addshapedrecipe-l48-lambda-47332ffee318a4b61331a8c4a0805fac"}},[t._v("#")]),t._v(" "),a("code",[t._v("Recipes::addShapedRecipe::__l48::<lambda_47332ffee318a4b61331a8c4a0805fac>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Recipes::addShapedRecipe::__l48::<lambda_47332ffee318a4b61331a8c4a0805fac>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"recipes-addshapelessrecipe-l22-lambda-e14c6232c203f2d480436010494b2280"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#recipes-addshapelessrecipe-l22-lambda-e14c6232c203f2d480436010494b2280"}},[t._v("#")]),t._v(" "),a("code",[t._v("Recipes::addShapelessRecipe::__l22::<lambda_e14c6232c203f2d480436010494b2280>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Recipes::addShapelessRecipe::__l22::<lambda_e14c6232c203f2d480436010494b2280>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"renderhelper-rotatenineslice-l2-lambda-25110d648776ca7df3468f3e20782d6e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderhelper-rotatenineslice-l2-lambda-25110d648776ca7df3468f3e20782d6e"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderHelper::RotateNineslice::__l2::<lambda_25110d648776ca7df3468f3e20782d6e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderHelper::RotateNineslice::__l2::<lambda_25110d648776ca7df3468f3e20782d6e>\n{\n  const glm::tvec2<float,0> *pivot;\n  int *degree;\n};\n\n")])])]),a("h3",{attrs:{id:"renderhelper-rotatenineslice-l2-lambda-69f7ca8dbd57f44c5eeda5a30565d6c0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderhelper-rotatenineslice-l2-lambda-69f7ca8dbd57f44c5eeda5a30565d6c0"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderHelper::RotateNineslice::__l2::<lambda_69f7ca8dbd57f44c5eeda5a30565d6c0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RenderHelper::RotateNineslice::__l2::<lambda_69f7ca8dbd57f44c5eeda5a30565d6c0>\n{\n  RenderHelper::RotateNineslice::__l2::<lambda_25110d648776ca7df3468f3e20782d6e> *_calcPos;\n};\n\n")])])]),a("h3",{attrs:{id:"rtrim-l2-lambda-948f1aff55751bef588853aab06af157"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rtrim-l2-lambda-948f1aff55751bef588853aab06af157"}},[t._v("#")]),t._v(" "),a("code",[t._v("rtrim::__l2::<lambda_948f1aff55751bef588853aab06af157>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj rtrim::__l2::<lambda_948f1aff55751bef588853aab06af157>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"restclient-ltrim-l2-lambda-8e75de1f7e6b6be758c7e7945feef6ca"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restclient-ltrim-l2-lambda-8e75de1f7e6b6be758c7e7945feef6ca"}},[t._v("#")]),t._v(" "),a("code",[t._v("RestClient::ltrim::__l2::<lambda_8e75de1f7e6b6be758c7e7945feef6ca>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RestClient::ltrim::__l2::<lambda_8e75de1f7e6b6be758c7e7945feef6ca>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"restclient-rtrim-l2-lambda-f438790ac25c0ee4bca1b6c46ce3d1ca"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restclient-rtrim-l2-lambda-f438790ac25c0ee4bca1b6c46ce3d1ca"}},[t._v("#")]),t._v(" "),a("code",[t._v("RestClient::rtrim::__l2::<lambda_f438790ac25c0ee4bca1b6c46ce3d1ca>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RestClient::rtrim::__l2::<lambda_f438790ac25c0ee4bca1b6c46ce3d1ca>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"roofedtreecanopy-buildschema-l2-lambda-8f104405ddcaf451728e5f15355e75e6-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#roofedtreecanopy-buildschema-l2-lambda-8f104405ddcaf451728e5f15355e75e6-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RoofedTreeCanopy::_buildSchema::__l2::<lambda_8f104405ddcaf451728e5f15355e75e6>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RoofedTreeCanopy::_buildSchema::__l2::<lambda_8f104405ddcaf451728e5f15355e75e6>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"roofedtreecanopy-buildschema-l2-lambda-8f104405ddcaf451728e5f15355e75e6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#roofedtreecanopy-buildschema-l2-lambda-8f104405ddcaf451728e5f15355e75e6"}},[t._v("#")]),t._v(" "),a("code",[t._v("RoofedTreeCanopy::_buildSchema::__l2::<lambda_8f104405ddcaf451728e5f15355e75e6>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RoofedTreeCanopy::_buildSchema::__l2::<lambda_8f104405ddcaf451728e5f15355e75e6>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"roofedtreecanopy-buildschema-l2-lambda-a4213651e882cec2c73ab64e3c02b0e7-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#roofedtreecanopy-buildschema-l2-lambda-a4213651e882cec2c73ab64e3c02b0e7-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RoofedTreeCanopy::_buildSchema::__l2::<lambda_a4213651e882cec2c73ab64e3c02b0e7>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RoofedTreeCanopy::_buildSchema::__l2::<lambda_a4213651e882cec2c73ab64e3c02b0e7>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"roofedtreecanopy-buildschema-l2-lambda-a4213651e882cec2c73ab64e3c02b0e7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#roofedtreecanopy-buildschema-l2-lambda-a4213651e882cec2c73ab64e3c02b0e7"}},[t._v("#")]),t._v(" "),a("code",[t._v("RoofedTreeCanopy::_buildSchema::__l2::<lambda_a4213651e882cec2c73ab64e3c02b0e7>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RoofedTreeCanopy::_buildSchema::__l2::<lambda_a4213651e882cec2c73ab64e3c02b0e7>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"roofedtreecanopy-buildschema-l2-lambda-5ff86b87033619b327f263c9ec84329c-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#roofedtreecanopy-buildschema-l2-lambda-5ff86b87033619b327f263c9ec84329c-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("RoofedTreeCanopy::_buildSchema::__l2::<lambda_5ff86b87033619b327f263c9ec84329c>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RoofedTreeCanopy::_buildSchema::__l2::<lambda_5ff86b87033619b327f263c9ec84329c>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"roofedtreecanopy-buildschema-l2-lambda-5ff86b87033619b327f263c9ec84329c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#roofedtreecanopy-buildschema-l2-lambda-5ff86b87033619b327f263c9ec84329c"}},[t._v("#")]),t._v(" "),a("code",[t._v("RoofedTreeCanopy::_buildSchema::__l2::<lambda_5ff86b87033619b327f263c9ec84329c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj RoofedTreeCanopy::_buildSchema::__l2::<lambda_5ff86b87033619b327f263c9ec84329c>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"randomizableblockactorcontainerbase-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#randomizableblockactorcontainerbase-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RandomizableBlockActorContainerBase_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RandomizableBlockActorContainerBase_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n};\n\n")])])]),a("h3",{attrs:{id:"randomizableblockactorcontainer-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#randomizableblockactorcontainer-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RandomizableBlockActorContainer_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RandomizableBlockActorContainer_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n};\n\n")])])]),a("h3",{attrs:{id:"randomizableblockactorfillingcontainer-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#randomizableblockactorfillingcontainer-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RandomizableBlockActorFillingContainer_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RandomizableBlockActorFillingContainer_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n};\n\n")])])]),a("h3",{attrs:{id:"remoteplayer-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remoteplayer-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RemotePlayer_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RemotePlayer_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n  void (__fastcall *prepareRegion)(Player *this, ChunkSource *);\n  void (__fastcall *destroyRegion)(Player *this);\n  void (__fastcall *suspendRegion)(Player *this);\n  void (__fastcall *resendAllChunks)(Player *this);\n  void (__fastcall *_fireWillChangeDimension)(Player *this);\n  void (__fastcall *_fireDimensionChanged)(Player *this);\n  void (__fastcall *changeDimensionWithCredits)(Player *this, AutomaticID<Dimension,int>);\n  int (__fastcall *tickWorld)(Player *this, const Tick *);\n  void (__fastcall *frameUpdate)(Player *this, FrameUpdateContextBase *);\n  const std::vector<ChunkPos> *(__fastcall *getTickingOffsets)(Player *this);\n  void (__fastcall *moveView)(Player *this);\n  void (__fastcall *setName)(Player *this, const std::string *);\n  void (__fastcall *checkMovementStats)(Player *this, const Vec3 *);\n  StructureFeatureType (__fastcall *getCurrentStructureFeature)(Player *this);\n  bool (__fastcall *isAutoJumpEnabled)(Player *this);\n  void (__fastcall *respawn)(Player *this);\n  void (__fastcall *resetRot)(Player *this);\n  void (__fastcall *resetPos)(Player *this, bool);\n  bool (__fastcall *isInTrialMode)(Player *this);\n  bool (__fastcall *hasResource)(Player *this, int);\n  void (__fastcall *completeUsingItem)(Player *this);\n  void (__fastcall *setPermissions)(Player *this, CommandPermissionLevel);\n  void (__fastcall *startDestroying)(Player *this);\n  void (__fastcall *stopDestroying)(Player *this);\n  void (__fastcall *openPortfolio)(Player *this);\n  void (__fastcall *openBook)(Player *this, int, bool, int, BlockActor *);\n  void (__fastcall *openTrading)(Player *this, const ActorUniqueID *, bool);\n  bool (__fastcall *canOpenContainerScreen)(Player *this);\n  void (__fastcall *openChalkboard)(Player *this, ChalkboardBlockActor *, bool);\n  void (__fastcall *openNpcInteractScreen)(Player *this, Actor *);\n  bool (__fastcall *openInventory)(Player *this);\n  void (__fastcall *displayChatMessage)(Player *this, const std::string *, const std::string *);\n  void (__fastcall *displayClientMessage)(Player *this, const std::string *);\n  void (__fastcall *displayTextObjectMessage)(Player *this, const TextObjectRoot *);\n  void (__fastcall *displayTextObjectWhisperMessage)(Player *this, const ResolvedTextObject *, const std::string *, const std::string *);\n  void (__fastcall *displayWhisperMessage)(Player *this, const std::string *, const std::string *, const std::string *, const std::string *);\n  BedSleepingResult (__fastcall *startSleepInBed)(Player *this, const BlockPos *);\n  void (__fastcall *stopSleepInBed)(Player *this, bool, bool);\n  bool (__fastcall *canStartSleepInBed)(Player *this);\n  int (__fastcall *getSleepTimer)(Player *this);\n  int (__fastcall *getPreviousTickSleepTimer)(Player *this);\n  void (__fastcall *openSign)(Player *this, const BlockPos *);\n  void (__fastcall *playEmote)(Player *this, const std::string *);\n  bool (__fastcall *isHostingPlayer)(Player *this);\n  bool (__fastcall *isLoading)(Player *this);\n  bool (__fastcall *isPlayerInitialized)(Player *this);\n  void (__fastcall *stopLoading)(Player *this);\n  void (__fastcall *registerTrackedBoss)(Player *this, ActorUniqueID);\n  void (__fastcall *unRegisterTrackedBoss)(Player *this, ActorUniqueID);\n  void (__fastcall *setPlayerGameType)(Player *this, GameType);\n  void (__fastcall *initHUDContainerManager)(Player *this);\n  void (__fastcall *_crit)(Player *this, Actor *);\n  IMinecraftEventing *(__fastcall *getEventing)(Player *this);\n  unsigned int (__fastcall *getUserId)(Player *this);\n  void (__fastcall *sendEventPacket)(Player *this, EventPacket *);\n  void (__fastcall *addExperience)(Player *this, int);\n  void (__fastcall *addLevels)(Player *this, int);\n  void (__fastcall *setContainerData)(Player *this, IContainerManager *, int, int);\n  void (__fastcall *slotChanged)(Player *this, IContainerManager *, Container *, int, const ItemStack *, const ItemStack *, bool);\n  void (__fastcall *inventoryChanged)(Player *this, Container *, int, const ItemStack *, const ItemStack *, bool);\n  void (__fastcall *refreshContainer)(Player *this, IContainerManager *);\n  void (__fastcall *deleteContainerManager)(Player *this);\n  void (__fastcall *setFieldOfViewModifier)(Player *this, float);\n  bool (__fastcall *is2DPositionRelevant)(Player *this, AutomaticID<Dimension,int>, const BlockPos *);\n  bool (__fastcall *isEntityRelevant)(Player *this, const Actor *);\n  bool (__fastcall *isTeacher)(Player *this);\n  void (__fastcall *onSuspension)(Player *this);\n  void (__fastcall *onLinkedSlotsChanged)(Player *this);\n  void (__fastcall *startCooldown)(Player *this, const Item *);\n  int (__fastcall *getItemCooldownLeft)(Player *this, const std::string *);\n  bool (__fastcall *isItemInCooldown)(Player *this, const std::string *);\n  void (__fastcall *sendInventoryTransaction)(Player *this, const InventoryTransaction *);\n  void (__fastcall *sendComplexInventoryTransaction)(Player *this, std::unique_ptr<ComplexInventoryTransaction>);\n  void (__fastcall *sendNetworkPacket)(Player *this, Packet *);\n  PlayerEventCoordinator *(__fastcall *getPlayerEventCoordinator)(Player *this);\n  MoveInputHandler *(__fastcall *getMoveInputHandler)(Player *this);\n  InputMode (__fastcall *getInputMode)(Player *this);\n  ClientPlayMode (__fastcall *getPlayMode)(Player *this);\n  void (__fastcall *reportMovementTelemetry)(Player *this, const MovementEventType);\n  bool (__fastcall *getCamereDeparted)(Player *this);\n  bool (__fastcall *getThirdPersonPerspective)(Player *this);\n  Vec2 *(__fastcall *getRotationToCamera)(Player *this, Vec2 *result);\n  void (__fastcall *onMovePlayerPacketNormal)(Player *this, const Vec3 *, const Vec2 *, float);\n};\n\n")])])]),a("h3",{attrs:{id:"renderchunkcoordinator-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#renderchunkcoordinator-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("RenderChunkCoordinator_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ RenderChunkCoordinator_vtbl\n{\n  void (__fastcall *~BlockSourceListener)(BlockSourceListener *this);\n  void (__fastcall *onSourceCreated)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onSourceDestroyed)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onAreaChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, const BlockPos *);\n  void (__fastcall *onBlockChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, unsigned int, const Block *, const Block *, int, const ActorBlockSyncMessage *);\n  void (__fastcall *onBrightnessChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onBlockEntityChanged)(BlockSourceListener *this, BlockSource *, BlockActor *);\n  void (__fastcall *onBlockEntityAboutToBeRemoved)(BlockSourceListener *this, BlockSource *, std::shared_ptr<BlockActor>);\n  void (__fastcall *onEntityChanged)(BlockSourceListener *this, BlockSource *, Actor *);\n  void (__fastcall *onBlockEvent)(BlockSourceListener *this, BlockSource *, int, int, int, int, int);\n  void (__fastcall *allChanged)(LevelListener *this);\n  Particle *(__fastcall *addParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int, const CompoundTag *, bool);\n  void (__fastcall *sendServerLegacyParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int);\n  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Actor *, const HashedString *, const Vec3 *, const MolangVariableMap *);\n  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Vec3 *, const MolangVariableMap *);\n  void (__fastcall *addTerrainParticleEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);\n  void (__fastcall *addTerrainSlideEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);\n  void (__fastcall *addBreakingItemParticleEffect)(LevelListener *this, const Vec3 *, ParticleType, const TextureUVCoordinateSet *, bool);\n  void (__fastcall *playMusic)(LevelListener *this, const std::string *, const Vec3 *, float, float);\n  void (__fastcall *playStreamingMusic)(LevelListener *this, const std::string *, int, int, int);\n  void (__fastcall *onEntityAdded)(LevelListener *this, Actor *);\n  void (__fastcall *onEntityRemoved)(LevelListener *this, Actor *);\n  void (__fastcall *onChunkLoaded)(LevelListener *this, ChunkSource *, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(LevelListener *this, LevelChunk *);\n  void (__fastcall *onLevelDestruction)(LevelListener *this, const std::string *);\n  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const CompoundTag *);\n  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const Vec3 *, int);\n  void (__fastcall *levelSoundEvent)(LevelListener *this, const std::string *, const Vec3 *, float, float);\n  void (__fastcall *levelSoundEvent)(LevelListener *this, LevelSoundEvent, const Vec3 *, int, const ActorDefinitionIdentifier *, bool, bool);\n  void (__fastcall *stopSoundEvent)(LevelListener *this, const std::string *);\n  void (__fastcall *stopAllSounds)(LevelListener *this);\n  void (__fastcall *takePicture)(LevelListener *this, cg::ImageBuffer *, Actor *, Actor *, ScreenshotOptions *);\n  void (__fastcall *playerListChanged)(LevelListener *this);\n};\n\n")])])]),a("h3",{attrs:{id:"rabbit-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbit-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("Rabbit_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ Rabbit_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n};\n\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);