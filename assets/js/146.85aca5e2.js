(window.webpackJsonp=window.webpackJsonp||[]).push([[146],{456:function(t,c,o){"use strict";o.r(c);var e=o(27),l=Object(e.a)({},(function(){var t=this,c=t._self._c;return c("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[c("h1",{attrs:{id:"q"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#q"}},[t._v("#")]),t._v(" Q")]),t._v(" "),c("h3",{attrs:{id:"querymanifestdocument"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#querymanifestdocument"}},[t._v("#")]),t._v(" "),c("code",[t._v("QueryManifestDocument")])]),t._v(" "),c("table",[c("thead",[c("tr",[c("th",[t._v("Offset")]),t._v(" "),c("th",[t._v("Type")]),t._v(" "),c("th",[t._v("Name")])])]),t._v(" "),c("tbody",[c("tr",[c("td",[t._v("0")]),t._v(" "),c("td",[t._v("(584) "),c("code",[t._v("CommonDocument")])]),t._v(" "),c("td",[t._v("mCommon")])]),t._v(" "),c("tr",[c("td",[t._v("584")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("QueryManifestCustom")])]),t._v(" "),c("td",[t._v("mCustom")])])])]),t._v(" "),c("h3",{attrs:{id:"querymanifestcustom"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#querymanifestcustom"}},[t._v("#")]),t._v(" "),c("code",[t._v("QueryManifestCustom")])]),t._v(" "),c("table",[c("thead",[c("tr",[c("th",[t._v("Offset")]),t._v(" "),c("th",[t._v("Type")]),t._v(" "),c("th",[t._v("Name")])])]),t._v(" "),c("tbody",[c("tr",[c("td",[t._v("0")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::shared_ptr<StoreVisualStyle>>")])]),t._v(" "),c("td",[t._v("mStoreScreenLayout")])])])]),t._v(" "),c("h3",{attrs:{id:"querydocument"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#querydocument"}},[t._v("#")]),t._v(" "),c("code",[t._v("QueryDocument")])]),t._v(" "),c("table",[c("thead",[c("tr",[c("th",[t._v("Offset")]),t._v(" "),c("th",[t._v("Type")]),t._v(" "),c("th",[t._v("Name")])])]),t._v(" "),c("tbody",[c("tr",[c("td",[t._v("0")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::string>")])]),t._v(" "),c("td",[t._v("mContentTypes")])]),t._v(" "),c("tr",[c("td",[t._v("24")]),t._v(" "),c("td",[t._v("(32) "),c("code",[t._v("std::string")])]),t._v(" "),c("td",[t._v("mSearchString")])]),t._v(" "),c("tr",[c("td",[t._v("56")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::string>")])]),t._v(" "),c("td",[t._v("mOrTags")])]),t._v(" "),c("tr",[c("td",[t._v("80")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::string>")])]),t._v(" "),c("td",[t._v("mAndTags")])]),t._v(" "),c("tr",[c("td",[t._v("104")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::string>")])]),t._v(" "),c("td",[t._v("mNotTags")])]),t._v(" "),c("tr",[c("td",[t._v("128")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::string>")])]),t._v(" "),c("td",[t._v("mRarityFilters")])]),t._v(" "),c("tr",[c("td",[t._v("152")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::string>")])]),t._v(" "),c("td",[t._v("mPieceTypeFilters")])]),t._v(" "),c("tr",[c("td",[t._v("176")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::string>")])]),t._v(" "),c("td",[t._v("mPieceTypeFilterExclusions")])]),t._v(" "),c("tr",[c("td",[t._v("200")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::string>")])]),t._v(" "),c("td",[t._v("mProductIdOrder")])]),t._v(" "),c("tr",[c("td",[t._v("224")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::string>")])]),t._v(" "),c("td",[t._v("mCreatorIds")])]),t._v(" "),c("tr",[c("td",[t._v("248")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::string>")])]),t._v(" "),c("td",[t._v("mProductIdExclusions")])]),t._v(" "),c("tr",[c("td",[t._v("272")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::string>")])]),t._v(" "),c("td",[t._v("mCreatorIdExclusions")])]),t._v(" "),c("tr",[c("td",[t._v("296")]),t._v(" "),c("td",[t._v("(4) "),c("code",[t._v("int")])]),t._v(" "),c("td",[t._v("mItemLimit")])]),t._v(" "),c("tr",[c("td",[t._v("300")]),t._v(" "),c("td",[t._v("(4) "),c("code",[t._v("int")])]),t._v(" "),c("td",[t._v("mTopCount")])]),t._v(" "),c("tr",[c("td",[t._v("304")]),t._v(" "),c("td",[t._v("(32) "),c("code",[t._v("std::string")])]),t._v(" "),c("td",[t._v("mClientSort")])]),t._v(" "),c("tr",[c("td",[t._v("336")]),t._v(" "),c("td",[t._v("(32) "),c("code",[t._v("std::string")])]),t._v(" "),c("td",[t._v("mSortBy")])]),t._v(" "),c("tr",[c("td",[t._v("368")]),t._v(" "),c("td",[t._v("(32) "),c("code",[t._v("std::string")])]),t._v(" "),c("td",[t._v("mSortDirection")])]),t._v(" "),c("tr",[c("td",[t._v("400")]),t._v(" "),c("td",[t._v("(24) "),c("code",[t._v("std::vector<std::string>")])]),t._v(" "),c("td",[t._v("mUpsellQueryTags")])]),t._v(" "),c("tr",[c("td",[t._v("424")]),t._v(" "),c("td",[t._v("(4) "),c("code",[t._v("int")])]),t._v(" "),c("td",[t._v("mCarouselRotationTime")])])])]),t._v(" "),c("h3",{attrs:{id:"querypurchaseresult"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#querypurchaseresult"}},[t._v("#")]),t._v(" "),c("code",[t._v("QueryPurchaseResult")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QueryPurchaseResult\n{\n  bool success;\n  std::vector<PurchaseInfo> purchaseInfo;\n};\n\n")])])]),c("h3",{attrs:{id:"querymanifestsearchresults"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#querymanifestsearchresults"}},[t._v("#")]),t._v(" "),c("code",[t._v("QueryManifestSearchResults")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("const struct __cppobj QueryManifestSearchResults : CommonSearchResults\n{\n  std::vector<QueryManifestDocument> mDocuments;\n};\n\n")])])]),c("h3",{attrs:{id:"qos-object-hdr"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#qos-object-hdr"}},[t._v("#")]),t._v(" "),c("code",[t._v("QOS_OBJECT_HDR")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct QOS_OBJECT_HDR\n{\n  unsigned int ObjectType;\n  unsigned int ObjectLength;\n};\n\n")])])]),c("h3",{attrs:{id:"queuedskinupdate"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#queuedskinupdate"}},[t._v("#")]),t._v(" "),c("code",[t._v("QueuedSkinUpdate")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QueuedSkinUpdate\n{\n  std::weak_ptr<IClientInstance> mClient;\n  const SerializedSkin mSkin;\n  mce::Image mImage;\n  mce::Image mCapeImage;\n  std::function<void __cdecl(void)> mGeoFinishedCallback;\n  mce::Image mBloomImage;\n};\n\n")])])]),c("h3",{attrs:{id:"quizscreencontroller"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#quizscreencontroller"}},[t._v("#")]),t._v(" "),c("code",[t._v("QuizScreenController")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QuizScreenController : MinecraftScreenController\n{\n  std::optional<std::string > mQuizUrl;\n  bool mQuizQueryInProgress;\n  bool mRefreshContent;\n  std::shared_ptr<LessonProgressionService> mLessonProgressionService;\n};\n\n")])])]),c("h3",{attrs:{id:"quizscreencontroller-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#quizscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("QuizScreenController_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ QuizScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),c("h3",{attrs:{id:"quizscreencontroller-registereventhandlers-l2-lambda-19db060bb133f580aa0ada1b0c788eb3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#quizscreencontroller-registereventhandlers-l2-lambda-19db060bb133f580aa0ada1b0c788eb3"}},[t._v("#")]),t._v(" "),c("code",[t._v("QuizScreenController::_registerEventHandlers::__l2::<lambda_19db060bb133f580aa0ada1b0c788eb3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QuizScreenController::_registerEventHandlers::__l2::<lambda_19db060bb133f580aa0ada1b0c788eb3>\n{\n  QuizScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"quizscreencontroller-registereventhandlers-l2-lambda-5ccd21d441fae808a53a99816163fe2f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#quizscreencontroller-registereventhandlers-l2-lambda-5ccd21d441fae808a53a99816163fe2f"}},[t._v("#")]),t._v(" "),c("code",[t._v("QuizScreenController::_registerEventHandlers::__l2::<lambda_5ccd21d441fae808a53a99816163fe2f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QuizScreenController::_registerEventHandlers::__l2::<lambda_5ccd21d441fae808a53a99816163fe2f>\n{\n  QuizScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"quizscreencontroller-registereventhandlers-l2-lambda-42779dfb5d8240c2eca679c36f0e47ec"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#quizscreencontroller-registereventhandlers-l2-lambda-42779dfb5d8240c2eca679c36f0e47ec"}},[t._v("#")]),t._v(" "),c("code",[t._v("QuizScreenController::_registerEventHandlers::__l2::<lambda_42779dfb5d8240c2eca679c36f0e47ec>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QuizScreenController::_registerEventHandlers::__l2::<lambda_42779dfb5d8240c2eca679c36f0e47ec>\n{\n  QuizScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"quizscreencontroller-registereventhandlers-l2-lambda-42779dfb5d8240c2eca679c36f0e47ec-l5-lambda-b97e973a9c9a256cd35be5d64c92d3bc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#quizscreencontroller-registereventhandlers-l2-lambda-42779dfb5d8240c2eca679c36f0e47ec-l5-lambda-b97e973a9c9a256cd35be5d64c92d3bc"}},[t._v("#")]),t._v(" "),c("code",[t._v("QuizScreenController::_registerEventHandlers::__l2::<lambda_42779dfb5d8240c2eca679c36f0e47ec>::()::__l5::<lambda_b97e973a9c9a256cd35be5d64c92d3bc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QuizScreenController::_registerEventHandlers::__l2::<lambda_42779dfb5d8240c2eca679c36f0e47ec>::()::__l5::<lambda_b97e973a9c9a256cd35be5d64c92d3bc>\n{\n  std::weak_ptr<QuizScreenController> weakThis;\n};\n\n")])])]),c("h3",{attrs:{id:"quizscreencontroller-registerbindings-l2-lambda-88613c7e5be06e8dd46ac14e04ed9555"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#quizscreencontroller-registerbindings-l2-lambda-88613c7e5be06e8dd46ac14e04ed9555"}},[t._v("#")]),t._v(" "),c("code",[t._v("QuizScreenController::_registerBindings::__l2::<lambda_88613c7e5be06e8dd46ac14e04ed9555>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QuizScreenController::_registerBindings::__l2::<lambda_88613c7e5be06e8dd46ac14e04ed9555>\n{\n  QuizScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"quizscreencontroller-registerbindings-l2-lambda-301f24380ff1da8505d841fdf272fca9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#quizscreencontroller-registerbindings-l2-lambda-301f24380ff1da8505d841fdf272fca9"}},[t._v("#")]),t._v(" "),c("code",[t._v("QuizScreenController::_registerBindings::__l2::<lambda_301f24380ff1da8505d841fdf272fca9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QuizScreenController::_registerBindings::__l2::<lambda_301f24380ff1da8505d841fdf272fca9>\n{\n  QuizScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"quizscreencontroller-registerbindings-l2-lambda-b22d950e82f3710b33fce59b40fe6367"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#quizscreencontroller-registerbindings-l2-lambda-b22d950e82f3710b33fce59b40fe6367"}},[t._v("#")]),t._v(" "),c("code",[t._v("QuizScreenController::_registerBindings::__l2::<lambda_b22d950e82f3710b33fce59b40fe6367>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QuizScreenController::_registerBindings::__l2::<lambda_b22d950e82f3710b33fce59b40fe6367>\n{\n  QuizScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"quizscreencontroller-registerbindings-l2-lambda-739ba1f0bcea3bf4f0a39a571fec5161"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#quizscreencontroller-registerbindings-l2-lambda-739ba1f0bcea3bf4f0a39a571fec5161"}},[t._v("#")]),t._v(" "),c("code",[t._v("QuizScreenController::_registerBindings::__l2::<lambda_739ba1f0bcea3bf4f0a39a571fec5161>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QuizScreenController::_registerBindings::__l2::<lambda_739ba1f0bcea3bf4f0a39a571fec5161>\n{\n  QuizScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"querytargetcommand"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#querytargetcommand"}},[t._v("#")]),t._v(" "),c("code",[t._v("QueryTargetCommand")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QueryTargetCommand : Command\n{\n  CommandSelector<Actor> mTargets;\n};\n\n")])])]),c("h3",{attrs:{id:"querytargetcommand-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#querytargetcommand-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("QueryTargetCommand_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ QueryTargetCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),c("h3",{attrs:{id:"quartzblockblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#quartzblockblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("QuartzBlockBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj QuartzBlockBlock : RotatedPillarBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"quartzblockblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#quartzblockblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("QuartzBlockBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ QuartzBlockBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])])])}),[],!1,null,null,null);c.default=l.exports}}]);