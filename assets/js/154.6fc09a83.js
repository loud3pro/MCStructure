(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{464:function(t,c,a){"use strict";a.r(c);var e=a(27),o=Object(e.a)({},(function(){var t=this,c=t._self._c;return c("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[c("h1",{attrs:{id:"s-3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#s-3"}},[t._v("#")]),t._v(" S~3")]),t._v(" "),c("h3",{attrs:{id:"stonebuttonblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonebuttonblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("StoneButtonBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StoneButtonBlock : ButtonBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"stonebuttonblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonebuttonblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StoneButtonBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StoneButtonBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"soulsandblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#soulsandblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SoulSandBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SoulSandBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"soulsandblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#soulsandblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SoulSandBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SoulSandBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"stonebrickblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonebrickblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("StoneBrickBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StoneBrickBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"stonebrickblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonebrickblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StoneBrickBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StoneBrickBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"stainedglasspaneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stainedglasspaneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("StainedGlassPaneBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StainedGlassPaneBlock : ThinFenceBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"stainedglasspaneblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stainedglasspaneblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StainedGlassPaneBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StainedGlassPaneBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"sealanternblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sealanternblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SeaLanternBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SeaLanternBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"sealanternblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sealanternblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SeaLanternBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SeaLanternBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"stoneslabblock2"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stoneslabblock2"}},[t._v("#")]),t._v(" "),c("code",[t._v("StoneSlabBlock2")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StoneSlabBlock2 : SlabBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"stoneslabblock2-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stoneslabblock2-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StoneSlabBlock2_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StoneSlabBlock2_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"shulkerboxblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#shulkerboxblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ShulkerBoxBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ShulkerBoxBlock : ChestBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"shulkerboxblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#shulkerboxblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ShulkerBoxBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ShulkerBoxBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),c("h3",{attrs:{id:"structurevoid"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurevoid"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureVoid")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureVoid : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structurevoid-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurevoid-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureVoid_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructureVoid_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"stainedglassblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stainedglassblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("StainedGlassBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) StainedGlassBlock : BlockLegacy\n{\n  bool mDoesDrops;\n  bool mCanBeUsedInCommands;\n};\n\n")])])]),c("h3",{attrs:{id:"stainedglassblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stainedglassblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StainedGlassBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StainedGlassBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StonecutterBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"structureblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureBlock : ActorBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structureblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructureBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),c("h3",{attrs:{id:"strippedlogblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#strippedlogblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("StrippedLogBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StrippedLogBlock : RotatedPillarBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"strippedlogblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#strippedlogblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StrippedLogBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StrippedLogBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"seapickle"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#seapickle"}},[t._v("#")]),t._v(" "),c("code",[t._v("SeaPickle")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SeaPickle : BushBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"seapickle-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#seapickle-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SeaPickle_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SeaPickle_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);\n};\n\n")])])]),c("h3",{attrs:{id:"scaffoldingblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scaffoldingblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScaffoldingBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScaffoldingBlock : HeavyBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scaffoldingblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scaffoldingblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScaffoldingBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ScaffoldingBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  mce::Color *(__fastcall *getDustColor)(HeavyBlock *this, mce::Color *result, const Block *);\n  std::string *(__fastcall *getDustParticleName)(HeavyBlock *this, std::string *result, const Block *);\n  bool (__fastcall *falling)(HeavyBlock *this);\n  void (__fastcall *onLand)(HeavyBlock *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isFreeToFall)(HeavyBlock *this, BlockSource *, const BlockPos *);\n  void (__fastcall *startFalling)(HeavyBlock *this, BlockSource *, const BlockPos *, const Block *, bool);\n};\n\n")])])]),c("h3",{attrs:{id:"stoneslabblock3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stoneslabblock3"}},[t._v("#")]),t._v(" "),c("code",[t._v("StoneSlabBlock3")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StoneSlabBlock3 : SlabBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"stoneslabblock3-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stoneslabblock3-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StoneSlabBlock3_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StoneSlabBlock3_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"stoneslabblock4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stoneslabblock4"}},[t._v("#")]),t._v(" "),c("code",[t._v("StoneSlabBlock4")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StoneSlabBlock4 : SlabBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"stoneslabblock4-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stoneslabblock4-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StoneSlabBlock4_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StoneSlabBlock4_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"smokerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smokerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmokerBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SmokerBlock : FurnaceBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"smokerblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smokerblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmokerBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SmokerBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),c("h3",{attrs:{id:"sweetberrybushblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sweetberrybushblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SweetBerryBushBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SweetBerryBushBlock : BushBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"sweetberrybushblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sweetberrybushblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SweetBerryBushBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SweetBerryBushBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);\n};\n\n")])])]),c("h3",{attrs:{id:"soultorchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#soultorchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SoulTorchBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SoulTorchBlock : TorchBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"soultorchblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#soultorchblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SoulTorchBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SoulTorchBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-airblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-airblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<AirBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<AirBlock>\n{\n  AirBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-airblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-airblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<AirBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<AirBlock>\n{\n  SharedCounter<AirBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-stoneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-stoneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StoneBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StoneBlock>\n{\n  StoneBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-stoneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-stoneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StoneBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StoneBlock>\n{\n  SharedCounter<StoneBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-grassblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-grassblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<GrassBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<GrassBlock>\n{\n  GrassBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-grassblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-grassblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<GrassBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<GrassBlock>\n{\n  SharedCounter<GrassBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-dirtblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-dirtblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<DirtBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<DirtBlock>\n{\n  DirtBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-dirtblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-dirtblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<DirtBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<DirtBlock>\n{\n  SharedCounter<DirtBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-planksblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-planksblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<PlanksBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<PlanksBlock>\n{\n  PlanksBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-planksblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-planksblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<PlanksBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<PlanksBlock>\n{\n  SharedCounter<PlanksBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-sapling"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-sapling"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<Sapling>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<Sapling>\n{\n  Sapling *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-sapling"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-sapling"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<Sapling>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<Sapling>\n{\n  SharedCounter<Sapling> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-bedrockblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-bedrockblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BedrockBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BedrockBlock>\n{\n  BedrockBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-bedrockblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-bedrockblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BedrockBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BedrockBlock>\n{\n  SharedCounter<BedrockBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-liquidblockdynamic"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-liquidblockdynamic"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<LiquidBlockDynamic>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<LiquidBlockDynamic>\n{\n  LiquidBlockDynamic *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-liquidblockdynamic"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-liquidblockdynamic"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<LiquidBlockDynamic>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<LiquidBlockDynamic>\n{\n  SharedCounter<LiquidBlockDynamic> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-liquidblockstatic"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-liquidblockstatic"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<LiquidBlockStatic>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<LiquidBlockStatic>\n{\n  LiquidBlockStatic *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-liquidblockstatic"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-liquidblockstatic"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<LiquidBlockStatic>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<LiquidBlockStatic>\n{\n  SharedCounter<LiquidBlockStatic> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-sandblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-sandblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SandBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SandBlock>\n{\n  SandBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-sandblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-sandblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SandBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SandBlock>\n{\n  SharedCounter<SandBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-gravelblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-gravelblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<GravelBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<GravelBlock>\n{\n  GravelBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-gravelblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-gravelblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<GravelBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<GravelBlock>\n{\n  SharedCounter<GravelBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-oreblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-oreblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<OreBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<OreBlock>\n{\n  OreBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-oreblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-oreblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<OreBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<OreBlock>\n{\n  SharedCounter<OreBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-oldlogblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-oldlogblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<OldLogBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<OldLogBlock>\n{\n  OldLogBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-oldlogblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-oldlogblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<OldLogBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<OldLogBlock>\n{\n  SharedCounter<OldLogBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-oldleafblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-oldleafblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<OldLeafBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<OldLeafBlock>\n{\n  OldLeafBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-oldleafblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-oldleafblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<OldLeafBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<OldLeafBlock>\n{\n  SharedCounter<OldLeafBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-spongeblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-spongeblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SpongeBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SpongeBlock>\n{\n  SpongeBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-spongeblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-spongeblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SpongeBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SpongeBlock>\n{\n  SharedCounter<SpongeBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-glassblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-glassblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<GlassBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<GlassBlock>\n{\n  GlassBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-glassblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-glassblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<GlassBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<GlassBlock>\n{\n  SharedCounter<GlassBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-dispenserblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-dispenserblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<DispenserBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<DispenserBlock>\n{\n  DispenserBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-dispenserblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-dispenserblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<DispenserBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<DispenserBlock>\n{\n  SharedCounter<DispenserBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-sandstoneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-sandstoneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SandStoneBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SandStoneBlock>\n{\n  SandStoneBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-sandstoneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-sandstoneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SandStoneBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SandStoneBlock>\n{\n  SharedCounter<SandStoneBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-noteblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-noteblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<NoteBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<NoteBlock>\n{\n  NoteBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-noteblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-noteblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<NoteBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<NoteBlock>\n{\n  SharedCounter<NoteBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-bedblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-bedblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BedBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BedBlock>\n{\n  BedBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-bedblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-bedblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BedBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BedBlock>\n{\n  SharedCounter<BedBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-poweredrailblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-poweredrailblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<PoweredRailBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<PoweredRailBlock>\n{\n  PoweredRailBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-poweredrailblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-poweredrailblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<PoweredRailBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<PoweredRailBlock>\n{\n  SharedCounter<PoweredRailBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-detectorrailblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-detectorrailblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<DetectorRailBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<DetectorRailBlock>\n{\n  DetectorRailBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-detectorrailblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-detectorrailblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<DetectorRailBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<DetectorRailBlock>\n{\n  SharedCounter<DetectorRailBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-pistonblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-pistonblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<PistonBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<PistonBlock>\n{\n  PistonBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-pistonblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-pistonblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<PistonBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<PistonBlock>\n{\n  SharedCounter<PistonBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-webblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-webblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<WebBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<WebBlock>\n{\n  WebBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-webblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-webblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<WebBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<WebBlock>\n{\n  SharedCounter<WebBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-tallgrass"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-tallgrass"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<TallGrass>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<TallGrass>\n{\n  TallGrass *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-tallgrass"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-tallgrass"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<TallGrass>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<TallGrass>\n{\n  SharedCounter<TallGrass> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-deadbush"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-deadbush"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<DeadBush>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<DeadBush>\n{\n  DeadBush *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-deadbush"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-deadbush"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<DeadBush>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<DeadBush>\n{\n  SharedCounter<DeadBush> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-pistonarmblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-pistonarmblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<PistonArmBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<PistonArmBlock>\n{\n  PistonArmBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-pistonarmblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-pistonarmblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<PistonArmBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<PistonArmBlock>\n{\n  SharedCounter<PistonArmBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-clothblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-clothblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ClothBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ClothBlock>\n{\n  ClothBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-clothblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-clothblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ClothBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ClothBlock>\n{\n  SharedCounter<ClothBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-flowerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-flowerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<FlowerBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<FlowerBlock>\n{\n  FlowerBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-flowerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-flowerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<FlowerBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<FlowerBlock>\n{\n  SharedCounter<FlowerBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-mushroomblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-mushroomblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<MushroomBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<MushroomBlock>\n{\n  MushroomBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-mushroomblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-mushroomblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<MushroomBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<MushroomBlock>\n{\n  SharedCounter<MushroomBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-metalblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-metalblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<MetalBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<MetalBlock>\n{\n  MetalBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-metalblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-metalblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<MetalBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<MetalBlock>\n{\n  SharedCounter<MetalBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-stoneslabblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-stoneslabblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StoneSlabBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StoneSlabBlock>\n{\n  StoneSlabBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-stoneslabblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-stoneslabblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StoneSlabBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StoneSlabBlock>\n{\n  SharedCounter<StoneSlabBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-tntblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-tntblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<TntBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<TntBlock>\n{\n  TntBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-tntblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-tntblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<TntBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<TntBlock>\n{\n  SharedCounter<TntBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-bookshelfblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-bookshelfblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BookshelfBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BookshelfBlock>\n{\n  BookshelfBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-bookshelfblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-bookshelfblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BookshelfBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BookshelfBlock>\n{\n  SharedCounter<BookshelfBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-obsidianblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-obsidianblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ObsidianBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ObsidianBlock>\n{\n  ObsidianBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-obsidianblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-obsidianblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ObsidianBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ObsidianBlock>\n{\n  SharedCounter<ObsidianBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-torchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-torchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<TorchBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<TorchBlock>\n{\n  TorchBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-torchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-torchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<TorchBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<TorchBlock>\n{\n  SharedCounter<TorchBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-mobspawnerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-mobspawnerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<MobSpawnerBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<MobSpawnerBlock>\n{\n  MobSpawnerBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-mobspawnerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-mobspawnerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<MobSpawnerBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<MobSpawnerBlock>\n{\n  SharedCounter<MobSpawnerBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-stairblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-stairblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StairBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StairBlock>\n{\n  StairBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-chestblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-chestblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ChestBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ChestBlock>\n{\n  ChestBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-chestblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-chestblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ChestBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ChestBlock>\n{\n  SharedCounter<ChestBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-redstonewireblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-redstonewireblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<RedStoneWireBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<RedStoneWireBlock>\n{\n  RedStoneWireBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-redstonewireblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-redstonewireblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<RedStoneWireBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<RedStoneWireBlock>\n{\n  SharedCounter<RedStoneWireBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-workbenchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-workbenchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<WorkbenchBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<WorkbenchBlock>\n{\n  WorkbenchBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-workbenchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-workbenchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<WorkbenchBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<WorkbenchBlock>\n{\n  SharedCounter<WorkbenchBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-cropblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-cropblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CropBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CropBlock>\n{\n  CropBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-cropblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-cropblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CropBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CropBlock>\n{\n  SharedCounter<CropBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-farmblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-farmblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<FarmBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<FarmBlock>\n{\n  FarmBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-farmblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-farmblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<FarmBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<FarmBlock>\n{\n  SharedCounter<FarmBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-furnaceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-furnaceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<FurnaceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<FurnaceBlock>\n{\n  FurnaceBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-furnaceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-furnaceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<FurnaceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<FurnaceBlock>\n{\n  SharedCounter<FurnaceBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-signblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-signblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SignBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SignBlock>\n{\n  SignBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-signblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-signblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SignBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SignBlock>\n{\n  SharedCounter<SignBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-doorblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-doorblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<DoorBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<DoorBlock>\n{\n  DoorBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-doorblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-doorblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<DoorBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<DoorBlock>\n{\n  SharedCounter<DoorBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-ladderblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-ladderblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<LadderBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<LadderBlock>\n{\n  LadderBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-ladderblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-ladderblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<LadderBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<LadderBlock>\n{\n  SharedCounter<LadderBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-railblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-railblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<RailBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<RailBlock>\n{\n  RailBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-railblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-railblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<RailBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<RailBlock>\n{\n  SharedCounter<RailBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-leverblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-leverblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<LeverBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<LeverBlock>\n{\n  LeverBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-leverblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-leverblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<LeverBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<LeverBlock>\n{\n  SharedCounter<LeverBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-pressureplateblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-pressureplateblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<PressurePlateBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<PressurePlateBlock>\n{\n  PressurePlateBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-pressureplateblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-pressureplateblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<PressurePlateBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<PressurePlateBlock>\n{\n  SharedCounter<PressurePlateBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-redstoneoreblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-redstoneoreblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<RedStoneOreBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<RedStoneOreBlock>\n{\n  RedStoneOreBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-redstoneoreblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-redstoneoreblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<RedStoneOreBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<RedStoneOreBlock>\n{\n  SharedCounter<RedStoneOreBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-redstonetorchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-redstonetorchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<RedstoneTorchBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<RedstoneTorchBlock>\n{\n  RedstoneTorchBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-redstonetorchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-redstonetorchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<RedstoneTorchBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<RedstoneTorchBlock>\n{\n  SharedCounter<RedstoneTorchBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-stonebuttonblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-stonebuttonblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StoneButtonBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StoneButtonBlock>\n{\n  StoneButtonBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-topsnowblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-topsnowblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<TopSnowBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<TopSnowBlock>\n{\n  TopSnowBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-topsnowblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-topsnowblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<TopSnowBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<TopSnowBlock>\n{\n  SharedCounter<TopSnowBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-iceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-iceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<IceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<IceBlock>\n{\n  IceBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-iceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-iceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<IceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<IceBlock>\n{\n  SharedCounter<IceBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-snowblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-snowblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SnowBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SnowBlock>\n{\n  SnowBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-snowblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-snowblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SnowBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SnowBlock>\n{\n  SharedCounter<SnowBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-cactusblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-cactusblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CactusBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CactusBlock>\n{\n  CactusBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-cactusblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-cactusblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CactusBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CactusBlock>\n{\n  SharedCounter<CactusBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-clayblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-clayblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ClayBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ClayBlock>\n{\n  ClayBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-clayblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-clayblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ClayBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ClayBlock>\n{\n  SharedCounter<ClayBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-reedblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-reedblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ReedBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ReedBlock>\n{\n  ReedBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-reedblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-reedblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ReedBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ReedBlock>\n{\n  SharedCounter<ReedBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-jukeboxblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-jukeboxblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<JukeboxBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<JukeboxBlock>\n{\n  JukeboxBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-jukeboxblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-jukeboxblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<JukeboxBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<JukeboxBlock>\n{\n  SharedCounter<JukeboxBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-fenceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-fenceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<FenceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<FenceBlock>\n{\n  FenceBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-fenceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-fenceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<FenceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<FenceBlock>\n{\n  SharedCounter<FenceBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-pumpkinblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-pumpkinblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<PumpkinBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<PumpkinBlock>\n{\n  PumpkinBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-pumpkinblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-pumpkinblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<PumpkinBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<PumpkinBlock>\n{\n  SharedCounter<PumpkinBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-netherrackblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-netherrackblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<NetherrackBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<NetherrackBlock>\n{\n  NetherrackBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-netherrackblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-netherrackblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<NetherrackBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<NetherrackBlock>\n{\n  SharedCounter<NetherrackBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-soulsandblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-soulsandblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SoulSandBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SoulSandBlock>\n{\n  SoulSandBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-soulsandblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-soulsandblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SoulSandBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SoulSandBlock>\n{\n  SharedCounter<SoulSandBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-lightgemblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-lightgemblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<LightGemBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<LightGemBlock>\n{\n  LightGemBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-lightgemblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-lightgemblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<LightGemBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<LightGemBlock>\n{\n  SharedCounter<LightGemBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-portalblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-portalblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<PortalBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<PortalBlock>\n{\n  PortalBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-portalblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-portalblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<PortalBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<PortalBlock>\n{\n  SharedCounter<PortalBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-cakeblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-cakeblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CakeBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CakeBlock>\n{\n  CakeBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-cakeblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-cakeblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CakeBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CakeBlock>\n{\n  SharedCounter<CakeBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-repeaterblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-repeaterblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<RepeaterBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<RepeaterBlock>\n{\n  RepeaterBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-repeaterblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-repeaterblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<RepeaterBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<RepeaterBlock>\n{\n  SharedCounter<RepeaterBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-invisibleblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-invisibleblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<InvisibleBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<InvisibleBlock>\n{\n  InvisibleBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-invisibleblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-invisibleblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<InvisibleBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<InvisibleBlock>\n{\n  SharedCounter<InvisibleBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-trapdoorblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-trapdoorblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<TrapDoorBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<TrapDoorBlock>\n{\n  TrapDoorBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-trapdoorblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-trapdoorblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<TrapDoorBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<TrapDoorBlock>\n{\n  SharedCounter<TrapDoorBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-monstereggblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-monstereggblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<MonsterEggBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<MonsterEggBlock>\n{\n  MonsterEggBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-monstereggblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-monstereggblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<MonsterEggBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<MonsterEggBlock>\n{\n  SharedCounter<MonsterEggBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-stonebrickblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-stonebrickblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StoneBrickBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StoneBrickBlock>\n{\n  StoneBrickBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-stonebrickblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-stonebrickblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StoneBrickBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StoneBrickBlock>\n{\n  SharedCounter<StoneBrickBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-hugemushroomblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-hugemushroomblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<HugeMushroomBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<HugeMushroomBlock>\n{\n  HugeMushroomBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-hugemushroomblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-hugemushroomblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<HugeMushroomBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<HugeMushroomBlock>\n{\n  SharedCounter<HugeMushroomBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-thinfenceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-thinfenceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ThinFenceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ThinFenceBlock>\n{\n  ThinFenceBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-thinfenceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-thinfenceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ThinFenceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ThinFenceBlock>\n{\n  SharedCounter<ThinFenceBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-melonblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-melonblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<MelonBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<MelonBlock>\n{\n  MelonBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-melonblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-melonblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<MelonBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<MelonBlock>\n{\n  SharedCounter<MelonBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-stemblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-stemblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StemBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StemBlock>\n{\n  StemBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-stemblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-stemblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StemBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StemBlock>\n{\n  SharedCounter<StemBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-vineblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-vineblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<VineBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<VineBlock>\n{\n  VineBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-vineblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-vineblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<VineBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<VineBlock>\n{\n  SharedCounter<VineBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-fencegateblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-fencegateblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<FenceGateBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<FenceGateBlock>\n{\n  FenceGateBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-fencegateblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-fencegateblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<FenceGateBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<FenceGateBlock>\n{\n  SharedCounter<FenceGateBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-myceliumblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-myceliumblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<MyceliumBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<MyceliumBlock>\n{\n  MyceliumBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-myceliumblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-myceliumblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<MyceliumBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<MyceliumBlock>\n{\n  SharedCounter<MyceliumBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-waterlilyblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-waterlilyblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<WaterlilyBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<WaterlilyBlock>\n{\n  WaterlilyBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-waterlilyblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-waterlilyblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<WaterlilyBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<WaterlilyBlock>\n{\n  SharedCounter<WaterlilyBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-netherwartblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-netherwartblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<NetherWartBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<NetherWartBlock>\n{\n  NetherWartBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-netherwartblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-netherwartblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<NetherWartBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<NetherWartBlock>\n{\n  SharedCounter<NetherWartBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-enchantingtableblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-enchantingtableblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<EnchantingTableBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<EnchantingTableBlock>\n{\n  EnchantingTableBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-enchantingtableblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-enchantingtableblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<EnchantingTableBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<EnchantingTableBlock>\n{\n  SharedCounter<EnchantingTableBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-brewingstandblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-brewingstandblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BrewingStandBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BrewingStandBlock>\n{\n  BrewingStandBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-brewingstandblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-brewingstandblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BrewingStandBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BrewingStandBlock>\n{\n  SharedCounter<BrewingStandBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-cauldronblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-cauldronblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CauldronBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CauldronBlock>\n{\n  CauldronBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-cauldronblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-cauldronblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CauldronBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CauldronBlock>\n{\n  SharedCounter<CauldronBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-endportalblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-endportalblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<EndPortalBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<EndPortalBlock>\n{\n  EndPortalBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-endportalblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-endportalblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<EndPortalBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<EndPortalBlock>\n{\n  SharedCounter<EndPortalBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-endportalframeblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-endportalframeblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<EndPortalFrameBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<EndPortalFrameBlock>\n{\n  EndPortalFrameBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-endportalframeblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-endportalframeblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<EndPortalFrameBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<EndPortalFrameBlock>\n{\n  SharedCounter<EndPortalFrameBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-dragoneggblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-dragoneggblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<DragonEggBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<DragonEggBlock>\n{\n  DragonEggBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-dragoneggblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-dragoneggblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<DragonEggBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<DragonEggBlock>\n{\n  SharedCounter<DragonEggBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-redstonelampblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-redstonelampblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<RedstoneLampBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<RedstoneLampBlock>\n{\n  RedstoneLampBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-redstonelampblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-redstonelampblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<RedstoneLampBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<RedstoneLampBlock>\n{\n  SharedCounter<RedstoneLampBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-dropperblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-dropperblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<DropperBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<DropperBlock>\n{\n  DropperBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-dropperblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-dropperblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<DropperBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<DropperBlock>\n{\n  SharedCounter<DropperBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-activatorrailblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-activatorrailblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ActivatorRailBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ActivatorRailBlock>\n{\n  ActivatorRailBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-activatorrailblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-activatorrailblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ActivatorRailBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ActivatorRailBlock>\n{\n  SharedCounter<ActivatorRailBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-cocoablock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-cocoablock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CocoaBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CocoaBlock>\n{\n  CocoaBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-cocoablock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-cocoablock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CocoaBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CocoaBlock>\n{\n  SharedCounter<CocoaBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-enderchestblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-enderchestblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<EnderChestBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<EnderChestBlock>\n{\n  EnderChestBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-enderchestblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-enderchestblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<EnderChestBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<EnderChestBlock>\n{\n  SharedCounter<EnderChestBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-tripwirehookblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-tripwirehookblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<TripWireHookBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<TripWireHookBlock>\n{\n  TripWireHookBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-tripwirehookblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-tripwirehookblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<TripWireHookBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<TripWireHookBlock>\n{\n  SharedCounter<TripWireHookBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-tripwireblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-tripwireblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<TripWireBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<TripWireBlock>\n{\n  TripWireBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-tripwireblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-tripwireblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<TripWireBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<TripWireBlock>\n{\n  SharedCounter<TripWireBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-commandblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-commandblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CommandBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CommandBlock>\n{\n  CommandBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-commandblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-commandblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CommandBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CommandBlock>\n{\n  SharedCounter<CommandBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-beaconblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-beaconblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BeaconBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BeaconBlock>\n{\n  BeaconBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-beaconblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-beaconblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BeaconBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BeaconBlock>\n{\n  SharedCounter<BeaconBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-wallblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-wallblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<WallBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<WallBlock>\n{\n  WallBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-wallblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-wallblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<WallBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<WallBlock>\n{\n  SharedCounter<WallBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-flowerpotblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-flowerpotblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<FlowerPotBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<FlowerPotBlock>\n{\n  FlowerPotBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-flowerpotblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-flowerpotblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<FlowerPotBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<FlowerPotBlock>\n{\n  SharedCounter<FlowerPotBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-carrotblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-carrotblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CarrotBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CarrotBlock>\n{\n  CarrotBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-carrotblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-carrotblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CarrotBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CarrotBlock>\n{\n  SharedCounter<CarrotBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-potatoblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-potatoblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<PotatoBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<PotatoBlock>\n{\n  PotatoBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-potatoblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-potatoblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<PotatoBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<PotatoBlock>\n{\n  SharedCounter<PotatoBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-woodbuttonblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-woodbuttonblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<WoodButtonBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<WoodButtonBlock>\n{\n  WoodButtonBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-woodbuttonblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-woodbuttonblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<WoodButtonBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<WoodButtonBlock>\n{\n  SharedCounter<WoodButtonBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-skullblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-skullblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SkullBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SkullBlock>\n{\n  SkullBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-skullblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-skullblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SkullBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SkullBlock>\n{\n  SharedCounter<SkullBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-anvilblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-anvilblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<AnvilBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<AnvilBlock>\n{\n  AnvilBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-anvilblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-anvilblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<AnvilBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<AnvilBlock>\n{\n  SharedCounter<AnvilBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-weightedpressureplateblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-weightedpressureplateblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<WeightedPressurePlateBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<WeightedPressurePlateBlock>\n{\n  WeightedPressurePlateBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-weightedpressureplateblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-weightedpressureplateblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<WeightedPressurePlateBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<WeightedPressurePlateBlock>\n{\n  SharedCounter<WeightedPressurePlateBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-comparatorblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-comparatorblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ComparatorBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ComparatorBlock>\n{\n  ComparatorBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-comparatorblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-comparatorblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ComparatorBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ComparatorBlock>\n{\n  SharedCounter<ComparatorBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-daylightdetectorblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-daylightdetectorblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<DaylightDetectorBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<DaylightDetectorBlock>\n{\n  DaylightDetectorBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-daylightdetectorblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-daylightdetectorblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<DaylightDetectorBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<DaylightDetectorBlock>\n{\n  SharedCounter<DaylightDetectorBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-redstoneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-redstoneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<RedstoneBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<RedstoneBlock>\n{\n  RedstoneBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-redstoneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-redstoneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<RedstoneBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<RedstoneBlock>\n{\n  SharedCounter<RedstoneBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-hopperblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-hopperblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<HopperBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<HopperBlock>\n{\n  HopperBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-hopperblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-hopperblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<HopperBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<HopperBlock>\n{\n  SharedCounter<HopperBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-quartzblockblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-quartzblockblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<QuartzBlockBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<QuartzBlockBlock>\n{\n  QuartzBlockBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-quartzblockblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-quartzblockblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<QuartzBlockBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<QuartzBlockBlock>\n{\n  SharedCounter<QuartzBlockBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-woodslabblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-woodslabblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<WoodSlabBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<WoodSlabBlock>\n{\n  WoodSlabBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-woodslabblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-woodslabblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<WoodSlabBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<WoodSlabBlock>\n{\n  SharedCounter<WoodSlabBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-coloredblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-coloredblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ColoredBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ColoredBlock>\n{\n  ColoredBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-coloredblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-coloredblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ColoredBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ColoredBlock>\n{\n  SharedCounter<ColoredBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-stainedglasspaneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-stainedglasspaneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StainedGlassPaneBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StainedGlassPaneBlock>\n{\n  StainedGlassPaneBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-stainedglasspaneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-stainedglasspaneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StainedGlassPaneBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StainedGlassPaneBlock>\n{\n  SharedCounter<StainedGlassPaneBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-newleafblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-newleafblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<NewLeafBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<NewLeafBlock>\n{\n  NewLeafBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-newleafblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-newleafblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<NewLeafBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<NewLeafBlock>\n{\n  SharedCounter<NewLeafBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-newlogblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-newlogblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<NewLogBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<NewLogBlock>\n{\n  NewLogBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-newlogblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-newlogblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<NewLogBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<NewLogBlock>\n{\n  SharedCounter<NewLogBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-slimeblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-slimeblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SlimeBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SlimeBlock>\n{\n  SlimeBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-slimeblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-slimeblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SlimeBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SlimeBlock>\n{\n  SharedCounter<SlimeBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-prismarineblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-prismarineblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<PrismarineBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<PrismarineBlock>\n{\n  PrismarineBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-prismarineblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-prismarineblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<PrismarineBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<PrismarineBlock>\n{\n  SharedCounter<PrismarineBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-sealanternblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-sealanternblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SeaLanternBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SeaLanternBlock>\n{\n  SeaLanternBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-sealanternblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-sealanternblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SeaLanternBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SeaLanternBlock>\n{\n  SharedCounter<SeaLanternBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-hayblockblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-hayblockblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<HayBlockBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<HayBlockBlock>\n{\n  HayBlockBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-hayblockblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-hayblockblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<HayBlockBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<HayBlockBlock>\n{\n  SharedCounter<HayBlockBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-woolcarpetblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-woolcarpetblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<WoolCarpetBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<WoolCarpetBlock>\n{\n  WoolCarpetBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-woolcarpetblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-woolcarpetblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<WoolCarpetBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<WoolCarpetBlock>\n{\n  SharedCounter<WoolCarpetBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-doubleplantblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-doubleplantblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<DoublePlantBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<DoublePlantBlock>\n{\n  DoublePlantBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-doubleplantblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-doubleplantblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<DoublePlantBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<DoublePlantBlock>\n{\n  SharedCounter<DoublePlantBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-bannerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-bannerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BannerBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BannerBlock>\n{\n  BannerBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-bannerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-bannerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BannerBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BannerBlock>\n{\n  SharedCounter<BannerBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-stoneslabblock2"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-stoneslabblock2"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StoneSlabBlock2>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StoneSlabBlock2>\n{\n  StoneSlabBlock2 *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-stoneslabblock2"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-stoneslabblock2"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StoneSlabBlock2>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StoneSlabBlock2>\n{\n  SharedCounter<StoneSlabBlock2> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-grasspathblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-grasspathblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<GrassPathBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<GrassPathBlock>\n{\n  GrassPathBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-grasspathblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-grasspathblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<GrassPathBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<GrassPathBlock>\n{\n  SharedCounter<GrassPathBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-itemframeblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-itemframeblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ItemFrameBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ItemFrameBlock>\n{\n  ItemFrameBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-itemframeblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-itemframeblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ItemFrameBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ItemFrameBlock>\n{\n  SharedCounter<ItemFrameBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-chorusflowerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-chorusflowerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ChorusFlowerBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ChorusFlowerBlock>\n{\n  ChorusFlowerBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-chorusflowerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-chorusflowerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ChorusFlowerBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ChorusFlowerBlock>\n{\n  SharedCounter<ChorusFlowerBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-undyedshulkerboxblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-undyedshulkerboxblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<UndyedShulkerBoxBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<UndyedShulkerBoxBlock>\n{\n  UndyedShulkerBoxBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-undyedshulkerboxblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-undyedshulkerboxblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<UndyedShulkerBoxBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<UndyedShulkerBoxBlock>\n{\n  SharedCounter<UndyedShulkerBoxBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-frostediceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-frostediceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<FrostedIceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<FrostedIceBlock>\n{\n  FrostedIceBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-frostediceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-frostediceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<FrostedIceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<FrostedIceBlock>\n{\n  SharedCounter<FrostedIceBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-endrodblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-endrodblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<EndRodBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<EndRodBlock>\n{\n  EndRodBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-endrodblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-endrodblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<EndRodBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<EndRodBlock>\n{\n  SharedCounter<EndRodBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-borderblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-borderblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BorderBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BorderBlock>\n{\n  BorderBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-borderblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-borderblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BorderBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BorderBlock>\n{\n  SharedCounter<BorderBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-magmablock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-magmablock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<MagmaBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<MagmaBlock>\n{\n  MagmaBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-magmablock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-magmablock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<MagmaBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<MagmaBlock>\n{\n  SharedCounter<MagmaBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-rotatedpillarblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-rotatedpillarblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<RotatedPillarBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<RotatedPillarBlock>\n{\n  RotatedPillarBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-rotatedpillarblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-rotatedpillarblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<RotatedPillarBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<RotatedPillarBlock>\n{\n  SharedCounter<RotatedPillarBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-structurevoid"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-structurevoid"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StructureVoid>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StructureVoid>\n{\n  StructureVoid *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-structurevoid"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-structurevoid"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StructureVoid>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StructureVoid>\n{\n  SharedCounter<StructureVoid> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-shulkerboxblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-shulkerboxblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ShulkerBoxBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ShulkerBoxBlock>\n{\n  ShulkerBoxBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-shulkerboxblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-shulkerboxblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ShulkerBoxBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ShulkerBoxBlock>\n{\n  SharedCounter<ShulkerBoxBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-glazedterracottablock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-glazedterracottablock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<GlazedTerracottaBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<GlazedTerracottaBlock>\n{\n  GlazedTerracottaBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-glazedterracottablock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-glazedterracottablock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<GlazedTerracottaBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<GlazedTerracottaBlock>\n{\n  SharedCounter<GlazedTerracottaBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-concreteblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-concreteblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ConcreteBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ConcreteBlock>\n{\n  ConcreteBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-concreteblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-concreteblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ConcreteBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ConcreteBlock>\n{\n  SharedCounter<ConcreteBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-concretepowderblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-concretepowderblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ConcretePowderBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ConcretePowderBlock>\n{\n  ConcretePowderBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-concretepowderblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-concretepowderblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ConcretePowderBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ConcretePowderBlock>\n{\n  SharedCounter<ConcretePowderBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-chorusplantblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-chorusplantblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ChorusPlantBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ChorusPlantBlock>\n{\n  ChorusPlantBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-chorusplantblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-chorusplantblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ChorusPlantBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ChorusPlantBlock>\n{\n  SharedCounter<ChorusPlantBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-stainedglassblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-stainedglassblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StainedGlassBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StainedGlassBlock>\n{\n  StainedGlassBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-stainedglassblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-stainedglassblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StainedGlassBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StainedGlassBlock>\n{\n  SharedCounter<StainedGlassBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-camerablock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-camerablock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CameraBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CameraBlock>\n{\n  CameraBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-camerablock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-camerablock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CameraBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CameraBlock>\n{\n  SharedCounter<CameraBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-podzolblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-podzolblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<PodzolBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<PodzolBlock>\n{\n  PodzolBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-podzolblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-podzolblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<PodzolBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<PodzolBlock>\n{\n  SharedCounter<PodzolBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-beetrootblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-beetrootblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BeetrootBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BeetrootBlock>\n{\n  BeetrootBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-beetrootblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-beetrootblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BeetrootBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BeetrootBlock>\n{\n  SharedCounter<BeetrootBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-stonecutterblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-stonecutterblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StonecutterBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StonecutterBlock>\n{\n  StonecutterBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-stonecutterblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-stonecutterblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StonecutterBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StonecutterBlock>\n{\n  SharedCounter<StonecutterBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-netherreactorblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-netherreactorblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<NetherReactorBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<NetherReactorBlock>\n{\n  NetherReactorBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-netherreactorblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-netherreactorblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<NetherReactorBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<NetherReactorBlock>\n{\n  SharedCounter<NetherReactorBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-movingblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-movingblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<MovingBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<MovingBlock>\n{\n  MovingBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-movingblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-movingblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<MovingBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<MovingBlock>\n{\n  SharedCounter<MovingBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-observerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-observerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ObserverBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ObserverBlock>\n{\n  ObserverBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-observerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-observerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ObserverBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ObserverBlock>\n{\n  SharedCounter<ObserverBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-structureblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-structureblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StructureBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StructureBlock>\n{\n  StructureBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-structureblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-structureblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StructureBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StructureBlock>\n{\n  SharedCounter<StructureBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-strippedlogblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-strippedlogblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StrippedLogBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StrippedLogBlock>\n{\n  StrippedLogBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-strippedlogblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-strippedlogblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StrippedLogBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StrippedLogBlock>\n{\n  SharedCounter<StrippedLogBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-blueiceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-blueiceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BlueIceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BlueIceBlock>\n{\n  BlueIceBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-blueiceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-blueiceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BlueIceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BlueIceBlock>\n{\n  SharedCounter<BlueIceBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-fireblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-fireblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<FireBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<FireBlock>\n{\n  FireBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-fireblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-fireblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<FireBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<FireBlock>\n{\n  SharedCounter<FireBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-chemistrytableblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-chemistrytableblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ChemistryTableBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ChemistryTableBlock>\n{\n  ChemistryTableBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-chemistrytableblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-chemistrytableblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ChemistryTableBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ChemistryTableBlock>\n{\n  SharedCounter<ChemistryTableBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-underwatertorchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-underwatertorchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<UnderwaterTorchBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<UnderwaterTorchBlock>\n{\n  UnderwaterTorchBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-underwatertorchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-underwatertorchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<UnderwaterTorchBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<UnderwaterTorchBlock>\n{\n  SharedCounter<UnderwaterTorchBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-chemicalheatblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-chemicalheatblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ChemicalHeatBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ChemicalHeatBlock>\n{\n  ChemicalHeatBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-chemicalheatblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-chemicalheatblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ChemicalHeatBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ChemicalHeatBlock>\n{\n  SharedCounter<ChemicalHeatBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-coloredtorchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-coloredtorchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ColoredTorchBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ColoredTorchBlock>\n{\n  ColoredTorchBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-coloredtorchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-coloredtorchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ColoredTorchBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ColoredTorchBlock>\n{\n  SharedCounter<ColoredTorchBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-modblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-modblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ModBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ModBlock>\n{\n  ModBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-modblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-modblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ModBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ModBlock>\n{\n  SharedCounter<ModBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-elementblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-elementblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ElementBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ElementBlock>\n{\n  ElementBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-elementblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-elementblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ElementBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ElementBlock>\n{\n  SharedCounter<ElementBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-coral"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-coral"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<Coral>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<Coral>\n{\n  Coral *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-coral"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-coral"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<Coral>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<Coral>\n{\n  SharedCounter<Coral> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-coralblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-coralblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CoralBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CoralBlock>\n{\n  CoralBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-coralblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-coralblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CoralBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CoralBlock>\n{\n  SharedCounter<CoralBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-coralfan"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-coralfan"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CoralFan>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CoralFan>\n{\n  CoralFan *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-coralfan"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-coralfan"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CoralFan>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CoralFan>\n{\n  SharedCounter<CoralFan> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-coralfanhang"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-coralfanhang"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CoralFanHang>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CoralFanHang>\n{\n  CoralFanHang *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-coralfanhang"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-coralfanhang"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CoralFanHang>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CoralFanHang>\n{\n  SharedCounter<CoralFanHang> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-kelpblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-kelpblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<KelpBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<KelpBlock>\n{\n  KelpBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-kelpblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-kelpblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<KelpBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<KelpBlock>\n{\n  SharedCounter<KelpBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-driedkelpblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-driedkelpblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<DriedKelpBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<DriedKelpBlock>\n{\n  DriedKelpBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-driedkelpblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-driedkelpblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<DriedKelpBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<DriedKelpBlock>\n{\n  SharedCounter<DriedKelpBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-seagrass"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-seagrass"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SeaGrass>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SeaGrass>\n{\n  SeaGrass *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-seagrass"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-seagrass"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SeaGrass>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SeaGrass>\n{\n  SharedCounter<SeaGrass> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-seapickle"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-seapickle"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SeaPickle>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SeaPickle>\n{\n  SeaPickle *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-seapickle"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-seapickle"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SeaPickle>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SeaPickle>\n{\n  SharedCounter<SeaPickle> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-conduitblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-conduitblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ConduitBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ConduitBlock>\n{\n  ConduitBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-conduitblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-conduitblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ConduitBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ConduitBlock>\n{\n  SharedCounter<ConduitBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-bubblecolumnblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-bubblecolumnblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BubbleColumnBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BubbleColumnBlock>\n{\n  BubbleColumnBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-bubblecolumnblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-bubblecolumnblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BubbleColumnBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BubbleColumnBlock>\n{\n  SharedCounter<BubbleColumnBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-turtleeggblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-turtleeggblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<TurtleEggBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<TurtleEggBlock>\n{\n  TurtleEggBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-turtleeggblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-turtleeggblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<TurtleEggBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<TurtleEggBlock>\n{\n  SharedCounter<TurtleEggBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-barrierblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-barrierblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BarrierBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BarrierBlock>\n{\n  BarrierBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-barrierblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-barrierblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BarrierBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BarrierBlock>\n{\n  SharedCounter<BarrierBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-scaffoldingblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-scaffoldingblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ScaffoldingBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ScaffoldingBlock>\n{\n  ScaffoldingBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-scaffoldingblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-scaffoldingblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ScaffoldingBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ScaffoldingBlock>\n{\n  SharedCounter<ScaffoldingBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-bambooblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-bambooblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BambooBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BambooBlock>\n{\n  BambooBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-bambooblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-bambooblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BambooBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BambooBlock>\n{\n  SharedCounter<BambooBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-bamboosapling"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-bamboosapling"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BambooSapling>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BambooSapling>\n{\n  BambooSapling *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-bamboosapling"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-bamboosapling"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BambooSapling>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BambooSapling>\n{\n  SharedCounter<BambooSapling> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-stoneslabblock3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-stoneslabblock3"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StoneSlabBlock3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StoneSlabBlock3>\n{\n  StoneSlabBlock3 *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-stoneslabblock3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-stoneslabblock3"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StoneSlabBlock3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StoneSlabBlock3>\n{\n  SharedCounter<StoneSlabBlock3> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-stoneslabblock4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-stoneslabblock4"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<StoneSlabBlock4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<StoneSlabBlock4>\n{\n  StoneSlabBlock4 *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-stoneslabblock4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-stoneslabblock4"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<StoneSlabBlock4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<StoneSlabBlock4>\n{\n  SharedCounter<StoneSlabBlock4> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-lecternblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-lecternblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<LecternBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<LecternBlock>\n{\n  LecternBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-lecternblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-lecternblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<LecternBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<LecternBlock>\n{\n  SharedCounter<LecternBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-grindstoneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-grindstoneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<GrindstoneBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<GrindstoneBlock>\n{\n  GrindstoneBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-grindstoneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-grindstoneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<GrindstoneBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<GrindstoneBlock>\n{\n  SharedCounter<GrindstoneBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-blastfurnaceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-blastfurnaceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BlastFurnaceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BlastFurnaceBlock>\n{\n  BlastFurnaceBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-blastfurnaceblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-blastfurnaceblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BlastFurnaceBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BlastFurnaceBlock>\n{\n  SharedCounter<BlastFurnaceBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-smokerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-smokerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SmokerBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SmokerBlock>\n{\n  SmokerBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-smokerblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-smokerblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SmokerBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SmokerBlock>\n{\n  SharedCounter<SmokerBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-cartographytableblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-cartographytableblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CartographyTableBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CartographyTableBlock>\n{\n  CartographyTableBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-cartographytableblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-cartographytableblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CartographyTableBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CartographyTableBlock>\n{\n  SharedCounter<CartographyTableBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-smithingtableblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-smithingtableblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SmithingTableBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SmithingTableBlock>\n{\n  SmithingTableBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-smithingtableblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-smithingtableblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SmithingTableBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SmithingTableBlock>\n{\n  SharedCounter<SmithingTableBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-barrelblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-barrelblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BarrelBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BarrelBlock>\n{\n  BarrelBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-barrelblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-barrelblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BarrelBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BarrelBlock>\n{\n  SharedCounter<BarrelBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-loomblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-loomblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<LoomBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<LoomBlock>\n{\n  LoomBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-loomblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-loomblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<LoomBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<LoomBlock>\n{\n  SharedCounter<LoomBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-bellblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-bellblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BellBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BellBlock>\n{\n  BellBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-bellblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-bellblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BellBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BellBlock>\n{\n  SharedCounter<BellBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-sweetberrybushblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-sweetberrybushblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SweetBerryBushBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SweetBerryBushBlock>\n{\n  SweetBerryBushBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-sweetberrybushblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-sweetberrybushblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SweetBerryBushBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SweetBerryBushBlock>\n{\n  SharedCounter<SweetBerryBushBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-lanternblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-lanternblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<LanternBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<LanternBlock>\n{\n  LanternBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-lanternblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-lanternblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<LanternBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<LanternBlock>\n{\n  SharedCounter<LanternBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-campfireblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-campfireblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CampfireBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CampfireBlock>\n{\n  CampfireBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-campfireblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-campfireblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CampfireBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CampfireBlock>\n{\n  SharedCounter<CampfireBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-jigsawblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-jigsawblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<JigsawBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<JigsawBlock>\n{\n  JigsawBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-jigsawblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-jigsawblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<JigsawBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<JigsawBlock>\n{\n  SharedCounter<JigsawBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-woodblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-woodblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<WoodBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<WoodBlock>\n{\n  WoodBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-woodblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-woodblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<WoodBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<WoodBlock>\n{\n  SharedCounter<WoodBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-composterblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-composterblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ComposterBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ComposterBlock>\n{\n  ComposterBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-composterblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-composterblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ComposterBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ComposterBlock>\n{\n  SharedCounter<ComposterBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-lightblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-lightblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<LightBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<LightBlock>\n{\n  LightBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-lightblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-lightblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<LightBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<LightBlock>\n{\n  SharedCounter<LightBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-witherroseblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-witherroseblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<WitherRoseBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<WitherRoseBlock>\n{\n  WitherRoseBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-witherroseblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-witherroseblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<WitherRoseBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<WitherRoseBlock>\n{\n  SharedCounter<WitherRoseBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-beehiveblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-beehiveblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BeehiveBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BeehiveBlock>\n{\n  BeehiveBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-beehiveblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-beehiveblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BeehiveBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BeehiveBlock>\n{\n  SharedCounter<BeehiveBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-honeyblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-honeyblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<HoneyBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<HoneyBlock>\n{\n  HoneyBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-honeyblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-honeyblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<HoneyBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<HoneyBlock>\n{\n  SharedCounter<HoneyBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-honeycombblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-honeycombblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<HoneycombBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<HoneycombBlock>\n{\n  HoneycombBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-honeycombblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-honeycombblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<HoneycombBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<HoneycombBlock>\n{\n  SharedCounter<HoneycombBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-lodestoneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-lodestoneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<LodestoneBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<LodestoneBlock>\n{\n  LodestoneBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-lodestoneblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-lodestoneblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<LodestoneBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<LodestoneBlock>\n{\n  SharedCounter<LodestoneBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-fungusstem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-fungusstem"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<FungusStem>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<FungusStem>\n{\n  FungusStem *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-fungusstem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-fungusstem"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<FungusStem>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<FungusStem>\n{\n  SharedCounter<FungusStem> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-netherfungusblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-netherfungusblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<NetherFungusBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<NetherFungusBlock>\n{\n  NetherFungusBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-netherfungusblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-netherfungusblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<NetherFungusBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<NetherFungusBlock>\n{\n  SharedCounter<NetherFungusBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-weepingvinesblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-weepingvinesblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<WeepingVinesBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<WeepingVinesBlock>\n{\n  WeepingVinesBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-weepingvinesblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-weepingvinesblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<WeepingVinesBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<WeepingVinesBlock>\n{\n  SharedCounter<WeepingVinesBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-nyliumblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-nyliumblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<NyliumBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<NyliumBlock>\n{\n  NyliumBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-nyliumblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-nyliumblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<NyliumBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<NyliumBlock>\n{\n  SharedCounter<NyliumBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-bluefireblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-bluefireblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<BlueFireBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<BlueFireBlock>\n{\n  BlueFireBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-bluefireblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-bluefireblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<BlueFireBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<BlueFireBlock>\n{\n  SharedCounter<BlueFireBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-nethersprouts"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-nethersprouts"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<NetherSprouts>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<NetherSprouts>\n{\n  NetherSprouts *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-nethersprouts"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-nethersprouts"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<NetherSprouts>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<NetherSprouts>\n{\n  SharedCounter<NetherSprouts> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-targetblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-targetblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<TargetBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<TargetBlock>\n{\n  TargetBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-targetblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-targetblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<TargetBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<TargetBlock>\n{\n  SharedCounter<TargetBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-slabblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-slabblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SlabBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SlabBlock>\n{\n  SlabBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-slabblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-slabblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SlabBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SlabBlock>\n{\n  SharedCounter<SlabBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-soultorchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-soultorchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<SoulTorchBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<SoulTorchBlock>\n{\n  SoulTorchBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-soultorchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-soultorchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<SoulTorchBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<SoulTorchBlock>\n{\n  SharedCounter<SoulTorchBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-respawnanchorblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-respawnanchorblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<RespawnAnchorBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<RespawnAnchorBlock>\n{\n  RespawnAnchorBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-gildedblackstone"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-gildedblackstone"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<GildedBlackstone>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<GildedBlackstone>\n{\n  GildedBlackstone *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-gildedblackstone"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-gildedblackstone"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<GildedBlackstone>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<GildedBlackstone>\n{\n  SharedCounter<GildedBlackstone> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-chainblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-chainblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<ChainBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<ChainBlock>\n{\n  ChainBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-chainblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-chainblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<ChainBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<ChainBlock>\n{\n  SharedCounter<ChainBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-twistingvinesblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-twistingvinesblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<TwistingVinesBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<TwistingVinesBlock>\n{\n  TwistingVinesBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-twistingvinesblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-twistingvinesblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<TwistingVinesBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<TwistingVinesBlock>\n{\n  SharedCounter<TwistingVinesBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-cryingobsidianblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-cryingobsidianblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CryingObsidianBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CryingObsidianBlock>\n{\n  CryingObsidianBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-cryingobsidianblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-cryingobsidianblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CryingObsidianBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CryingObsidianBlock>\n{\n  SharedCounter<CryingObsidianBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"skullblock-checkmobspawn-l17-lambda-b4b567f629a037a9035c572fb1fba35e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#skullblock-checkmobspawn-l17-lambda-b4b567f629a037a9035c572fb1fba35e"}},[t._v("#")]),t._v(" "),c("code",[t._v("SkullBlock::checkMobSpawn::__l17::<lambda_b4b567f629a037a9035c572fb1fba35e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SkullBlock::checkMobSpawn::__l17::<lambda_b4b567f629a037a9035c572fb1fba35e>\n{\n  const BlockPos *pos;\n  Mob **mob;\n  BlockSource *region;\n};\n\n")])])]),c("h3",{attrs:{id:"skullblock-checkmobspawn-l11-lambda-67539536fae5ffef79f3a0de553d19bc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#skullblock-checkmobspawn-l11-lambda-67539536fae5ffef79f3a0de553d19bc"}},[t._v("#")]),t._v(" "),c("code",[t._v("SkullBlock::checkMobSpawn::__l11::<lambda_67539536fae5ffef79f3a0de553d19bc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SkullBlock::checkMobSpawn::__l11::<lambda_67539536fae5ffef79f3a0de553d19bc>\n{\n  const BlockPos *pos;\n  BlockSource *region;\n};\n\n")])])]),c("h3",{attrs:{id:"sapling-isnearflowerblock-l2-lambda-356b45de45567e8e6fa659ccfaec2036"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sapling-isnearflowerblock-l2-lambda-356b45de45567e8e6fa659ccfaec2036"}},[t._v("#")]),t._v(" "),c("code",[t._v("Sapling::_isNearFlowerBlock::__l2::<lambda_356b45de45567e8e6fa659ccfaec2036>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Sapling::_isNearFlowerBlock::__l2::<lambda_356b45de45567e8e6fa659ccfaec2036>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"stringprintstream"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stringprintstream"}},[t._v("#")]),t._v(" "),c("code",[t._v("StringPrintStream")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StringPrintStream : PrintStream\n{\n  std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > out;\n};\n\n")])])]),c("h3",{attrs:{id:"stringprintstream-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stringprintstream-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StringPrintStream_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StringPrintStream_vtbl\n{\n  void (__fastcall *~PrintStream)(PrintStream *this);\n  void (__fastcall *print)(PrintStream *this, const std::string *);\n};\n\n")])])]),c("h3",{attrs:{id:"subtractivelightinfo"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#subtractivelightinfo"}},[t._v("#")]),t._v(" "),c("code",[t._v("SubtractiveLightInfo")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SubtractiveLightInfo\n{\n  $52A32AF023F0868BF2C19D5A22A86A92 ___u0;\n};\n\n")])])]),c("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1"}},[t._v("#")]),t._v(" "),c("code",[t._v("SubChunkBlockStoragePaletted<1,1>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) SubChunkBlockStoragePaletted<1,1> : ISubChunkBlockStoragePaletted\n{\n  unsigned int mBlocks[128];\n  AppendOnlyAtomicLookupTable<Block const *,2> mPalette;\n  bool mModDataFlag;\n};\n\n")])])]),c("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2"}},[t._v("#")]),t._v(" "),c("code",[t._v("SubChunkBlockStoragePaletted<2,2>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) SubChunkBlockStoragePaletted<2,2> : ISubChunkBlockStoragePaletted\n{\n  unsigned int mBlocks[256];\n  AppendOnlyAtomicLookupTable<Block const *,4> mPalette;\n  bool mModDataFlag;\n};\n\n")])])]),c("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3"}},[t._v("#")]),t._v(" "),c("code",[t._v("SubChunkBlockStoragePaletted<3,3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) SubChunkBlockStoragePaletted<3,3> : ISubChunkBlockStoragePaletted\n{\n  unsigned int mBlocks[410];\n  AppendOnlyAtomicLookupTable<Block const *,8> mPalette;\n  bool mModDataFlag;\n};\n\n")])])]),c("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4"}},[t._v("#")]),t._v(" "),c("code",[t._v("SubChunkBlockStoragePaletted<4,4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) SubChunkBlockStoragePaletted<4,4> : ISubChunkBlockStoragePaletted\n{\n  unsigned int mBlocks[512];\n  AppendOnlyAtomicLookupTable<Block const *,16> mPalette;\n  bool mModDataFlag;\n};\n\n")])])]),c("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5"}},[t._v("#")]),t._v(" "),c("code",[t._v("SubChunkBlockStoragePaletted<5,5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) SubChunkBlockStoragePaletted<5,5> : ISubChunkBlockStoragePaletted\n{\n  unsigned int mBlocks[683];\n  AppendOnlyAtomicLookupTable<Block const *,32> mPalette;\n  bool mModDataFlag;\n};\n\n")])])]),c("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6"}},[t._v("#")]),t._v(" "),c("code",[t._v("SubChunkBlockStoragePaletted<6,6>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) SubChunkBlockStoragePaletted<6,6> : ISubChunkBlockStoragePaletted\n{\n  unsigned int mBlocks[820];\n  AppendOnlyAtomicLookupTable<Block const *,64> mPalette;\n  bool mModDataFlag;\n};\n\n")])])]),c("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8"}},[t._v("#")]),t._v(" "),c("code",[t._v("SubChunkBlockStoragePaletted<8,8>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) SubChunkBlockStoragePaletted<8,8> : ISubChunkBlockStoragePaletted\n{\n  unsigned int mBlocks[1024];\n  AppendOnlyAtomicLookupTable<Block const *,256> mPalette;\n  bool mModDataFlag;\n};\n\n")])])]),c("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16"}},[t._v("#")]),t._v(" "),c("code",[t._v("SubChunkBlockStoragePaletted<16,16>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) SubChunkBlockStoragePaletted<16,16> : ISubChunkBlockStoragePaletted\n{\n  unsigned int mBlocks[2048];\n  AppendOnlyAtomicLookupTable<Block const *,4096> mPalette;\n  bool mModDataFlag;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-0812bcb2507b32093a0a61069d8a46e3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-0812bcb2507b32093a0a61069d8a46e3"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_0812bcb2507b32093a0a61069d8a46e3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_0812bcb2507b32093a0a61069d8a46e3>\n{\n  std::function<ScatterParams & __cdecl(AutomaticFeatureRules::AutomaticFeatureRule *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-adc91ec67211fa85faa0bdd4dd420227"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-adc91ec67211fa85faa0bdd4dd420227"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_adc91ec67211fa85faa0bdd4dd420227>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_adc91ec67211fa85faa0bdd4dd420227>\n{\n  std::function<ScatterParams & __cdecl(AutomaticFeatureRules::AutomaticFeatureRule *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-b408264c7c65667b62fdd391893bda86"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-b408264c7c65667b62fdd391893bda86"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_b408264c7c65667b62fdd391893bda86>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_b408264c7c65667b62fdd391893bda86>\n{\n  std::function<ScatterParams & __cdecl(AutomaticFeatureRules::AutomaticFeatureRule *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-ef7741f99428e89231f1ac3107cd92ce"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-ef7741f99428e89231f1ac3107cd92ce"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_ef7741f99428e89231f1ac3107cd92ce>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_ef7741f99428e89231f1ac3107cd92ce>\n{\n  std::function<ScatterParams & __cdecl(AutomaticFeatureRules::AutomaticFeatureRule *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-aa996b390096f3a8fdec0bcbde8e973d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-aa996b390096f3a8fdec0bcbde8e973d"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_aa996b390096f3a8fdec0bcbde8e973d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_aa996b390096f3a8fdec0bcbde8e973d>\n{\n  std::function<ScatterParams & __cdecl(AutomaticFeatureRules::AutomaticFeatureRule *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l3-lambda-aeacb45e4360de140d50033a3d23444e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l3-lambda-aeacb45e4360de140d50033a3d23444e"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l3::<lambda_aeacb45e4360de140d50033a3d23444e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l3::<lambda_aeacb45e4360de140d50033a3d23444e>\n{\n  std::function<ScatterParams & __cdecl(AutomaticFeatureRules::AutomaticFeatureRule *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l3-lambda-895ea9aa2378ef8b84ab5139aa899cbe"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l3-lambda-895ea9aa2378ef8b84ab5139aa899cbe"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l3::<lambda_895ea9aa2378ef8b84ab5139aa899cbe>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l3::<lambda_895ea9aa2378ef8b84ab5139aa899cbe>\n{\n  std::function<ScatterParams & __cdecl(AutomaticFeatureRules::AutomaticFeatureRule *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-102185838b4f232d0d9c272cce6292a1"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-102185838b4f232d0d9c272cce6292a1"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_102185838b4f232d0d9c272cce6292a1>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_102185838b4f232d0d9c272cce6292a1>\n{\n  std::function<ScatterParams::CoordinateRange & __cdecl(AutomaticFeatureRules::AutomaticFeatureRule *)> coordAccessor;\n  const HashedString name;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-21cbaf2d1049bdf761022c22dee3fa11"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-21cbaf2d1049bdf761022c22dee3fa11"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_21cbaf2d1049bdf761022c22dee3fa11>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_21cbaf2d1049bdf761022c22dee3fa11>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-686c7cb4abbd310594d514a7a14ae3aa"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-686c7cb4abbd310594d514a7a14ae3aa"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_686c7cb4abbd310594d514a7a14ae3aa>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_686c7cb4abbd310594d514a7a14ae3aa>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-8b159dec1ab4da716db4d16a1e125a65"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-8b159dec1ab4da716db4d16a1e125a65"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_8b159dec1ab4da716db4d16a1e125a65>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_8b159dec1ab4da716db4d16a1e125a65>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-fb412aee829706126aa27a66e2340659"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-fb412aee829706126aa27a66e2340659"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_fb412aee829706126aa27a66e2340659>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_fb412aee829706126aa27a66e2340659>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-d1bfadf98c6ff6fe553f53858657333c"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-d1bfadf98c6ff6fe553f53858657333c"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_d1bfadf98c6ff6fe553f53858657333c>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_d1bfadf98c6ff6fe553f53858657333c>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"simpletreecanopy"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy"}},[t._v("#")]),t._v(" "),c("code",[t._v("SimpleTreeCanopy")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SimpleTreeCanopy : ITreeCanopy\n{\n  int mMinOffset;\n  int mMaxOffset;\n  int mMinWidth;\n  int mRise;\n  int mRun;\n  BlockDescriptor mLeafBlockDescriptor;\n  TreeHelper::AttachableDecoration mDecoration;\n  std::vector<ChanceInformation> mVariationChancePerLayer;\n};\n\n")])])]),c("h3",{attrs:{id:"simpletreecanopy-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SimpleTreeCanopy_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SimpleTreeCanopy_vtbl\n{\n  void (__fastcall *~ITreeCanopy)(ITreeCanopy *this);\n  std::optional<BlockPos> *(__fastcall *placeCanopy)(ITreeCanopy *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *, const TreeHelper::TreeParams *);\n  bool (__fastcall *parseTreeCanopy)(ITreeCanopy *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n};\n\n")])])]),c("h3",{attrs:{id:"sprucetreecanopy"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy"}},[t._v("#")]),t._v(" "),c("code",[t._v("SpruceTreeCanopy")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SpruceTreeCanopy : ITreeCanopy\n{\n  IntRange mLowerOffset;\n  IntRange mUpperOffset;\n  IntRange mRadius;\n  BlockDescriptor mLeafBlockDescriptor;\n};\n\n")])])]),c("h3",{attrs:{id:"sprucetreecanopy-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SpruceTreeCanopy_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SpruceTreeCanopy_vtbl\n{\n  void (__fastcall *~ITreeCanopy)(ITreeCanopy *this);\n  std::optional<BlockPos> *(__fastcall *placeCanopy)(ITreeCanopy *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *, const TreeHelper::TreeParams *);\n  bool (__fastcall *parseTreeCanopy)(ITreeCanopy *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n};\n\n")])])]),c("h3",{attrs:{id:"simpletreetrunk"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#simpletreetrunk"}},[t._v("#")]),t._v(" "),c("code",[t._v("SimpleTreeTrunk")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SimpleTreeTrunk : ITreeTrunk\n{\n  int mSubmergedDepth;\n  IntRange mHeight;\n  IntRange mHeightModifier;\n  BlockDescriptor mTrunkBlockDescriptor;\n  TreeHelper::AttachableDecoration mDecoration;\n};\n\n")])])]),c("h3",{attrs:{id:"simpletreetrunk-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#simpletreetrunk-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SimpleTreeTrunk_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SimpleTreeTrunk_vtbl\n{\n  void (__fastcall *~ITreeTrunk)(ITreeTrunk *this);\n  std::optional<BlockPos> *(__fastcall *placeTrunk)(ITreeTrunk *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *, const TreeHelper::TreeParams *, const ITreeCanopy *);\n  bool (__fastcall *parse)(ITreeTrunk *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n};\n\n")])])]),c("h3",{attrs:{id:"scatterfeature"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterfeature"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterFeature")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) ScatterFeature : IFeature\n{\n  WeakRefT<FeatureRefTraits> mFeatureToScatter;\n  ScatterParams mScatterParams;\n  bool mProjectInputToFloor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterfeature-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterfeature-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterFeature_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ScatterFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n};\n\n")])])]),c("h3",{attrs:{id:"searchfeature"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#searchfeature"}},[t._v("#")]),t._v(" "),c("code",[t._v("SearchFeature")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) SearchFeature : IFeature\n{\n  WeakRefT<FeatureRefTraits> mFeatureRef;\n  AABB mSearchVolume;\n  SearchFeature::SearchAxis mSearchAxis;\n  int mRequiredSuccesses;\n};\n\n")])])]),c("h3",{attrs:{id:"searchfeature-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#searchfeature-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SearchFeature_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SearchFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n};\n\n")])])]),c("h3",{attrs:{id:"singleblockfeature"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#singleblockfeature"}},[t._v("#")]),t._v(" "),c("code",[t._v("SingleBlockFeature")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SingleBlockFeature : IFeature\n{\n  BlockDescriptor mBlock;\n  bool mEnforcePlacementRules;\n  bool mEnforceSurvivabilityRules;\n  bool mAutoRotate;\n  bool mEnforceAttachmentRules;\n  int mMinAttachedSides;\n  std::vector<BlockDescriptor> mTopMayAttachTo;\n  std::vector<BlockDescriptor> mBottomMayAttachTo;\n  std::vector<BlockDescriptor> mNorthMayAttachTo;\n  std::vector<BlockDescriptor> mEastMayAttachTo;\n  std::vector<BlockDescriptor> mSouthMayAttachTo;\n  std::vector<BlockDescriptor> mWestMayAttachTo;\n  std::vector<BlockDescriptor> mAllMayAttachTo;\n  std::vector<BlockDescriptor> mSidesMayAttachTo;\n  std::vector<BlockDescriptor> mMayReplace;\n  std::vector<BlockDescriptor> mMayPlaceOn;\n};\n\n")])])]),c("h3",{attrs:{id:"singleblockfeature-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#singleblockfeature-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SingleBlockFeature_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SingleBlockFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n};\n\n")])])]),c("h3",{attrs:{id:"structuretemplatefeature"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structuretemplatefeature"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureTemplateFeature")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureTemplateFeature : IFeature\n{\n  StructureTemplate *mStructure;\n  int mAdjustmentRadius;\n  Direction::Type mFaceDirection;\n  std::vector<std::unique_ptr<IStructureConstraint>> mConstraints;\n};\n\n")])])]),c("h3",{attrs:{id:"structuretemplatefeature-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structuretemplatefeature-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureTemplateFeature_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructureTemplateFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-6697fcc338a28a2a66475f1030b55eb2"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-6697fcc338a28a2a66475f1030b55eb2"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_6697fcc338a28a2a66475f1030b55eb2>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_6697fcc338a28a2a66475f1030b55eb2>\n{\n  std::function<ScatterParams & __cdecl(FeatureLoading::ConcreteFeatureHolder<ScatterFeature> *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-369c4269327dd66eb89c3f306f673098"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-369c4269327dd66eb89c3f306f673098"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_369c4269327dd66eb89c3f306f673098>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_369c4269327dd66eb89c3f306f673098>\n{\n  std::function<ScatterParams & __cdecl(FeatureLoading::ConcreteFeatureHolder<ScatterFeature> *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-29be4b69395e49f372ab7ee3e3861ea8"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-29be4b69395e49f372ab7ee3e3861ea8"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_29be4b69395e49f372ab7ee3e3861ea8>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_29be4b69395e49f372ab7ee3e3861ea8>\n{\n  std::function<ScatterParams & __cdecl(FeatureLoading::ConcreteFeatureHolder<ScatterFeature> *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-dbb9e2db8c522c4dd6b7016d0b2de0dd"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-dbb9e2db8c522c4dd6b7016d0b2de0dd"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_dbb9e2db8c522c4dd6b7016d0b2de0dd>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_dbb9e2db8c522c4dd6b7016d0b2de0dd>\n{\n  std::function<ScatterParams & __cdecl(FeatureLoading::ConcreteFeatureHolder<ScatterFeature> *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-db78833ebc823bb660a1786f4a9dc20f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-db78833ebc823bb660a1786f4a9dc20f"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_db78833ebc823bb660a1786f4a9dc20f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_db78833ebc823bb660a1786f4a9dc20f>\n{\n  std::function<ScatterParams & __cdecl(FeatureLoading::ConcreteFeatureHolder<ScatterFeature> *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l3-lambda-0457dbd857bf74e1044a46b87cf44a13"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l3-lambda-0457dbd857bf74e1044a46b87cf44a13"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l3::<lambda_0457dbd857bf74e1044a46b87cf44a13>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l3::<lambda_0457dbd857bf74e1044a46b87cf44a13>\n{\n  std::function<ScatterParams & __cdecl(FeatureLoading::ConcreteFeatureHolder<ScatterFeature> *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l3-lambda-6ad2e3a1f50cbd1daf19b6f4b1b7d80b"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l3-lambda-6ad2e3a1f50cbd1daf19b6f4b1b7d80b"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l3::<lambda_6ad2e3a1f50cbd1daf19b6f4b1b7d80b>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l3::<lambda_6ad2e3a1f50cbd1daf19b6f4b1b7d80b>\n{\n  std::function<ScatterParams & __cdecl(FeatureLoading::ConcreteFeatureHolder<ScatterFeature> *)> scatterAccessor;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-74ac550b64edf02e4da438a098fcacbc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-74ac550b64edf02e4da438a098fcacbc"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_74ac550b64edf02e4da438a098fcacbc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_74ac550b64edf02e4da438a098fcacbc>\n{\n  std::function<ScatterParams::CoordinateRange & __cdecl(FeatureLoading::ConcreteFeatureHolder<ScatterFeature> *)> coordAccessor;\n  const HashedString name;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-aeb0075ee3c02cb1c6b4dc667e40d095"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-aeb0075ee3c02cb1c6b4dc667e40d095"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_aeb0075ee3c02cb1c6b4dc667e40d095>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_aeb0075ee3c02cb1c6b4dc667e40d095>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-e369566461023c183400dc583203e8e8"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-e369566461023c183400dc583203e8e8"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_e369566461023c183400dc583203e8e8>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_e369566461023c183400dc583203e8e8>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-3fd1d93ba142a5f6fdb37a96cadf2ed2"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-3fd1d93ba142a5f6fdb37a96cadf2ed2"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_3fd1d93ba142a5f6fdb37a96cadf2ed2>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_3fd1d93ba142a5f6fdb37a96cadf2ed2>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-e8a00d27dbfc8e954d6c48d82e17a609"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-e8a00d27dbfc8e954d6c48d82e17a609"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_e8a00d27dbfc8e954d6c48d82e17a609>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_e8a00d27dbfc8e954d6c48d82e17a609>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-buildschema-l2-lambda-61601f14b4a1fa382565cb431a3a9c30"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-buildschema-l2-lambda-61601f14b4a1fa382565cb431a3a9c30"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::_buildSchema::__l2::<lambda_61601f14b4a1fa382565cb431a3a9c30>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::_buildSchema::__l2::<lambda_61601f14b4a1fa382565cb431a3a9c30>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structurestart"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurestart"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureStart")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureStart\n{\n  StructureStart_vtbl *__vftable /*VFT*/;\n  BoundingBox boundingBox;\n  int chunkX;\n  int chunkZ;\n  std::vector<std::unique_ptr<StructurePiece>> pieces;\n};\n\n")])])]),c("h3",{attrs:{id:"structurestart-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurestart-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureStart_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructureStart_vtbl\n{\n  void (__fastcall *~StructureStart)(StructureStart *this);\n  bool (__fastcall *postProcess)(StructureStart *this, BlockSource *, Random *, const BoundingBox *);\n  bool (__fastcall *isValid)(StructureStart *this);\n  StructureFeatureType (__fastcall *getType)(StructureStart *this);\n};\n\n")])])]),c("h3",{attrs:{id:"structurefeature"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurefeature"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureFeature")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(4)) StructureFeature\n{\n  StructureFeature_vtbl *__vftable /*VFT*/;\n  std::unordered_map<ChunkPos,std::unique_ptr<StructureStart>> cachedStructures;\n  std::shared_mutex cacheMutex;\n  std::unordered_set<ChunkPos> visitedPositions;\n  SpinLock visitedPositionsMutex;\n  unsigned int mRadius;\n  const BiomeSource *mLastBiomeSource;\n  int mLastXCenterTownChunk;\n  int mLastZCenterTownChunk;\n  int mRandomInt1;\n  int mRandomInt2;\n  int mRandomInt3;\n  int mRandomInt4;\n  std::mutex mCreateBlueprintsMutex;\n  std::condition_variable mBlueprintWaitVar;\n  std::atomic<int> mActiveBlueprintCreateCount;\n  std::atomic<bool> mBlueprintsFinished;\n};\n\n")])])]),c("h3",{attrs:{id:"structurefeature-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurefeature-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureFeature_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructureFeature_vtbl\n{\n  void (__fastcall *~StructureFeature)(StructureFeature *this);\n  bool (__fastcall *postProcess)(StructureFeature *this, BlockSource *, Random *, int, int);\n  bool (__fastcall *getNearestGeneratedFeature)(StructureFeature *this, Dimension *, BiomeSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *isFeatureChunk)(StructureFeature *this, const BiomeSource *, Random *, const ChunkPos *, unsigned int);\n  std::unique_ptr<StructureStart> *(__fastcall *createStructureStart)(StructureFeature *this, std::unique_ptr<StructureStart> *result, Dimension *, BiomeSource *, Random *, const ChunkPos *);\n  StructureStart *(__fastcall *getStructureAt)(StructureFeature *this, int, int, int);\n  std::vector<BlockPos> *(__fastcall *getGuesstimatedFeaturePositions)(StructureFeature *this, std::vector<BlockPos> *result);\n};\n\n")])])]),c("h3",{attrs:{id:"structurehelpers"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurehelpers"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureHelpers")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureHelpers\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structuremanager-loadplacementqueue-l2-lambda-15a6796dd03535f8c563237a40a8a391"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structuremanager-loadplacementqueue-l2-lambda-15a6796dd03535f8c563237a40a8a391"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureManager::loadPlacementQueue::__l2::<lambda_15a6796dd03535f8c563237a40a8a391>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureManager::loadPlacementQueue::__l2::<lambda_15a6796dd03535f8c563237a40a8a391>\n{\n  StructureManager *const __this;\n  Level *level;\n  Dimension *dim;\n};\n\n")])])]),c("h3",{attrs:{id:"structurefeature-generatehardcodedmobspawns-l2-lambda-76a5cb87f28859d827010015848cdbdd"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurefeature-generatehardcodedmobspawns-l2-lambda-76a5cb87f28859d827010015848cdbdd"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureFeature::generateHardcodedMobSpawns::__l2::<lambda_76a5cb87f28859d827010015848cdbdd>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureFeature::generateHardcodedMobSpawns::__l2::<lambda_76a5cb87f28859d827010015848cdbdd>\n{\n  BoundingBox *bb;\n  LevelChunk *lc;\n};\n\n")])])]),c("h3",{attrs:{id:"structurefeature-postprocess-l13-lambda-0c2d594d928e035ca9cca2bbda13c6d1"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurefeature-postprocess-l13-lambda-0c2d594d928e035ca9cca2bbda13c6d1"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureFeature::postProcess::__l13::<lambda_0c2d594d928e035ca9cca2bbda13c6d1>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureFeature::postProcess::__l13::<lambda_0c2d594d928e035ca9cca2bbda13c6d1>\n{\n  bool *postProcessApplied;\n  BlockSource *region;\n  Random *random;\n  BoundingBox *bb;\n};\n\n")])])]),c("h3",{attrs:{id:"structurecornermodeutils-findcornerblocks-l2-lambda-d421c17110b9d2c83deb2c3cc9564f05"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurecornermodeutils-findcornerblocks-l2-lambda-d421c17110b9d2c83deb2c3cc9564f05"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureCornerModeUtils::findCornerBlocks::__l2::<lambda_d421c17110b9d2c83deb2c3cc9564f05>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureCornerModeUtils::findCornerBlocks::__l2::<lambda_d421c17110b9d2c83deb2c3cc9564f05>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolactorpredicatealwaystrue"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolactorpredicatealwaystrue"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolActorPredicateAlwaysTrue")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructurePoolActorPredicateAlwaysTrue : IStructurePoolActorPredicate\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolactorpredicatealwaystrue-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolactorpredicatealwaystrue-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolActorPredicateAlwaysTrue_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructurePoolActorPredicateAlwaysTrue_vtbl\n{\n  void (__fastcall *~IStructurePoolActorPredicate)(IStructurePoolActorPredicate *this);\n  bool (__fastcall *test)(IStructurePoolActorPredicate *this, const std::string *);\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolactorpredicateactormatch"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolactorpredicateactormatch"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolActorPredicateActorMatch")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructurePoolActorPredicateActorMatch : IStructurePoolActorPredicate\n{\n  const std::string mActor;\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolactorpredicateactormatch-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolactorpredicateactormatch-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolActorPredicateActorMatch_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructurePoolActorPredicateActorMatch_vtbl\n{\n  void (__fastcall *~IStructurePoolActorPredicate)(IStructurePoolActorPredicate *this);\n  bool (__fastcall *test)(IStructurePoolActorPredicate *this, const std::string *);\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicatealwaystrue"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicatealwaystrue"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateAlwaysTrue")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructurePoolBlockPredicateAlwaysTrue : IStructurePoolBlockPredicate\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicatealwaystrue-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicatealwaystrue-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateAlwaysTrue_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructurePoolBlockPredicateAlwaysTrue_vtbl\n{\n  void (__fastcall *~IStructurePoolBlockPredicate)(IStructurePoolBlockPredicate *this);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const BlockPos *, const BlockPos *, Random *);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const Block *, Random *);\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicateblockmatch"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicateblockmatch"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateBlockMatch")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructurePoolBlockPredicateBlockMatch : IStructurePoolBlockPredicate\n{\n  const Block *mBlock;\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicateblockmatch-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicateblockmatch-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateBlockMatch_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructurePoolBlockPredicateBlockMatch_vtbl\n{\n  void (__fastcall *~IStructurePoolBlockPredicate)(IStructurePoolBlockPredicate *this);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const BlockPos *, const BlockPos *, Random *);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const Block *, Random *);\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicatestatematch"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicatestatematch"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateStateMatch")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructurePoolBlockPredicateStateMatch : IStructurePoolBlockPredicate\n{\n  const Block *mBlock;\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicatestatematch-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicatestatematch-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateStateMatch_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructurePoolBlockPredicateStateMatch_vtbl\n{\n  void (__fastcall *~IStructurePoolBlockPredicate)(IStructurePoolBlockPredicate *this);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const BlockPos *, const BlockPos *, Random *);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const Block *, Random *);\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicateblockmatchrandom"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicateblockmatchrandom"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateBlockMatchRandom")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) StructurePoolBlockPredicateBlockMatchRandom : IStructurePoolBlockPredicate\n{\n  const Block *mBlock;\n  const float mProbability;\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicateblockmatchrandom-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicateblockmatchrandom-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateBlockMatchRandom_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructurePoolBlockPredicateBlockMatchRandom_vtbl\n{\n  void (__fastcall *~IStructurePoolBlockPredicate)(IStructurePoolBlockPredicate *this);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const BlockPos *, const BlockPos *, Random *);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const Block *, Random *);\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicatestatematchrandom"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicatestatematchrandom"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateStateMatchRandom")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) StructurePoolBlockPredicateStateMatchRandom : IStructurePoolBlockPredicate\n{\n  const Block *mBlock;\n  const float mProbability;\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicatestatematchrandom-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicatestatematchrandom-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateStateMatchRandom_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructurePoolBlockPredicateStateMatchRandom_vtbl\n{\n  void (__fastcall *~IStructurePoolBlockPredicate)(IStructurePoolBlockPredicate *this);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const BlockPos *, const BlockPos *, Random *);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const Block *, Random *);\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicatelinearposition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicatelinearposition"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateLinearPosition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructurePoolBlockPredicateLinearPosition : IStructurePoolBlockPredicate\n{\n  const float mMinChance;\n  const float mMaxChance;\n  const int mMinDist;\n  const int mMaxDist;\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicatelinearposition-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicatelinearposition-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateLinearPosition_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructurePoolBlockPredicateLinearPosition_vtbl\n{\n  void (__fastcall *~IStructurePoolBlockPredicate)(IStructurePoolBlockPredicate *this);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const BlockPos *, const BlockPos *, Random *);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const Block *, Random *);\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicateaxisalignedposition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicateaxisalignedposition"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateAxisAlignedPosition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) StructurePoolBlockPredicateAxisAlignedPosition : IStructurePoolBlockPredicate\n{\n  const float mMinChance;\n  const float mMaxChance;\n  const int mMinDist;\n  const int mMaxDist;\n  const unsigned __int8 mAxis;\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblockpredicateaxisalignedposition-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblockpredicateaxisalignedposition-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockPredicateAxisAlignedPosition_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructurePoolBlockPredicateAxisAlignedPosition_vtbl\n{\n  void (__fastcall *~IStructurePoolBlockPredicate)(IStructurePoolBlockPredicate *this);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const BlockPos *, const BlockPos *, Random *);\n  bool (__fastcall *test)(IStructurePoolBlockPredicate *this, const Block *, Random *);\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblocktagpredicatealwaystrue"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblocktagpredicatealwaystrue"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockTagPredicateAlwaysTrue")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructurePoolBlockTagPredicateAlwaysTrue : IStructurePoolBlockTagPredicate\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblocktagpredicatealwaystrue-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblocktagpredicatealwaystrue-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockTagPredicateAlwaysTrue_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructurePoolBlockTagPredicateAlwaysTrue_vtbl\n{\n  void (__fastcall *~IStructurePoolBlockTagPredicate)(IStructurePoolBlockTagPredicate *this);\n  bool (__fastcall *test)(IStructurePoolBlockTagPredicate *this, const Block *, const CompoundTag *);\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblocktagpredicateblocktagmatch"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblocktagpredicateblocktagmatch"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockTagPredicateBlockTagMatch")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructurePoolBlockTagPredicateBlockTagMatch : IStructurePoolBlockTagPredicate\n{\n  const Block *mBlock;\n  const CompoundTag *mTag;\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblocktagpredicateblocktagmatch-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblocktagpredicateblocktagmatch-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockTagPredicateBlockTagMatch_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructurePoolBlockTagPredicateBlockTagMatch_vtbl\n{\n  void (__fastcall *~IStructurePoolBlockTagPredicate)(IStructurePoolBlockTagPredicate *this);\n  bool (__fastcall *test)(IStructurePoolBlockTagPredicate *this, const Block *, const CompoundTag *);\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblocktagpredicateblocktagstringmatches"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblocktagpredicateblocktagstringmatches"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockTagPredicateBlockTagStringMatches")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructurePoolBlockTagPredicateBlockTagStringMatches : IStructurePoolBlockTagPredicate\n{\n  const Block *mBlock;\n  const std::string mTagKey;\n  const std::string mTagValue;\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolblocktagpredicateblocktagstringmatches-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolblocktagpredicateblocktagstringmatches-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolBlockTagPredicateBlockTagStringMatches_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructurePoolBlockTagPredicateBlockTagStringMatches_vtbl\n{\n  void (__fastcall *~IStructurePoolBlockTagPredicate)(IStructurePoolBlockTagPredicate *this);\n  bool (__fastcall *test)(IStructurePoolBlockTagPredicate *this, const Block *, const CompoundTag *);\n};\n\n")])])]),c("h3",{attrs:{id:"structurepoolelement-gettemplate-l2-lambda-1a973c56dbe31fc5f9ab5e1e998eaab8"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structurepoolelement-gettemplate-l2-lambda-1a973c56dbe31fc5f9ab5e1e998eaab8"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructurePoolElement::_getTemplate::__l2::<lambda_1a973c56dbe31fc5f9ab5e1e998eaab8>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructurePoolElement::_getTemplate::__l2::<lambda_1a973c56dbe31fc5f9ab5e1e998eaab8>\n{\n  const StructurePoolElement *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structuretemplate-placenextblocksegmentinworld-l20-lambda-48c17ca5fc4f95e30535757e8d9844e6"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structuretemplate-placenextblocksegmentinworld-l20-lambda-48c17ca5fc4f95e30535757e8d9844e6"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureTemplate::_placeNextBlockSegmentInWorld::__l20::<lambda_48c17ca5fc4f95e30535757e8d9844e6>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureTemplate::_placeNextBlockSegmentInWorld::__l20::<lambda_48c17ca5fc4f95e30535757e8d9844e6>\n{\n  BoundingBox *bounds;\n  const BlockPos *size;\n  const std::vector<bool> *flagList;\n  const std::vector<int> *blockIndices;\n  unsigned __int64 *startPlacement;\n  unsigned __int64 *endPlacement;\n};\n\n")])])]),c("h3",{attrs:{id:"spawner-tick-l2-lambda-09ec85d0ca7d6d046e1515d997dfdfbb"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#spawner-tick-l2-lambda-09ec85d0ca7d6d046e1515d997dfdfbb"}},[t._v("#")]),t._v(" "),c("code",[t._v("Spawner::tick::__l2::<lambda_09ec85d0ca7d6d046e1515d997dfdfbb>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Spawner::tick::__l2::<lambda_09ec85d0ca7d6d046e1515d997dfdfbb>\n{\n  Spawner *const __this;\n  BlockSource *region;\n};\n\n")])])]),c("h3",{attrs:{id:"spawner-tick-l2-lambda-51ff26e5b76b68a77052d006f8c71dae"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#spawner-tick-l2-lambda-51ff26e5b76b68a77052d006f8c71dae"}},[t._v("#")]),t._v(" "),c("code",[t._v("Spawner::tick::__l2::<lambda_51ff26e5b76b68a77052d006f8c71dae>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Spawner::tick::__l2::<lambda_51ff26e5b76b68a77052d006f8c71dae>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"spawner-tick-l2-lambda-b07d485834905f743033162c239520e0"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#spawner-tick-l2-lambda-b07d485834905f743033162c239520e0"}},[t._v("#")]),t._v(" "),c("code",[t._v("Spawner::tick::__l2::<lambda_b07d485834905f743033162c239520e0>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Spawner::tick::__l2::<lambda_b07d485834905f743033162c239520e0>\n{\n  Spawner *const __this;\n  BlockSource *region;\n};\n\n")])])]),c("h3",{attrs:{id:"spawner-spawnmobincluster-l5-lambda-0e6f8e8c785d124fa1cb4eb0b607824d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#spawner-spawnmobincluster-l5-lambda-0e6f8e8c785d124fa1cb4eb0b607824d"}},[t._v("#")]),t._v(" "),c("code",[t._v("Spawner::_spawnMobInCluster::__l5::<lambda_0e6f8e8c785d124fa1cb4eb0b607824d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Spawner::_spawnMobInCluster::__l5::<lambda_0e6f8e8c785d124fa1cb4eb0b607824d>\n{\n  ActorDefinitionIdentifier *id;\n  Mob **spawnedMob;\n  const BlockPos *pos;\n};\n\n")])])]),c("h3",{attrs:{id:"spawner-spawnprojectile-l19-lambda-af0f9963b64003ead87cb9d70fb4d46f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#spawner-spawnprojectile-l19-lambda-af0f9963b64003ead87cb9d70fb4d46f"}},[t._v("#")]),t._v(" "),c("code",[t._v("Spawner::spawnProjectile::__l19::<lambda_af0f9963b64003ead87cb9d70fb4d46f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Spawner::spawnProjectile::__l19::<lambda_af0f9963b64003ead87cb9d70fb4d46f>\n{\n  Actor **projectile;\n  const ActorDefinitionIdentifier *id;\n  Actor **spawner;\n};\n\n")])])]),c("h3",{attrs:{id:"seasons-tick-l2-lambda-8111e138941c168ffc51d79b3a3b084e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#seasons-tick-l2-lambda-8111e138941c168ffc51d79b3a3b084e"}},[t._v("#")]),t._v(" "),c("code",[t._v("Seasons::tick::__l2::<lambda_8111e138941c168ffc51d79b3a3b084e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Seasons::tick::__l2::<lambda_8111e138941c168ffc51d79b3a3b084e>\n{\n  Weather *weather;\n};\n\n")])])]),c("h3",{attrs:{id:"scatterparams-initmolangparams-l2-lambda-fe7f6cbc21f6541281b9d6c12e3aa8c9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scatterparams-initmolangparams-l2-lambda-fe7f6cbc21f6541281b9d6c12e3aa8c9"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScatterParams::initMolangParams::__l2::<lambda_fe7f6cbc21f6541281b9d6c12e3aa8c9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScatterParams::initMolangParams::__l2::<lambda_fe7f6cbc21f6541281b9d6c12e3aa8c9>\n{\n  Random *random;\n};\n\n")])])]),c("h3",{attrs:{id:"setbannerdetailsfunction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setbannerdetailsfunction"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetBannerDetailsFunction")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SetBannerDetailsFunction : LootItemFunction\n{\n  BannerBlockType mBannerType;\n  _BYTE mBaseColor[1];\n  std::vector<std::pair<unsigned char,enum ItemColor>> mBannerPatterns;\n};\n\n")])])]),c("h3",{attrs:{id:"setbannerdetailsfunction-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setbannerdetailsfunction-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetBannerDetailsFunction_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SetBannerDetailsFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),c("h3",{attrs:{id:"setbookcontentsfunction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setbookcontentsfunction"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetBookContentsFunction")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SetBookContentsFunction : LootItemFunction\n{\n  std::string mTitle;\n  std::string mAuthor;\n  std::vector<std::string> mPages;\n};\n\n")])])]),c("h3",{attrs:{id:"setbookcontentsfunction-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setbookcontentsfunction-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetBookContentsFunction_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SetBookContentsFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),c("h3",{attrs:{id:"setitemcountfunction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setitemcountfunction"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetItemCountFunction")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SetItemCountFunction : LootItemFunction\n{\n  RandomValueBounds mValue;\n};\n\n")])])]),c("h3",{attrs:{id:"setitemcountfunction-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setitemcountfunction-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetItemCountFunction_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SetItemCountFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),c("h3",{attrs:{id:"setitemdatafunction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setitemdatafunction"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetItemDataFunction")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SetItemDataFunction : LootItemFunction\n{\n  RandomValueBounds mValue;\n};\n\n")])])]),c("h3",{attrs:{id:"setitemdatafunction-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setitemdatafunction-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetItemDataFunction_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SetItemDataFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),c("h3",{attrs:{id:"setitemdamagefunction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setitemdamagefunction"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetItemDamageFunction")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SetItemDamageFunction : LootItemFunction\n{\n  RandomValueBounds mDamage;\n};\n\n")])])]),c("h3",{attrs:{id:"setitemdamagefunction-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setitemdamagefunction-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetItemDamageFunction_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SetItemDamageFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),c("h3",{attrs:{id:"setitemlorefunction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setitemlorefunction"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetItemLoreFunction")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SetItemLoreFunction : LootItemFunction\n{\n  std::vector<std::string> mLore;\n};\n\n")])])]),c("h3",{attrs:{id:"setitemlorefunction-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setitemlorefunction-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetItemLoreFunction_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SetItemLoreFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),c("h3",{attrs:{id:"setitemnamefunction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setitemnamefunction"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetItemNameFunction")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SetItemNameFunction : LootItemFunction\n{\n  std::string mName;\n};\n\n")])])]),c("h3",{attrs:{id:"setitemnamefunction-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setitemnamefunction-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetItemNameFunction_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SetItemNameFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),c("h3",{attrs:{id:"setspawneggfunction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setspawneggfunction"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetSpawnEggFunction")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SetSpawnEggFunction : LootItemFunction\n{\n  ActorDefinitionIdentifier mActor;\n};\n\n")])])]),c("h3",{attrs:{id:"setspawneggfunction-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setspawneggfunction-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetSpawnEggFunction_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SetSpawnEggFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),c("h3",{attrs:{id:"smeltitemfunction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smeltitemfunction"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmeltItemFunction")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SmeltItemFunction : LootItemFunction\n{\n};\n\n")])])]),c("h3",{attrs:{id:"smeltitemfunction-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smeltitemfunction-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmeltItemFunction_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SmeltItemFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),c("h3",{attrs:{id:"specificenchantfunction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#specificenchantfunction"}},[t._v("#")]),t._v(" "),c("code",[t._v("SpecificEnchantFunction")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SpecificEnchantFunction : LootItemFunction\n{\n  std::vector<SpecificEnchantFunction::EnchantInfo> mEnchantments;\n};\n\n")])])]),c("h3",{attrs:{id:"specificenchantfunction-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#specificenchantfunction-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SpecificEnchantFunction_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SpecificEnchantFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),c("h3",{attrs:{id:"setdatafromcolorindexfunction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setdatafromcolorindexfunction"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetDataFromColorIndexFunction")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SetDataFromColorIndexFunction : LootItemFunction\n{\n};\n\n")])])]),c("h3",{attrs:{id:"setdatafromcolorindexfunction-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setdatafromcolorindexfunction-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetDataFromColorIndexFunction_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SetDataFromColorIndexFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),c("h3",{attrs:{id:"setattributesfunction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setattributesfunction"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetAttributesFunction")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SetAttributesFunction : LootItemFunction\n{\n  std::vector<AttributeModifier> mModifiers;\n};\n\n")])])]),c("h3",{attrs:{id:"setattributesfunction-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#setattributesfunction-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SetAttributesFunction_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SetAttributesFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),c("h3",{attrs:{id:"snapshotwritablefile"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#snapshotwritablefile"}},[t._v("#")]),t._v(" "),c("code",[t._v("SnapshotWritableFile")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SnapshotWritableFile : leveldb::WritableFile\n{\n  leveldb::WritableFile *mLeveldbWritableFile;\n  std::shared_mutex *mCreationAndWriteLock;\n};\n\n")])])]),c("h3",{attrs:{id:"snapshotwritablefile-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#snapshotwritablefile-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SnapshotWritableFile_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SnapshotWritableFile_vtbl\n{\n  void (__fastcall *~WritableFile)(leveldb::WritableFile *this);\n  leveldb::Status *(__fastcall *Append)(leveldb::WritableFile *this, leveldb::Status *result, const leveldb::Slice *);\n  leveldb::Status *(__fastcall *Close)(leveldb::WritableFile *this, leveldb::Status *result);\n  leveldb::Status *(__fastcall *Flush)(leveldb::WritableFile *this, leveldb::Status *result);\n  leveldb::Status *(__fastcall *Sync)(leveldb::WritableFile *this, leveldb::Status *result);\n};\n\n")])])]),c("h3",{attrs:{id:"subchunkpositerator"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#subchunkpositerator"}},[t._v("#")]),t._v(" "),c("code",[t._v("SubChunkPosIterator")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(4)) SubChunkPosIterator\n{\n  const SubChunkPos mMinCorner;\n  const SubChunkPos mMaxCorner;\n  SubChunkPos mCurrentPos;\n  bool mDone;\n};\n\n")])])]),c("h3",{attrs:{id:"shouldcreatenewservertag-l2-lambda-49d12031768ec3221a197c06ce099fc7"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#shouldcreatenewservertag-l2-lambda-49d12031768ec3221a197c06ce099fc7"}},[t._v("#")]),t._v(" "),c("code",[t._v("shouldCreateNewServerTag::__l2::<lambda_49d12031768ec3221a197c06ce099fc7>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj shouldCreateNewServerTag::__l2::<lambda_49d12031768ec3221a197c06ce099fc7>\n{\n  bool *isDataConflict;\n  CompoundTag *serverTag;\n};\n\n")])])]),c("h3",{attrs:{id:"saveservertag-l2-lambda-54122adfe065e725be55aa7f8beaba9a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#saveservertag-l2-lambda-54122adfe065e725be55aa7f8beaba9a"}},[t._v("#")]),t._v(" "),c("code",[t._v("saveServerTag::__l2::<lambda_54122adfe065e725be55aa7f8beaba9a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj saveServerTag::__l2::<lambda_54122adfe065e725be55aa7f8beaba9a>\n{\n  LevelStorage *storage;\n  CompoundTag *serverTag;\n};\n\n")])])]),c("h3",{attrs:{id:"simpleplayercontainer-setitem-l2-lambda-a42ec50a0799ef1a7ea93fb9caa94eff"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#simpleplayercontainer-setitem-l2-lambda-a42ec50a0799ef1a7ea93fb9caa94eff"}},[t._v("#")]),t._v(" "),c("code",[t._v("SimplePlayerContainer::setItem::__l2::<lambda_a42ec50a0799ef1a7ea93fb9caa94eff>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) SimplePlayerContainer::setItem::__l2::<lambda_a42ec50a0799ef1a7ea93fb9caa94eff>\n{\n  SimplePlayerContainer *const __this;\n  int slot;\n};\n\n")])])]),c("h3",{attrs:{id:"servicelocator-cg-igraphicsdeviceplatformprovider"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#servicelocator-cg-igraphicsdeviceplatformprovider"}},[t._v("#")]),t._v(" "),c("code",[t._v("ServiceLocator<cg::IGraphicsDevicePlatformProvider>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ServiceLocator<cg::IGraphicsDevicePlatformProvider>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"servicelocator-bedrock-iapplicationdatastores"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#servicelocator-bedrock-iapplicationdatastores"}},[t._v("#")]),t._v(" "),c("code",[t._v("ServiceLocator<Bedrock::IApplicationDataStores>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ServiceLocator<Bedrock::IApplicationDataStores>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"skinhelper-personainfo-resetpieceinfo"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#skinhelper-personainfo-resetpieceinfo"}},[t._v("#")]),t._v(" "),c("code",[t._v("SkinHelper::PersonaInfo::ResetPieceInfo")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SkinHelper::PersonaInfo::ResetPieceInfo\n{\n  _BYTE type[4];\n  _BYTE side[4];\n};\n\n")])])]),c("h3",{attrs:{id:"skinhelper-personainfo-resettintinfo"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#skinhelper-personainfo-resettintinfo"}},[t._v("#")]),t._v(" "),c("code",[t._v("SkinHelper::PersonaInfo::ResetTintInfo")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SkinHelper::PersonaInfo::ResetTintInfo\n{\n  _BYTE type[4];\n};\n\n")])])]),c("h3",{attrs:{id:"skinhelper"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#skinhelper"}},[t._v("#")]),t._v(" "),c("code",[t._v("SkinHelper")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SkinHelper\n{\n};\n\n")])])]),c("h3",{attrs:{id:"social-lambda-e32165e8d086835752a776bf1d92da3e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-e32165e8d086835752a776bf1d92da3e"}},[t._v("#")]),t._v(" "),c("code",[t._v("Social::<lambda_e32165e8d086835752a776bf1d92da3e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Social::<lambda_e32165e8d086835752a776bf1d92da3e>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"social-lambda-7dd75ea614ed2fda75aa56b254ad5bc5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-7dd75ea614ed2fda75aa56b254ad5bc5"}},[t._v("#")]),t._v(" "),c("code",[t._v("Social::<lambda_7dd75ea614ed2fda75aa56b254ad5bc5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Social::<lambda_7dd75ea614ed2fda75aa56b254ad5bc5>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scriptneteventcallback"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scriptneteventcallback"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScriptNetEventCallback")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScriptNetEventCallback : NetEventCallback\n{\n  ScriptInstance *m_instance;\n  NetworkHandler *mNetHandler;\n};\n\n")])])]),c("h3",{attrs:{id:"social-lambda-78f584806f387d7a546cbd44155fe1f8"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-78f584806f387d7a546cbd44155fe1f8"}},[t._v("#")]),t._v(" "),c("code",[t._v("Social::<lambda_78f584806f387d7a546cbd44155fe1f8>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Social::<lambda_78f584806f387d7a546cbd44155fe1f8>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"social-lambda-3d03ebee43d043137d244195b801d9dd"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-3d03ebee43d043137d244195b801d9dd"}},[t._v("#")]),t._v(" "),c("code",[t._v("Social::<lambda_3d03ebee43d043137d244195b801d9dd>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Social::<lambda_3d03ebee43d043137d244195b801d9dd>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"social-lambda-4f6367c3de6d9a9078c88399f400288e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-4f6367c3de6d9a9078c88399f400288e"}},[t._v("#")]),t._v(" "),c("code",[t._v("Social::<lambda_4f6367c3de6d9a9078c88399f400288e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Social::<lambda_4f6367c3de6d9a9078c88399f400288e>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"social-lambda-a57cc4f1efe457c3fa07fc75ca994b45"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-a57cc4f1efe457c3fa07fc75ca994b45"}},[t._v("#")]),t._v(" "),c("code",[t._v("Social::<lambda_a57cc4f1efe457c3fa07fc75ca994b45>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Social::<lambda_a57cc4f1efe457c3fa07fc75ca994b45>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"social-lambda-f563cae144b869bbcf358649151c7ed8"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-f563cae144b869bbcf358649151c7ed8"}},[t._v("#")]),t._v(" "),c("code",[t._v("Social::<lambda_f563cae144b869bbcf358649151c7ed8>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Social::<lambda_f563cae144b869bbcf358649151c7ed8>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"social-lambda-036d7f5b8afcff24460186c40d92f24e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-036d7f5b8afcff24460186c40d92f24e"}},[t._v("#")]),t._v(" "),c("code",[t._v("Social::<lambda_036d7f5b8afcff24460186c40d92f24e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Social::<lambda_036d7f5b8afcff24460186c40d92f24e>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scriptingscreencontroller"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scriptingscreencontroller"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScriptingScreenController")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) ScriptingScreenController : MinecraftScreenController\n{\n  ScriptInstance *m_instance;\n  bool mIsOpened;\n};\n\n")])])]),c("h3",{attrs:{id:"scriptingscreencontroller-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scriptingscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScriptingScreenController_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ScriptingScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),c("h3",{attrs:{id:"social-lambda-8f164ec9646e2439d4259e90c9313d4f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-8f164ec9646e2439d4259e90c9313d4f"}},[t._v("#")]),t._v(" "),c("code",[t._v("Social::<lambda_8f164ec9646e2439d4259e90c9313d4f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Social::<lambda_8f164ec9646e2439d4259e90c9313d4f>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"social-lambda-9951891f522a27c552e50df636dd659d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-9951891f522a27c552e50df636dd659d"}},[t._v("#")]),t._v(" "),c("code",[t._v("Social::<lambda_9951891f522a27c552e50df636dd659d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Social::<lambda_9951891f522a27c552e50df636dd659d>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scriptsimulator"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scriptsimulator"}},[t._v("#")]),t._v(" "),c("code",[t._v("ScriptSimulator")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ScriptSimulator\n{\n  int mState;\n  int mPatchState;\n  int mRetryCnt;\n  int mMaxRetry;\n  bool mCheckMd5;\n  bool mCheckSize;\n  Json::Value mPatchListInfo;\n  std::vector<std::string> mMsgList;\n};\n\n")])])]),c("h3",{attrs:{id:"storeutil-requestjwts-l2-lambda-22713ab80c88642ea8a00ca2b75349fc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#storeutil-requestjwts-l2-lambda-22713ab80c88642ea8a00ca2b75349fc"}},[t._v("#")]),t._v(" "),c("code",[t._v("storeUtil::_requestJwts::__l2::<lambda_22713ab80c88642ea8a00ca2b75349fc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj storeUtil::_requestJwts::__l2::<lambda_22713ab80c88642ea8a00ca2b75349fc>\n{\n  std::function<void __cdecl(std::unordered_map<std::string,std::string> &&)> callback;\n};\n\n")])])]),c("h3",{attrs:{id:"storeutil-requestjwt-l2-lambda-2932e6f7f48580995e05464c1d7c03c4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#storeutil-requestjwt-l2-lambda-2932e6f7f48580995e05464c1d7c03c4"}},[t._v("#")]),t._v(" "),c("code",[t._v("storeUtil::_requestJwt::__l2::<lambda_2932e6f7f48580995e05464c1d7c03c4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj storeUtil::_requestJwt::__l2::<lambda_2932e6f7f48580995e05464c1d7c03c4>\n{\n  std::function<void __cdecl(std::string &&)> callback;\n};\n\n")])])]),c("h3",{attrs:{id:"storeutil-requestpublickey-l2-lambda-71553e1cefa7c0bbe6f89de57804ea29"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#storeutil-requestpublickey-l2-lambda-71553e1cefa7c0bbe6f89de57804ea29"}},[t._v("#")]),t._v(" "),c("code",[t._v("storeUtil::requestPublicKey::__l2::<lambda_71553e1cefa7c0bbe6f89de57804ea29>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj storeUtil::requestPublicKey::__l2::<lambda_71553e1cefa7c0bbe6f89de57804ea29>\n{\n  std::function<void __cdecl(int,std::string &&)> callback;\n};\n\n")])])]),c("h3",{attrs:{id:"skinhelper-generatepersonacharacter-l14-lambda-6b5d2809ea5e04a86a781b5f89ab6767"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#skinhelper-generatepersonacharacter-l14-lambda-6b5d2809ea5e04a86a781b5f89ab6767"}},[t._v("#")]),t._v(" "),c("code",[t._v("SkinHelper::generatePersonaCharacter::__l14::<lambda_6b5d2809ea5e04a86a781b5f89ab6767>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SkinHelper::generatePersonaCharacter::__l14::<lambda_6b5d2809ea5e04a86a781b5f89ab6767>\n{\n  bool *result;\n};\n\n")])])]),c("h3",{attrs:{id:"skinhelper-changepersonapiecesyncnoupdate-l2-lambda-1cd8e212a4b1bf2bb6b8a5a14b152e2d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#skinhelper-changepersonapiecesyncnoupdate-l2-lambda-1cd8e212a4b1bf2bb6b8a5a14b152e2d"}},[t._v("#")]),t._v(" "),c("code",[t._v("SkinHelper::changePersonaPieceSyncNoUpdate::__l2::<lambda_1cd8e212a4b1bf2bb6b8a5a14b152e2d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SkinHelper::changePersonaPieceSyncNoUpdate::__l2::<lambda_1cd8e212a4b1bf2bb6b8a5a14b152e2d>\n{\n  const SkinHelper::PersonaInfo::PieceInfo *pieceInfo;\n  bool *result;\n};\n\n")])])]),c("h3",{attrs:{id:"skinhelper-generatepersonacharacter-l32-lambda-68a91a6dfa295f6a02bd3c550bd20a21"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#skinhelper-generatepersonacharacter-l32-lambda-68a91a6dfa295f6a02bd3c550bd20a21"}},[t._v("#")]),t._v(" "),c("code",[t._v("SkinHelper::generatePersonaCharacter::__l32::<lambda_68a91a6dfa295f6a02bd3c550bd20a21>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SkinHelper::generatePersonaCharacter::__l32::<lambda_68a91a6dfa295f6a02bd3c550bd20a21>\n{\n  bool *result;\n};\n\n")])])]),c("h3",{attrs:{id:"skinhelper-changepersonapiecesyncnoupdate-l15-lambda-832338e720a06d9f2a3a4b010e66b3c8"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#skinhelper-changepersonapiecesyncnoupdate-l15-lambda-832338e720a06d9f2a3a4b010e66b3c8"}},[t._v("#")]),t._v(" "),c("code",[t._v("SkinHelper::changePersonaPieceSyncNoUpdate::__l15::<lambda_832338e720a06d9f2a3a4b010e66b3c8>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SkinHelper::changePersonaPieceSyncNoUpdate::__l15::<lambda_832338e720a06d9f2a3a4b010e66b3c8>\n{\n  const SkinHelper::PersonaInfo::PieceInfo *pieceInfo;\n  bool *result;\n};\n\n")])])]),c("h3",{attrs:{id:"statscollector-t"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#statscollector-t"}},[t._v("#")]),t._v(" "),c("code",[t._v("statscollector_t")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct statscollector_t\n{\n  _object *list;\n  _object *sublist;\n  long double factor;\n};\n\n")])])]),c("h3",{attrs:{id:"storylinecomponent-createstoryline-l5-lambda-154776dec58b83371c4d6cd630e4c641"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#storylinecomponent-createstoryline-l5-lambda-154776dec58b83371c4d6cd630e4c641"}},[t._v("#")]),t._v(" "),c("code",[t._v("StorylineComponent::createStoryline::__l5::<lambda_154776dec58b83371c4d6cd630e4c641>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StorylineComponent::createStoryline::__l5::<lambda_154776dec58b83371c4d6cd630e4c641>\n{\n  StorylineComponent *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"storylinecomponent-tick-l5-lambda-49501ea1395abf66e5a21b15f0a03ac6"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#storylinecomponent-tick-l5-lambda-49501ea1395abf66e5a21b15f0a03ac6"}},[t._v("#")]),t._v(" "),c("code",[t._v("StorylineComponent::tick::__l5::<lambda_49501ea1395abf66e5a21b15f0a03ac6>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StorylineComponent::tick::__l5::<lambda_49501ea1395abf66e5a21b15f0a03ac6>\n{\n  StorylineComponent *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-customrangedweaponitem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-customrangedweaponitem"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CustomRangedWeaponItem>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CustomRangedWeaponItem>\n{\n  CustomRangedWeaponItem *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-customrangedweaponitem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-customrangedweaponitem"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CustomRangedWeaponItem>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CustomRangedWeaponItem>\n{\n  SharedCounter<CustomRangedWeaponItem> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-customprojectileitem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-customprojectileitem"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CustomProjectileItem>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CustomProjectileItem>\n{\n  CustomProjectileItem *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sendneighborchangedeventtoscriptdescription-buildschema-l2-lambda-4e9dd81ac04276ac80769d0fb71cdc68"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sendneighborchangedeventtoscriptdescription-buildschema-l2-lambda-4e9dd81ac04276ac80769d0fb71cdc68"}},[t._v("#")]),t._v(" "),c("code",[t._v("SendNeighBorChangedEventToScriptDescription::buildSchema::__l2::<lambda_4e9dd81ac04276ac80769d0fb71cdc68>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SendNeighBorChangedEventToScriptDescription::buildSchema::__l2::<lambda_4e9dd81ac04276ac80769d0fb71cdc68>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"sendneighborchangedeventtoscriptdescription-buildschema-l2-lambda-2c3bbfcb9ba1b81d58be4d43e3f8b51a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sendneighborchangedeventtoscriptdescription-buildschema-l2-lambda-2c3bbfcb9ba1b81d58be4d43e3f8b51a"}},[t._v("#")]),t._v(" "),c("code",[t._v("SendNeighBorChangedEventToScriptDescription::buildSchema::__l2::<lambda_2c3bbfcb9ba1b81d58be4d43e3f8b51a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SendNeighBorChangedEventToScriptDescription::buildSchema::__l2::<lambda_2c3bbfcb9ba1b81d58be4d43e3f8b51a>\n{\n  const BlockComponentFactory *factory;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedcounter-customcropblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-customcropblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedCounter<CustomCropBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedCounter<CustomCropBlock>\n{\n  CustomCropBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),c("h3",{attrs:{id:"sharedptr-customcropblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-customcropblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("SharedPtr<CustomCropBlock>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SharedPtr<CustomCropBlock>\n{\n  SharedCounter<CustomCropBlock> *pc;\n};\n\n")])])]),c("h3",{attrs:{id:"sensitivewordsmanager-checkvalid-l2-lambda-dc5c5c29e1bd4050c138f9153ae4a9be"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sensitivewordsmanager-checkvalid-l2-lambda-dc5c5c29e1bd4050c138f9153ae4a9be"}},[t._v("#")]),t._v(" "),c("code",[t._v("SensitiveWordsManager::checkValid::__l2::<lambda_dc5c5c29e1bd4050c138f9153ae4a9be>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SensitiveWordsManager::checkValid::__l2::<lambda_dc5c5c29e1bd4050c138f9153ae4a9be>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"sensitivewordsmanager-checkvalidclient-l2-lambda-3f925f660a516b7830d18fe012a8406a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sensitivewordsmanager-checkvalidclient-l2-lambda-3f925f660a516b7830d18fe012a8406a"}},[t._v("#")]),t._v(" "),c("code",[t._v("SensitiveWordsManager::checkValidClient::__l2::<lambda_3f925f660a516b7830d18fe012a8406a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SensitiveWordsManager::checkValidClient::__l2::<lambda_3f925f660a516b7830d18fe012a8406a>\n{\n  SensitiveWordsLog::ContentType *contentType;\n  const std::string *content;\n  bool *ret;\n};\n\n")])])]),c("h3",{attrs:{id:"sensitivewordsmanager-checkvalid4cmd-l2-lambda-0626c5ad482fb936463ae3157a47840e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sensitivewordsmanager-checkvalid4cmd-l2-lambda-0626c5ad482fb936463ae3157a47840e"}},[t._v("#")]),t._v(" "),c("code",[t._v("SensitiveWordsManager::checkValid4Cmd::__l2::<lambda_0626c5ad482fb936463ae3157a47840e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SensitiveWordsManager::checkValid4Cmd::__l2::<lambda_0626c5ad482fb936463ae3157a47840e>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"sensitivewordsmanager-checkvalidclient4cmd-l2-lambda-cd47dc911db3be61c64915e3dbc674b9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#sensitivewordsmanager-checkvalidclient4cmd-l2-lambda-cd47dc911db3be61c64915e3dbc674b9"}},[t._v("#")]),t._v(" "),c("code",[t._v("SensitiveWordsManager::checkValidClient4Cmd::__l2::<lambda_cd47dc911db3be61c64915e3dbc674b9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SensitiveWordsManager::checkValidClient4Cmd::__l2::<lambda_cd47dc911db3be61c64915e3dbc674b9>\n{\n  const std::string *content;\n  bool *ret;\n};\n\n")])])]),c("h3",{attrs:{id:"smokercontainermanagercontroller"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smokercontainermanagercontroller"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmokerContainerManagerController")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SmokerContainerManagerController : FurnaceContainerManagerController\n{\n};\n\n")])])]),c("h3",{attrs:{id:"smokercontainermanagercontroller-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smokercontainermanagercontroller-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmokerContainerManagerController_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SmokerContainerManagerController_vtbl\n{\n  void (__fastcall *~ContainerManagerController)(ContainerManagerController *this);\n  void (__fastcall *registerContainerCallbacks)(ContainerManagerController *this);\n  const ItemStackBase *(__fastcall *getTakeableItemStackBase)(ContainerManagerController *this, const SlotData *);\n  void (__fastcall *handleTakeAmount)(ContainerManagerController *this, const SlotData *, int, const SlotData *);\n  void (__fastcall *handleTakeAll)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  void (__fastcall *handlePlaceAll)(ContainerManagerController *this, const SelectedSlotInfo *, const SlotData *);\n  void (__fastcall *handleTakeHalf)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  void (__fastcall *handlePlaceOne)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  void (__fastcall *handlePlaceAmount)(ContainerManagerController *this, const SlotData *, int, const SlotData *);\n  int (__fastcall *handleAutoPlace)(ContainerManagerController *this, const SlotData *, int, const std::vector<AutoPlaceItem> *, std::vector<AutoPlaceResult> *);\n  int (__fastcall *handleAutoPlaceStack)(ContainerManagerController *this, const SlotData *, ItemTakeType, const std::vector<AutoPlaceItem> *, std::vector<AutoPlaceResult> *);\n  void (__fastcall *handleSplitSingle)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  void (__fastcall *handleSplitMultiple)(ContainerManagerController *this, const SelectedSlotInfo *, const ItemInstance *, const SlotData *);\n  void (__fastcall *handleCoalesce)(ContainerManagerController *this, const SlotData *, const std::vector<std::string> *);\n  bool (__fastcall *handleSwap)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  bool (__fastcall *handleDrop)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);\n  bool (__fastcall *handleDestroy)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);\n  bool (__fastcall *handleDestroy)(ContainerManagerController *this, const SelectedSlotInfo *, const ItemTransferAmount);\n  bool (__fastcall *handleConsume)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);\n  void (__fastcall *handleAddToStack)(ContainerManagerController *this, const SlotData *, const SlotData *, ItemTakeType);\n  void (__fastcall *closeContainers)(ContainerManagerController *this);\n  const std::vector<ContainerSplitControl> *(__fastcall *getSplitItems)(ContainerManagerController *this);\n  bool (__fastcall *isOutputSlot)(ContainerManagerController *this, const std::string *);\n  void (__fastcall *_onItemTransferredFrom)(ContainerManagerController *this, const ItemInstance *, const SlotData *);\n  void (__fastcall *_onItemTransferredTo)(ContainerManagerController *this, const ItemInstance *, const SlotData *);\n  void (__fastcall *_onItemAcquired)(ContainerManagerController *this, const ItemInstance *, const SlotData *);\n  void (__fastcall *_onItemPlaced)(ContainerManagerController *this, const ItemInstance *, const SlotData *);\n};\n\n")])])]),c("h3",{attrs:{id:"smokercontainermanagermodel"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smokercontainermanagermodel"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmokerContainerManagerModel")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SmokerContainerManagerModel : FurnaceContainerManagerModel\n{\n};\n\n")])])]),c("h3",{attrs:{id:"smokercontainermanagermodel-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smokercontainermanagermodel-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmokerContainerManagerModel_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SmokerContainerManagerModel_vtbl\n{\n  void (__fastcall *~IContainerManager)(IContainerManager *this);\n  ContainerID (__fastcall *getContainerId)(IContainerManager *this);\n  void (__fastcall *setContainerId)(IContainerManager *this, ContainerID);\n  ContainerType (__fastcall *getContainerType)(IContainerManager *this);\n  void (__fastcall *setContainerType)(IContainerManager *this, ContainerType);\n  void (__fastcall *serverInitItemStackIds)(IContainerManager *this);\n  std::vector<ItemStack> *(__fastcall *getItemCopies)(IContainerManager *this, std::vector<ItemStack> *result);\n  void (__fastcall *setSlot)(IContainerManager *this, int, const ItemStack *, bool);\n  const ItemStack *(__fastcall *getSlot)(IContainerManager *this, int);\n  void (__fastcall *setData)(IContainerManager *this, int, int);\n  void (__fastcall *broadcastChanges)(IContainerManager *this);\n  bool (__fastcall *validateContainer)(IContainerManager *this);\n  bool (__fastcall *isValid)(ContainerManagerModel *this, float);\n  ContainerScreenContext *(__fastcall *_postInit)(ContainerManagerModel *this, ContainerScreenContext *result);\n};\n\n")])])]),c("h3",{attrs:{id:"smithingtablecontainermanagermodel"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablecontainermanagermodel"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmithingTableContainerManagerModel")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) SmithingTableContainerManagerModel : ContainerManagerModel\n{\n  BlockPos mBlockPos;\n};\n\n")])])]),c("h3",{attrs:{id:"smithingtablecontainermanagermodel-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablecontainermanagermodel-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmithingTableContainerManagerModel_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SmithingTableContainerManagerModel_vtbl\n{\n  void (__fastcall *~IContainerManager)(IContainerManager *this);\n  ContainerID (__fastcall *getContainerId)(IContainerManager *this);\n  void (__fastcall *setContainerId)(IContainerManager *this, ContainerID);\n  ContainerType (__fastcall *getContainerType)(IContainerManager *this);\n  void (__fastcall *setContainerType)(IContainerManager *this, ContainerType);\n  void (__fastcall *serverInitItemStackIds)(IContainerManager *this);\n  std::vector<ItemStack> *(__fastcall *getItemCopies)(IContainerManager *this, std::vector<ItemStack> *result);\n  void (__fastcall *setSlot)(IContainerManager *this, int, const ItemStack *, bool);\n  const ItemStack *(__fastcall *getSlot)(IContainerManager *this, int);\n  void (__fastcall *setData)(IContainerManager *this, int, int);\n  void (__fastcall *broadcastChanges)(IContainerManager *this);\n  bool (__fastcall *validateContainer)(IContainerManager *this);\n  bool (__fastcall *isValid)(ContainerManagerModel *this, float);\n  ContainerScreenContext *(__fastcall *_postInit)(ContainerManagerModel *this, ContainerScreenContext *result);\n};\n\n")])])]),c("h3",{attrs:{id:"smithingtablecontainermanagercontroller"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablecontainermanagercontroller"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmithingTableContainerManagerController")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SmithingTableContainerManagerController : ContainerManagerController\n{\n  std::weak_ptr<SmithingTableContainerManagerModel> mSmithingTableContainerManagerModel;\n  const SlotData mCreatedItemOutputSlot;\n  ItemInstance mResultPreviewItem;\n};\n\n")])])]),c("h3",{attrs:{id:"smithingtablecontainermanagercontroller-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablecontainermanagercontroller-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmithingTableContainerManagerController_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SmithingTableContainerManagerController_vtbl\n{\n  void (__fastcall *~ContainerManagerController)(ContainerManagerController *this);\n  void (__fastcall *registerContainerCallbacks)(ContainerManagerController *this);\n  const ItemStackBase *(__fastcall *getTakeableItemStackBase)(ContainerManagerController *this, const SlotData *);\n  void (__fastcall *handleTakeAmount)(ContainerManagerController *this, const SlotData *, int, const SlotData *);\n  void (__fastcall *handleTakeAll)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  void (__fastcall *handlePlaceAll)(ContainerManagerController *this, const SelectedSlotInfo *, const SlotData *);\n  void (__fastcall *handleTakeHalf)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  void (__fastcall *handlePlaceOne)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  void (__fastcall *handlePlaceAmount)(ContainerManagerController *this, const SlotData *, int, const SlotData *);\n  int (__fastcall *handleAutoPlace)(ContainerManagerController *this, const SlotData *, int, const std::vector<AutoPlaceItem> *, std::vector<AutoPlaceResult> *);\n  int (__fastcall *handleAutoPlaceStack)(ContainerManagerController *this, const SlotData *, ItemTakeType, const std::vector<AutoPlaceItem> *, std::vector<AutoPlaceResult> *);\n  void (__fastcall *handleSplitSingle)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  void (__fastcall *handleSplitMultiple)(ContainerManagerController *this, const SelectedSlotInfo *, const ItemInstance *, const SlotData *);\n  void (__fastcall *handleCoalesce)(ContainerManagerController *this, const SlotData *, const std::vector<std::string> *);\n  bool (__fastcall *handleSwap)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  bool (__fastcall *handleDrop)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);\n  bool (__fastcall *handleDestroy)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);\n  bool (__fastcall *handleDestroy)(ContainerManagerController *this, const SelectedSlotInfo *, const ItemTransferAmount);\n  bool (__fastcall *handleConsume)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);\n  void (__fastcall *handleAddToStack)(ContainerManagerController *this, const SlotData *, const SlotData *, ItemTakeType);\n  void (__fastcall *closeContainers)(ContainerManagerController *this);\n  const std::vector<ContainerSplitControl> *(__fastcall *getSplitItems)(ContainerManagerController *this);\n  bool (__fastcall *isOutputSlot)(ContainerManagerController *this, const std::string *);\n  void (__fastcall *_onItemTransferredFrom)(ContainerManagerController *this, const ItemInstance *, const SlotData *);\n  void (__fastcall *_onItemTransferredTo)(ContainerManagerController *this, const ItemInstance *, const SlotData *);\n  void (__fastcall *_onItemAcquired)(ContainerManagerController *this, const ItemInstance *, const SlotData *);\n  void (__fastcall *_onItemPlaced)(ContainerManagerController *this, const ItemInstance *, const SlotData *);\n};\n\n")])])]),c("h3",{attrs:{id:"smithingtablescreencontroller"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablescreencontroller"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmithingTableScreenController")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) SmithingTableScreenController : ContainerScreenController\n{\n  std::shared_ptr<SmithingTableContainerManagerController> mSmithingTableContainerManagerController;\n  SmithingTableScreenController::SlotIndex mHoveredSlot;\n};\n\n")])])]),c("h3",{attrs:{id:"smithingtablescreencontroller-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablescreencontroller-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmithingTableScreenController_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ SmithingTableScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n  void (__fastcall *_handlePlaceAll)(ContainerScreenController *this, const std::string *, int);\n  void (__fastcall *_handlePlaceOne)(ContainerScreenController *this, const std::string *, int);\n  void (__fastcall *_handleSelectSlot)(ContainerScreenController *this, const std::string *, int);\n  const SelectedSlotInfo *(__fastcall *_getSelectedSlotInfo)(ContainerScreenController *this, const SelectedSlotInfo *result);\n  const ItemStack *(__fastcall *_getItemStack)(ContainerScreenController *this, const std::string *, int);\n  const ItemStackBase *(__fastcall *_getVisualItemStack)(ContainerScreenController *this, const std::string *, int);\n  const ItemStackBase *(__fastcall *_getTakeableItemStackBase)(ContainerScreenController *this, const std::string *, int);\n  ui::ViewRequest (__fastcall *_onContainerSlotHovered)(ContainerScreenController *this, const std::string *, int);\n  ui::ViewRequest (__fastcall *_onContainerSlotSelected)(ContainerScreenController *this, const std::string *, int);\n  ui::ViewRequest (__fastcall *_onContainerSlotPressed)(ContainerScreenController *this, const std::string *, int);\n  bool (__fastcall *_shouldSwap)(ContainerScreenController *this, const std::string *, int, const std::string *, int);\n  std::string *(__fastcall *_getCollectionName)(ContainerScreenController *this, std::string *result, UIPropertyBag *);\n  bool (__fastcall *_canSplit)(ContainerScreenController *this, const std::string *, int);\n  void (__fastcall *_sendFlyingItem)(ContainerScreenController *this, const ItemStackBase *, const std::string *, int, const std::string *, int);\n  void (__fastcall *_registerCoalesceOrder)(ContainerScreenController *this);\n  void (__fastcall *_registerAutoPlaceOrder)(ContainerScreenController *this);\n};\n\n")])])]),c("h3",{attrs:{id:"smithingtablescreencontroller-registerstatemachine-l2-lambda-ba402959662717d23678cc853bd3b9fc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablescreencontroller-registerstatemachine-l2-lambda-ba402959662717d23678cc853bd3b9fc"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmithingTableScreenController::_registerStateMachine::__l2::<lambda_ba402959662717d23678cc853bd3b9fc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SmithingTableScreenController::_registerStateMachine::__l2::<lambda_ba402959662717d23678cc853bd3b9fc>\n{\n  const unsigned int smithingTableTakeAllPlaceAllButtonId;\n  const unsigned int smithingTableCoalesceButtonId;\n};\n\n")])])]),c("h3",{attrs:{id:"smithingtablescreencontroller-registerstatemachine-l2-lambda-999a0f07d9f034bae5bfc88381c18da3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablescreencontroller-registerstatemachine-l2-lambda-999a0f07d9f034bae5bfc88381c18da3"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmithingTableScreenController::_registerStateMachine::__l2::<lambda_999a0f07d9f034bae5bfc88381c18da3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SmithingTableScreenController::_registerStateMachine::__l2::<lambda_999a0f07d9f034bae5bfc88381c18da3>\n{\n  const unsigned int smithingTableTakeAllPlaceAllButtonId;\n  const unsigned int smithingTableCoalesceButtonId;\n};\n\n")])])]),c("h3",{attrs:{id:"smithingtablescreencontroller-registerstatemachine-l2-lambda-9b1dfbd2491d12131652dd2ba3dbe453"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablescreencontroller-registerstatemachine-l2-lambda-9b1dfbd2491d12131652dd2ba3dbe453"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmithingTableScreenController::_registerStateMachine::__l2::<lambda_9b1dfbd2491d12131652dd2ba3dbe453>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SmithingTableScreenController::_registerStateMachine::__l2::<lambda_9b1dfbd2491d12131652dd2ba3dbe453>\n{\n  SmithingTableScreenController *const __this;\n  const unsigned int smithingTableTakeAllPlaceAllButtonId;\n  const unsigned int smithingTableCoalesceButtonId;\n};\n\n")])])]),c("h3",{attrs:{id:"smithingtablescreencontroller-registerstatemachine-l2-lambda-2c5c31c0227b80caf2bd9c445f5d3d56"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablescreencontroller-registerstatemachine-l2-lambda-2c5c31c0227b80caf2bd9c445f5d3d56"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmithingTableScreenController::_registerStateMachine::__l2::<lambda_2c5c31c0227b80caf2bd9c445f5d3d56>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SmithingTableScreenController::_registerStateMachine::__l2::<lambda_2c5c31c0227b80caf2bd9c445f5d3d56>\n{\n  SmithingTableScreenController *const __this;\n  const unsigned int smithingTableTakeAllPlaceAllButtonId;\n  const unsigned int smithingTableCoalesceButtonId;\n};\n\n")])])]),c("h3",{attrs:{id:"smithingtablescreencontroller-registerbindings-l2-lambda-81b3799dd862b8a5ed457441fb3f3d13"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablescreencontroller-registerbindings-l2-lambda-81b3799dd862b8a5ed457441fb3f3d13"}},[t._v("#")]),t._v(" "),c("code",[t._v("SmithingTableScreenController::_registerBindings::__l2::<lambda_81b3799dd862b8a5ed457441fb3f3d13>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SmithingTableScreenController::_registerBindings::__l2::<lambda_81b3799dd862b8a5ed457441fb3f3d13>\n{\n  SmithingTableScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecuttercontainermanagermodel"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecuttercontainermanagermodel"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterContainerManagerModel")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) StonecutterContainerManagerModel : ContainerManagerModel\n{\n  BlockPos mBlockPos;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecuttercontainermanagermodel-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecuttercontainermanagermodel-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterContainerManagerModel_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StonecutterContainerManagerModel_vtbl\n{\n  void (__fastcall *~IContainerManager)(IContainerManager *this);\n  ContainerID (__fastcall *getContainerId)(IContainerManager *this);\n  void (__fastcall *setContainerId)(IContainerManager *this, ContainerID);\n  ContainerType (__fastcall *getContainerType)(IContainerManager *this);\n  void (__fastcall *setContainerType)(IContainerManager *this, ContainerType);\n  void (__fastcall *serverInitItemStackIds)(IContainerManager *this);\n  std::vector<ItemStack> *(__fastcall *getItemCopies)(IContainerManager *this, std::vector<ItemStack> *result);\n  void (__fastcall *setSlot)(IContainerManager *this, int, const ItemStack *, bool);\n  const ItemStack *(__fastcall *getSlot)(IContainerManager *this, int);\n  void (__fastcall *setData)(IContainerManager *this, int, int);\n  void (__fastcall *broadcastChanges)(IContainerManager *this);\n  bool (__fastcall *validateContainer)(IContainerManager *this);\n  bool (__fastcall *isValid)(ContainerManagerModel *this, float);\n  ContainerScreenContext *(__fastcall *_postInit)(ContainerManagerModel *this, ContainerScreenContext *result);\n};\n\n")])])]),c("h3",{attrs:{id:"stonecuttercontainermanagercontroller"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecuttercontainermanagercontroller"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterContainerManagerController")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterContainerManagerController : ContainerManagerController\n{\n  int mSelectedStoneIndex;\n  std::weak_ptr<StonecutterContainerManagerModel> mStonecutterContainerManagerModel;\n  const SlotData mCreatedItemOutputSlot;\n  ItemInstance mResultItemPreview;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecuttercontainermanagercontroller-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecuttercontainermanagercontroller-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterContainerManagerController_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StonecutterContainerManagerController_vtbl\n{\n  void (__fastcall *~ContainerManagerController)(ContainerManagerController *this);\n  void (__fastcall *registerContainerCallbacks)(ContainerManagerController *this);\n  const ItemStackBase *(__fastcall *getTakeableItemStackBase)(ContainerManagerController *this, const SlotData *);\n  void (__fastcall *handleTakeAmount)(ContainerManagerController *this, const SlotData *, int, const SlotData *);\n  void (__fastcall *handleTakeAll)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  void (__fastcall *handlePlaceAll)(ContainerManagerController *this, const SelectedSlotInfo *, const SlotData *);\n  void (__fastcall *handleTakeHalf)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  void (__fastcall *handlePlaceOne)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  void (__fastcall *handlePlaceAmount)(ContainerManagerController *this, const SlotData *, int, const SlotData *);\n  int (__fastcall *handleAutoPlace)(ContainerManagerController *this, const SlotData *, int, const std::vector<AutoPlaceItem> *, std::vector<AutoPlaceResult> *);\n  int (__fastcall *handleAutoPlaceStack)(ContainerManagerController *this, const SlotData *, ItemTakeType, const std::vector<AutoPlaceItem> *, std::vector<AutoPlaceResult> *);\n  void (__fastcall *handleSplitSingle)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  void (__fastcall *handleSplitMultiple)(ContainerManagerController *this, const SelectedSlotInfo *, const ItemInstance *, const SlotData *);\n  void (__fastcall *handleCoalesce)(ContainerManagerController *this, const SlotData *, const std::vector<std::string> *);\n  bool (__fastcall *handleSwap)(ContainerManagerController *this, const SlotData *, const SlotData *);\n  bool (__fastcall *handleDrop)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);\n  bool (__fastcall *handleDestroy)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);\n  bool (__fastcall *handleDestroy)(ContainerManagerController *this, const SelectedSlotInfo *, const ItemTransferAmount);\n  bool (__fastcall *handleConsume)(ContainerManagerController *this, const SlotData *, const ItemTransferAmount);\n  void (__fastcall *handleAddToStack)(ContainerManagerController *this, const SlotData *, const SlotData *, ItemTakeType);\n  void (__fastcall *closeContainers)(ContainerManagerController *this);\n  const std::vector<ContainerSplitControl> *(__fastcall *getSplitItems)(ContainerManagerController *this);\n  bool (__fastcall *isOutputSlot)(ContainerManagerController *this, const std::string *);\n  void (__fastcall *_onItemTransferredFrom)(ContainerManagerController *this, const ItemInstance *, const SlotData *);\n  void (__fastcall *_onItemTransferredTo)(ContainerManagerController *this, const ItemInstance *, const SlotData *);\n  void (__fastcall *_onItemAcquired)(ContainerManagerController *this, const ItemInstance *, const SlotData *);\n  void (__fastcall *_onItemPlaced)(ContainerManagerController *this, const ItemInstance *, const SlotData *);\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController : ContainerScreenController\n{\n  StonecutterScreenController::LeftTabIndex mSelectedTabIndex;\n  std::shared_ptr<StonecutterContainerManagerController> mStonecutterContainerManagerController;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StonecutterScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n  void (__fastcall *_handlePlaceAll)(ContainerScreenController *this, const std::string *, int);\n  void (__fastcall *_handlePlaceOne)(ContainerScreenController *this, const std::string *, int);\n  void (__fastcall *_handleSelectSlot)(ContainerScreenController *this, const std::string *, int);\n  const SelectedSlotInfo *(__fastcall *_getSelectedSlotInfo)(ContainerScreenController *this, const SelectedSlotInfo *result);\n  const ItemStack *(__fastcall *_getItemStack)(ContainerScreenController *this, const std::string *, int);\n  const ItemStackBase *(__fastcall *_getVisualItemStack)(ContainerScreenController *this, const std::string *, int);\n  const ItemStackBase *(__fastcall *_getTakeableItemStackBase)(ContainerScreenController *this, const std::string *, int);\n  ui::ViewRequest (__fastcall *_onContainerSlotHovered)(ContainerScreenController *this, const std::string *, int);\n  ui::ViewRequest (__fastcall *_onContainerSlotSelected)(ContainerScreenController *this, const std::string *, int);\n  ui::ViewRequest (__fastcall *_onContainerSlotPressed)(ContainerScreenController *this, const std::string *, int);\n  bool (__fastcall *_shouldSwap)(ContainerScreenController *this, const std::string *, int, const std::string *, int);\n  std::string *(__fastcall *_getCollectionName)(ContainerScreenController *this, std::string *result, UIPropertyBag *);\n  bool (__fastcall *_canSplit)(ContainerScreenController *this, const std::string *, int);\n  void (__fastcall *_sendFlyingItem)(ContainerScreenController *this, const ItemStackBase *, const std::string *, int, const std::string *, int);\n  void (__fastcall *_registerCoalesceOrder)(ContainerScreenController *this);\n  void (__fastcall *_registerAutoPlaceOrder)(ContainerScreenController *this);\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registerstatemachine-l2-lambda-52cbcac621fc8dbfb95e023ed7161412"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registerstatemachine-l2-lambda-52cbcac621fc8dbfb95e023ed7161412"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerStateMachine::__l2::<lambda_52cbcac621fc8dbfb95e023ed7161412>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerStateMachine::__l2::<lambda_52cbcac621fc8dbfb95e023ed7161412>\n{\n  const unsigned int stonecutterResultTakeAllPlaceAllButtonId;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registerstatemachine-l2-lambda-7f699dc2007b1f7df2f85fede7c25aac"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registerstatemachine-l2-lambda-7f699dc2007b1f7df2f85fede7c25aac"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerStateMachine::__l2::<lambda_7f699dc2007b1f7df2f85fede7c25aac>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerStateMachine::__l2::<lambda_7f699dc2007b1f7df2f85fede7c25aac>\n{\n  const unsigned int stonecutterResultTakeAllPlaceAllButtonId;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registerstatemachine-l2-lambda-1d57109cab209478ed0e8fadae76fb8d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registerstatemachine-l2-lambda-1d57109cab209478ed0e8fadae76fb8d"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerStateMachine::__l2::<lambda_1d57109cab209478ed0e8fadae76fb8d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) StonecutterScreenController::_registerStateMachine::__l2::<lambda_1d57109cab209478ed0e8fadae76fb8d>\n{\n  StonecutterScreenController *const __this;\n  const unsigned int stonecutterResultTakeAllPlaceAllButtonId;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registerstatemachine-l2-lambda-cbd8e926ac4111025a7cf9837f332499"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registerstatemachine-l2-lambda-cbd8e926ac4111025a7cf9837f332499"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerStateMachine::__l2::<lambda_cbd8e926ac4111025a7cf9837f332499>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) StonecutterScreenController::_registerStateMachine::__l2::<lambda_cbd8e926ac4111025a7cf9837f332499>\n{\n  StonecutterScreenController *const __this;\n  const unsigned int stonecutterResultTakeAllPlaceAllButtonId;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registerbindings-l2-lambda-38e625c7cda1953129346ebf1b5d4519"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registerbindings-l2-lambda-38e625c7cda1953129346ebf1b5d4519"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerBindings::__l2::<lambda_38e625c7cda1953129346ebf1b5d4519>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerBindings::__l2::<lambda_38e625c7cda1953129346ebf1b5d4519>\n{\n  StonecutterScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registerbindings-l2-lambda-0c4de8d8d81eb3182fbc84272dbf63ca"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registerbindings-l2-lambda-0c4de8d8d81eb3182fbc84272dbf63ca"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerBindings::__l2::<lambda_0c4de8d8d81eb3182fbc84272dbf63ca>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerBindings::__l2::<lambda_0c4de8d8d81eb3182fbc84272dbf63ca>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registerbindings-l2-lambda-0038879b7a8de0c086b195bcc2e1ee8e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registerbindings-l2-lambda-0038879b7a8de0c086b195bcc2e1ee8e"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerBindings::__l2::<lambda_0038879b7a8de0c086b195bcc2e1ee8e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerBindings::__l2::<lambda_0038879b7a8de0c086b195bcc2e1ee8e>\n{\n  StonecutterScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registerbindings-l2-lambda-1a90ada11a821ed0678752ef4476e7a5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registerbindings-l2-lambda-1a90ada11a821ed0678752ef4476e7a5"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerBindings::__l2::<lambda_1a90ada11a821ed0678752ef4476e7a5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerBindings::__l2::<lambda_1a90ada11a821ed0678752ef4476e7a5>\n{\n  StonecutterScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registerbindings-l2-lambda-0f977d8a20dce43eaf6552c2d6ecff51"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registerbindings-l2-lambda-0f977d8a20dce43eaf6552c2d6ecff51"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerBindings::__l2::<lambda_0f977d8a20dce43eaf6552c2d6ecff51>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerBindings::__l2::<lambda_0f977d8a20dce43eaf6552c2d6ecff51>\n{\n  StonecutterScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registerbindings-l2-lambda-695907618a811ce0a51ea50717a06557"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registerbindings-l2-lambda-695907618a811ce0a51ea50717a06557"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerBindings::__l2::<lambda_695907618a811ce0a51ea50717a06557>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerBindings::__l2::<lambda_695907618a811ce0a51ea50717a06557>\n{\n  StonecutterScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registerbindings-l2-lambda-c0a3e91d4ac4e878dd07cf1628250c99"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registerbindings-l2-lambda-c0a3e91d4ac4e878dd07cf1628250c99"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerBindings::__l2::<lambda_c0a3e91d4ac4e878dd07cf1628250c99>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerBindings::__l2::<lambda_c0a3e91d4ac4e878dd07cf1628250c99>\n{\n  StonecutterScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registerbindings-l2-lambda-ae45fc556ee1e25bb18356f840e9d835"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registerbindings-l2-lambda-ae45fc556ee1e25bb18356f840e9d835"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerBindings::__l2::<lambda_ae45fc556ee1e25bb18356f840e9d835>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerBindings::__l2::<lambda_ae45fc556ee1e25bb18356f840e9d835>\n{\n  StonecutterScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registereventhandlers-l2-lambda-32c3578c484002a1d327c2d9b5a4b3e5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registereventhandlers-l2-lambda-32c3578c484002a1d327c2d9b5a4b3e5"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerEventHandlers::__l2::<lambda_32c3578c484002a1d327c2d9b5a4b3e5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerEventHandlers::__l2::<lambda_32c3578c484002a1d327c2d9b5a4b3e5>\n{\n  StonecutterScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registereventhandlers-l2-lambda-6749e690d9fcc44f4b14db74c2abfd59"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registereventhandlers-l2-lambda-6749e690d9fcc44f4b14db74c2abfd59"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerEventHandlers::__l2::<lambda_6749e690d9fcc44f4b14db74c2abfd59>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerEventHandlers::__l2::<lambda_6749e690d9fcc44f4b14db74c2abfd59>\n{\n  StonecutterScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registereventhandlers-l2-lambda-e8da87a54aca72f5cc14f8affdede447"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registereventhandlers-l2-lambda-e8da87a54aca72f5cc14f8affdede447"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerEventHandlers::__l2::<lambda_e8da87a54aca72f5cc14f8affdede447>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerEventHandlers::__l2::<lambda_e8da87a54aca72f5cc14f8affdede447>\n{\n  StonecutterScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"stonecutterscreencontroller-registereventhandlers-l2-lambda-88c06bbe2c12fdb6ddf446d21c2a9a06"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#stonecutterscreencontroller-registereventhandlers-l2-lambda-88c06bbe2c12fdb6ddf446d21c2a9a06"}},[t._v("#")]),t._v(" "),c("code",[t._v("StonecutterScreenController::_registerEventHandlers::__l2::<lambda_88c06bbe2c12fdb6ddf446d21c2a9a06>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StonecutterScreenController::_registerEventHandlers::__l2::<lambda_88c06bbe2c12fdb6ddf446d21c2a9a06>\n{\n  StonecutterScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController : BlockScreenController\n{\n  const BlockPos mBlockPos;\n  bool mRedstoneDropdownActive;\n  bool mModeDropDownActive;\n  bool mTextBoxEditing;\n  bool mExportCompleted;\n  bool mExportSucceeded;\n  bool mRenderedStructure;\n  bool mIsExporting;\n  bool mNeedsBindsUpdate;\n  bool mMirrorX;\n  bool mMirrorZ;\n  bool mStructureExists;\n  bool mHasOpened;\n  bool mTrigger3dExport;\n  const bool m3DExportSupport;\n  std::shared_ptr<MinecraftglTFExporter> mglTFExporter;\n  StructureEditorData mStructureEditorData;\n  StructureTelemetryClientData mTelemetryClientData;\n  std::string mSeedString;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ StructureEditorScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-initiatefilegeneration-l5-lambda-1477a61444aa550355d70c3d32caa3d8"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-initiatefilegeneration-l5-lambda-1477a61444aa550355d70c3d32caa3d8"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_initiateFileGeneration::__l5::<lambda_1477a61444aa550355d70c3d32caa3d8>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_initiateFileGeneration::__l5::<lambda_1477a61444aa550355d70c3d32caa3d8>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registermodedropdown-l6-lambda-c651ae665ac61ec2de19316a60e5fa6e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registermodedropdown-l6-lambda-c651ae665ac61ec2de19316a60e5fa6e"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerModeDropdown::__l6::<lambda_c651ae665ac61ec2de19316a60e5fa6e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerModeDropdown::__l6::<lambda_c651ae665ac61ec2de19316a60e5fa6e>\n{\n  StructureEditorScreenController *const __this;\n  std::pair<std::string const ,enum StructureBlockType> modePair;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registermodedropdown-l6-lambda-cd8581ad6b5371cca84b11bd5ba460b1"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registermodedropdown-l6-lambda-cd8581ad6b5371cca84b11bd5ba460b1"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerModeDropdown::__l6::<lambda_cd8581ad6b5371cca84b11bd5ba460b1>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerModeDropdown::__l6::<lambda_cd8581ad6b5371cca84b11bd5ba460b1>\n{\n  StructureEditorScreenController *const __this;\n  std::pair<std::string const ,enum StructureBlockType> modePair;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registermodedropdown-l2-lambda-4d60dc4f1e1d4ec3df724772c6a2b80a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registermodedropdown-l2-lambda-4d60dc4f1e1d4ec3df724772c6a2b80a"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerModeDropdown::__l2::<lambda_4d60dc4f1e1d4ec3df724772c6a2b80a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerModeDropdown::__l2::<lambda_4d60dc4f1e1d4ec3df724772c6a2b80a>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registermodedropdown-l2-lambda-4773ff81c781f339c0e7e3cf85989e33"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registermodedropdown-l2-lambda-4773ff81c781f339c0e7e3cf85989e33"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerModeDropdown::__l2::<lambda_4773ff81c781f339c0e7e3cf85989e33>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerModeDropdown::__l2::<lambda_4773ff81c781f339c0e7e3cf85989e33>\n{\n  StructureEditorScreenController *const __this;\n  std::unordered_map<enum StructureBlockType,std::string> modeLabels;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registermodedropdown-l2-lambda-1f006060f6e1ff05fe6dee258edb99e1"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registermodedropdown-l2-lambda-1f006060f6e1ff05fe6dee258edb99e1"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerModeDropdown::__l2::<lambda_1f006060f6e1ff05fe6dee258edb99e1>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerModeDropdown::__l2::<lambda_1f006060f6e1ff05fe6dee258edb99e1>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registermodedropdown-l2-lambda-4825f84003fb7158c9d726b73020647a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registermodedropdown-l2-lambda-4825f84003fb7158c9d726b73020647a"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerModeDropdown::__l2::<lambda_4825f84003fb7158c9d726b73020647a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerModeDropdown::__l2::<lambda_4825f84003fb7158c9d726b73020647a>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registermodedropdown-l2-lambda-ceb3161255ba98e62ef50497a1519e63"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registermodedropdown-l2-lambda-ceb3161255ba98e62ef50497a1519e63"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerModeDropdown::__l2::<lambda_ceb3161255ba98e62ef50497a1519e63>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerModeDropdown::__l2::<lambda_ceb3161255ba98e62ef50497a1519e63>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registermodedropdown-l2-lambda-093d5fb18a8558bb2b3bf4a25a2e3dcc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registermodedropdown-l2-lambda-093d5fb18a8558bb2b3bf4a25a2e3dcc"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerModeDropdown::__l2::<lambda_093d5fb18a8558bb2b3bf4a25a2e3dcc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerModeDropdown::__l2::<lambda_093d5fb18a8558bb2b3bf4a25a2e3dcc>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerredstonedropdown-l6-lambda-cf2174049ace314232ff088b22187753"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerredstonedropdown-l6-lambda-cf2174049ace314232ff088b22187753"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerRedstoneDropdown::__l6::<lambda_cf2174049ace314232ff088b22187753>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerRedstoneDropdown::__l6::<lambda_cf2174049ace314232ff088b22187753>\n{\n  StructureEditorScreenController *const __this;\n  std::pair<std::string const ,enum StructureRedstoneSaveMode> modePair;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerredstonedropdown-l6-lambda-652232be9ffee578487d94f99a1fc412"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerredstonedropdown-l6-lambda-652232be9ffee578487d94f99a1fc412"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerRedstoneDropdown::__l6::<lambda_652232be9ffee578487d94f99a1fc412>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerRedstoneDropdown::__l6::<lambda_652232be9ffee578487d94f99a1fc412>\n{\n  StructureEditorScreenController *const __this;\n  std::pair<std::string const ,enum StructureRedstoneSaveMode> modePair;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerredstonedropdown-l2-lambda-6f1030c9b09e03b9fa9d54769245d653"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerredstonedropdown-l2-lambda-6f1030c9b09e03b9fa9d54769245d653"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerRedstoneDropdown::__l2::<lambda_6f1030c9b09e03b9fa9d54769245d653>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerRedstoneDropdown::__l2::<lambda_6f1030c9b09e03b9fa9d54769245d653>\n{\n  StructureEditorScreenController *const __this;\n  std::unordered_map<enum StructureRedstoneSaveMode,std::string> modeLabels;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerredstonedropdown-l2-lambda-0ef651b559d673e4c68f88356ebe80f6"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerredstonedropdown-l2-lambda-0ef651b559d673e4c68f88356ebe80f6"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerRedstoneDropdown::__l2::<lambda_0ef651b559d673e4c68f88356ebe80f6>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerRedstoneDropdown::__l2::<lambda_0ef651b559d673e4c68f88356ebe80f6>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerredstonedropdown-l2-lambda-28759f155dc56fe57dcbe3ff6ccb3c12"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerredstonedropdown-l2-lambda-28759f155dc56fe57dcbe3ff6ccb3c12"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerRedstoneDropdown::__l2::<lambda_28759f155dc56fe57dcbe3ff6ccb3c12>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerRedstoneDropdown::__l2::<lambda_28759f155dc56fe57dcbe3ff6ccb3c12>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerredstonedropdown-l2-lambda-a9810a69733acbf12c054263a1448ac5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerredstonedropdown-l2-lambda-a9810a69733acbf12c054263a1448ac5"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerRedstoneDropdown::__l2::<lambda_a9810a69733acbf12c054263a1448ac5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerRedstoneDropdown::__l2::<lambda_a9810a69733acbf12c054263a1448ac5>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerredstonedropdown-l2-lambda-29a7a178e18ef0f466cabcdcabd0e862"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerredstonedropdown-l2-lambda-29a7a178e18ef0f466cabcdcabd0e862"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerRedstoneDropdown::__l2::<lambda_29a7a178e18ef0f466cabcdcabd0e862>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerRedstoneDropdown::__l2::<lambda_29a7a178e18ef0f466cabcdcabd0e862>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-6540386cb875116df17d88520853e8de"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-6540386cb875116df17d88520853e8de"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_6540386cb875116df17d88520853e8de>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_6540386cb875116df17d88520853e8de>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-c8d2f005ae6cf5fd316a00d511b8de10"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-c8d2f005ae6cf5fd316a00d511b8de10"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_c8d2f005ae6cf5fd316a00d511b8de10>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_c8d2f005ae6cf5fd316a00d511b8de10>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-6026a8b53bee8e215142b71f31056593"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-6026a8b53bee8e215142b71f31056593"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_6026a8b53bee8e215142b71f31056593>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_6026a8b53bee8e215142b71f31056593>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-ebd942b06ee4b1d599636c784736a7d3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-ebd942b06ee4b1d599636c784736a7d3"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_ebd942b06ee4b1d599636c784736a7d3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_ebd942b06ee4b1d599636c784736a7d3>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-9ed9e8c065c6bab88900e312c01e355a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-9ed9e8c065c6bab88900e312c01e355a"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_9ed9e8c065c6bab88900e312c01e355a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_9ed9e8c065c6bab88900e312c01e355a>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-6a1a2c704678af811cf540b7acdf317d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-6a1a2c704678af811cf540b7acdf317d"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_6a1a2c704678af811cf540b7acdf317d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_6a1a2c704678af811cf540b7acdf317d>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-ca08fc3c2afd1cfabebf8b2109765fb1"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-ca08fc3c2afd1cfabebf8b2109765fb1"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_ca08fc3c2afd1cfabebf8b2109765fb1>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_ca08fc3c2afd1cfabebf8b2109765fb1>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-0615fb80fbd23d2f112c0b48ea17f129"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-0615fb80fbd23d2f112c0b48ea17f129"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_0615fb80fbd23d2f112c0b48ea17f129>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_0615fb80fbd23d2f112c0b48ea17f129>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-e5f19455ee7723394e1af88ccf3549e6"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-e5f19455ee7723394e1af88ccf3549e6"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_e5f19455ee7723394e1af88ccf3549e6>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_e5f19455ee7723394e1af88ccf3549e6>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-31ab7942926185a2a9346b63c60bd5f5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-31ab7942926185a2a9346b63c60bd5f5"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_31ab7942926185a2a9346b63c60bd5f5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_31ab7942926185a2a9346b63c60bd5f5>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-0ed2ab97794f382a20b8b4724f382e9f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-0ed2ab97794f382a20b8b4724f382e9f"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_0ed2ab97794f382a20b8b4724f382e9f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_0ed2ab97794f382a20b8b4724f382e9f>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-d1c3a320ccf1c1502427ade8ee1efaba"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-d1c3a320ccf1c1502427ade8ee1efaba"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_d1c3a320ccf1c1502427ade8ee1efaba>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_d1c3a320ccf1c1502427ade8ee1efaba>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-299e5561592e5861fe7a67450951a925"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-299e5561592e5861fe7a67450951a925"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_299e5561592e5861fe7a67450951a925>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_299e5561592e5861fe7a67450951a925>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-fd7ec7ffc5b6129e9ba4166ebeef77a6"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-fd7ec7ffc5b6129e9ba4166ebeef77a6"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_fd7ec7ffc5b6129e9ba4166ebeef77a6>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_fd7ec7ffc5b6129e9ba4166ebeef77a6>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-30544fe449eaa373a413acf173a97cdb"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-30544fe449eaa373a413acf173a97cdb"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_30544fe449eaa373a413acf173a97cdb>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_30544fe449eaa373a413acf173a97cdb>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-163865a931b2d1ff9d755634bb918870"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-163865a931b2d1ff9d755634bb918870"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_163865a931b2d1ff9d755634bb918870>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_163865a931b2d1ff9d755634bb918870>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-ade6a026cae66cd5fa9bfcf5e9dc7df4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-ade6a026cae66cd5fa9bfcf5e9dc7df4"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_ade6a026cae66cd5fa9bfcf5e9dc7df4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_ade6a026cae66cd5fa9bfcf5e9dc7df4>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-dd3788d89fdec8f518237ed667691687"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-dd3788d89fdec8f518237ed667691687"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_dd3788d89fdec8f518237ed667691687>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_dd3788d89fdec8f518237ed667691687>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-e04bf21d4b1166c16df1d0b1e8df7ee4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-e04bf21d4b1166c16df1d0b1e8df7ee4"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_e04bf21d4b1166c16df1d0b1e8df7ee4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_e04bf21d4b1166c16df1d0b1e8df7ee4>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-4284ad8984f86a205dfb7dccb12d0ed1"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-4284ad8984f86a205dfb7dccb12d0ed1"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_4284ad8984f86a205dfb7dccb12d0ed1>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_4284ad8984f86a205dfb7dccb12d0ed1>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-bc82c85b3e2a3f6d8264b42383e8f61e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-bc82c85b3e2a3f6d8264b42383e8f61e"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_bc82c85b3e2a3f6d8264b42383e8f61e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_bc82c85b3e2a3f6d8264b42383e8f61e>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-f7bebd9abd297b906c57977cc21a58e9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-f7bebd9abd297b906c57977cc21a58e9"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_f7bebd9abd297b906c57977cc21a58e9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_f7bebd9abd297b906c57977cc21a58e9>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-6aaa1869cc6bf9512fd22a832dc122e3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-6aaa1869cc6bf9512fd22a832dc122e3"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_6aaa1869cc6bf9512fd22a832dc122e3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_6aaa1869cc6bf9512fd22a832dc122e3>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-bedd27238cd188564d1ce1a64ff3c6ca"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-bedd27238cd188564d1ce1a64ff3c6ca"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_bedd27238cd188564d1ce1a64ff3c6ca>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_bedd27238cd188564d1ce1a64ff3c6ca>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-bf486e361ea46dd34d65edbe1e9f5787"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-bf486e361ea46dd34d65edbe1e9f5787"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_bf486e361ea46dd34d65edbe1e9f5787>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_bf486e361ea46dd34d65edbe1e9f5787>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-f6f5896022a75b453df01faf3ee28ae4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-f6f5896022a75b453df01faf3ee28ae4"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_f6f5896022a75b453df01faf3ee28ae4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_f6f5896022a75b453df01faf3ee28ae4>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-a559822a43c3e433e8251dffe1e47e9d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-a559822a43c3e433e8251dffe1e47e9d"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_a559822a43c3e433e8251dffe1e47e9d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_a559822a43c3e433e8251dffe1e47e9d>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-18e7bb396375b075376ffaf1e43f498c"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-18e7bb396375b075376ffaf1e43f498c"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_18e7bb396375b075376ffaf1e43f498c>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_18e7bb396375b075376ffaf1e43f498c>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-899f871a85c396dc53103d33e96ab00e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-899f871a85c396dc53103d33e96ab00e"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_899f871a85c396dc53103d33e96ab00e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_899f871a85c396dc53103d33e96ab00e>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-9626094940c021e7f42269040f7cf9c6"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-9626094940c021e7f42269040f7cf9c6"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_9626094940c021e7f42269040f7cf9c6>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_9626094940c021e7f42269040f7cf9c6>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-b69a585c589181fa721201d8afa4d3c9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-b69a585c589181fa721201d8afa4d3c9"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_b69a585c589181fa721201d8afa4d3c9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_b69a585c589181fa721201d8afa4d3c9>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-5263de1a285aee9febfb86126eb2e861"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-5263de1a285aee9febfb86126eb2e861"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_5263de1a285aee9febfb86126eb2e861>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_5263de1a285aee9febfb86126eb2e861>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-033b5b9026db266e180c490abf69c8bc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-033b5b9026db266e180c490abf69c8bc"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_033b5b9026db266e180c490abf69c8bc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_033b5b9026db266e180c490abf69c8bc>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-8f719c42d4ab40bcd79d6c156337763e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-8f719c42d4ab40bcd79d6c156337763e"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_8f719c42d4ab40bcd79d6c156337763e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_8f719c42d4ab40bcd79d6c156337763e>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-c72440e11cc7c2c7fb2f5bfc86f5e853"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-c72440e11cc7c2c7fb2f5bfc86f5e853"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_c72440e11cc7c2c7fb2f5bfc86f5e853>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_c72440e11cc7c2c7fb2f5bfc86f5e853>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-da75c2aabce2897f0dfaa6e39dbc43e9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-da75c2aabce2897f0dfaa6e39dbc43e9"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_da75c2aabce2897f0dfaa6e39dbc43e9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_da75c2aabce2897f0dfaa6e39dbc43e9>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-8fef16974e5dbf1c92fb4615aa7eea6b"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-8fef16974e5dbf1c92fb4615aa7eea6b"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_8fef16974e5dbf1c92fb4615aa7eea6b>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_8fef16974e5dbf1c92fb4615aa7eea6b>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-b062a6c2d91e7336e495529e4b003f15"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-b062a6c2d91e7336e495529e4b003f15"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_b062a6c2d91e7336e495529e4b003f15>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_b062a6c2d91e7336e495529e4b003f15>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-1aefb63d1af58fbf1ee991962ed89233"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-1aefb63d1af58fbf1ee991962ed89233"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_1aefb63d1af58fbf1ee991962ed89233>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_1aefb63d1af58fbf1ee991962ed89233>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-eacff6756df493bed0ddae23261c7b72"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-eacff6756df493bed0ddae23261c7b72"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_eacff6756df493bed0ddae23261c7b72>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_eacff6756df493bed0ddae23261c7b72>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-5fc6df8969f93fe9f87b83e6ee311297"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-5fc6df8969f93fe9f87b83e6ee311297"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_5fc6df8969f93fe9f87b83e6ee311297>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_5fc6df8969f93fe9f87b83e6ee311297>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-3f2cde9436d4394632c27861e43c23b2"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-3f2cde9436d4394632c27861e43c23b2"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_3f2cde9436d4394632c27861e43c23b2>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_3f2cde9436d4394632c27861e43c23b2>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-87a932225fa72e6b8549db26047b8eee"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-87a932225fa72e6b8549db26047b8eee"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_87a932225fa72e6b8549db26047b8eee>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_87a932225fa72e6b8549db26047b8eee>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-040745b848fa3e8c5d163253df3e8f48"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-040745b848fa3e8c5d163253df3e8f48"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_040745b848fa3e8c5d163253df3e8f48>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_040745b848fa3e8c5d163253df3e8f48>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-6aafc1ba122b87ead1ef055b3b770067"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-6aafc1ba122b87ead1ef055b3b770067"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_6aafc1ba122b87ead1ef055b3b770067>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_6aafc1ba122b87ead1ef055b3b770067>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-e60f5bb4cc7b3d32aa7be83c83b6561b"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-e60f5bb4cc7b3d32aa7be83c83b6561b"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_e60f5bb4cc7b3d32aa7be83c83b6561b>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_e60f5bb4cc7b3d32aa7be83c83b6561b>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-3e2e2099ba379e1d5a8ff95baba06c81"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-3e2e2099ba379e1d5a8ff95baba06c81"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_3e2e2099ba379e1d5a8ff95baba06c81>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_3e2e2099ba379e1d5a8ff95baba06c81>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-26a56776cf3bb7c5f51362099e5de97a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-26a56776cf3bb7c5f51362099e5de97a"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_26a56776cf3bb7c5f51362099e5de97a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_26a56776cf3bb7c5f51362099e5de97a>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-6dbbf2e0b7754be26983c366acec377e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-6dbbf2e0b7754be26983c366acec377e"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_6dbbf2e0b7754be26983c366acec377e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_6dbbf2e0b7754be26983c366acec377e>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-6d0a94a97c7035c0b45ea400c4fffb26"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-6d0a94a97c7035c0b45ea400c4fffb26"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_6d0a94a97c7035c0b45ea400c4fffb26>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_6d0a94a97c7035c0b45ea400c4fffb26>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-f98190cd3aaca6acc42dcdd9981c1dcf"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-f98190cd3aaca6acc42dcdd9981c1dcf"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_f98190cd3aaca6acc42dcdd9981c1dcf>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_f98190cd3aaca6acc42dcdd9981c1dcf>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-1618d2b0e0f401fd966612175c9bc573"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-1618d2b0e0f401fd966612175c9bc573"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_1618d2b0e0f401fd966612175c9bc573>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_1618d2b0e0f401fd966612175c9bc573>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-290c0c655bef69129d1208bd0b59f5f5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-290c0c655bef69129d1208bd0b59f5f5"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_290c0c655bef69129d1208bd0b59f5f5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_290c0c655bef69129d1208bd0b59f5f5>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-c4fd6892bd8ffd35418c6cb2b4808da0"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-c4fd6892bd8ffd35418c6cb2b4808da0"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_c4fd6892bd8ffd35418c6cb2b4808da0>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_c4fd6892bd8ffd35418c6cb2b4808da0>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-03240cc8e792a37b04e87f70b2c618db"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-03240cc8e792a37b04e87f70b2c618db"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_03240cc8e792a37b04e87f70b2c618db>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_03240cc8e792a37b04e87f70b2c618db>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-2b1d0f3645a4ededfe1c0855ebb90f7e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-2b1d0f3645a4ededfe1c0855ebb90f7e"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_2b1d0f3645a4ededfe1c0855ebb90f7e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_2b1d0f3645a4ededfe1c0855ebb90f7e>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-8ede4cda0aaa46acb78b4fd147411cfa"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-8ede4cda0aaa46acb78b4fd147411cfa"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_8ede4cda0aaa46acb78b4fd147411cfa>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_8ede4cda0aaa46acb78b4fd147411cfa>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-42e5177abcbeeb0981136e788bad7e32"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-42e5177abcbeeb0981136e788bad7e32"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_42e5177abcbeeb0981136e788bad7e32>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_42e5177abcbeeb0981136e788bad7e32>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-8bb63d2c4790da88183e41860bc23490"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-8bb63d2c4790da88183e41860bc23490"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_8bb63d2c4790da88183e41860bc23490>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_8bb63d2c4790da88183e41860bc23490>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-9c3aef89b8e43b8e3126e6d83731d134"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-9c3aef89b8e43b8e3126e6d83731d134"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_9c3aef89b8e43b8e3126e6d83731d134>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_9c3aef89b8e43b8e3126e6d83731d134>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-92288559d9e34010eb70d83250180f6e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-92288559d9e34010eb70d83250180f6e"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_92288559d9e34010eb70d83250180f6e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_92288559d9e34010eb70d83250180f6e>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-c5aa3b12fbff70f23f9729b1ca8a7c80"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-c5aa3b12fbff70f23f9729b1ca8a7c80"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_c5aa3b12fbff70f23f9729b1ca8a7c80>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_c5aa3b12fbff70f23f9729b1ca8a7c80>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-645f377827cb9a4f939eb9e4e4fa6080"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-645f377827cb9a4f939eb9e4e4fa6080"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_645f377827cb9a4f939eb9e4e4fa6080>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_645f377827cb9a4f939eb9e4e4fa6080>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-85d46fe9cb504577f4ad575f87678f39"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-85d46fe9cb504577f4ad575f87678f39"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_85d46fe9cb504577f4ad575f87678f39>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_85d46fe9cb504577f4ad575f87678f39>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registerbindings-l2-lambda-d178fde3ac7efc4d2f1528ab6d7b1d3f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registerbindings-l2-lambda-d178fde3ac7efc4d2f1528ab6d7b1d3f"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerBindings::__l2::<lambda_d178fde3ac7efc4d2f1528ab6d7b1d3f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerBindings::__l2::<lambda_d178fde3ac7efc4d2f1528ab6d7b1d3f>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-dfa635092b10483cfc7dd6bc75dd17ae"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-dfa635092b10483cfc7dd6bc75dd17ae"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_dfa635092b10483cfc7dd6bc75dd17ae>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_dfa635092b10483cfc7dd6bc75dd17ae>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-958b7dc635e2f18eab730cae249c994f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-958b7dc635e2f18eab730cae249c994f"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_958b7dc635e2f18eab730cae249c994f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_958b7dc635e2f18eab730cae249c994f>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-86312da72210731d01a9ceff375b34ee"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-86312da72210731d01a9ceff375b34ee"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_86312da72210731d01a9ceff375b34ee>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_86312da72210731d01a9ceff375b34ee>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-3f0cd4ac7726f88d92e93a8f646f4d98"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-3f0cd4ac7726f88d92e93a8f646f4d98"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_3f0cd4ac7726f88d92e93a8f646f4d98>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_3f0cd4ac7726f88d92e93a8f646f4d98>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-dc049d57de45b1f35abee2e5056eaa77"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-dc049d57de45b1f35abee2e5056eaa77"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_dc049d57de45b1f35abee2e5056eaa77>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_dc049d57de45b1f35abee2e5056eaa77>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-74ef516e56dac0edee49b79d5d7079b5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-74ef516e56dac0edee49b79d5d7079b5"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_74ef516e56dac0edee49b79d5d7079b5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_74ef516e56dac0edee49b79d5d7079b5>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-08d957a9ad6acc2a617c78b2c7006a27"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-08d957a9ad6acc2a617c78b2c7006a27"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_08d957a9ad6acc2a617c78b2c7006a27>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_08d957a9ad6acc2a617c78b2c7006a27>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-f573a41b9e98cd4ee069e4973e98b68f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-f573a41b9e98cd4ee069e4973e98b68f"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_f573a41b9e98cd4ee069e4973e98b68f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_f573a41b9e98cd4ee069e4973e98b68f>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-d6b6139d70fba103d9d2b339bc9a873d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-d6b6139d70fba103d9d2b339bc9a873d"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_d6b6139d70fba103d9d2b339bc9a873d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_d6b6139d70fba103d9d2b339bc9a873d>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-31cc49485365e4cecf19f8c37745a88c"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-31cc49485365e4cecf19f8c37745a88c"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_31cc49485365e4cecf19f8c37745a88c>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_31cc49485365e4cecf19f8c37745a88c>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-2717da237319f56673aefabc43f5988f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-2717da237319f56673aefabc43f5988f"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_2717da237319f56673aefabc43f5988f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_2717da237319f56673aefabc43f5988f>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-a9ea8696386cc38422bcf7ab14da9f61"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-a9ea8696386cc38422bcf7ab14da9f61"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_a9ea8696386cc38422bcf7ab14da9f61>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_a9ea8696386cc38422bcf7ab14da9f61>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-0c070f5882fccf42a617af8c6cc6824f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-0c070f5882fccf42a617af8c6cc6824f"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_0c070f5882fccf42a617af8c6cc6824f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_0c070f5882fccf42a617af8c6cc6824f>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-c87477bbaede8a4ef55647bf35f15454"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-c87477bbaede8a4ef55647bf35f15454"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_c87477bbaede8a4ef55647bf35f15454>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_c87477bbaede8a4ef55647bf35f15454>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-154b61a8f083037a562b2655f5c2ff49"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-154b61a8f083037a562b2655f5c2ff49"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_154b61a8f083037a562b2655f5c2ff49>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_154b61a8f083037a562b2655f5c2ff49>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-35366de2a5c80746f384d8d3bcd22eb3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-35366de2a5c80746f384d8d3bcd22eb3"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_35366de2a5c80746f384d8d3bcd22eb3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_35366de2a5c80746f384d8d3bcd22eb3>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-17ad5a79aa343f5dce2b65f11f20b09e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-17ad5a79aa343f5dce2b65f11f20b09e"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_17ad5a79aa343f5dce2b65f11f20b09e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_17ad5a79aa343f5dce2b65f11f20b09e>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-1561890049b9c19bce48e342bb64d848"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-1561890049b9c19bce48e342bb64d848"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_1561890049b9c19bce48e342bb64d848>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_1561890049b9c19bce48e342bb64d848>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-84839fa596fdc0a020032dadd2dfccdc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-84839fa596fdc0a020032dadd2dfccdc"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_84839fa596fdc0a020032dadd2dfccdc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_84839fa596fdc0a020032dadd2dfccdc>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-ed9c1f11b18958b9124ff8f646b644bf"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-ed9c1f11b18958b9124ff8f646b644bf"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_ed9c1f11b18958b9124ff8f646b644bf>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_ed9c1f11b18958b9124ff8f646b644bf>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-74917e8ca45a859c11ea6baf308534e1"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-74917e8ca45a859c11ea6baf308534e1"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_74917e8ca45a859c11ea6baf308534e1>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_74917e8ca45a859c11ea6baf308534e1>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-110ba341efe7a36bf690d008e154cd42"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-110ba341efe7a36bf690d008e154cd42"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_110ba341efe7a36bf690d008e154cd42>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_110ba341efe7a36bf690d008e154cd42>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-a54df26685fd3d92bcf8cf5d336bfce0"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-a54df26685fd3d92bcf8cf5d336bfce0"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_a54df26685fd3d92bcf8cf5d336bfce0>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_a54df26685fd3d92bcf8cf5d336bfce0>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-4361ee77f97cf2f3819f2344137b6d72"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-4361ee77f97cf2f3819f2344137b6d72"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_4361ee77f97cf2f3819f2344137b6d72>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_4361ee77f97cf2f3819f2344137b6d72>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-663ca88f039158acd12a83b67fcfa190"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-663ca88f039158acd12a83b67fcfa190"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_663ca88f039158acd12a83b67fcfa190>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_663ca88f039158acd12a83b67fcfa190>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-7dc9daea7a69aed8fe448ea2e1c1c846"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-7dc9daea7a69aed8fe448ea2e1c1c846"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_7dc9daea7a69aed8fe448ea2e1c1c846>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_7dc9daea7a69aed8fe448ea2e1c1c846>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-82294aac5ff483bfdadd8812d9ac7a44"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-82294aac5ff483bfdadd8812d9ac7a44"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_82294aac5ff483bfdadd8812d9ac7a44>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_82294aac5ff483bfdadd8812d9ac7a44>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-831d0183d5475c36268ccfd320b15f7d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-831d0183d5475c36268ccfd320b15f7d"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_831d0183d5475c36268ccfd320b15f7d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_831d0183d5475c36268ccfd320b15f7d>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-831d0183d5475c36268ccfd320b15f7d-l5-lambda-29fcba485d3c7186b0a5a769cf9477fb"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-831d0183d5475c36268ccfd320b15f7d-l5-lambda-29fcba485d3c7186b0a5a769cf9477fb"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_831d0183d5475c36268ccfd320b15f7d>::()::__l5::<lambda_29fcba485d3c7186b0a5a769cf9477fb>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_831d0183d5475c36268ccfd320b15f7d>::()::__l5::<lambda_29fcba485d3c7186b0a5a769cf9477fb>\n{\n  std::string *newName;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-registereventhandlers-l2-lambda-62cd34819bb144d4a718458e1ec8cfc2"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-registereventhandlers-l2-lambda-62cd34819bb144d4a718458e1ec8cfc2"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_62cd34819bb144d4a718458e1ec8cfc2>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_registerEventHandlers::__l2::<lambda_62cd34819bb144d4a718458e1ec8cfc2>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-tick-l14-lambda-71f3c6f4f3703f5826dd865b72addcde"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-tick-l14-lambda-71f3c6f4f3703f5826dd865b72addcde"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::tick::__l14::<lambda_71f3c6f4f3703f5826dd865b72addcde>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::tick::__l14::<lambda_71f3c6f4f3703f5826dd865b72addcde>\n{\n  std::weak_ptr<StructureEditorScreenController> weakThis;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-initiateexport-l12-lambda-44cf8e96a5035585dedb484d2d92f642"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-initiateexport-l12-lambda-44cf8e96a5035585dedb484d2d92f642"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_initiateExport::__l12::<lambda_44cf8e96a5035585dedb484d2d92f642>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_initiateExport::__l12::<lambda_44cf8e96a5035585dedb484d2d92f642>\n{\n  std::weak_ptr<StructureEditorScreenController> weakThis;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-initiateexport-l12-lambda-92d4ec9a1a9afd13498a146cc0a80f05"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-initiateexport-l12-lambda-92d4ec9a1a9afd13498a146cc0a80f05"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_initiateExport::__l12::<lambda_92d4ec9a1a9afd13498a146cc0a80f05>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_initiateExport::__l12::<lambda_92d4ec9a1a9afd13498a146cc0a80f05>\n{\n  std::weak_ptr<StructureEditorScreenController> weakThis;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-initiateexport-l12-lambda-1e8c3d51b9a59a1d6cf180d991a96183"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-initiateexport-l12-lambda-1e8c3d51b9a59a1d6cf180d991a96183"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_initiateExport::__l12::<lambda_1e8c3d51b9a59a1d6cf180d991a96183>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) StructureEditorScreenController::_initiateExport::__l12::<lambda_1e8c3d51b9a59a1d6cf180d991a96183>\n{\n  std::weak_ptr<StructureEditorScreenController> weakThis;\n  StructureTemplateRequestOperation exportOperation;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-filepickerforexport-l2-lambda-d0f4e1b97c2b6a4e9a8533aae17f00fe"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-filepickerforexport-l2-lambda-d0f4e1b97c2b6a4e9a8533aae17f00fe"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_filePickerForExport::__l2::<lambda_d0f4e1b97c2b6a4e9a8533aae17f00fe>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_filePickerForExport::__l2::<lambda_d0f4e1b97c2b6a4e9a8533aae17f00fe>\n{\n  StructureEditorScreenController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"structureeditorscreencontroller-filepickerforexport-l2-lambda-3822bb2053a55165f069b4f692424baa"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#structureeditorscreencontroller-filepickerforexport-l2-lambda-3822bb2053a55165f069b4f692424baa"}},[t._v("#")]),t._v(" "),c("code",[t._v("StructureEditorScreenController::_filePickerForExport::__l2::<lambda_3822bb2053a55165f069b4f692424baa>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj StructureEditorScreenController::_filePickerForExport::__l2::<lambda_3822bb2053a55165f069b4f692424baa>\n{\n  StructureEditorScreenController *const __this;\n  std::shared_ptr<FilePickerSettings> pickerSettings;\n  const std::string *structureName;\n};\n\n")])])]),c("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-e2b51608baa087dc2b80d24071bb6844"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-e2b51608baa087dc2b80d24071bb6844"}},[t._v("#")]),t._v(" "),c("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_e2b51608baa087dc2b80d24071bb6844>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_e2b51608baa087dc2b80d24071bb6844>\n{\n  bool <args_0>;\n  bool <args_1>;\n  CraftingType <args_2>;\n};\n\n")])])]),c("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-60392c5ae36866dfcce58558d05abe86"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-60392c5ae36866dfcce58558d05abe86"}},[t._v("#")]),t._v(" "),c("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_60392c5ae36866dfcce58558d05abe86>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_60392c5ae36866dfcce58558d05abe86>\n{\n  BlockActorType <args_0>;\n};\n\n")])])]),c("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-28407d547321730e910a933db892eab3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-28407d547321730e910a933db892eab3"}},[t._v("#")]),t._v(" "),c("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_28407d547321730e910a933db892eab3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_28407d547321730e910a933db892eab3>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-2c4014e86efd85151d693d483b1c8ae0"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-2c4014e86efd85151d693d483b1c8ae0"}},[t._v("#")]),t._v(" "),c("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_2c4014e86efd85151d693d483b1c8ae0>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_2c4014e86efd85151d693d483b1c8ae0>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-eaf6a1a7616fd7652cdcba455066ac17"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-eaf6a1a7616fd7652cdcba455066ac17"}},[t._v("#")]),t._v(" "),c("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_eaf6a1a7616fd7652cdcba455066ac17>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_eaf6a1a7616fd7652cdcba455066ac17>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-d1df447776e9d6c8d664da3462859960"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-d1df447776e9d6c8d664da3462859960"}},[t._v("#")]),t._v(" "),c("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_d1df447776e9d6c8d664da3462859960>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_d1df447776e9d6c8d664da3462859960>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-880e2e0794a164a9c4be0a8cba10e48a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-880e2e0794a164a9c4be0a8cba10e48a"}},[t._v("#")]),t._v(" "),c("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_880e2e0794a164a9c4be0a8cba10e48a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_880e2e0794a164a9c4be0a8cba10e48a>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-e4706ef1a8ad552e10b7fe744a56b9e3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-e4706ef1a8ad552e10b7fe744a56b9e3"}},[t._v("#")]),t._v(" "),c("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_e4706ef1a8ad552e10b7fe744a56b9e3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_e4706ef1a8ad552e10b7fe744a56b9e3>\n{\n};\n\n")])])])])}),[],!1,null,null,null);c.default=o.exports}}]);