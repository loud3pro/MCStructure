(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{444:function(t,e,a){"use strict";a.r(e);var l=a(27),o=Object(l.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"l"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#l"}},[t._v("#")]),t._v(" L")]),t._v(" "),e("h3",{attrs:{id:"legacyworldinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyworldinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyWorldInfo")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(568) "),e("code",[t._v("LocalWorldInfo")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("568")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mIdentifier")])]),t._v(" "),e("tr",[e("td",[t._v("600")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsBetaRetailSave")])])])]),t._v(" "),e("h3",{attrs:{id:"localworldinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localworldinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalWorldInfo")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("WorldInfo")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mScreenshotTexture")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("mFileSize")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mFilesizeAsString")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mWorldName")])]),t._v(" "),e("tr",[e("td",[t._v("112")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mDate")])]),t._v(" "),e("tr",[e("td",[t._v("144")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mGameType")])]),t._v(" "),e("tr",[e("td",[t._v("176")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mLocalStorage")])]),t._v(" "),e("tr",[e("td",[t._v("177")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCloudStorage")])]),t._v(" "),e("tr",[e("td",[t._v("178")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsDirty")])]),t._v(" "),e("tr",[e("td",[t._v("179")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsBetaRetailSave")])]),t._v(" "),e("tr",[e("td",[t._v("184")]),t._v(" "),e("td",[t._v("(384) "),e("code",[t._v("LevelSummary")])]),t._v(" "),e("td",[t._v("mLevelSummary")])])])]),t._v(" "),e("h3",{attrs:{id:"levelsummary"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelsummary"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelSummary")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mId")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mName")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("mLastPlayed")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("GameType")])]),t._v(" "),e("td",[t._v("mGameType")])]),t._v(" "),e("tr",[e("td",[t._v("76")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("Difficulty")])]),t._v(" "),e("td",[t._v("mGameDifficulty")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mSeed")])]),t._v(" "),e("tr",[e("td",[t._v("84")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mNetworkProtocolVersion")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("mSizeOnDisk")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mConfirmedPlatformLockedContent")])]),t._v(" "),e("tr",[e("td",[t._v("97")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mLANBroadcastIntent")])]),t._v(" "),e("tr",[e("td",[t._v("100")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("Social::GamePublishSetting")])]),t._v(" "),e("td",[t._v("mXBLBroadcastIntent")])]),t._v(" "),e("tr",[e("td",[t._v("104")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCommandsEnabled")])]),t._v(" "),e("tr",[e("td",[t._v("108")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("EducationEditionOfferValue")])]),t._v(" "),e("td",[t._v("mEducationEditionOffer")])]),t._v(" "),e("tr",[e("td",[t._v("112")]),t._v(" "),e("td",[t._v("(56) "),e("code",[t._v("GameVersion")])]),t._v(" "),e("td",[t._v("mLastLoadedGameVersion")])]),t._v(" "),e("tr",[e("td",[t._v("168")]),t._v(" "),e("td",[t._v("(56) "),e("code",[t._v("GameVersion")])]),t._v(" "),e("td",[t._v("mMinCompatibleClientVersion")])]),t._v(" "),e("tr",[e("td",[t._v("224")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("_BYTE[4]")])]),t._v(" "),e("td",[t._v("mStorageVersion")])]),t._v(" "),e("tr",[e("td",[t._v("232")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("Core::PathBuffer<std::string >")])]),t._v(" "),e("td",[t._v("mWorldIconPath")])]),t._v(" "),e("tr",[e("td",[t._v("264")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("Core::PathBuffer<std::string >")])]),t._v(" "),e("td",[t._v("mWorldIconTargetPath")])]),t._v(" "),e("tr",[e("td",[t._v("296")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("ContentIdentity")])]),t._v(" "),e("td",[t._v("mPremiumTemplateContentIdentity")])]),t._v(" "),e("tr",[e("td",[t._v("320")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mEducationOid")])]),t._v(" "),e("tr",[e("td",[t._v("352")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsSingleUseWorld")])]),t._v(" "),e("tr",[e("td",[t._v("353")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsBetaRetailLevel")])]),t._v(" "),e("tr",[e("td",[t._v("360")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("ContentIdentity")])]),t._v(" "),e("td",[t._v("?")])])])]),t._v(" "),e("h3",{attrs:{id:"layoutrule-addstackpanelvisibilityterm-l2-lambda-41e73def6e306693a2d0395c1cfcc6a2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-addstackpanelvisibilityterm-l2-lambda-41e73def6e306693a2d0395c1cfcc6a2"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addStackPanelVisibilityTerm::__l2::<lambda_41e73def6e306693a2d0395c1cfcc6a2>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"layoutmanager-update-l2-lambda-582f447c20f51f382c4eb7054a5dd98a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutmanager-update-l2-lambda-582f447c20f51f382c4eb7054a5dd98a"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutManager::_update::__l2::<lambda_582f447c20f51f382c4eb7054a5dd98a>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"levelbuilder-preparerenderchunkrenderlist-l2-lambda-68215dddadd9af939d720f1d070375e1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-preparerenderchunkrenderlist-l2-lambda-68215dddadd9af939d720f1d070375e1"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::_prepareRenderChunkRenderList::__l2::<lambda_68215dddadd9af939d720f1d070375e1>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"levelbuilder-buildrenderchunks-l2-lambda-a08ac9d83425319e6a6e10392713a815-l2-lambda-e21558297a2641a2000dbf4a718e58a4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-buildrenderchunks-l2-lambda-a08ac9d83425319e6a6e10392713a815-l2-lambda-e21558297a2641a2000dbf4a718e58a4"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::_buildRenderChunks::__l2::<lambda_a08ac9d83425319e6a6e10392713a815>::()::__l2::<lambda_e21558297a2641a2000dbf4a718e58a4>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"lockless-weakatomic-spscqueue-gamecontrollerhandler-windows-inputstate-windows-512-block"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lockless-weakatomic-spscqueue-gamecontrollerhandler-windows-inputstate-windows-512-block"}},[t._v("#")]),t._v(" "),e("code",[t._v("Lockless::WeakAtomic<SPSCQueue<GameControllerHandler_Windows::InputState_Windows,512>::Block *>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::atomic<SPSCQueue<GameControllerHandler_Windows::InputState_Windows,512>::Block *>")])]),t._v(" "),e("td",[t._v("mValue")])])])]),t._v(" "),e("h3",{attrs:{id:"listtag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listtag"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListTag")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Tag")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::unique_ptr<Tag>>")])]),t._v(" "),e("td",[t._v("mList")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("_BYTE[1]")])]),t._v(" "),e("td",[t._v("mType")])])])]),t._v(" "),e("h3",{attrs:{id:"levelchunk-fixupcorruptedblockactors-l2-lambda-484ffdbe9c80c92eec14bddff882ab4a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunk-fixupcorruptedblockactors-l2-lambda-484ffdbe9c80c92eec14bddff882ab4a"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunk::_fixupCorruptedBlockActors::__l2::<lambda_484ffdbe9c80c92eec14bddff882ab4a>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"level-comparelevelchunkqueuedsavingelement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#level-comparelevelchunkqueuedsavingelement"}},[t._v("#")]),t._v(" "),e("code",[t._v("Level::CompareLevelChunkQueuedSavingElement")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"layerfilters-backcompatsorter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerfilters-backcompatsorter"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerFilters::BackCompatSorter")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"layerresult-enum-biometemperaturecategory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerresult-enum-biometemperaturecategory"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerResult<enum BiomeTemperatureCategory>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<char [0]>")])]),t._v(" "),e("td",[t._v("mResult")])])])]),t._v(" "),e("h3",{attrs:{id:"loginstatemachine"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loginstatemachine"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoginStateMachine")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LoginStateMachine_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<BaseStage>")])]),t._v(" "),e("td",[t._v("mCurrent")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(void)>")])]),t._v(" "),e("td",[t._v("mSuccCallback")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(enum eLoginStage,int,std::string,std::string)>")])]),t._v(" "),e("td",[t._v("mFailCallback")])]),t._v(" "),e("tr",[e("td",[t._v("152")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("eLoginStage")])]),t._v(" "),e("td",[t._v("mLoginStage")])]),t._v(" "),e("tr",[e("td",[t._v("160")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::string>")])]),t._v(" "),e("td",[t._v("mDnsIpArray")])]),t._v(" "),e("tr",[e("td",[t._v("184")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mDnsTxtTTL")])]),t._v(" "),e("tr",[e("td",[t._v("188")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("mDnsValidTime")])]),t._v(" "),e("tr",[e("td",[t._v("192")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::map<std::string,std::pair<std::vector<std::string>,unsigned int>>")])]),t._v(" "),e("td",[t._v("mDomainCacheMap")])]),t._v(" "),e("tr",[e("td",[t._v("208")]),t._v(" "),e("td",[t._v("(80) "),e("code",[t._v("std::mutex")])]),t._v(" "),e("td",[t._v("mResMutex")])]),t._v(" "),e("tr",[e("td",[t._v("288")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mDirtyDNS")])]),t._v(" "),e("tr",[e("td",[t._v("289")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("misLoginEnable")])]),t._v(" "),e("tr",[e("td",[t._v("290")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("misLoginSuccess")])]),t._v(" "),e("tr",[e("td",[t._v("296")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mNickName")])]),t._v(" "),e("tr",[e("td",[t._v("328")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsOfflineStart")])]),t._v(" "),e("tr",[e("td",[t._v("329")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("misOfflineStartEnable")])]),t._v(" "),e("tr",[e("td",[t._v("336")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("Json::Value")])]),t._v(" "),e("td",[t._v("mUpdatePatchInfo")])]),t._v(" "),e("tr",[e("td",[t._v("352")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("?")])]),t._v(" "),e("tr",[e("td",[t._v("353")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mRnInstalled")])]),t._v(" "),e("tr",[e("td",[t._v("354")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mLogoHided")])]),t._v(" "),e("tr",[e("td",[t._v("355")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsRnInited")])]),t._v(" "),e("tr",[e("td",[t._v("356")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsCheckedPatch")])]),t._v(" "),e("tr",[e("td",[t._v("357")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mNeedCheckUpdate")])]),t._v(" "),e("tr",[e("td",[t._v("358")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCheckUpdateFromOffline")])]),t._v(" "),e("tr",[e("td",[t._v("360")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mWebServerUrl")])]),t._v(" "),e("tr",[e("td",[t._v("392")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mCoreServerUrl")])]),t._v(" "),e("tr",[e("td",[t._v("424")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mWebServerGrayUrl")])]),t._v(" "),e("tr",[e("td",[t._v("456")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mTransServerUrl")])]),t._v(" "),e("tr",[e("td",[t._v("488")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mCdnServerUrl")])]),t._v(" "),e("tr",[e("td",[t._v("520")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mChatServerUrl")])]),t._v(" "),e("tr",[e("td",[t._v("552")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mAuthServerUrl")])]),t._v(" "),e("tr",[e("td",[t._v("584")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mApiGatewayUrl")])]),t._v(" "),e("tr",[e("td",[t._v("616")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mH5ResVersionUrl")])]),t._v(" "),e("tr",[e("td",[t._v("648")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mH5ResServerUrl")])]),t._v(" "),e("tr",[e("td",[t._v("680")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mTranSrvInfoJson")])]),t._v(" "),e("tr",[e("td",[t._v("712")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mChatServerJson")])]),t._v(" "),e("tr",[e("td",[t._v("744")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mSensitiveWordJson")])]),t._v(" "),e("tr",[e("td",[t._v("776")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mDebugUserName")])]),t._v(" "),e("tr",[e("td",[t._v("808")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mDebugPassword")])]),t._v(" "),e("tr",[e("td",[t._v("840")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mMomentUrl")])]),t._v(" "),e("tr",[e("td",[t._v("872")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mFirstLogin")])]),t._v(" "),e("tr",[e("td",[t._v("904")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mSelectServerIndex")])]),t._v(" "),e("tr",[e("td",[t._v("912")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mServerListUrl")])]),t._v(" "),e("tr",[e("td",[t._v("944")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mTestUpdateFlag")])]),t._v(" "),e("tr",[e("td",[t._v("976")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::string>")])]),t._v(" "),e("td",[t._v("mServerListArray")])]),t._v(" "),e("tr",[e("td",[t._v("1000")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mServerListName")])]),t._v(" "),e("tr",[e("td",[t._v("1032")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mJf_gas_url")])]),t._v(" "),e("tr",[e("td",[t._v("1064")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mAuthenSeed")])]),t._v(" "),e("tr",[e("td",[t._v("1096")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mAuthenKey")])]),t._v(" "),e("tr",[e("td",[t._v("1128")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mAuthenValue1")])]),t._v(" "),e("tr",[e("td",[t._v("1160")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mAuthenValue2")])]),t._v(" "),e("tr",[e("td",[t._v("1192")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mAuthenValue3")])]),t._v(" "),e("tr",[e("td",[t._v("1224")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mAuthenSign")])]),t._v(" "),e("tr",[e("td",[t._v("1256")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mAuthenTimeStamp")])]),t._v(" "),e("tr",[e("td",[t._v("1288")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mServerStop")])]),t._v(" "),e("tr",[e("td",[t._v("1289")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mUpdateStop")])]),t._v(" "),e("tr",[e("td",[t._v("1290")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mUseHttpDNS")])]),t._v(" "),e("tr",[e("td",[t._v("1291")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("?")])]),t._v(" "),e("tr",[e("td",[t._v("1292")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsPatchUpdated")])]),t._v(" "),e("tr",[e("td",[t._v("1296")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mPatchUpdateStatus")])]),t._v(" "),e("tr",[e("td",[t._v("1304")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("mPatchStartTimeStamp")])]),t._v(" "),e("tr",[e("td",[t._v("1312")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("mPatchSuccTimeStamp")])]),t._v(" "),e("tr",[e("td",[t._v("1320")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("mPatchFailTimeStamp")])])])]),t._v(" "),e("h3",{attrs:{id:"lockless-weakatomic-spscqueue-unsigned-int-512-block"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lockless-weakatomic-spscqueue-unsigned-int-512-block"}},[t._v("#")]),t._v(" "),e("code",[t._v("Lockless::WeakAtomic<SPSCQueue<unsigned int,512>::Block *>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::atomic<SPSCQueue<unsigned int,512>::Block *>")])]),t._v(" "),e("td",[t._v("mValue")])])])]),t._v(" "),e("h3",{attrs:{id:"layerresult-float"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerresult-float"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerResult<float>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<char [0]>")])]),t._v(" "),e("td",[t._v("mResult")])])])]),t._v(" "),e("h3",{attrs:{id:"layervalues-prebiome"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layervalues-prebiome"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerValues::PreBiome")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("LayerValues::Terrain")])]),t._v(" "),e("td",[t._v("mTerrain")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("_BYTE[1]")])]),t._v(" "),e("td",[t._v("mTemperature")])])])]),t._v(" "),e("h3",{attrs:{id:"layerresult-bool"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerresult-bool"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerResult<bool>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<char [0]>")])]),t._v(" "),e("td",[t._v("mResult")])])])]),t._v(" "),e("h3",{attrs:{id:"loopingsoundstate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loopingsoundstate"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoopingSoundState")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("glm::tvec3<float,0>")])]),t._v(" "),e("td",[t._v("position")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("pitch")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("volume")])])])]),t._v(" "),e("h3",{attrs:{id:"label"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#label"}},[t._v("#")]),t._v(" "),e("code",[t._v("label")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("lb_type")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char *")])]),t._v(" "),e("td",[t._v("lb_str")])])])]),t._v(" "),e("h3",{attrs:{id:"legacyskinserialization"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyskinserialization"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacySkinSerialization")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(112) "),e("code",[t._v("SkinHandle")])]),t._v(" "),e("td",[t._v("mSkinHandle")])]),t._v(" "),e("tr",[e("td",[t._v("112")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("persona::ProfileType")])]),t._v(" "),e("td",[t._v("mLastUsedSlot")])]),t._v(" "),e("tr",[e("td",[t._v("116")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mBeingDeleted")])])])]),t._v(" "),e("h3",{attrs:{id:"labellist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#labellist"}},[t._v("#")]),t._v(" "),e("code",[t._v("labellist")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("ll_nlabels")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("label *")])]),t._v(" "),e("td",[t._v("ll_label")])])])]),t._v(" "),e("h3",{attrs:{id:"lexicon-struct"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lexicon-struct"}},[t._v("#")]),t._v(" "),e("code",[t._v("lexicon_struct")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char *")])]),t._v(" "),e("td",[t._v("name")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("num_entries")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int8 *")])]),t._v(" "),e("td",[t._v("data")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("num_bytes")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char **")])]),t._v(" "),e("td",[t._v("phone_table")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("cst_lts_rules_struct *")])]),t._v(" "),e("td",[t._v("lts_rule_set")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(const cst_item_struct *, const cst_val_struct *)")])]),t._v(" "),e("td",[t._v("syl_boundary")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("cst_val_struct *(__fastcall *)(const lexicon_struct *, const char *, const char *, const cst_features_struct *)")])]),t._v(" "),e("td",[t._v("lts_function")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char ***")])]),t._v(" "),e("td",[t._v("addenda")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *const *")])]),t._v(" "),e("td",[t._v("phone_hufftable")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *const *")])]),t._v(" "),e("td",[t._v("entry_hufftable")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("cst_utterance_struct *(__fastcall *)(cst_utterance_struct *)")])]),t._v(" "),e("td",[t._v("postlex")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("cst_val_struct *")])]),t._v(" "),e("td",[t._v("lex_addenda")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-logger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-logger"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Logger")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::Logger_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])])])]),t._v(" "),e("h3",{attrs:{id:"localconnectivitysystem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localconnectivitysystem"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalConnectivitySystem")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LocalConnector *")])]),t._v(" "),e("td",[t._v("mHostConnector")])])])]),t._v(" "),e("h3",{attrs:{id:"localization"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localization"}},[t._v("#")]),t._v(" "),e("code",[t._v("Localization")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCommaSeperator")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("const std::string")])]),t._v(" "),e("td",[t._v("mCode")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::map<std::string,std::string>")])]),t._v(" "),e("td",[t._v("mStrings")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<std::mutex>")])]),t._v(" "),e("td",[t._v("m_lock")])])])]),t._v(" "),e("h3",{attrs:{id:"legacyoptionsconverterinternal-conversionrule"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyoptionsconverterinternal-conversionrule"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyOptionsConverterInternal::ConversionRule")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("LegacyOption")])]),t._v(" "),e("td",[t._v("mSourceOption")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("OptionID")])]),t._v(" "),e("td",[t._v("mTargetOption")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<bool __cdecl(enum LegacyOption,enum OptionID,LegacyOptionsParser const &,Options &)>")])]),t._v(" "),e("td",[t._v("mConversionRecipe")])])])]),t._v(" "),e("h3",{attrs:{id:"lodestonecompasscomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lodestonecompasscomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("LodestoneCompassComponent")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("PositionTrackingId")])]),t._v(" "),e("td",[t._v("mTrackingHandle")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<std::variant<ActorUniqueID,std::pair<BlockPos,AutomaticID<Dimension,int> > >,std::unique_ptr<LodestoneCompassComponentCalculator>,std::hash<std::variant<ActorUniqueID,std::pair<BlockPos,AutomaticID<Dimension,int> > > >,std::equal_to<std::variant<ActorUniqueID,std::pair<BlockPos,AutomaticID<Dimension,int> > > >,std::allocator<std::pair<std::variant<ActorUniqueID,std::pair<BlockPos,AutomaticID<Dimension,int> > > const ,std::unique_ptr<LodestoneCompassComponentCalculator> > > >")])]),t._v(" "),e("td",[t._v("mCalculators")])])])]),t._v(" "),e("h3",{attrs:{id:"levelsoundeventpacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelsoundeventpacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelSoundEventPacket")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("Packet")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("LevelSoundEvent")])]),t._v(" "),e("td",[t._v("mEventId")])]),t._v(" "),e("tr",[e("td",[t._v("44")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mPos")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mData")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mEntityIdentifier")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsBabyMob")])]),t._v(" "),e("tr",[e("td",[t._v("97")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsGlobal")])])])]),t._v(" "),e("h3",{attrs:{id:"levelloader-importlevel-l2-lambda-ef1a8fc506d0b5dfc78e5f6835e03656"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelloader-importlevel-l2-lambda-ef1a8fc506d0b5dfc78e5f6835e03656"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelLoader::_importLevel::__l2::<lambda_ef1a8fc506d0b5dfc78e5f6835e03656>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LevelLoader *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("const ImportLevelData")])]),t._v(" "),e("td",[t._v("levelData")])])])]),t._v(" "),e("h3",{attrs:{id:"levelsettings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelsettings"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelSettings")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("mSeed")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("GameType")])]),t._v(" "),e("td",[t._v("mGameType")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("Difficulty")])]),t._v(" "),e("td",[t._v("mGameDifficulty")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mForceGameType")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("GeneratorType")])]),t._v(" "),e("td",[t._v("mGenerator")])]),t._v(" "),e("tr",[e("td",[t._v("20")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("_BYTE[1]")])]),t._v(" "),e("td",[t._v("mNetherType")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(48) "),e("code",[t._v("SpawnSettings")])]),t._v(" "),e("td",[t._v("mSpawnSettings")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mAchievementsDisabled")])]),t._v(" "),e("tr",[e("td",[t._v("76")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mTime")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("EducationEditionOfferValue")])]),t._v(" "),e("td",[t._v("mEducationEditionOffer")])]),t._v(" "),e("tr",[e("td",[t._v("84")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mEducationFeaturesEnabled")])]),t._v(" "),e("tr",[e("td",[t._v("85")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mImmutableWorld")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mRainLevel")])]),t._v(" "),e("tr",[e("td",[t._v("92")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mLightningLevel")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mConfirmedPlatformLockedContent")])]),t._v(" "),e("tr",[e("td",[t._v("97")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mMultiplayerGameIntent")])]),t._v(" "),e("tr",[e("td",[t._v("98")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mLANBroadcastIntent")])]),t._v(" "),e("tr",[e("td",[t._v("100")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("Social::GamePublishSetting")])]),t._v(" "),e("td",[t._v("mXBLBroadcastIntent")])]),t._v(" "),e("tr",[e("td",[t._v("104")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("Social::GamePublishSetting")])]),t._v(" "),e("td",[t._v("mPlatformBroadcastIntent")])]),t._v(" "),e("tr",[e("td",[t._v("108")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCommandsEnabled")])]),t._v(" "),e("tr",[e("td",[t._v("109")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mTexturePacksRequired")])]),t._v(" "),e("tr",[e("td",[t._v("110")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasLockedBehaviorPack")])]),t._v(" "),e("tr",[e("td",[t._v("111")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasLockedResourcePack")])]),t._v(" "),e("tr",[e("td",[t._v("112")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsFromLockedTemplate")])]),t._v(" "),e("tr",[e("td",[t._v("113")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mUseMsaGamertagsOnly")])]),t._v(" "),e("tr",[e("td",[t._v("114")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mOverrideSettings")])]),t._v(" "),e("tr",[e("td",[t._v("115")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mBonusChestEnabled")])]),t._v(" "),e("tr",[e("td",[t._v("116")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mStartWithMapEnabled")])]),t._v(" "),e("tr",[e("td",[t._v("120")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mServerChunkTickRange")])]),t._v(" "),e("tr",[e("td",[t._v("124")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsFromWorldTemplate")])]),t._v(" "),e("tr",[e("td",[t._v("125")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsWorldTemplateOptionLocked")])]),t._v(" "),e("tr",[e("td",[t._v("126")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mSpawnV1Villagers")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mLimitedWorldWidth")])]),t._v(" "),e("tr",[e("td",[t._v("132")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mLimitedWorldDepth")])]),t._v(" "),e("tr",[e("td",[t._v("136")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mTempPlayerDimensionIdToCreate")])]),t._v(" "),e("tr",[e("td",[t._v("144")]),t._v(" "),e("td",[t._v("(2712) "),e("code",[t._v("Abilities")])]),t._v(" "),e("td",[t._v("mDefaultAbilities")])]),t._v(" "),e("tr",[e("td",[t._v("2856")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("BlockPos")])]),t._v(" "),e("td",[t._v("mDefaultSpawn")])]),t._v(" "),e("tr",[e("td",[t._v("2872")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<PackInstanceId>")])]),t._v(" "),e("td",[t._v("mNewWorldBehaviorPackIdentities")])]),t._v(" "),e("tr",[e("td",[t._v("2896")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<PackInstanceId>")])]),t._v(" "),e("td",[t._v("mNewWorldResourcePackIdentities")])]),t._v(" "),e("tr",[e("td",[t._v("2920")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("GameRules")])]),t._v(" "),e("td",[t._v("mGameRules")])]),t._v(" "),e("tr",[e("td",[t._v("2944")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("ExperimentStorage")])]),t._v(" "),e("td",[t._v("mExperiments")])]),t._v(" "),e("tr",[e("td",[t._v("2984")]),t._v(" "),e("td",[t._v("(112) "),e("code",[t._v("BaseGameVersion")])]),t._v(" "),e("td",[t._v("mBaseGameVersion")])]),t._v(" "),e("tr",[e("td",[t._v("3096")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mEducationProductID")])]),t._v(" "),e("tr",[e("td",[t._v("3128")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mBiomeOverride")])]),t._v(" "),e("tr",[e("td",[t._v("3160")]),t._v(" "),e("td",[t._v("(192) "),e("code",[t._v("std::optional<EducationLevelSettings>")])]),t._v(" "),e("td",[t._v("mEducationLevelSettings")])]),t._v(" "),e("tr",[e("td",[t._v("3352")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("std::optional<bool>")])]),t._v(" "),e("td",[t._v("mOverrideForceExperimentalGameplayFlag")])])])]),t._v(" "),e("h3",{attrs:{id:"lessoninfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessoninfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonInfo")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("courseId")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("lessonId")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldata"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelData")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(5) "),e("code",[t._v("AdventureSettings")])]),t._v(" "),e("td",[t._v("mAdventureSettings")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(280) "),e("code",[t._v("WorldTemplateLevelData")])]),t._v(" "),e("td",[t._v("mWorldTemplateLevelData")])]),t._v(" "),e("tr",[e("td",[t._v("288")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("GameRules")])]),t._v(" "),e("td",[t._v("mGameRules")])]),t._v(" "),e("tr",[e("td",[t._v("312")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("ExperimentStorage")])]),t._v(" "),e("td",[t._v("mExperiments")])]),t._v(" "),e("tr",[e("td",[t._v("352")]),t._v(" "),e("td",[t._v("(2712) "),e("code",[t._v("Abilities")])]),t._v(" "),e("td",[t._v("mDefaultAbilities")])]),t._v(" "),e("tr",[e("td",[t._v("3064")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mLevelName")])]),t._v(" "),e("tr",[e("td",[t._v("3096")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("_BYTE[4]")])]),t._v(" "),e("td",[t._v("mStorageVersion")])]),t._v(" "),e("tr",[e("td",[t._v("3104")]),t._v(" "),e("td",[t._v("(56) "),e("code",[t._v("GameVersion")])]),t._v(" "),e("td",[t._v("mMinCompatibleClientVersion")])]),t._v(" "),e("tr",[e("td",[t._v("3160")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mNetworkVersion")])]),t._v(" "),e("tr",[e("td",[t._v("3168")]),t._v(" "),e("td",[t._v("(112) "),e("code",[t._v("SemVersion")])]),t._v(" "),e("td",[t._v("mInventoryVersion")])]),t._v(" "),e("tr",[e("td",[t._v("3280")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Tick")])]),t._v(" "),e("td",[t._v("mCurrentTick")])]),t._v(" "),e("tr",[e("td",[t._v("3288")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasSpawnPos")])]),t._v(" "),e("tr",[e("td",[t._v("3292")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("BlockPos")])]),t._v(" "),e("td",[t._v("mLimitedWorldOrigin")])]),t._v(" "),e("tr",[e("td",[t._v("3304")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mTime")])]),t._v(" "),e("tr",[e("td",[t._v("3312")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("mLastPlayed")])]),t._v(" "),e("tr",[e("td",[t._v("3320")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("mServerTickRange")])]),t._v(" "),e("tr",[e("td",[t._v("3324")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mRainLevel")])]),t._v(" "),e("tr",[e("td",[t._v("3328")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mRainTime")])]),t._v(" "),e("tr",[e("td",[t._v("3332")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mLightningLevel")])]),t._v(" "),e("tr",[e("td",[t._v("3336")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mLightningTime")])]),t._v(" "),e("tr",[e("td",[t._v("3340")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mNetherScale")])]),t._v(" "),e("tr",[e("td",[t._v("3344")]),t._v(" "),e("td",[t._v("(56) "),e("code",[t._v("GameVersion")])]),t._v(" "),e("td",[t._v("mLastOpenedWithVersion")])]),t._v(" "),e("tr",[e("td",[t._v("3400")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("Difficulty")])]),t._v(" "),e("td",[t._v("mGameDifficulty")])]),t._v(" "),e("tr",[e("td",[t._v("3404")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mForceGameType")])]),t._v(" "),e("tr",[e("td",[t._v("3405")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mSpawnMobs")])]),t._v(" "),e("tr",[e("td",[t._v("3408")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("Json::Value")])]),t._v(" "),e("td",[t._v("mFlatworldGeneratorOptions")])]),t._v(" "),e("tr",[e("td",[t._v("3424")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("mWorldStartCount")])]),t._v(" "),e("tr",[e("td",[t._v("3428")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mAchievementsDisabled")])]),t._v(" "),e("tr",[e("td",[t._v("3432")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("EducationEditionOfferValue")])]),t._v(" "),e("td",[t._v("mEducationEditionOffer")])]),t._v(" "),e("tr",[e("td",[t._v("3436")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mEducationFeaturesEnabled")])]),t._v(" "),e("tr",[e("td",[t._v("3437")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsSingleUseWorld")])]),t._v(" "),e("tr",[e("td",[t._v("3438")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mConfirmedPlatformLockedContent")])]),t._v(" "),e("tr",[e("td",[t._v("3439")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mMultiplayerGameIntent")])]),t._v(" "),e("tr",[e("td",[t._v("3440")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mMultiplayerGame")])]),t._v(" "),e("tr",[e("td",[t._v("3441")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mLANBroadcastIntent")])]),t._v(" "),e("tr",[e("td",[t._v("3442")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mLANBroadcast")])]),t._v(" "),e("tr",[e("td",[t._v("3444")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("Social::GamePublishSetting")])]),t._v(" "),e("td",[t._v("mXBLBroadcastIntent")])]),t._v(" "),e("tr",[e("td",[t._v("3448")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("Social::GamePublishSetting")])]),t._v(" "),e("td",[t._v("mXBLBroadcastMode")])]),t._v(" "),e("tr",[e("td",[t._v("3452")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("Social::GamePublishSetting")])]),t._v(" "),e("td",[t._v("mPlatformBroadcastIntent")])]),t._v(" "),e("tr",[e("td",[t._v("3456")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("Social::GamePublishSetting")])]),t._v(" "),e("td",[t._v("mPlatformBroadcastMode")])]),t._v(" "),e("tr",[e("td",[t._v("3460")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCommandsEnabled")])]),t._v(" "),e("tr",[e("td",[t._v("3461")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mTexturePacksRequired")])]),t._v(" "),e("tr",[e("td",[t._v("3462")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasLockedBehaviorPack")])]),t._v(" "),e("tr",[e("td",[t._v("3463")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasLockedResourcePack")])]),t._v(" "),e("tr",[e("td",[t._v("3464")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsFromLockedTemplate")])]),t._v(" "),e("tr",[e("td",[t._v("3472")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mEducationProductId")])]),t._v(" "),e("tr",[e("td",[t._v("3504")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mUseMsaGamertagsOnly")])]),t._v(" "),e("tr",[e("td",[t._v("3505")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mBonusChestEnabled")])]),t._v(" "),e("tr",[e("td",[t._v("3506")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mBonusChestSpawned")])]),t._v(" "),e("tr",[e("td",[t._v("3507")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mStartWithMapEnabled")])]),t._v(" "),e("tr",[e("td",[t._v("3508")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mUselimitArea")])]),t._v(" "),e("tr",[e("td",[t._v("3512")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mLimitAreaCenter")])]),t._v(" "),e("tr",[e("td",[t._v("3524")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mLimitAreaOffsetX")])]),t._v(" "),e("tr",[e("td",[t._v("3528")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mLimitAreaOffsetZ")])]),t._v(" "),e("tr",[e("td",[t._v("3532")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mLockDifficulty")])]),t._v(" "),e("tr",[e("td",[t._v("3533")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mDisableItemUse")])]),t._v(" "),e("tr",[e("td",[t._v("3534")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mDisableItemUseOnBlock")])]),t._v(" "),e("tr",[e("td",[t._v("3536")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<int,int>")])]),t._v(" "),e("td",[t._v("mMapDimensionToVersion")])]),t._v(" "),e("tr",[e("td",[t._v("3600")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mMapsCenteredToOrigin")])]),t._v(" "),e("tr",[e("td",[t._v("3601")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mRequiresCopiedPackRemovalCheck")])]),t._v(" "),e("tr",[e("td",[t._v("3602")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mSpawnV1Villagers")])]),t._v(" "),e("tr",[e("td",[t._v("3603")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("_BYTE[1]")])]),t._v(" "),e("td",[t._v("mNetherType")])]),t._v(" "),e("tr",[e("td",[t._v("3608")]),t._v(" "),e("td",[t._v("(48) "),e("code",[t._v("SpawnSettings")])]),t._v(" "),e("td",[t._v("mSpawnSettings")])]),t._v(" "),e("tr",[e("td",[t._v("3656")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<HashedString,LevelDataValue>")])]),t._v(" "),e("td",[t._v("mValues")])]),t._v(" "),e("tr",[e("td",[t._v("3720")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<HashedString,LevelDataValue>")])]),t._v(" "),e("td",[t._v("mOverrides")])]),t._v(" "),e("tr",[e("td",[t._v("3784")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mBiomeOverride")])]),t._v(" "),e("tr",[e("td",[t._v("3816")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("ContentIdentity")])]),t._v(" "),e("td",[t._v("?")])])])]),t._v(" "),e("h3",{attrs:{id:"large-integer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#large-integer"}},[t._v("#")]),t._v(" "),e("code",[t._v("LARGE_INTEGER")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("$FAF74743FBE1C8632047CFB668F7028A")])]),t._v(" "),e("td",[t._v("__s0")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("struct {unsigned int LowPart;int HighPart;}")])]),t._v(" "),e("td",[t._v("u")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("QuadPart")])])])]),t._v(" "),e("h3",{attrs:{id:"lockedstateeventdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lockedstateeventdata"}},[t._v("#")]),t._v(" "),e("code",[t._v("LockedStateEventData")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("locked")])])])]),t._v(" "),e("h3",{attrs:{id:"latejoinpregamescreencontroller-checkpremiumaccessandshowupsell-l2-lambda-2760d6c2b2b29a79ae8f23ce45c3a731"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-checkpremiumaccessandshowupsell-l2-lambda-2760d6c2b2b29a79ae8f23ce45c3a731"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_checkPremiumAccessAndShowUpsell::__l2::<lambda_2760d6c2b2b29a79ae8f23ce45c3a731>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<LateJoinPreGameScreenController>")])]),t._v(" "),e("td",[t._v("weakThis")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(bool)>")])]),t._v(" "),e("td",[t._v("callback")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-internalkey"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-internalkey"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::InternalKey")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("rep_")])])])]),t._v(" "),e("h3",{attrs:{id:"levelrenderprerenderupdateparameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderprerenderupdateparameters"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderPreRenderUpdateParameters")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FrustumCuller *")])]),t._v(" "),e("td",[t._v("leftCuller")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FrustumCuller *")])]),t._v(" "),e("td",[t._v("rightCuller")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("glm::tvec3<float,0>")])]),t._v(" "),e("td",[t._v("cameraWorldPosition")])]),t._v(" "),e("tr",[e("td",[t._v("28")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("glm::tvec3<float,0>")])]),t._v(" "),e("td",[t._v("cameraTargetWorldPosition")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("glm::tvec3<float,0>")])]),t._v(" "),e("td",[t._v("cameraForward")])]),t._v(" "),e("tr",[e("td",[t._v("52")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("const unsigned int")])]),t._v(" "),e("td",[t._v("viewBlockRadius")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("const float")])]),t._v(" "),e("td",[t._v("currentTime")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("BlockSource *")])]),t._v(" "),e("td",[t._v("region")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const glm::tvec3<float,0> *")])]),t._v(" "),e("td",[t._v("tickWorldPosition")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("stereoRendering")])]),t._v(" "),e("tr",[e("td",[t._v("84")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FakeHDRSetting")])]),t._v(" "),e("td",[t._v("enableFakeHDR")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("skyIntensityOverride")])]),t._v(" "),e("tr",[e("td",[t._v("92")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("renderDistanceScalar")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("LevelCullerType")])]),t._v(" "),e("td",[t._v("levelCullerType")])]),t._v(" "),e("tr",[e("td",[t._v("97")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("FrustumCullerType")])]),t._v(" "),e("td",[t._v("frustumCullerType")])]),t._v(" "),e("tr",[e("td",[t._v("104")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(LevelRenderPreRenderUpdateParameters &)>")])]),t._v(" "),e("td",[t._v("preLevelBuildCallback")])])])]),t._v(" "),e("h3",{attrs:{id:"layoutrule-adddynamicgriditemgridpositionterm-l2-lambda-f55cbd476301545fb1f583c0e70c270e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-adddynamicgriditemgridpositionterm-l2-lambda-f55cbd476301545fb1f583c0e70c270e"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addDynamicGridItemGridPositionTerm::__l2::<lambda_f55cbd476301545fb1f583c0e70c270e>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<UIControl>")])]),t._v(" "),e("td",[t._v("weakParent")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("ui::OrientationType")])]),t._v(" "),e("td",[t._v("rescalingType")])]),t._v(" "),e("tr",[e("td",[t._v("20")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("LayoutVariableType")])]),t._v(" "),e("td",[t._v("type")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("collectionIndex")])])])]),t._v(" "),e("h3",{attrs:{id:"layoutrule-addstackpanelitempositionterms-l2-lambda-7d7bffcfcabf3e69cd7e400ef5cc8ea5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-addstackpanelitempositionterms-l2-lambda-7d7bffcfcabf3e69cd7e400ef5cc8ea5"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addStackPanelItemPositionTerms::__l2::<lambda_7d7bffcfcabf3e69cd7e400ef5cc8ea5>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("UIControl *")])]),t._v(" "),e("td",[t._v("priorSibling")])])])]),t._v(" "),e("h3",{attrs:{id:"layoutrule-addstackpanelvisibilityterm-l2-lambda-65b4f493b8e36199de434873facedc43"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-addstackpanelvisibilityterm-l2-lambda-65b4f493b8e36199de434873facedc43"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addStackPanelVisibilityTerm::__l2::<lambda_65b4f493b8e36199de434873facedc43>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("UIControl *")])]),t._v(" "),e("td",[t._v("control")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("const LayoutVariableType")])]),t._v(" "),e("td",[t._v("sizeType")])])])]),t._v(" "),e("h3",{attrs:{id:"layoutrule-addstackpanelitemremaindersizeterms-l2-lambda-db9e97e64f0225748868637354f669ba"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-addstackpanelitemremaindersizeterms-l2-lambda-db9e97e64f0225748868637354f669ba"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addStackPanelItemRemainderSizeTerms::__l2::<lambda_db9e97e64f0225748868637354f669ba>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<float __cdecl(void)>")])]),t._v(" "),e("td",[t._v("calcFactorFunction")])])])]),t._v(" "),e("h3",{attrs:{id:"lecternupdatepacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lecternupdatepacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("LecternUpdatePacket")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("Packet")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mPage")])]),t._v(" "),e("tr",[e("td",[t._v("44")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mTotalPages")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mShouldDropBook")])]),t._v(" "),e("tr",[e("td",[t._v("52")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("NetworkBlockPosition")])]),t._v(" "),e("td",[t._v("mPos")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldatavalue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldatavalue"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDataValue")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("std::variant<int,bool,float,std::string,enum GeneratorType,enum GameType,BlockPos,unsigned int,LevelDataValue::Tag>")])]),t._v(" "),e("td",[t._v("mValue")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldatavalue-tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldatavalue-tag"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDataValue::Tag")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<CompoundTag>")])]),t._v(" "),e("td",[t._v("mTag")])])])]),t._v(" "),e("h3",{attrs:{id:"levellistcache-createbackupcopyofworld-l5-lambda-01ffea937a76700a6f61e699c9c52645"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levellistcache-createbackupcopyofworld-l5-lambda-01ffea937a76700a6f61e699c9c52645"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelListCache::createBackupCopyOfWorld::__l5::<lambda_01ffea937a76700a6f61e699c9c52645>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LevelListCache *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("const std::string")])]),t._v(" "),e("td",[t._v("newLevelId")])])])]),t._v(" "),e("h3",{attrs:{id:"libraryitem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitem"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItem")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(296) "),e("code",[t._v("LessonItem")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("296")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mSubtitle")])]),t._v(" "),e("tr",[e("td",[t._v("328")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mDifficulty")])]),t._v(" "),e("tr",[e("td",[t._v("360")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::string>")])]),t._v(" "),e("td",[t._v("mSearchKeywords")])]),t._v(" "),e("tr",[e("td",[t._v("384")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("_BYTE[4]")])]),t._v(" "),e("td",[t._v("mBadgeCategory")])]),t._v(" "),e("tr",[e("td",[t._v("388")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("_BYTE[4]")])]),t._v(" "),e("td",[t._v("mType")])]),t._v(" "),e("tr",[e("td",[t._v("392")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::optional<int>")])]),t._v(" "),e("td",[t._v("mDuration")])]),t._v(" "),e("tr",[e("td",[t._v("400")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::optional<int>")])]),t._v(" "),e("td",[t._v("mMinAge")])]),t._v(" "),e("tr",[e("td",[t._v("408")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::optional<int>")])]),t._v(" "),e("td",[t._v("mMaxAge")])]),t._v(" "),e("tr",[e("td",[t._v("416")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::optional<float>")])]),t._v(" "),e("td",[t._v("mFileSizeMB")])]),t._v(" "),e("tr",[e("td",[t._v("424")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<enum Library::OptionalProductInfo,std::string>")])]),t._v(" "),e("td",[t._v("mOptionalProductInfo")])]),t._v(" "),e("tr",[e("td",[t._v("488")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<enum Library::OptionalProductLink,std::string>")])]),t._v(" "),e("td",[t._v("mOptionalProductLinks")])]),t._v(" "),e("tr",[e("td",[t._v("552")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(LibraryItem const &)>")])]),t._v(" "),e("td",[t._v("mDestructorCallback")])])])]),t._v(" "),e("h3",{attrs:{id:"lessonitem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessonitem"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonItem")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LessonItem_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::enable_shared_from_this<LessonItem>")])]),t._v(" "),e("td",[t._v("baseclass_8")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mImageUri")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<LessonItem::ImageInfo>")])]),t._v(" "),e("td",[t._v("mImageInfo")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mWorldDownloadUri")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mShouldRefresh")])]),t._v(" "),e("tr",[e("td",[t._v("104")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mProductId")])]),t._v(" "),e("tr",[e("td",[t._v("136")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mTitle")])]),t._v(" "),e("tr",[e("td",[t._v("168")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mDescription")])]),t._v(" "),e("tr",[e("td",[t._v("200")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mCreator")])]),t._v(" "),e("tr",[e("td",[t._v("232")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("std::optional<std::string >")])]),t._v(" "),e("td",[t._v("mWorldId")])]),t._v(" "),e("tr",[e("td",[t._v("272")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("_BYTE[4]")])]),t._v(" "),e("td",[t._v("mImportState")])]),t._v(" "),e("tr",[e("td",[t._v("276")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasQuiz")])]),t._v(" "),e("tr",[e("td",[t._v("280")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<InstructionalContentCollection>")])]),t._v(" "),e("td",[t._v("mCollection")])])])]),t._v(" "),e("h3",{attrs:{id:"lessonitemcache-createitem-l2-lambda-45b6fea0b32e146eac7eb8d3175611d0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessonitemcache-createitem-l2-lambda-45b6fea0b32e146eac7eb8d3175611d0"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonItemCache::createItem::__l2::<lambda_45b6fea0b32e146eac7eb8d3175611d0>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<LessonItemCache>")])]),t._v(" "),e("td",[t._v("weakThis")])])])]),t._v(" "),e("h3",{attrs:{id:"librarycollection-refresh-l12-lambda-660a8991daf205c274a409143d346b65"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarycollection-refresh-l12-lambda-660a8991daf205c274a409143d346b65"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryCollection::refresh::__l12::<lambda_660a8991daf205c274a409143d346b65>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LibraryCollection *const")])]),t._v(" "),e("td",[t._v("__this")])])])]),t._v(" "),e("h3",{attrs:{id:"legacy-worldimporter-importworld-l2-lambda-ae938f074dd3a375f0777a73fbeb379e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldimporter-importworld-l2-lambda-ae938f074dd3a375f0777a73fbeb379e"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldImporter::importWorld::__l2::<lambda_ae938f074dd3a375f0777a73fbeb379e>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Legacy::WorldImporter *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<Social::User>")])]),t._v(" "),e("td",[t._v("user")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<Legacy::WorldProcessRequest>")])]),t._v(" "),e("td",[t._v("processRequest")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("Legacy::WorldImporter::importWorld::__l2::<lambda_366519f82ad483b9658c695262c21046>")])]),t._v(" "),e("td",[t._v("progressCallback")])])])]),t._v(" "),e("h3",{attrs:{id:"legacy-worldimporter-importworld-l2-lambda-366519f82ad483b9658c695262c21046"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldimporter-importworld-l2-lambda-366519f82ad483b9658c695262c21046"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldImporter::importWorld::__l2::<lambda_366519f82ad483b9658c695262c21046>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<CallbackTokenContext<std::function<void __cdecl(enum Legacy::ImportStatus,float,std::shared_ptr<ImportResult>)> > >")])]),t._v(" "),e("td",[t._v("context")])])])]),t._v(" "),e("h3",{attrs:{id:"legacyoptionsconverterinternal-makegenericrecipe-l2-lambda-9f36d3efb04074791ed7f3702039126e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyoptionsconverterinternal-makegenericrecipe-l2-lambda-9f36d3efb04074791ed7f3702039126e"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyOptionsConverterInternal::_makeGenericRecipe::__l2::<lambda_9f36d3efb04074791ed7f3702039126e>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(Option *,bool)>")])]),t._v(" "),e("td",[t._v("setOption")])])])]),t._v(" "),e("h3",{attrs:{id:"legacyoptionsconverterinternal-makegenericrecipe-l2-lambda-3250100f958fa1f0f26c0275bd843c8d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyoptionsconverterinternal-makegenericrecipe-l2-lambda-3250100f958fa1f0f26c0275bd843c8d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyOptionsConverterInternal::_makeGenericRecipe::__l2::<lambda_3250100f958fa1f0f26c0275bd843c8d>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(Option *,unsigned char)>")])]),t._v(" "),e("td",[t._v("setOption")])])])]),t._v(" "),e("h3",{attrs:{id:"legacy-worldimporter-retrieveworldlist-l2-lambda-c472bd97cd77568961a14503f1a05380"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldimporter-retrieveworldlist-l2-lambda-c472bd97cd77568961a14503f1a05380"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldImporter::retrieveWorldList::__l2::<lambda_c472bd97cd77568961a14503f1a05380>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Legacy::WorldImporter *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(enum Legacy::RetrieveStatus)>")])]),t._v(" "),e("td",[t._v("fetchCompleteCB")])])])]),t._v(" "),e("h3",{attrs:{id:"legacy-worldimporter-importworld-l2-lambda-b2029e45b00b21c59d0f455bcac15a46"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldimporter-importworld-l2-lambda-b2029e45b00b21c59d0f455bcac15a46"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldImporter::importWorld::__l2::<lambda_b2029e45b00b21c59d0f455bcac15a46>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Legacy::WorldImporter *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(enum Legacy::ImportStatus,float,std::shared_ptr<ImportResult>)>")])]),t._v(" "),e("td",[t._v("statusCallback")])])])]),t._v(" "),e("h3",{attrs:{id:"legacy-worldconversionreport"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldconversionreport"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldConversionReport")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("Legacy::WorldConverter::ConversionResult")])]),t._v(" "),e("td",[t._v("mResult")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mWorldName")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::chrono::duration<double,std::ratio<1,1> >")])]),t._v(" "),e("td",[t._v("mConversionDurationSeconds")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("mChunksConverted")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("mTotalEstimatedChunks")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("Legacy::WorldConverter::Type")])]),t._v(" "),e("td",[t._v("mOriginatingPlatform")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mConverterVersion")])])])]),t._v(" "),e("h3",{attrs:{id:"librarydeeplinklistener-navigatetolink-l2-lambda-d498d340354ce2f453ed38567f54fbc2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarydeeplinklistener-navigatetolink-l2-lambda-d498d340354ce2f453ed38567f54fbc2"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryDeeplinkListener::_navigateToLink::__l2::<lambda_d498d340354ce2f453ed38567f54fbc2>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<bool>")])]),t._v(" "),e("td",[t._v("existenceTracker")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<AsyncTracker>")])]),t._v(" "),e("td",[t._v("timeoutTracker")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const LibraryDeeplinkListener *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<SearchResult>")])]),t._v(" "),e("td",[t._v("searchResult")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::pair<std::string,std::string >>")])]),t._v(" "),e("td",[t._v("eventProperties")])])])]),t._v(" "),e("h3",{attrs:{id:"labtablepacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#labtablepacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("LabTablePacket")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("Packet")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("LabTablePacket::Type")])]),t._v(" "),e("td",[t._v("mType")])]),t._v(" "),e("tr",[e("td",[t._v("44")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("BlockPos")])]),t._v(" "),e("td",[t._v("mPos")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("LabTableReactionType")])]),t._v(" "),e("td",[t._v("mReaction")])])])]),t._v(" "),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l2-lambda-fa967f588a1ce712e27d64a182893b8b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l2-lambda-fa967f588a1ce712e27d64a182893b8b"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l2::<lambda_fa967f588a1ce712e27d64a182893b8b>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("const BlockEventPacket")])]),t._v(" "),e("td",[t._v("packet")])])])]),t._v(" "),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l2-lambda-93d079b43c62f7e1248b34064f45323f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l2-lambda-93d079b43c62f7e1248b34064f45323f"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l2::<lambda_93d079b43c62f7e1248b34064f45323f>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("const ContainerOpenPacket")])]),t._v(" "),e("td",[t._v("packet")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LocalPlayer *")])]),t._v(" "),e("td",[t._v("player")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("MultiPlayerLevel *")])]),t._v(" "),e("td",[t._v("level")])])])]),t._v(" "),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l5-lambda-89563cba18849588825a7327afbb76f5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l5-lambda-89563cba18849588825a7327afbb76f5"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l5::<lambda_89563cba18849588825a7327afbb76f5>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LegacyClientNetworkHandler *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<LevelChunkPacketHandler>")])]),t._v(" "),e("td",[t._v("handler")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(152) "),e("code",[t._v("const NetworkIdentifier")])]),t._v(" "),e("td",[t._v("source")])])])]),t._v(" "),e("h3",{attrs:{id:"legacyclientnetworkhandler-applyplayerskin-l7-lambda-42405ada392c75a6c6b62314c754af1d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-applyplayerskin-l7-lambda-42405ada392c75a6c6b62314c754af1d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::_applyPlayerSkin::__l7::<lambda_42405ada392c75a6c6b62314c754af1d>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<IClientInstance>")])]),t._v(" "),e("td",[t._v("weakClient")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("mce::UUID")])]),t._v(" "),e("td",[t._v("uuid")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(640) "),e("code",[t._v("const SerializedSkin")])]),t._v(" "),e("td",[t._v("serializableSkin")])]),t._v(" "),e("tr",[e("td",[t._v("672")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LegacyClientNetworkHandler *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("680")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<bool>")])]),t._v(" "),e("td",[t._v("weakExistance")])]),t._v(" "),e("tr",[e("td",[t._v("696")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("version")])])])]),t._v(" "),e("h3",{attrs:{id:"levelchunkpackethandler-addreusefromcachestep-l2-lambda-00c643ea340363bdff366ebe864def6e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkpackethandler-addreusefromcachestep-l2-lambda-00c643ea340363bdff366ebe864def6e"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkPacketHandler::_addReuseFromCacheStep::__l2::<lambda_00c643ea340363bdff366ebe864def6e>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LevelChunkPacketHandler *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("i")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("abortRequestTime")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(VarIntDataInput &)>")])]),t._v(" "),e("td",[t._v("deserializer")])])])]),t._v(" "),e("h3",{attrs:{id:"linearallocator-viewrenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-viewrenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<ViewRenderObject>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<AllocatorData>")])]),t._v(" "),e("td",[t._v("mData")])])])]),t._v(" "),e("h3",{attrs:{id:"levelbuilder-schedulechunkbuild-l19-lambda-72252b7199841403e2a415b3bd023c08"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-schedulechunkbuild-l19-lambda-72252b7199841403e2a415b3bd023c08"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::scheduleChunkBuild::__l19::<lambda_72252b7199841403e2a415b3bd023c08>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("immediate")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<RenderChunkInstanced>")])]),t._v(" "),e("td",[t._v("renderChunkInstancedShared")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("const std::shared_ptr<RenderChunkShared>")])]),t._v(" "),e("td",[t._v("renderChunkShared")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("doSort")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LevelBuilder *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<SortTaskContext>")])]),t._v(" "),e("td",[t._v("sortTaskContext")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<BuildTaskContext>")])]),t._v(" "),e("td",[t._v("buildTaskContext")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("const std::shared_ptr<RenderChunkGeometry>")])]),t._v(" "),e("td",[t._v("buildingRenderChunkGeometry")])]),t._v(" "),e("tr",[e("td",[t._v("104")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("const std::shared_ptr<RenderChunkGeometry>")])]),t._v(" "),e("td",[t._v("currentRenderChunkGeometry")])])])]),t._v(" "),e("h3",{attrs:{id:"levelbuilder-schedulechunkbuild-l19-lambda-06fe4843def8ec0a40648f31185946ab"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-schedulechunkbuild-l19-lambda-06fe4843def8ec0a40648f31185946ab"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::scheduleChunkBuild::__l19::<lambda_06fe4843def8ec0a40648f31185946ab>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<RenderChunkInstanced>")])]),t._v(" "),e("td",[t._v("renderChunkInstancedShared")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("const std::shared_ptr<RenderChunkShared>")])]),t._v(" "),e("td",[t._v("renderChunkShared")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("const bool")])]),t._v(" "),e("td",[t._v("transparentLeaves")])]),t._v(" "),e("tr",[e("td",[t._v("36")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("_BYTE[4]")])]),t._v(" "),e("td",[t._v("lightingType")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("const bool")])]),t._v(" "),e("td",[t._v("usePBRFormats")])]),t._v(" "),e("tr",[e("td",[t._v("41")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("const bool")])]),t._v(" "),e("td",[t._v("emitPointLights")])]),t._v(" "),e("tr",[e("td",[t._v("42")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("doSort")])]),t._v(" "),e("tr",[e("td",[t._v("44")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("currentCameraForward")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("const bool")])]),t._v(" "),e("td",[t._v("cullerIsOrthographic")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<SortTaskContext>")])]),t._v(" "),e("td",[t._v("sortTaskContext")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<BuildTaskContext>")])]),t._v(" "),e("td",[t._v("buildTaskContext")])])])]),t._v(" "),e("h3",{attrs:{id:"linearallocator-actorshadowrenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-actorshadowrenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<ActorShadowRenderObject>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<AllocatorData>")])]),t._v(" "),e("td",[t._v("mData")])])])]),t._v(" "),e("h3",{attrs:{id:"linearallocator-particletyperenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-particletyperenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<ParticleTypeRenderObject>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<AllocatorData>")])]),t._v(" "),e("td",[t._v("mData")])])])]),t._v(" "),e("h3",{attrs:{id:"linearallocator-mce-textureptr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-mce-textureptr"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<mce::TexturePtr>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<AllocatorData>")])]),t._v(" "),e("td",[t._v("mData")])])])]),t._v(" "),e("h3",{attrs:{id:"linearallocator-crackrenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-crackrenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<CrackRenderObject>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<AllocatorData>")])]),t._v(" "),e("td",[t._v("mData")])])])]),t._v(" "),e("h3",{attrs:{id:"linearallocator-nametagrenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-nametagrenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<NameTagRenderObject>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<AllocatorData>")])]),t._v(" "),e("td",[t._v("mData")])])])]),t._v(" "),e("h3",{attrs:{id:"levelcullercachedbase-updatechunkdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullercachedbase-updatechunkdata"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerCachedBase::UpdateChunkData")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("SubChunkPos")])]),t._v(" "),e("td",[t._v("mRenderChunkPosition")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsSkyLit")])]),t._v(" "),e("tr",[e("td",[t._v("13")]),t._v(" "),e("td",[t._v("(6) "),e("code",[t._v("VisibilityNode")])]),t._v(" "),e("td",[t._v("mVisibilityNode")])]),t._v(" "),e("tr",[e("td",[t._v("19")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mChunkIsEmpty")])]),t._v(" "),e("tr",[e("td",[t._v("20")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mForceRequery")])])])]),t._v(" "),e("h3",{attrs:{id:"levelrenderercamera-updateperchunkfacesortstate-l10-lambda-d6963569be67244178665fa6230fe26b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-updateperchunkfacesortstate-l10-lambda-d6963569be67244178665fa6230fe26b"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::updatePerChunkFaceSortState::__l10::<lambda_d6963569be67244178665fa6230fe26b>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LevelRendererCamera *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("const Vec3")])]),t._v(" "),e("td",[t._v("viewPos")])]),t._v(" "),e("tr",[e("td",[t._v("20")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("BlockPos")])]),t._v(" "),e("td",[t._v("blockSortPos")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("const Vec3")])]),t._v(" "),e("td",[t._v("viewDir")])]),t._v(" "),e("tr",[e("td",[t._v("44")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("BlockPos")])]),t._v(" "),e("td",[t._v("lastFaceSortPos")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("lastFaceSortDir")])]),t._v(" "),e("tr",[e("td",[t._v("68")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("isOrthoCamera")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<GridArea<std::shared_ptr<RenderChunkInstanced> > >")])]),t._v(" "),e("td",[t._v("bufferedViewArea")])])])]),t._v(" "),e("h3",{attrs:{id:"levelrenderercamera-renderchunkposbounds"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-renderchunkposbounds"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::RenderChunkPosBounds")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("SubChunkPos")])]),t._v(" "),e("td",[t._v("min")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("SubChunkPos")])]),t._v(" "),e("td",[t._v("max")])])])]),t._v(" "),e("h3",{attrs:{id:"layer-biome"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layer-biome"}},[t._v("#")]),t._v(" "),e("code",[t._v("Layer<Biome *>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("LayerDetails::LayerBase")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"layerdetails-layerbase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerdetails-layerbase"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerDetails::LayerBase")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LayerDetails::LayerBase_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("mSeed")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("mSeedMixup")])])])]),t._v(" "),e("h3",{attrs:{id:"legacytradeablecomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacytradeablecomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyTradeableComponent")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mAddRecipeOnUpdate")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mResetLockedOnFirstTrade")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mWillingToBreed")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mRiches")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mTradeTier")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mUpdateMerchantTimer")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Player *")])]),t._v(" "),e("td",[t._v("mLastPlayerTradeName")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<MerchantRecipeList>")])]),t._v(" "),e("td",[t._v("mOffers")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mDisplayName")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<int>")])]),t._v(" "),e("td",[t._v("mTradeRecipeFirstTime")])])])]),t._v(" "),e("h3",{attrs:{id:"listtagfloatadder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listtagfloatadder"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListTagFloatAdder")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<ListTag>")])]),t._v(" "),e("td",[t._v("mTag")])])])]),t._v(" "),e("h3",{attrs:{id:"loottablecontext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loottablecontext"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootTableContext")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mLuck")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Level *")])]),t._v(" "),e("td",[t._v("mLevel")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("BlockSource *")])]),t._v(" "),e("td",[t._v("mRegion")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Actor *")])]),t._v(" "),e("td",[t._v("mThisEntity")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Player *")])]),t._v(" "),e("td",[t._v("mKillerPlayer")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const ActorDamageSource *")])]),t._v(" "),e("td",[t._v("mDeathSource")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_set<LootTable const *>")])]),t._v(" "),e("td",[t._v("mVisitedTables")])]),t._v(" "),e("tr",[e("td",[t._v("112")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mExplosionRadius")])]),t._v(" "),e("tr",[e("td",[t._v("120")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mOriginalItemName")])])])]),t._v(" "),e("h3",{attrs:{id:"listtagintadder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listtagintadder"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListTagIntAdder")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<ListTag>")])]),t._v(" "),e("td",[t._v("mTag")])])])]),t._v(" "),e("h3",{attrs:{id:"localconnector-localconnection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localconnector-localconnection"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalConnector::LocalConnection")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LocalConnector *")])]),t._v(" "),e("td",[t._v("mConnector")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(152) "),e("code",[t._v("NetworkIdentifier")])]),t._v(" "),e("td",[t._v("mId")])])])]),t._v(" "),e("h3",{attrs:{id:"lookcontrolcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookcontrolcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookControlComponent")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasWantedPosition")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasWantedRotation")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mYMax")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mXMax")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mWantedPosition")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mWantedRotation")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<LookControl>")])]),t._v(" "),e("td",[t._v("mLookControl")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-status"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-status"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Status")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *")])]),t._v(" "),e("td",[t._v("state_")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-compressor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-compressor"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Compressor")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::Compressor_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("inputBytes")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("compressedBytes")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("const char")])]),t._v(" "),e("td",[t._v("uniqueCompressionID")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-zlibcompressorbase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-zlibcompressorbase"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::ZlibCompressorBase")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("leveldb::Compressor")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("const int")])]),t._v(" "),e("td",[t._v("compressionLevel")])]),t._v(" "),e("tr",[e("td",[t._v("36")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("const bool")])]),t._v(" "),e("td",[t._v("raw")])])])]),t._v(" "),e("h3",{attrs:{id:"localconnector-connect-l5-lambda-53fd3492de6269a51add08adad05dd5f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localconnector-connect-l5-lambda-53fd3492de6269a51add08adad05dd5f"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalConnector::connect::__l5::<lambda_53fd3492de6269a51add08adad05dd5f>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LocalConnector *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(152) "),e("code",[t._v("NetworkIdentifier")])]),t._v(" "),e("td",[t._v("hostId")])]),t._v(" "),e("tr",[e("td",[t._v("160")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<LocalNetworkPeer>")])]),t._v(" "),e("td",[t._v("newPeer")])])])]),t._v(" "),e("h3",{attrs:{id:"localconnector-createpeer-l2-lambda-ddc662792dc88affbd03064fa30cfc5e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localconnector-createpeer-l2-lambda-ddc662792dc88affbd03064fa30cfc5e"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalConnector::createPeer::__l2::<lambda_ddc662792dc88affbd03064fa30cfc5e>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LocalConnector *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(152) "),e("code",[t._v("NetworkIdentifier")])]),t._v(" "),e("td",[t._v("clientId")])]),t._v(" "),e("tr",[e("td",[t._v("160")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<LocalNetworkPeer>")])]),t._v(" "),e("td",[t._v("newPeer")])])])]),t._v(" "),e("h3",{attrs:{id:"listdcommand-execute-l2-lambda-b3cf132935515dc31340e61291b1a510"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listdcommand-execute-l2-lambda-b3cf132935515dc31340e61291b1a510"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListDCommand::execute::__l2::<lambda_b3cf132935515dc31340e61291b1a510>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Json::Value *")])]),t._v(" "),e("td",[t._v("playerList")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > *")])]),t._v(" "),e("td",[t._v("stream")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int *")])]),t._v(" "),e("td",[t._v("count")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::basic_stringstream<char,std::char_traits<char>,std::allocator<char> > *")])]),t._v(" "),e("td",[t._v("hexFormatter")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("bool *")])]),t._v(" "),e("td",[t._v("stats")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("bool *")])]),t._v(" "),e("td",[t._v("listUUIDs")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("bool *")])]),t._v(" "),e("td",[t._v("listIds")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::string *")])]),t._v(" "),e("td",[t._v("globalMultiplayerCorrelationId")])])])]),t._v(" "),e("h3",{attrs:{id:"lookatdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtDefinition")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mSetTarget")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mSearchRadius")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mAllowInvulnerable")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FloatRange")])]),t._v(" "),e("td",[t._v("mLookCooldown")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("ActorFilterGroup")])]),t._v(" "),e("td",[t._v("mFilter")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(320) "),e("code",[t._v("DefinitionTrigger")])]),t._v(" "),e("td",[t._v("mOnLookAt")])])])]),t._v(" "),e("h3",{attrs:{id:"leveleventcoordinator-sendlevelweatherchanged-l2-lambda-33b11a197678339fe6beb420e10f4191"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventcoordinator-sendlevelweatherchanged-l2-lambda-33b11a197678339fe6beb420e10f4191"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventCoordinator::sendLevelWeatherChanged::__l2::<lambda_33b11a197678339fe6beb420e10f4191>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("const std::string")])]),t._v(" "),e("td",[t._v("dimension")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("raining")])]),t._v(" "),e("tr",[e("td",[t._v("33")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("lightning")])])])]),t._v(" "),e("h3",{attrs:{id:"layerresult-biome"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerresult-biome"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerResult<Biome *>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<char [0]>")])]),t._v(" "),e("td",[t._v("mResult")])])])]),t._v(" "),e("h3",{attrs:{id:"levelchunk-hardcodedspawningarea"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunk-hardcodedspawningarea"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunk::HardcodedSpawningArea")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("BoundingBox")])]),t._v(" "),e("td",[t._v("aabb")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("HardcodedSpawnAreaType")])]),t._v(" "),e("td",[t._v("type")])])])]),t._v(" "),e("h3",{attrs:{id:"levelchunkhashmapkey"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkhashmapkey"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkHashMapKey")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("LevelChunkTag")])]),t._v(" "),e("td",[t._v("mTag")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("mIndex")])])])]),t._v(" "),e("h3",{attrs:{id:"level-levelchunkqueuedsavingelement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#level-levelchunkqueuedsavingelement"}},[t._v("#")]),t._v(" "),e("code",[t._v("Level::LevelChunkQueuedSavingElement")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mDist")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ChunkPos")])]),t._v(" "),e("td",[t._v("mPosition")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("AutomaticID<Dimension,int>")])]),t._v(" "),e("td",[t._v("mDimensionId")])])])]),t._v(" "),e("h3",{attrs:{id:"level-explode-l5-lambda-81dee22cf752cbc31af5429df6d1a2ac"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#level-explode-l5-lambda-81dee22cf752cbc31af5429df6d1a2ac"}},[t._v("#")]),t._v(" "),e("code",[t._v("Level::explode::__l5::<lambda_81dee22cf752cbc31af5429df6d1a2ac>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::string *")])]),t._v(" "),e("td",[t._v("sID")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("long double *")])]),t._v(" "),e("td",[t._v("x")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("long double *")])]),t._v(" "),e("td",[t._v("y")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("long double *")])]),t._v(" "),e("td",[t._v("z")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("float *")])]),t._v(" "),e("td",[t._v("explosionRadius")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("bool *")])]),t._v(" "),e("td",[t._v("fire")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("bool *")])]),t._v(" "),e("td",[t._v("breaksBlocks")])])])]),t._v(" "),e("h3",{attrs:{id:"legacyblockplacementprocessor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyblockplacementprocessor"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyBlockPlacementProcessor")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mChance")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(2516) "),e("code",[t._v("Random")])]),t._v(" "),e("td",[t._v("mRandom")])]),t._v(" "),e("tr",[e("td",[t._v("2520")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasGravity")])]),t._v(" "),e("tr",[e("td",[t._v("2528")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const std::vector<std::unique_ptr<StructurePoolBlockRule>> *")])]),t._v(" "),e("td",[t._v("mBlockRules")])]),t._v(" "),e("tr",[e("td",[t._v("2536")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const std::vector<std::unique_ptr<StructurePoolBlockTagRule>> *")])]),t._v(" "),e("td",[t._v("mBlockTagRules")])])])]),t._v(" "),e("h3",{attrs:{id:"legacyjigsawplacement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyjigsawplacement"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyJigsawPlacement")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("const int")])]),t._v(" "),e("td",[t._v("mMaxDepth")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<std::unique_ptr<PoolElementStructurePiece> __cdecl(StructurePoolElement const &,BlockPos const &,enum Rotation const &,int,JigsawJunction &,BoundingBox const &,BlockPos const &)>")])]),t._v(" "),e("td",[t._v("mFactory")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<ChunkPos,std::unique_ptr<std::vector<short>>>")])]),t._v(" "),e("td",[t._v("mChunkHeightCache")])])])]),t._v(" "),e("h3",{attrs:{id:"levelchunk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunk"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunk")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(80) "),e("code",[t._v("std::mutex")])]),t._v(" "),e("td",[t._v("mBlockEntityAccessLock")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Level *")])]),t._v(" "),e("td",[t._v("mLevel")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Dimension *")])]),t._v(" "),e("td",[t._v("mDimension")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("BlockPos")])]),t._v(" "),e("td",[t._v("mMin")])]),t._v(" "),e("tr",[e("td",[t._v("108")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("BlockPos")])]),t._v(" "),e("td",[t._v("mMax")])]),t._v(" "),e("tr",[e("td",[t._v("120")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ChunkPos")])]),t._v(" "),e("td",[t._v("mPosition")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mLightingFixupDone")])]),t._v(" "),e("tr",[e("td",[t._v("129")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("std::atomic<bool>")])]),t._v(" "),e("td",[t._v("mLightingTaskActive")])]),t._v(" "),e("tr",[e("td",[t._v("130")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mReadOnly")])]),t._v(" "),e("tr",[e("td",[t._v("136")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ChunkSource *")])]),t._v(" "),e("td",[t._v("mGenerator")])]),t._v(" "),e("tr",[e("td",[t._v("144")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("std::optional<enum LevelChunkFormat>")])]),t._v(" "),e("td",[t._v("mLoadedFormat")])]),t._v(" "),e("tr",[e("td",[t._v("152")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mSerializedEntitiesBuffer")])]),t._v(" "),e("tr",[e("td",[t._v("184")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("std::atomic<enum ChunkState>")])]),t._v(" "),e("td",[t._v("mLoadState")])]),t._v(" "),e("tr",[e("td",[t._v("185")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("ChunkTerrainDataState")])]),t._v(" "),e("td",[t._v("mTerrainDataState")])]),t._v(" "),e("tr",[e("td",[t._v("186")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("ChunkDebugDisplaySavedState")])]),t._v(" "),e("td",[t._v("mDebugDisplaySavedState")])]),t._v(" "),e("tr",[e("td",[t._v("187")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("ChunkCachedDataState")])]),t._v(" "),e("td",[t._v("mCachedDataState")])]),t._v(" "),e("tr",[e("td",[t._v("192")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("SpinLock")])]),t._v(" "),e("td",[t._v("mCachedDataStateSpinLock")])]),t._v(" "),e("tr",[e("td",[t._v("224")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Tick")])]),t._v(" "),e("td",[t._v("mLastTick")])]),t._v(" "),e("tr",[e("td",[t._v("232")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<BlockTickingQueue>")])]),t._v(" "),e("td",[t._v("mTickQueue")])]),t._v(" "),e("tr",[e("td",[t._v("240")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<BlockTickingQueue>")])]),t._v(" "),e("td",[t._v("mRandomTickQueue")])]),t._v(" "),e("tr",[e("td",[t._v("248")]),t._v(" "),e("td",[t._v("(1832) "),e("code",[t._v("AppendOnlyAtomicLookupTable<SubChunk,32>")])]),t._v(" "),e("td",[t._v("mSubChunks")])]),t._v(" "),e("tr",[e("td",[t._v("2080")]),t._v(" "),e("td",[t._v("(1024) "),e("code",[t._v("std::array<SpinLock,32>")])]),t._v(" "),e("td",[t._v("mSubChunkSpinLocks")])]),t._v(" "),e("tr",[e("td",[t._v("3104")]),t._v(" "),e("td",[t._v("(256) "),e("code",[t._v("std::array<BiomeChunkData,256>")])]),t._v(" "),e("td",[t._v("mBiomes")])]),t._v(" "),e("tr",[e("td",[t._v("3360")]),t._v(" "),e("td",[t._v("(2048) "),e("code",[t._v("std::array<ColumnCachedData,256>")])]),t._v(" "),e("td",[t._v("mCachedData")])]),t._v(" "),e("tr",[e("td",[t._v("5408")]),t._v(" "),e("td",[t._v("(512) "),e("code",[t._v("std::array<ChunkLocalHeight,256>")])]),t._v(" "),e("td",[t._v("mHeightmap")])]),t._v(" "),e("tr",[e("td",[t._v("5920")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<std::vector<short>>")])]),t._v(" "),e("td",[t._v("mPreWorldGenHeightmap")])]),t._v(" "),e("tr",[e("td",[t._v("5928")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<unsigned char,BiomeChunkState>")])]),t._v(" "),e("td",[t._v("mBiomeStates")])]),t._v(" "),e("tr",[e("td",[t._v("5992")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasCachedTemperatureNoise")])]),t._v(" "),e("tr",[e("td",[t._v("5993")]),t._v(" "),e("td",[t._v("(256) "),e("code",[t._v("std::array<unsigned char,256>")])]),t._v(" "),e("td",[t._v("mBorderBlockMap")])]),t._v(" "),e("tr",[e("td",[t._v("6252")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("LevelChunk::Finalization")])]),t._v(" "),e("td",[t._v("mFinalized")])]),t._v(" "),e("tr",[e("td",[t._v("6256")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsRedstoneLoaded")])]),t._v(" "),e("tr",[e("td",[t._v("6257")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mOwnedByTickingThread")])]),t._v(" "),e("tr",[e("td",[t._v("6260")]),t._v(" "),e("td",[t._v("(56) "),e("code",[t._v("DirtyTicksCounter[7]")])]),t._v(" "),e("td",[t._v("mFullChunkDirtyTicksCounters")])]),t._v(" "),e("tr",[e("td",[t._v("6316")]),t._v(" "),e("td",[t._v("(512) "),e("code",[t._v("std::array<ChunkLocalHeight,256>")])]),t._v(" "),e("td",[t._v("mRainHeights")])]),t._v(" "),e("tr",[e("td",[t._v("6832")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SmallSet<std::unique_ptr<Actor> >")])]),t._v(" "),e("td",[t._v("mEntities")])]),t._v(" "),e("tr",[e("td",[t._v("6856")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<ChunkBlockPos,std::shared_ptr<BlockActor>>")])]),t._v(" "),e("td",[t._v("mBlockEntities")])]),t._v(" "),e("tr",[e("td",[t._v("6920")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::shared_ptr<BlockActor>>")])]),t._v(" "),e("td",[t._v("mDeletedBlockEntities")])]),t._v(" "),e("tr",[e("td",[t._v("6944")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("BrightnessPair")])]),t._v(" "),e("td",[t._v("mDefaultBrightness")])]),t._v(" "),e("tr",[e("td",[t._v("6952")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<LevelChunk::HardcodedSpawningArea>")])]),t._v(" "),e("td",[t._v("mHardcodedSpawningAreas")])]),t._v(" "),e("tr",[e("td",[t._v("6976")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned __int8[2][2]")])]),t._v(" "),e("td",[t._v("mbChunkInterpolants")])]),t._v(" "),e("tr",[e("td",[t._v("6980")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mbChunkHasConverterTag")])]),t._v(" "),e("tr",[e("td",[t._v("6981")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mDBChunkSurroundedByNeighbors")])]),t._v(" "),e("tr",[e("td",[t._v("6984")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<LevelChunkHashMapKey,unsigned __int64>")])]),t._v(" "),e("td",[t._v("mLevelChunkChecksums")])]),t._v(" "),e("tr",[e("td",[t._v("7048")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mOnChunkLoadedCalled")])]),t._v(" "),e("tr",[e("td",[t._v("7056")]),t._v(" "),e("td",[t._v("(80) "),e("code",[t._v("std::mutex")])]),t._v(" "),e("td",[t._v("mMicroBlockModelStorageLock")])]),t._v(" "),e("tr",[e("td",[t._v("7136")]),t._v(" "),e("td",[t._v("(80) "),e("code",[t._v("std::mutex")])]),t._v(" "),e("td",[t._v("mMicroBlockModelTableLock")])]),t._v(" "),e("tr",[e("td",[t._v("7216")]),t._v(" "),e("td",[t._v("(80) "),e("code",[t._v("std::mutex")])]),t._v(" "),e("td",[t._v("mStaticMicroBlockModelTableLock")])]),t._v(" "),e("tr",[e("td",[t._v("7296")]),t._v(" "),e("td",[t._v("(80) "),e("code",[t._v("std::mutex")])]),t._v(" "),e("td",[t._v("mMicroBlockUsingMapLock")])]),t._v(" "),e("tr",[e("td",[t._v("7376")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("?")])]),t._v(" "),e("td",[t._v("mMicroBlockModelStorage")])]),t._v(" "),e("tr",[e("td",[t._v("7440")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<BlockPos,std::string>")])]),t._v(" "),e("td",[t._v("mMicroBlockModelTable")])]),t._v(" "),e("tr",[e("td",[t._v("7504")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<BlockPos,std::string>")])]),t._v(" "),e("td",[t._v("mStaticMicroBlockModelTable")])]),t._v(" "),e("tr",[e("td",[t._v("7568")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<std::string,int>")])]),t._v(" "),e("td",[t._v("mMicroBlockUsingMap")])])])]),t._v(" "),e("h3",{attrs:{id:"levelstoragewritebatch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelstoragewritebatch"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelStorageWriteBatch")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LevelStorageWriteBatch_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::function<void __cdecl(void)>>")])]),t._v(" "),e("td",[t._v("mFlushCallbacks")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::map<std::string,LevelStorageWriteBatch::BatchEntry>")])]),t._v(" "),e("td",[t._v("mBatch")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(80) "),e("code",[t._v("std::mutex")])]),t._v(" "),e("td",[t._v("mFlushCallbacksMutex")])])])]),t._v(" "),e("h3",{attrs:{id:"levelloosefilestorage-lambda-243d65738535c465e89fa7d414db982c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelloosefilestorage-lambda-243d65738535c465e89fa7d414db982c"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelLooseFileStorage::<lambda_243d65738535c465e89fa7d414db982c>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("Core::PathBuffer<std::string >")])]),t._v(" "),e("td",[t._v("root")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("const ContentIdentity")])]),t._v(" "),e("td",[t._v("contentIdentity")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const IContentKeyProvider *")])]),t._v(" "),e("td",[t._v("keyProvider")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-slice"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-slice"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Slice")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *")])]),t._v(" "),e("td",[t._v("data_")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("size_")])])])]),t._v(" "),e("h3",{attrs:{id:"levelcache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcache"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCache")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(384) "),e("code",[t._v("LevelSummary")])]),t._v(" "),e("td",[t._v("summary")])]),t._v(" "),e("tr",[e("td",[t._v("384")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<LevelData>")])]),t._v(" "),e("td",[t._v("data")])]),t._v(" "),e("tr",[e("td",[t._v("392")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("dirtySummary")])]),t._v(" "),e("tr",[e("td",[t._v("393")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("isPartiallyCopied")])])])]),t._v(" "),e("h3",{attrs:{id:"loomscreencontrollerproxycallbacks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loomscreencontrollerproxycallbacks"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoomScreenControllerProxyCallbacks")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(int)>")])]),t._v(" "),e("td",[t._v("mAddItem")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(int)>")])]),t._v(" "),e("td",[t._v("mAddDye")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<int __cdecl(BannerPattern const *)>")])]),t._v(" "),e("td",[t._v("mGetPatternIndex")])]),t._v(" "),e("tr",[e("td",[t._v("192")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(int)>")])]),t._v(" "),e("td",[t._v("mSetSelectedPattern")])]),t._v(" "),e("tr",[e("td",[t._v("256")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<ItemStackBase const & __cdecl(void)>")])]),t._v(" "),e("td",[t._v("mGetResultItem")])])])]),t._v(" "),e("h3",{attrs:{id:"layerbiomesource"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerbiomesource"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerBiomeSource")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("BiomeSource")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<Layer<Biome *> const >")])]),t._v(" "),e("td",[t._v("mBlockResolutionLayer")])])])]),t._v(" "),e("h3",{attrs:{id:"layerdetails-randomprovidert-lambda-771016eb0f7e2748065ada6628a00507"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerdetails-randomprovidert-lambda-771016eb0f7e2748065ada6628a00507"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerDetails::RandomProviderT<<lambda_771016eb0f7e2748065ada6628a00507> >")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LayerDetails::LayerBase::initRandom::__l2::<lambda_771016eb0f7e2748065ada6628a00507>")])]),t._v(" "),e("td",[t._v("mNextRandom")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("mRval")])])])]),t._v(" "),e("h3",{attrs:{id:"layerdetails-layerbase-initrandom-l2-lambda-771016eb0f7e2748065ada6628a00507"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerdetails-layerbase-initrandom-l2-lambda-771016eb0f7e2748065ada6628a00507"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerDetails::LayerBase::initRandom::__l2::<lambda_771016eb0f7e2748065ada6628a00507>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("seed")])])])]),t._v(" "),e("h3",{attrs:{id:"lakefeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lakefeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("LakeFeature")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("Feature")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const Block *")])]),t._v(" "),e("td",[t._v("mBlock")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const Block *")])]),t._v(" "),e("td",[t._v("mEmptyBlock")])])])]),t._v(" "),e("h3",{attrs:{id:"layerfilters-addbiomeisland-ctor-l2-lambda-d22b2d79a9b449dd8757e60c4491a3ad"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerfilters-addbiomeisland-ctor-l2-lambda-d22b2d79a9b449dd8757e60c4491a3ad"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerFilters::AddBiomeIsland::{ctor}::__l2::<lambda_d22b2d79a9b449dd8757e60c4491a3ad>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LayerFilters::AddBiomeIsland *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(224) "),e("code",[t._v("TagRegistry<IDType<BiomeTagIDType>,IDType<BiomeTagSetIDType> >")])]),t._v(" "),e("td",[t._v("tagRegistry")])]),t._v(" "),e("tr",[e("td",[t._v("232")]),t._v(" "),e("td",[t._v("(1008) "),e("code",[t._v("WellKnownBiomeTags")])]),t._v(" "),e("td",[t._v("wellKnownBiomeTags")])])])]),t._v(" "),e("h3",{attrs:{id:"layerfilters-riverinit-ctor-l2-lambda-b3b651c19a7ac355c635e67204b20baa"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerfilters-riverinit-ctor-l2-lambda-b3b651c19a7ac355c635e67204b20baa"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerFilters::RiverInit::{ctor}::__l2::<lambda_b3b651c19a7ac355c635e67204b20baa>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("LayerFilters::RiverInit *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(224) "),e("code",[t._v("TagRegistry<IDType<BiomeTagIDType>,IDType<BiomeTagSetIDType> >")])]),t._v(" "),e("td",[t._v("tagRegistry")])]),t._v(" "),e("tr",[e("td",[t._v("232")]),t._v(" "),e("td",[t._v("(1008) "),e("code",[t._v("WellKnownBiomeTags")])]),t._v(" "),e("td",[t._v("wellKnownBiomeTags")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-mutexlock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-mutexlock"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::MutexLock")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::port::Mutex *const")])]),t._v(" "),e("td",[t._v("mu_")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-parsedinternalkey"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-parsedinternalkey"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::ParsedInternalKey")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("leveldb::Slice")])]),t._v(" "),e("td",[t._v("user_key")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("sequence")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("leveldb::ValueType")])]),t._v(" "),e("td",[t._v("type")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-filemetadata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-filemetadata"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::FileMetaData")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("refs")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("allowed_seeks")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("number")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("file_size")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("leveldb::InternalKey")])]),t._v(" "),e("td",[t._v("smallest")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("leveldb::InternalKey")])]),t._v(" "),e("td",[t._v("largest")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-versionset-builder-bysmallestkey"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-versionset-builder-bysmallestkey"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::VersionSet::Builder::BySmallestKey")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const leveldb::InternalKeyComparator *")])]),t._v(" "),e("td",[t._v("internal_comparator")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-versionedit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-versionedit"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::VersionEdit")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("comparator_")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("log_number_")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("prev_log_number_")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("next_file_number_")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("last_sequence_")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("has_comparator_")])]),t._v(" "),e("tr",[e("td",[t._v("65")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("has_log_number_")])]),t._v(" "),e("tr",[e("td",[t._v("66")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("has_prev_log_number_")])]),t._v(" "),e("tr",[e("td",[t._v("67")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("has_next_file_number_")])]),t._v(" "),e("tr",[e("td",[t._v("68")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("has_last_sequence_")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::pair<int,leveldb::InternalKey>>")])]),t._v(" "),e("td",[t._v("compact_pointers_")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::set<std::pair<int,unsigned __int64>>")])]),t._v(" "),e("td",[t._v("deleted_files_")])]),t._v(" "),e("tr",[e("td",[t._v("112")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::pair<int,leveldb::FileMetaData>>")])]),t._v(" "),e("td",[t._v("new_files_")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-log-writer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-log-writer"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::log::Writer")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::WritableFile *")])]),t._v(" "),e("td",[t._v("dest_")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("block_offset_")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(20) "),e("code",[t._v("unsigned int[5]")])]),t._v(" "),e("td",[t._v("type_crc_")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-log-reader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-log-reader"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::log::Reader")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::SequentialFile *const")])]),t._v(" "),e("td",[t._v("file_")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::log::Reader::Reporter *const")])]),t._v(" "),e("td",[t._v("reporter_")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("const bool")])]),t._v(" "),e("td",[t._v("checksum_")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char *const")])]),t._v(" "),e("td",[t._v("backing_store_")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("leveldb::Slice")])]),t._v(" "),e("td",[t._v("buffer_")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("eof_")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("last_record_offset_")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("end_of_buffer_offset_")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int64")])]),t._v(" "),e("td",[t._v("initial_offset_")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("resyncing_")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-dbimpl-compactionstate-output"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-dbimpl-compactionstate-output"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::DBImpl::CompactionState::Output")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("number")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("file_size")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("leveldb::InternalKey")])]),t._v(" "),e("td",[t._v("smallest")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("leveldb::InternalKey")])]),t._v(" "),e("td",[t._v("largest")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-readoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-readoptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::ReadOptions")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("verify_checksums")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("fill_cache")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const leveldb::Snapshot *")])]),t._v(" "),e("td",[t._v("snapshot")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::DecompressAllocator *")])]),t._v(" "),e("td",[t._v("decompress_allocator")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-lookupkey"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-lookupkey"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::LookupKey")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *")])]),t._v(" "),e("td",[t._v("start_")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *")])]),t._v(" "),e("td",[t._v("kstart_")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *")])]),t._v(" "),e("td",[t._v("end_")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(200) "),e("code",[t._v("char[200]")])]),t._v(" "),e("td",[t._v("space_")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-version-getstats"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-version-getstats"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Version::GetStats")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::FileMetaData *")])]),t._v(" "),e("td",[t._v("seek_file")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("seek_file_level")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-writebatch-handler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-writebatch-handler"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::WriteBatch::Handler")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::WriteBatch::Handler_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-options"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Options")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const leveldb::Comparator *")])]),t._v(" "),e("td",[t._v("comparator")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("create_if_missing")])]),t._v(" "),e("tr",[e("td",[t._v("9")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("error_if_exists")])]),t._v(" "),e("tr",[e("td",[t._v("10")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("paranoid_checks")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::Env *")])]),t._v(" "),e("td",[t._v("env")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::Logger *")])]),t._v(" "),e("td",[t._v("info_log")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("write_buffer_size")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("max_open_files")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::Cache *")])]),t._v(" "),e("td",[t._v("block_cache")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("block_size")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("block_restart_interval")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("max_file_size")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(2048) "),e("code",[t._v("leveldb::Compressor *[256]")])]),t._v(" "),e("td",[t._v("compressors")])]),t._v(" "),e("tr",[e("td",[t._v("2128")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("reuse_logs")])]),t._v(" "),e("tr",[e("td",[t._v("2136")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const leveldb::FilterPolicy *")])]),t._v(" "),e("td",[t._v("filter_policy")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-internalkeycomparator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-internalkeycomparator"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::InternalKeyComparator")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::Comparator")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const leveldb::Comparator *")])]),t._v(" "),e("td",[t._v("user_comparator_")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-comparator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-comparator"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Comparator")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::Comparator_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-internalfilterpolicy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-internalfilterpolicy"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::InternalFilterPolicy")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::FilterPolicy")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const leveldb::FilterPolicy *const")])]),t._v(" "),e("td",[t._v("user_policy_")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-filterpolicy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-filterpolicy"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::FilterPolicy")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::FilterPolicy_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-versionset-builder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-versionset-builder"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::VersionSet::Builder")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::VersionSet *")])]),t._v(" "),e("td",[t._v("vset_")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::Version *")])]),t._v(" "),e("td",[t._v("base_")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(168) "),e("code",[t._v("leveldb::VersionSet::Builder::LevelState[7]")])]),t._v(" "),e("td",[t._v("levels_")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-versionset-builder-levelstate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-versionset-builder-levelstate"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::VersionSet::Builder::LevelState")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::set<unsigned __int64>")])]),t._v(" "),e("td",[t._v("deleted_files")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::set<leveldb::FileMetaData *,leveldb::VersionSet::Builder::BySmallestKey,std::allocator<leveldb::FileMetaData *> > *")])]),t._v(" "),e("td",[t._v("added_files")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-footer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-footer"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Footer")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("leveldb::BlockHandle")])]),t._v(" "),e("td",[t._v("metaindex_handle_")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("leveldb::BlockHandle")])]),t._v(" "),e("td",[t._v("index_handle_")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-blockhandle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-blockhandle"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::BlockHandle")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("offset_")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("size_")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-blockcontents"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-blockcontents"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::BlockContents")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("leveldb::Slice")])]),t._v(" "),e("td",[t._v("data")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("cachable")])]),t._v(" "),e("tr",[e("td",[t._v("17")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("heap_allocated")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-blockbuilder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-blockbuilder"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::BlockBuilder")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const leveldb::Options *")])]),t._v(" "),e("td",[t._v("options_")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("buffer_")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<unsigned int>")])]),t._v(" "),e("td",[t._v("restarts_")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("counter_")])]),t._v(" "),e("tr",[e("td",[t._v("68")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("finished_")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("last_key_")])])])]),t._v(" "),e("h3",{attrs:{id:"leveldb-port-atomicpointer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-port-atomicpointer"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::port::AtomicPointer")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void *")])]),t._v(" "),e("td",[t._v("rep_")])])])]),t._v(" "),e("h3",{attrs:{id:"localeinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localeinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocaleInfo")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char *")])]),t._v(" "),e("td",[t._v("decimal_point")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char *")])]),t._v(" "),e("td",[t._v("thousands_sep")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char *")])]),t._v(" "),e("td",[t._v("grouping")])])])]),t._v(" "),e("h3",{attrs:{id:"listtag-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listtag-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListTag_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ ListTag_vtbl\n{\n  void (__fastcall *~Tag)(Tag *this);\n  void (__fastcall *deleteChildren)(Tag *this);\n  void (__fastcall *write)(Tag *this, IDataOutput *);\n  void (__fastcall *load)(Tag *this, IDataInput *);\n  void (__fastcall *writeScriptData)(Tag *this, IDataOutput *);\n  void (__fastcall *loadScriptData)(Tag *this, IDataInput *);\n  std::string *(__fastcall *toString)(Tag *this, std::string *result);\n  Tag::Type (__fastcall *getId)(Tag *this);\n  bool (__fastcall *equals)(Tag *this, const Tag *);\n  void (__fastcall *print)(Tag *this, const std::string *, PrintStream *);\n  void (__fastcall *print)(Tag *this, PrintStream *);\n  std::unique_ptr<Tag> *(__fastcall *copy)(Tag *this, std::unique_ptr<Tag> *result);\n  unsigned __int64 (__fastcall *hash)(Tag *this);\n};\n\n")])])]),e("h3",{attrs:{id:"localconnector-connectioncallbacks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localconnector-connectioncallbacks"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalConnector::ConnectionCallbacks")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalConnector::ConnectionCallbacks\n{\n  LocalConnector::ConnectionCallbacks_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"localconnector-connectioncallbacks-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localconnector-connectioncallbacks-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalConnector::ConnectionCallbacks_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LocalConnector::ConnectionCallbacks_vtbl\n{\n  void (__fastcall *~ConnectionCallbacks)(LocalConnector::ConnectionCallbacks *this);\n  void (__fastcall *onNewIncomingLocalConnection)(LocalConnector::ConnectionCallbacks *this, const NetworkIdentifier *, std::shared_ptr<NetworkPeer>);\n  void (__fastcall *onNewOutgoingLocalConnection)(LocalConnector::ConnectionCallbacks *this, const NetworkIdentifier *, std::shared_ptr<NetworkPeer>);\n  void (__fastcall *onConnectionClosed)(LocalConnector::ConnectionCallbacks *this, const NetworkIdentifier *, const std::string *, bool);\n  void (__fastcall *onOutgoingConnectionFailed)(LocalConnector::ConnectionCallbacks *this);\n};\n\n")])])]),e("h3",{attrs:{id:"localconnector"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localconnector"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalConnector")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalConnector : Connector\n{\n  LocalConnector::ConnectionCallbacks *mCallbacks;\n  NetworkIdentifier mLocalId;\n  std::vector<LocalConnector::LocalConnection> mConnections;\n  std::vector<std::function<void __cdecl(void)>> mCallbackQueue;\n};\n\n")])])]),e("h3",{attrs:{id:"localconnector-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localconnector-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalConnector_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LocalConnector_vtbl\n{\n  void (__fastcall *~Connector)(Connector *this);\n  std::vector<std::string> *(__fastcall *getLocalIps)(Connector *this, std::vector<std::string> *result);\n  std::string *(__fastcall *getLocalIp)(Connector *this, std::string *result);\n  unsigned __int16 (__fastcall *getPort)(Connector *this);\n  std::vector<RakNet::SystemAddress> *(__fastcall *getRefinedLocalIps)(Connector *this, std::vector<RakNet::SystemAddress> *result);\n  const Social::GameConnectionInfo *(__fastcall *getConnectedGameInfo)(Connector *this);\n  void (__fastcall *setupNatPunch)(Connector *this, bool);\n  Connector::NatPunchInfo *(__fastcall *getNatPunchInfo)(Connector *this, Connector::NatPunchInfo *result);\n  void (__fastcall *startNatPunchingClient)(Connector *this, Social::GameConnectionInfo);\n  void (__fastcall *addConnectionStateListener)(Connector *this, Connector::ConnectionStateListener *);\n  void (__fastcall *removeConnectionStateListener)(Connector *this, Connector::ConnectionStateListener *);\n  bool (__fastcall *isIPv4Supported)(Connector *this);\n  bool (__fastcall *isIPv6Supported)(Connector *this);\n  unsigned __int16 (__fastcall *getIPv4Port)(Connector *this);\n  unsigned __int16 (__fastcall *getIPv6Port)(Connector *this);\n  RakNet::RakNetGUID *(__fastcall *getGUID)(Connector *this, RakNet::RakNetGUID *result);\n};\n\n")])])]),e("h3",{attrs:{id:"lockless-weakatomic-spscqueue-batchednetworkpeer-datacallback-512-block"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lockless-weakatomic-spscqueue-batchednetworkpeer-datacallback-512-block"}},[t._v("#")]),t._v(" "),e("code",[t._v("Lockless::WeakAtomic<SPSCQueue<BatchedNetworkPeer::DataCallback,512>::Block *>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Lockless::WeakAtomic<SPSCQueue<BatchedNetworkPeer::DataCallback,512>::Block *>\n{\n  std::atomic<SPSCQueue<BatchedNetworkPeer::DataCallback,512>::Block *> mValue;\n};\n\n")])])]),e("h3",{attrs:{id:"labtablepacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#labtablepacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LabTablePacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LabTablePacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"lecternupdatepacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lecternupdatepacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LecternUpdatePacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LecternUpdatePacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkpacket-subchunkmetadata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkpacket-subchunkmetadata"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkPacket::SubChunkMetadata")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelChunkPacket::SubChunkMetadata\n{\n  unsigned __int64 blobId;\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkpacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkpacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkPacket")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelChunkPacket : Packet\n{\n  bool mCacheEnabled;\n  ChunkPos mPos;\n  std::string mSerializedChunk;\n  unsigned __int64 mSubChunksCount;\n  std::vector<LevelChunkPacket::SubChunkMetadata> mCacheMetadata;\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkpacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkpacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkPacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelChunkPacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"leveleventgenericpacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventgenericpacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventGenericPacket")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj LevelEventGenericPacket : Packet\n{\n  int mEventId;\n  std::unique_ptr<CompoundTag> mData;\n};\n\n")])])]),e("h3",{attrs:{id:"leveleventgenericpacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventgenericpacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventGenericPacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelEventGenericPacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"leveleventpacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventpacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventPacket")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj __declspec(align(8)) LevelEventPacket : Packet\n{\n  int mEventId;\n  Vec3 mPos;\n  int mData;\n};\n\n")])])]),e("h3",{attrs:{id:"leveleventpacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventpacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventPacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelEventPacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"levelsoundeventpacketv2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelsoundeventpacketv2"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelSoundEventPacketV2")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj __declspec(align(8)) LevelSoundEventPacketV2 : Packet\n{\n  LevelSoundEvent mEventId;\n  Vec3 mPos;\n  int mData;\n  std::string mEntityIdentifier;\n  bool mIsBabyMob;\n  bool mIsGlobal;\n};\n\n")])])]),e("h3",{attrs:{id:"levelsoundeventpacketv2-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelsoundeventpacketv2-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelSoundEventPacketV2_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelSoundEventPacketV2_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"levelsoundeventpacketv1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelsoundeventpacketv1"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelSoundEventPacketV1")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj __declspec(align(8)) LevelSoundEventPacketV1 : Packet\n{\n  LevelSoundEvent mEventId;\n  Vec3 mPos;\n  int mData;\n  ActorType mEntityType;\n  bool mIsBabyMob;\n  bool mIsGlobal;\n};\n\n")])])]),e("h3",{attrs:{id:"levelsoundeventpacketv1-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelsoundeventpacketv1-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelSoundEventPacketV1_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelSoundEventPacketV1_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"levelsoundeventpacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelsoundeventpacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelSoundEventPacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelSoundEventPacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"loginpacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loginpacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoginPacket")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj LoginPacket : Packet\n{\n  int mClientNetworkVersion;\n  std::unique_ptr<ConnectionRequest> mConnectionRequest;\n};\n\n")])])]),e("h3",{attrs:{id:"loginpacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loginpacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoginPacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LoginPacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"lockless-weakatomic-spscqueue-std-shared-ptr-backgroundtaskbase-512-block"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lockless-weakatomic-spscqueue-std-shared-ptr-backgroundtaskbase-512-block"}},[t._v("#")]),t._v(" "),e("code",[t._v("Lockless::WeakAtomic<SPSCQueue<std::shared_ptr<BackgroundTaskBase>,512>::Block *>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Lockless::WeakAtomic<SPSCQueue<std::shared_ptr<BackgroundTaskBase>,512>::Block *>\n{\n  std::atomic<SPSCQueue<std::shared_ptr<BackgroundTaskBase>,512>::Block *> mValue;\n};\n\n")])])]),e("h3",{attrs:{id:"legacypackidversion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacypackidversion"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyPackIdVersion")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyPackIdVersion\n{\n  std::string mId;\n  std::string mVersion;\n};\n\n")])])]),e("h3",{attrs:{id:"loadedresourcedata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loadedresourcedata"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoadedResourceData")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LoadedResourceData\n{\n  int mIndex;\n  std::string mContent;\n};\n\n")])])]),e("h3",{attrs:{id:"levellistener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levellistener"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelListener")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelListener : BlockSourceListener\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lighttexture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lighttexture"}},[t._v("#")]),t._v(" "),e("code",[t._v("LightTexture")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LightTexture\n{\n  std::shared_ptr<mce::Image> mBrightnessImage;\n  _BYTE mBrightnessTextureId[1];\n  std::shared_ptr<mce::ClientTexture> mBrightnessTexture;\n  bool mIsTextureDirty;\n  BaseLightData mLightData;\n};\n\n")])])]),e("h3",{attrs:{id:"legacystructureblockpalette"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacystructureblockpalette"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyStructureBlockPalette")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyStructureBlockPalette\n{\n  std::unordered_map<int,Block const *> mMapper;\n};\n\n")])])]),e("h3",{attrs:{id:"legacystructureblockinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacystructureblockinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyStructureBlockInfo")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyStructureBlockInfo\n{\n  BlockPos mPos;\n  const Block *mBlock;\n  const Block *mExtraBlock;\n  std::unique_ptr<CompoundTag> mTag;\n};\n\n")])])]),e("h3",{attrs:{id:"legacystructureactorinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacystructureactorinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyStructureActorInfo")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyStructureActorInfo\n{\n  Vec3 mPos;\n  BlockPos mBlockPos;\n  CompoundTag mTag;\n};\n\n")])])]),e("h3",{attrs:{id:"legacystructuretemplate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacystructuretemplate"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyStructureTemplate")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyStructureTemplate\n{\n  std::string mAuthor;\n  BlockPos mSize;\n  LegacyStructureBlockPalette mPalette;\n  LegacyStructureBlockPalette mExtraBlockPalette;\n  std::vector<LegacyStructureBlockInfo> mBlockInfo;\n  std::vector<LegacyStructureActorInfo> mEntityInfo;\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkfinaldeleter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkfinaldeleter"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkFinalDeleter")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelChunkFinalDeleter\n{\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkgridareaelement-std-weak-ptr-levelchunk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkgridareaelement-std-weak-ptr-levelchunk"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkGridAreaElement<std::weak_ptr<LevelChunk> >")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelChunkGridAreaElement<std::weak_ptr<LevelChunk> >\n{\n  std::unordered_map<ChunkPos,std::weak_ptr<LevelChunk>> mChunkElemMap;\n  SpinLock mSpinLock;\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkbuilderdata-chunkreadyforprocessingelement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkbuilderdata-chunkreadyforprocessingelement"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkBuilderData::ChunkReadyForProcessingElement")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelChunkBuilderData::ChunkReadyForProcessingElement\n{\n  std::pair<ChunkPos,enum ChunkState> mChunkPosAndExpectedState;\n  int mPriority;\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkbuilderdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkbuilderdata"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkBuilderData")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelChunkBuilderData\n{\n  SpinLock mChunkGenerationGridMapSpinLock;\n  std::unordered_map<ChunkPos,std::shared_ptr<LevelChunkGridAreaElement<std::weak_ptr<LevelChunk> > >> mChunkGenerationGridMap;\n  SpinLock mChunksToAddToProcessingSpinLock;\n  std::vector<std::pair<ChunkPos,enum ChunkState>> mChunksToAddToProcessing;\n  SpinLock mChunksReadyForProcessingSpinLock;\n  std::unordered_set<std::pair<ChunkPos,enum ChunkState>> mChunksReadyForProcessing;\n  std::vector<LevelChunkBuilderData::ChunkReadyForProcessingElement> mChunkSortVector;\n  std::atomic<int> mChunkGenerationTasksInFlight;\n  SpinLock mSpawnTasksLock;\n};\n\n")])])]),e("h3",{attrs:{id:"loopbackpacketsender"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loopbackpacketsender"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoopbackPacketSender")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LoopbackPacketSender : PacketSender\n{\n  NetworkHandler *mNetwork;\n  std::vector<NetEventCallback *> mLoopbackCallbacks;\n  const std::vector<std::unique_ptr<Player>> *mUserList;\n  std::vector<NetworkIdentifierWithSubId> mTempUserIds;\n};\n\n")])])]),e("h3",{attrs:{id:"loopbackpacketsender-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loopbackpacketsender-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoopbackPacketSender_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LoopbackPacketSender_vtbl\n{\n  void (__fastcall *~PacketSender)(PacketSender *this);\n  void (__fastcall *send)(PacketSender *this, Packet *);\n  void (__fastcall *sendToServer)(PacketSender *this, Packet *);\n  void (__fastcall *sendToClient)(PacketSender *this, const NetworkIdentifier *, const Packet *, unsigned __int8);\n  void (__fastcall *sendToClients)(PacketSender *this, const std::vector<NetworkIdentifierWithSubId> *, const Packet *);\n  void (__fastcall *sendBroadcast)(PacketSender *this, const NetworkIdentifier *, unsigned __int8, const Packet *);\n  void (__fastcall *sendBroadcast)(PacketSender *this, const Packet *);\n  void (__fastcall *flush)(PacketSender *this, const NetworkIdentifier *, std::function<void __cdecl(void)> *);\n};\n\n")])])]),e("h3",{attrs:{id:"levelstorage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelstorage"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelStorage")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelStorage\n{\n  LevelStorage_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"levelstorageobserver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelstorageobserver"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelStorageObserver")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelStorageObserver\n{\n  std::function<void __cdecl(std::string const &)> mOnSaveCallback;\n};\n\n")])])]),e("h3",{attrs:{id:"levelstoragewritebatch-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelstoragewritebatch-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelStorageWriteBatch_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelStorageWriteBatch_vtbl\n{\n  void (__fastcall *~LevelStorageWriteBatch)(LevelStorageWriteBatch *this);\n  void (__fastcall *putKey)(LevelStorageWriteBatch *this, const std::string *, std::shared_ptr<std::string >);\n  void (__fastcall *putKey)(LevelStorageWriteBatch *this, const std::string *, std::string *);\n  void (__fastcall *putKey)(LevelStorageWriteBatch *this, const std::string *, const std::string *);\n  void (__fastcall *putKey)(LevelStorageWriteBatch *this, const std::string *, gsl::basic_string_span<char const ,-1>);\n  void (__fastcall *deleteKey)(LevelStorageWriteBatch *this, const std::string *);\n  void (__fastcall *flush)(LevelStorageWriteBatch *this, LevelStorage *);\n};\n\n")])])]),e("h3",{attrs:{id:"levelstoragewritebatch-batchentry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelstoragewritebatch-batchentry"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelStorageWriteBatch::BatchEntry")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelStorageWriteBatch::BatchEntry\n{\n  std::shared_ptr<std::string > mLatestValue;\n  bool mDeleted;\n};\n\n")])])]),e("h3",{attrs:{id:"levelstorage-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelstorage-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelStorage_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelStorage_vtbl\n{\n  void (__fastcall *~LevelStorage)(LevelStorage *this);\n  void (__fastcall *addStorageObserver)(LevelStorage *this, std::unique_ptr<LevelStorageObserver>);\n  std::unique_ptr<CompoundTag> *(__fastcall *getCompoundTag)(LevelStorage *this, std::unique_ptr<CompoundTag> *result, const std::string *);\n  bool (__fastcall *hasKey)(LevelStorage *this, gsl::basic_string_span<char const ,-1>);\n  void (__fastcall *forEachKeyWithPrefix)(LevelStorage *this, gsl::basic_string_span<char const ,-1>, const std::function<void __cdecl(gsl::basic_string_span<char const ,-1>,gsl::basic_string_span<char const ,-1>)> *);\n  bool (__fastcall *loadLevelData)(LevelStorage *this, LevelData *);\n  std::unique_ptr<ChunkSource> *(__fastcall *createChunkStorage)(LevelStorage *this, std::unique_ptr<ChunkSource> *result, std::unique_ptr<ChunkSource>, StorageVersion);\n  void (__fastcall *saveLevelData)(LevelStorage *this, const LevelData *);\n  const Core::PathBuffer<std::string > *(__fastcall *getFullPath)(LevelStorage *this);\n  std::shared_ptr<Bedrock::Threading::IAsyncResult<void> > *(__fastcall *saveData)(LevelStorage *this, std::shared_ptr<Bedrock::Threading::IAsyncResult<void> > *result, const LevelStorageWriteBatch *);\n  std::shared_ptr<Bedrock::Threading::IAsyncResult<void> > *(__fastcall *saveData)(LevelStorage *this, std::shared_ptr<Bedrock::Threading::IAsyncResult<void> > *result, const std::string *, std::string *);\n  std::shared_ptr<Bedrock::Threading::IAsyncResult<void> > *(__fastcall *deleteData)(LevelStorage *this, std::shared_ptr<Bedrock::Threading::IAsyncResult<void> > *result, const std::string *);\n  void (__fastcall *syncIO)(LevelStorage *this);\n  void (__fastcall *getStatistics)(LevelStorage *this, std::string *);\n  bool (__fastcall *clonePlayerData)(LevelStorage *this, gsl::basic_string_span<char const ,-1>, gsl::basic_string_span<char const ,-1>);\n  Core::LevelStorageResult *(__fastcall *getLevelStorageState)(LevelStorage *this, Core::LevelStorageResult *result);\n  void (__fastcall *startShutdown)(LevelStorage *this);\n  bool (__fastcall *isShuttingDown)(LevelStorage *this);\n  bool (__fastcall *checkShutdownDone)(LevelStorage *this);\n  bool (__fastcall *loadData)(LevelStorage *this, gsl::basic_string_span<char const ,-1>, std::string *);\n  Core::LevelStorageResult *(__fastcall *getState)(LevelStorage *this, Core::LevelStorageResult *result);\n  std::vector<SnapshotFilenameAndLength> *(__fastcall *createSnapshot)(LevelStorage *this, std::vector<SnapshotFilenameAndLength> *result, const std::string *);\n  void (__fastcall *releaseSnapshot)(LevelStorage *this);\n  void (__fastcall *compactStorage)(LevelStorage *this);\n  void (__fastcall *syncAndSuspendStorage)(LevelStorage *this);\n  void (__fastcall *resumeStorage)(LevelStorage *this);\n  void (__fastcall *setFlushAllowed)(LevelStorage *this, bool);\n  void (__fastcall *flushToPermanentStorage)(LevelStorage *this);\n  void (__fastcall *freeCaches)(LevelStorage *this);\n  void (__fastcall *setCompactionCallback)(LevelStorage *this, std::function<void __cdecl(enum CompactionStatus)>);\n  void (__fastcall *setCriticalSyncSaveCallback)(LevelStorage *this, std::function<void __cdecl(void)>);\n  void (__fastcall *corruptLevel)(LevelStorage *this);\n};\n\n")])])]),e("h3",{attrs:{id:"lockless-weakatomic-spscqueue-std-function-void-cdecl-void-512-block"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lockless-weakatomic-spscqueue-std-function-void-cdecl-void-512-block"}},[t._v("#")]),t._v(" "),e("code",[t._v("Lockless::WeakAtomic<SPSCQueue<std::function<void __cdecl(void)>,512>::Block *>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Lockless::WeakAtomic<SPSCQueue<std::function<void __cdecl(void)>,512>::Block *>\n{\n  std::atomic<SPSCQueue<std::function<void __cdecl(void)>,512>::Block *> mValue;\n};\n\n")])])]),e("h3",{attrs:{id:"leveleventlistener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventlistener"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventListener")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelEventListener\n{\n  LevelEventListener_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"leveleventlistener-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventlistener-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventListener_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelEventListener_vtbl\n{\n  void (__fastcall *~LevelEventListener)(LevelEventListener *this);\n  EventResult (__fastcall *onLevelInitialized)(LevelEventListener *this, Level *);\n  EventResult (__fastcall *onLevelSaveData)(LevelEventListener *this, Level *, CompoundTag *);\n  EventResult (__fastcall *onLevelAddedPlayer)(LevelEventListener *this, Level *, Player *);\n  EventResult (__fastcall *onLevelRemovedPlayer)(LevelEventListener *this, Level *, Player *);\n  EventResult (__fastcall *onLevelRemovedActor)(LevelEventListener *this, Level *, Actor *);\n  EventResult (__fastcall *onLevelAddedActor)(LevelEventListener *this, Level *, Actor *);\n  EventResult (__fastcall *onLevelTick)(LevelEventListener *this);\n  EventResult (__fastcall *onLevelWeatherChange)(LevelEventListener *this, const std::string *, bool, bool);\n  EventResult (__fastcall *onLevelBiomesRegistered)(LevelEventListener *this, BiomeRegistry *);\n};\n\n")])])]),e("h3",{attrs:{id:"localplayer-emoteplayedtelemetrydata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localplayer-emoteplayedtelemetrydata"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalPlayer::EmotePlayedTelemetryData")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalPlayer::EmotePlayedTelemetryData\n{\n  std::string mEmoteProductId;\n  bool mEmoteEndedEarly;\n  bool mEmotePlayed;\n  int mEmoteSlotNumber;\n};\n\n")])])]),e("h3",{attrs:{id:"localplayer-regionlistener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localplayer-regionlistener"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalPlayer::RegionListener")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalPlayer::RegionListener\n{\n  LocalPlayer::RegionListener_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"localplayer-regionlistener-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localplayer-regionlistener-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalPlayer::RegionListener_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LocalPlayer::RegionListener_vtbl\n{\n  void (__fastcall *~RegionListener)(LocalPlayer::RegionListener *this);\n  void (__fastcall *onRegionDestroyed)(LocalPlayer::RegionListener *this);\n};\n\n")])])]),e("h3",{attrs:{id:"localplayer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localplayer"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalPlayer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj __declspec(align(8)) LocalPlayer : Player\n{\n  InventoryMenu mInventoryMenu;\n  float mPortalEffectTime;\n  float mOPortalEffectTime;\n  LocalPlayer::EmotePlayedTelemetryData mEmotePlayedTelemetryData;\n  IClientInstance *mClient;\n  _BYTE mLoadingState[4];\n  int mCanCloseScreenOnHurtAfterTime;\n  bool mIsRotatingViaScript;\n  bool mIsDenyInput;\n  bool mCheatTesting;\n  float mFlyX;\n  float mFlyY;\n  float mFlyZ;\n  Vec3 mlastFrameDelta;\n  Vec2 mLastHmdRot;\n  Vec2 mHmdAngleDelta;\n  float mActionOrStopGazeLock;\n  bool mHmdRotRecorded;\n  bool mActionOrStopThisFrame;\n  bool mEnablePortalEffect;\n  SmoothFloat mSmoothFlyX;\n  SmoothFloat mSmoothFlyY;\n  SmoothFloat mSmoothFlyZ;\n  bool mWasAutoJumping;\n  bool mAutoJumpEnabled;\n  float mJumpRidingScale;\n  ItemStack mSentOffhandItem;\n  ItemStack mSentInventoryItem;\n  int mSentSelectedSlot;\n  float mPreloadingProgress;\n  unsigned __int64 mSessionTickCount;\n  Vec3 mStartRidingPosition;\n  std::vector<LocalPlayer::RegionListener *> mRegionListeners;\n  Vec2 mLookBob;\n  Vec2 mOLookBob;\n  float mCurrentXa;\n  float mCurrentZa;\n  bool mDamagedByMobThisFrame;\n  bool mLeavingLevel;\n  bool mIsTeacher;\n  bool mHasBeenInitialized;\n  bool mPrevTransitionBlocking;\n  InventoryOptions mInventoryOptions;\n  ItemInstance mCachedArmor[4];\n  std::unordered_set<mce::UUID> mAllSentEmotePieceIds;\n  StructureFeatureType mCurrentStructureFeature;\n  ItemStack mItemActivationItem;\n  int mItemActivationTicks;\n  float mItemActivationOffsetX;\n  float mItemActivationOffsetY;\n  std::unique_ptr<PlayerAutomationObserver> mAutomationObserver;\n  Vec2 mTurnDelta;\n  Vec3 mLastDelta;\n  Vec3 mLastPos;\n  NetworkChunkSubscriber mChunkSubscriberView;\n  Vec3 mInitPos;\n  float mMoveDis;\n  float mMaxDisX;\n  float mMaxDisY;\n  float mMaxDisZ;\n  bool mCanButtonJump;\n  bool mCanButtonMove;\n  bool mCanButtonToggleWalkMode;\n  bool mCanButtonTogglePerspective;\n  bool mCanButtonPause;\n  bool mCanButtonChat;\n  bool mCanButtonScreenShot;\n  bool mCanButtonOpenInv;\n  bool mCanScreenDrag;\n  bool mCanButtonInAir;\n  bool mSpeedFovClosed;\n  bool mIsAutoTransform;\n  int mAutoTransformFlag;\n  Vec3 CheckGM;\n  bool mChangeRenderByScripts;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mLoadIntoDimensionTimeOut;\n  std::vector<ChunkPos> mChunksNeededForLoadOffsets;\n  PlayerRespawnState mClientRespawnState;\n  Vec3 mClientRespawnPotentialPosition;\n  int mResetHMDAfterSleepTickDelay;\n};\n\n")])])]),e("h3",{attrs:{id:"levelstoragesource"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelstoragesource"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelStorageSource")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelStorageSource : Bedrock::EnableNonOwnerReferences\n{\n  LevelStorageSource_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"levelloosefilestorage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelloosefilestorage"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelLooseFileStorage")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelLooseFileStorage\n{\n  std::function<std::unique_ptr<PackAccessStrategy> __cdecl(void)> mConstructor;\n};\n\n")])])]),e("h3",{attrs:{id:"levelstoragesource-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelstoragesource-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelStorageSource_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelStorageSource_vtbl\n{\n  void (__fastcall *~LevelStorageSource)(LevelStorageSource *this);\n  const std::string *(__fastcall *getName)(LevelStorageSource *this);\n  Core::Result *(__fastcall *getLevelData)(LevelStorageSource *this, Core::Result *result, const std::string *, LevelData *);\n  LevelData *(__fastcall *getLevelData)(LevelStorageSource *this, LevelData *result, const std::string *);\n  void (__fastcall *saveLevelData)(LevelStorageSource *this, const std::string *, const LevelData *);\n  void (__fastcall *getLevelList)(LevelStorageSource *this, std::vector<Core::PathBuffer<std::string >> *);\n  std::unique_ptr<LevelStorage> *(__fastcall *createLevelStorage)(LevelStorageSource *this, std::unique_ptr<LevelStorage> *result, Scheduler *, const std::string *, const ContentIdentity *, const IContentKeyProvider *, const std::chrono::duration<__int64,std::ratio<1,1000000000> > *);\n  std::unique_ptr<LevelLooseFileStorage> *(__fastcall *createLevelLooseStorage)(LevelStorageSource *this, std::unique_ptr<LevelLooseFileStorage> *result, const std::string *, const ContentIdentity *, const IContentKeyProvider *);\n  bool (__fastcall *isNewLevelIdAcceptable)(LevelStorageSource *this, const std::string *);\n  void (__fastcall *deleteLevel)(LevelStorageSource *this, const std::string *);\n  void (__fastcall *renameLevel)(LevelStorageSource *this, LevelData *, const Core::Path *, const std::string *);\n  bool (__fastcall *renameLevel)(LevelStorageSource *this, const std::string *, const std::string *);\n  bool (__fastcall *createBackupCopyOfWorld)(LevelStorageSource *this, const std::string *, const std::string *, const std::string *);\n  bool (__fastcall *isConvertible)(LevelStorageSource *this, const std::string *);\n  bool (__fastcall *requiresConversion)(LevelStorageSource *this, const std::string *);\n  bool (__fastcall *convertLevel)(LevelStorageSource *this, const std::string *, struct ProgressListener *);\n  bool (__fastcall *isLevelMarkedForSync)(LevelStorageSource *this, const Core::Path *);\n  bool (__fastcall *isLevelPartiallyCopied)(LevelStorageSource *this, const Core::Path *);\n  Core::PathBuffer<std::string > *(__fastcall *getLevelDatFoundPath)(LevelStorageSource *this, Core::PathBuffer<std::string > *result, const Core::Path *);\n  const Core::PathBuffer<std::string > *(__fastcall *getBasePath)(LevelStorageSource *this, const Core::PathBuffer<std::string > *result);\n  const Core::PathBuffer<std::string > *(__fastcall *getPathToLevel)(LevelStorageSource *this, const Core::PathBuffer<std::string > *result, const std::string *);\n  const Core::PathBuffer<std::string > *(__fastcall *getPathToLevelInfo)(LevelStorageSource *this, const Core::PathBuffer<std::string > *result, const std::string *, bool);\n  bool (__fastcall *isBetaRetailLevel)(LevelStorageSource *this, const std::string *);\n};\n\n")])])]),e("h3",{attrs:{id:"levellocationobserver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levellocationobserver"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelLocationObserver")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelLocationObserver : Core::Observer<LevelLocationObserver,Core::SingleThreadedLock>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"levellocationobserver-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levellocationobserver-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelLocationObserver_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelLocationObserver_vtbl\n{\n  void (__fastcall *~Observer<LevelLocationObserver,Core::SingleThreadedLock>)(Core::Observer<LevelLocationObserver,Core::SingleThreadedLock> *this);\n  void (__fastcall *_onSubjectDestroyed)(Core::Observer<LevelLocationObserver,Core::SingleThreadedLock> *this);\n  void (__fastcall *onLevelAdded)(LevelLocationObserver *this, const std::string *);\n  void (__fastcall *onLevelUpdated)(LevelLocationObserver *this, const std::string *);\n  void (__fastcall *onLevelDeleted)(LevelLocationObserver *this, const std::string *);\n  void (__fastcall *onStorageChanged)(LevelLocationObserver *this);\n};\n\n")])])]),e("h3",{attrs:{id:"levellistcache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levellistcache"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelListCache")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelListCache : Bedrock::Threading::EnableQueueForMainThread\n{\n  LevelStorageSource *mLevelStorageSource;\n  std::unordered_map<std::string,LevelCache> mCachedLevelData;\n  std::unordered_map<std::string,LevelSummary> mCachedUnSyncedLevelData;\n  bool mDiscoverLevels;\n  Core::Subject<LevelLocationObserver,Core::SingleThreadedLock> mSubject;\n  std::recursive_mutex mCacheLock;\n  std::function<bool __cdecl(void)> mCheckIsSafeToFlushCache;\n};\n\n")])])]),e("h3",{attrs:{id:"levellistcache-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levellistcache-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelListCache_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelListCache_vtbl\n{\n  void (__fastcall *~EnableQueueForMainThread)(Bedrock::Threading::EnableQueueForMainThread *this);\n};\n\n")])])]),e("h3",{attrs:{id:"libraryservice"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryservice"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryService")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LibraryService : ServiceClient\n{\n  gsl::not_null<Bedrock::NonOwnerPointer<DateManager const > > mDateManager;\n  std::string mAcceptLanguage;\n  const Core::PathBuffer<std::string > mDefaultCacheLocation;\n  std::unordered_map<enum LibraryRequestType,Core::PathBuffer<std::string >> mCacheLocationPerType;\n  const std::string mHostUrl;\n  std::string mPlatformOverride;\n  unsigned int mCacheDurationHours;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryservice-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryservice-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryService_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryService_vtbl\n{\n  void (__fastcall *~ServiceClient)(ServiceClient *this);\n  void (__fastcall *update)(ServiceClient *this);\n  void (__fastcall *_submitRequest)(ServiceClient *this, std::shared_ptr<RequestHandler>);\n};\n\n")])])]),e("h3",{attrs:{id:"lessonitem-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessonitem-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonItem_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LessonItem_vtbl\n{\n  void (__fastcall *~LessonItem)(LessonItem *this);\n  bool (__fastcall *isValid)(LessonItem *this);\n  void (__fastcall *_createImageInfo)(LessonItem *this);\n  const ResourceLocation *(__fastcall *_getImageResourceLocation)(LessonItem *this);\n};\n\n")])])]),e("h3",{attrs:{id:"lessonitem-imageinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessonitem-imageinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonItem::ImageInfo")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LessonItem::ImageInfo\n{\n  std::string mUrl;\n  glm::tvec2<int,0> mDimensions;\n  std::shared_ptr<ResourceLocation> mResourceLocation;\n  bool mFetching;\n};\n\n")])])]),e("h3",{attrs:{id:"lessonitemcache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessonitemcache"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonItemCache")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LessonItemCache : std::enable_shared_from_this<LessonItemCache>\n{\n  std::mutex mMutex;\n  std::unordered_map<std::string,std::weak_ptr<LessonItem>> mActiveItems;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LayoutComponent : UIComponent\n{\n  std::weak_ptr<LayoutVariables> mAllVariables;\n  std::array<std::unique_ptr<LayoutVariable>,11> mControlVariables;\n  _BYTE mAnchorFrom[1];\n  _BYTE mAnchorTo[1];\n  ui::LayoutOffset mOffset;\n  ui::LayoutOffset mSize;\n  ui::LayoutOffset mMinSize;\n  ui::LayoutOffset mMaxSize;\n  glm::tvec2<float,0> mOffsetDelta;\n  glm::tvec2<float,0> mGridDimensions;\n  glm::tvec2<float,0> mDragPosition;\n  _BYTE mDraggable[1];\n  int mPriority;\n  __int8 mIsBeingDragged : 1;\n  __int8 mContained : 1;\n  __int8 mFollowsCursor : 1;\n  __int8 mActive : 1;\n  __int8 mInheritMaxSiblingWidth : 1;\n  __int8 mInheritMaxSiblingHeight : 1;\n  __int8 mIsDelayingLayout : 1;\n  __int8 mIsInitialized : 1;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutruleterm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutruleterm"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRuleTerm")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutRuleTerm\n{\n  LayoutRuleTermType mType;\n  std::vector<VariableRef> mDependentVariables;\n  std::function<float __cdecl(std::vector<VariableRef> const &)> mFunction;\n  std::function<float __cdecl(void)> mFactorFunction;\n  float mFactor;\n  float mConstant;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutrule"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutRule\n{\n  std::vector<LayoutRuleTerm> mTerms;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutvariable-rulevalue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutvariable-rulevalue"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutVariable::RuleValue")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutVariable::RuleValue\n{\n  float mValue;\n  LayoutRule mRule;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutvariable-minmaxrulevalue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutvariable-minmaxrulevalue"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutVariable::MinMaxRuleValue")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutVariable::MinMaxRuleValue\n{\n  LayoutVariable::RuleValue mMinValue;\n  LayoutVariable::RuleValue mMaxValue;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutvariable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutvariable"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutVariable")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LayoutVariable\n{\n  UIControl *mControl;\n  std::vector<VariableRef> mDependsOnMe;\n  LayoutVariable::RuleValue mRuleValue;\n  std::unique_ptr<LayoutVariable::MinMaxRuleValue> mMinMaxValue;\n  LayoutVariableType mType;\n  __int8 mIsSatisfied : 1;\n  __int8 mIsOverriden : 1;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutcomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutcomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LayoutComponent_vtbl\n{\n  void (__fastcall *~UIComponent)(UIComponent *this);\n  void (__fastcall *OnScreenPop)(UIComponent *this);\n  std::unique_ptr<UIComponent> *(__fastcall *clone)(UIComponent *this, std::unique_ptr<UIComponent> *result, UIControl *);\n  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, const ScreenEvent *);\n  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, VisualTree *, ScreenInputContext *, UIAnimationController *, const ScreenEvent *);\n  void (__fastcall *onNotifyChildAdded)(UIComponent *this);\n  void (__fastcall *onNotifyChildRemoved)(UIComponent *this);\n  void (__fastcall *onRemoved)(UIComponent *this);\n  void (__fastcall *onAdded)(UIComponent *this);\n  void (__fastcall *onVisibilityChanged)(UIComponent *this, bool);\n  void (__fastcall *onEnabledChanged)(UIComponent *this, bool);\n  bool (__fastcall *isRenderableComponent)(UIComponent *this);\n  bool (__fastcall *onLayoutChange)(UIComponent *this);\n  void (__fastcall *reset)(UIComponent *this);\n  void (__fastcall *reload)(UIComponent *this, const UIComponent *);\n  const std::string *(__fastcall *getTextToSpeechComponentValue)(UIComponent *this);\n};\n\n")])])]),e("h3",{attrs:{id:"layoutvariables-unsatisfiedvar"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutvariables-unsatisfiedvar"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutVariables::UnsatisfiedVar")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LayoutVariables::UnsatisfiedVar\n{\n  VariableRef mVar;\n  bool mIsSatisfied;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutvariables"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutvariables"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutVariables")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutVariables\n{\n  std::vector<PostOperation> mPostOperations;\n  std::vector<LayoutVariables::UnsatisfiedVar> mUnsatisfiedVariables;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutmanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutmanager"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutManager")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutManager\n{\n  std::shared_ptr<LayoutVariables> mVariables;\n  glm::tvec2<float,0> mSize;\n  std::vector<std::weak_ptr<UIControl>> mDelayedLayout;\n};\n\n")])])]),e("h3",{attrs:{id:"localauthentication"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localauthentication"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalAuthentication")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalAuthentication\n{\n  PrivateKeyManager mLocalKeys;\n  std::unique_ptr<Certificate> mSelfSignedCertificate;\n  std::string mSelfSignedId;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryrepository"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryrepository"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryRepository")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryRepository : ResourcePackListener\n{\n  std::shared_ptr<EducationContentServices> mServices;\n  std::function<ResourcePackManager & __cdecl(void)> mGetResourcePackManager;\n  std::unordered_map<std::string,EDULibraryCategory> mLibraryCategories;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryrepository-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryrepository-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryRepository_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryRepository_vtbl\n{\n  void (__fastcall *~ResourcePackListener)(ResourcePackListener *this);\n  void (__fastcall *onActiveResourcePacksChanged)(ResourcePackListener *this, ResourcePackManager *);\n  void (__fastcall *onFullPackStackInvalid)(ResourcePackListener *this);\n  void (__fastcall *onBaseGamePackDownloadComplete)(ResourcePackListener *this);\n  void (__fastcall *onLanguageSubpacksChanged)(ResourcePackListener *this);\n  void (__fastcall *onResourceManagerDestroyed)(ResourcePackListener *this, ResourcePackManager *);\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-framerenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-framerenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<FrameRenderObject>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<FrameRenderObject>\n{\n  std::shared_ptr<AllocatorData> mData;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera : PlayerListener, LevelListener\n{\n  unsigned __int64 mChunkQueueSize;\n  unsigned __int64 mTerrainChunkQueueSize[3][18];\n  std::unordered_multimap<HashedString,Actor *> mEntityRenderQueue;\n  SortedMeshDrawList mSortedMeshDrawList;\n  std::vector<gsl::not_null<BlockActor *>> mBlockEntityRenderQueue;\n  std::vector<gsl::not_null<BlockActor *>> mBlockEntityRenderAlphaQueue;\n  std::vector<gsl::not_null<BlockActor *>> mBlockEntityShadowQueue;\n  std::vector<gsl::not_null<BlockActor *>> mBlockEntityProcessBarRenderQueue;\n  mce::MaterialPtr shadowVolumeBack;\n  mce::MaterialPtr shadowVolumeFront;\n  mce::MaterialPtr shadowOverlayMat;\n  mce::MaterialPtr starsMaterial;\n  mce::MaterialPtr skyPlaneMaterial;\n  mce::MaterialPtr sunMoonMaterial;\n  mce::MaterialPtr endSkyMaterial;\n  mce::MaterialPtr cloudMaterial;\n  mce::MaterialPtr wireframeMaterial;\n  mce::MaterialPtr mCubemapMaterial;\n  std::vector<mce::TexturePtr> mCubemapTextures;\n  mce::ClientTexture mCubemapTexture;\n  OverlayTextureMap mOverlayTextureMap;\n  _BYTE mActiveOverlayTextureId[4];\n  TerrainMaterialVariationManager mTerrainMaterialVariationManager;\n  float mDeltaTime;\n  float mLastTime;\n  float mWaterLevel;\n  glm::tvec2<float,0> mFogControl;\n  float mFogBrOriginal;\n  float mFogBr;\n  float mBaseFogEnd;\n  float mBaseFogStart;\n  FogDistanceSetting mCurrentDistanceFog;\n  FogDistanceSetting mLastTargetDistanceFog;\n  FogVolumetricDensitySetting mCurrentFogDensity;\n  FogVolumetricCoefficientSetting mAirFogCoefficient;\n  FogVolumetricCoefficientSetting mWaterFogCoefficient;\n  FogVolumetricCoefficientSetting mCloudFogCoefficient;\n  bool mFogWasUnderwaterLastCheck;\n  bool mFogWasUnderLavaLastCheck;\n  bool mFogWasUnderPowderSnowLastCheck;\n  bool mBlendFogThisFrame;\n  float mBlindnessLevel;\n  const float mRenderDistanceCloudFadeOutMultiplier;\n  float mRainPosX;\n  float mRainPosY;\n  float mRainPosZ;\n  int mRainPosSamples;\n  int mRainSoundTime;\n  int mRainCount;\n  float mFakeHDR;\n  float mAverageBrightness;\n  unsigned int mFrameID;\n  int mViewAreaDistance;\n  float mFarChunksDistance;\n  float mRenderDistance;\n  float mCullEndDistance;\n  const int mMaxInflightChunks;\n  std::shared_ptr<GridArea<std::shared_ptr<RenderChunkInstanced> > > mViewArea;\n  BlockPos mLastFaceSortPos;\n  Vec3 mLastFaceSortDir;\n  Vec3 mLastDirtySortPos;\n  BlockPos mLastNearbyFaceSortPos;\n  LevelRendererCamera::RenderChunkPosBounds mLastFaceSortBounds;\n  Vec3 mLastChunkResortPos;\n  Vec3 mCameraPos;\n  Vec3 mCameraTargetPos;\n  std::shared_ptr<mce::Mesh> mCloudsMesh;\n  mce::Camera mWorldSpaceCamera;\n  Matrix mSunMatrix;\n  Matrix mMoonMatrix;\n  glm::tvec3<float,0> mSunDirection;\n  glm::tvec3<float,0> mMoonDirection;\n  std::unique_ptr<Tessellator> mCloudTessellator;\n  std::unique_ptr<TextureTessellator> mCloudTextureTessellator;\n  Vec3 mLastCloudUpdatePosition;\n  unsigned __int8 mLastCloudSide;\n  bool mUpdatingClouds;\n  std::vector<Actor *> mWaterHoleEntityQueue;\n  std::unique_ptr<WeatherRenderer> mWeatherRenderer;\n  std::unique_ptr<ChunkRenderObjectCollection> mChunkRenderObjects;\n  std::unique_ptr<Bedrock::Threading::AsyncDeferredResultT<void>> mFrameBuilderChunkRenderObjectsReadyEvent;\n  bool mCameraUnderWater;\n  bool mCameraUnderLiquid;\n  bool mCameraUnderPowderSnow;\n  bool mCameraUnderLava;\n  bool mCameraInRain;\n  bool mShowSky;\n  Level *mLevel;\n  std::unique_ptr<BlockSource> mViewRegion;\n  Dimension *mDimension;\n  __int16 mCloudHeight;\n  LevelRenderer *mLevelRenderer;\n  LevelBuilder mLevelBuilder;\n  ResourcePackManager *mResourcePackManager;\n  mce::TextureGroup *mTextures;\n  std::vector<BlockActor *> mTempBlockEntityList;\n  std::weak_ptr<cg::ImageBuffer> mCloudsImage;\n  std::unique_ptr<LevelRendererCameraProxy> mProxy;\n  ParticleRenderData mParticleRenderData;\n  long double mLastFrameTimeStart;\n  HistoricalFrameTimes mHistoricalFrameTimes;\n  bool mRenderOpacityActor;\n  mce::Color mUserDefineEmptyColor;\n  std::vector<mce::Color> mUserDefineColors;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercommandlistinit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercommandlistinit"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCommandListInit")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelRendererCommandListInit\n{\n  mce::ViewportInfo vp;\n  glm::tvec4<int,0> scissor;\n  mce::Texture *shadowFrameBuffer;\n  mce::FrameBufferObject *frameBuffer;\n  mce::RenderTargetState renderTargetState;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer : LevelListener, AppPlatformListener\n{\n  std::unordered_map<AutomaticID<Dimension,int>,std::unique_ptr<RenderChunkCoordinator>,std::hash<AutomaticID<Dimension,int> >,std::equal_to<AutomaticID<Dimension,int> >,std::allocator<std::pair<AutomaticID<Dimension,int> const ,std::unique_ptr<RenderChunkCoordinator> > > > mRenderChunkCoordinators;\n  mce::TextureGroup *mTextures;\n  std::shared_ptr<mce::Mesh> mShadowCylinder;\n  std::shared_ptr<mce::Mesh> mShadowOverlayCube;\n  std::shared_ptr<mce::Mesh> mSkyMesh;\n  std::shared_ptr<mce::Mesh> mStarsMesh;\n  std::shared_ptr<mce::Mesh> mEndSkyMesh;\n  std::shared_ptr<mce::Mesh> mSunMesh;\n  std::shared_ptr<mce::Mesh> mMoonMesh[8];\n  std::shared_ptr<mce::Mesh> mMilkyWayMesh;\n  std::shared_ptr<mce::Mesh> mMeteorMesh[8];\n  mce::TexturePtr mAtlasTexture;\n  mce::TexturePtr mBrightnessTex;\n  mce::TexturePtr mSunTex;\n  mce::TexturePtr mMilkyWayTex;\n  mce::TexturePtr mMeteorTex;\n  mce::TexturePtr mMoonTex;\n  mce::TexturePtr mEndSkyTex;\n  std::vector<mce::TexturePtr> mCrackFrames;\n  DebugRenderer mDebugRenderer;\n  Tick mTicks;\n  BlockActorRenderDispatcher *mBlockEntityRenderDispatcher;\n  std::unique_ptr<BlockTessellator> mLocalRenderer;\n  std::unique_ptr<ParticleEngine> mParticleEngine;\n  std::unique_ptr<ParticleSystemEngine> mParticleSystemEngine;\n  std::unique_ptr<TaskGroup> mTaskGroup;\n  std::unique_ptr<TaskGroup> mSyncTaskGroup;\n  GameRenderer *mGameRenderer;\n  MinecraftGraphics *mMinecraftGraphics;\n  Level *mLevel;\n  std::shared_ptr<Options> mOptions;\n  IClientInstance *mClientInstance;\n  LocalPlayer *mLocalPlayer;\n  HolographicPlatform *mHolographicPlatform;\n  LevelRendererPlayer mLevelRendererPlayer;\n  std::unique_ptr<LevelRendererProxy> mProxy;\n  mce::Color mClearBufferColor;\n  std::weak_ptr<PlayerRenderView> mPlayerView;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrendererplayer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrendererplayer"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererPlayer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererPlayer : LevelRendererCamera\n{\n  const float WATER_VISION_QUICK_TIME;\n  const float WATER_VISION_MAX_TIME;\n  const float WATER_VISION_QUICK_PERCENT;\n  Vec3 mComfortRenderAdjustment;\n  std::unordered_map<BlockPos,unsigned __int64> mRecordSoundMap;\n  std::unordered_map<BlockPos,BlockDestructInfo> mDestroyingBlockList;\n  long double mLastDestroyRenderTime;\n  std::unordered_map<BlockPos,BlockActorDelayedDeletionInfo> mBlockEntityDelayedDeletionList;\n  std::vector<BlockPos> mRemoveBlockEntityTempList;\n  float fov;\n  float oFov;\n  float fovOffset;\n  float fovOffsetO;\n  PlayerRenderingParameters mRenderingParameters;\n  float thirdDistance;\n  float thirdDistanceO;\n  float thirdRotation;\n  float thirdRotationO;\n  float thirdTilt;\n  float thirdTiltO;\n  float cameraRoll;\n  float cameraRollO;\n  float currentCameraDist;\n  float prevHeightOffset;\n  float mHeightOffsetAdjustment;\n  float mUnderwaterVisionTime;\n  float mUnderwaterVisionTimePrevious;\n  float mUnderwaterVisionClarity;\n  float mUnderwaterVisionScale;\n  mce::MaterialPtr selectionBlockEntityOverlayMaterial;\n  mce::MaterialPtr selectionBlockEntityOverlayColorMaterial;\n  mce::MaterialPtr selectionOverlayMaterial;\n  mce::MaterialPtr selectionOpaqueMaterial;\n  mce::MaterialPtr selectionTwoSidedMaterial;\n  mce::MaterialPtr cracksOverlayMaterial;\n  mce::MaterialPtr cracksOverlayAlphaTestMaterial;\n  mce::MaterialPtr cracksOverlayBlockEntityMaterial;\n  mce::MaterialPtr mOutlineSelectionMaterial;\n  const SoundMapping *mSounds;\n  std::vector<DeferredSound> mDeferredSounds;\n  TextureAtlasItem uvBreakBlockItem;\n  IClientInstance *mClientInstance;\n  LocalPlayer *mLocalPlayer;\n  LevelRenderer *mLevelRenderer;\n  Bedrock::NonOwnerPointer<SoundPlayerInterface> mSoundPlayer;\n  Level *mLevel;\n  HolographicPlatform *mHolographicPlatform;\n  std::unique_ptr<AmbientSoundController> mAmbientSoundController;\n  std::function<float __cdecl(float,float,float)> mEase;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrendererproxycallbacks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrendererproxycallbacks"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererProxyCallbacks")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererProxyCallbacks\n{\n  std::function<RenderChunkCoordinatorProxy * __cdecl(AutomaticID<Dimension,int>)> mGetRenderChunkCoordinator;\n  std::function<bool __cdecl(void)> isBuildingRenderChunks;\n  std::function<std::shared_ptr<ClientBlockPipeline::SchematicsRepository> __cdecl(void)> getSchematicsRepository;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrendererproxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrendererproxy"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererProxy")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererProxy\n{\n  LevelRendererProxyCallbacks mCallbacks;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullerbase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullerbase"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerBase")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelCullerBase\n{\n  LevelCullerBase_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullerbase-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullerbase-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerBase_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelCullerBase_vtbl\n{\n  void (__fastcall *~LevelCullerBase)(LevelCullerBase *this);\n  void (__fastcall *handleCullingDutiesThisUpdate)(LevelCullerBase *this, const Vec3 *, const Vec3 *, LevelRendererCamera *);\n  void (__fastcall *triggerCull)(LevelCullerBase *this, bool);\n  void (__fastcall *getVisibleSubchunks)(LevelCullerBase *this, std::vector<SubChunkPos> *);\n  void (__fastcall *resetCullingWorldDimensions)(LevelCullerBase *this, int, const DimensionHeightRange *, int);\n  void (__fastcall *changeValidArea)(LevelCullerBase *this, const Bounds *);\n  void (__fastcall *updateChunkData)(LevelCullerBase *this, const RenderChunkShared *);\n  bool (__fastcall *isBlockPositionVisible)(LevelCullerBase *this, const BlockPos *);\n  void (__fastcall *invalidateChunk)(LevelCullerBase *this, const SubChunkPos *);\n  void (__fastcall *setEmpty)(LevelCullerBase *this, const SubChunkPos *, bool);\n  bool (__fastcall *isBusy)(LevelCullerBase *this);\n  bool (__fastcall *shouldRecullAfterChunkChange)(LevelCullerBase *this, const RenderChunkShared *);\n  unsigned int (__fastcall *getCullIteration)(LevelCullerBase *this);\n};\n\n")])])]),e("h3",{attrs:{id:"levelbuilder-positionandpriority"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-positionandpriority"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::PositionAndPriority")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelBuilder::PositionAndPriority\n{\n  SubChunkPos mPosition;\n  int mPriority;\n};\n\n")])])]),e("h3",{attrs:{id:"levelbuilder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelBuilder\n{\n  int maxCullingSteps;\n  int numDirtyChunks;\n  int numDirtyChunksPrevFrame;\n  const int mMaxInflightChunks;\n  bool bCheckRightCuller;\n  bool mEnforceInterlocks;\n  FrustumCuller mLeftFrustumCuller;\n  FrustumCuller mRightFrustumCuller;\n  std::unique_ptr<ChunkVisibilityCache> mChunkVisibilityCache;\n  std::shared_ptr<LevelCullerBase> mLevelCuller;\n  FrustumCullerType mFrustumCullerType;\n  Vec3 mLastCameraPos;\n  Vec3 mLastCameraDir;\n  Vec3 mLastAreaCenter;\n  float mLastFogEnd;\n  float mLastSunAngle;\n  int mViewAreaSide;\n  __int16 mViewAreaHeight;\n  PolygonOperatorPool<RenderChunkBuilder> mBuilders;\n  PolygonOperatorPool<RenderChunkSorter> mSorters;\n  LevelRenderer *mLevelRenderer;\n  LevelRendererCamera *mLevelRendererCamera;\n  MPMCQueue<SubChunkPos> mRenderChunksToBuild;\n  std::vector<SubChunkPos> mRenderChunksToBuildEraseList;\n  std::queue<std::shared_ptr<RenderChunkShared>> mRenderChunksToUpload;\n  SpinLock mRenderChunksFinishedBuildingSpinLock;\n  std::atomic<int> mImmediateChunkInFlightCount;\n  std::vector<SubChunkPos> mRenderChunksToQueryForCuller;\n  SpinLock mRenderChunksToQueryForCullerLock;\n  std::vector<RenderChunkInstanced *> mSortedRenderChunkInstancedList;\n  std::vector<LevelBuilder::PositionAndPriority> mSortedList;\n  std::vector<SubChunkPos> mRenderChunksVisibleFromCullingPoint;\n  std::unordered_set<SubChunkPos> mInterlockedRenderChunksToCheck;\n  std::unordered_set<SubChunkPos> mInterlockGraphWalkSet;\n  std::vector<SubChunkPos> mInterlockGraphWalkToCheckList;\n  std::unordered_set<SubChunkPos> mExtraChunksToDrawUntilNextCull;\n  std::vector<SubChunkPos> mExtraChunksToDrawUntilNextCullEraseList;\n  unsigned int mLastCullIteration;\n  unsigned __int64 mLastNumRenderChunksVisibleFromCullingPoint;\n  bool mForceCulling;\n  bool mRecullWhenNotBusy;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mLastTimeRenderChunksBeingBuilt;\n  std::shared_ptr<Bedrock::Threading::IAsyncResult<void> > mBuilderTask;\n  LevelCullerType mLastCullerType;\n  std::shared_ptr<RenderChunkSorterSharedInfo> mSharedSortInfo;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mCurrentTime;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercameraproxycallbacks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercameraproxycallbacks"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCameraProxyCallbacks")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCameraProxyCallbacks\n{\n  std::function<RenderChunkCoordinatorProxy * __cdecl(AutomaticID<Dimension,int>)> mGetRenderChunkCoordinator;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercameraproxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercameraproxy"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCameraProxy")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCameraProxy\n{\n  LevelRendererCameraProxyCallbacks mCallbacks;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelRendererCamera_vtbl\n{\n  void (__fastcall *~PlayerListener)(PlayerListener *this);\n  void (__fastcall *onWillChangeDimension)(PlayerListener *this, Player *);\n  void (__fastcall *onDimensionChanged)(PlayerListener *this, Player *);\n  void (__fastcall *onPlayerDestruction)(PlayerListener *this, Player *);\n  void (__fastcall *addCameraListenerToRenderChunkCoordinator)(LevelRendererCamera *this);\n  void (__fastcall *onAppSuspended)(LevelRendererCamera *this);\n  void (__fastcall *onAppResumed)(LevelRendererCamera *this);\n  void (__fastcall *onDeviceLost)(LevelRendererCamera *this);\n  void (__fastcall *onLowMemory)(LevelRendererCamera *this);\n  void (__fastcall *tickLevelRendererCamera)(LevelRendererCamera *this);\n  void (__fastcall *tickRain)(LevelRendererCamera *this);\n  void (__fastcall *callRenderNameTags)(LevelRendererCamera *this, ScreenContext *, const ViewRenderObject *, Font *);\n  NameTagRenderObjectCollection *(__fastcall *extractNameTags)(LevelRendererCamera *this, NameTagRenderObjectCollection *result, ScreenContext *);\n  void (__fastcall *callRenderCracks)(LevelRendererCamera *this, BaseActorRenderContext *, const ViewRenderObject *);\n  CrackRenderObjectCollection *(__fastcall *extractCracks)(LevelRendererCamera *this, CrackRenderObjectCollection *result, ScreenContext *);\n  void (__fastcall *renderEntityEffects)(LevelRendererCamera *this, BaseActorRenderContext *);\n  void (__fastcall *renderBlockEntities)(LevelRendererCamera *this, BaseActorRenderContext *, bool);\n  void (__fastcall *renderBindEffects)(LevelRendererCamera *this, BaseActorRenderContext *);\n  void (__fastcall *renderFonts)(LevelRendererCamera *this, BaseActorRenderContext *);\n  void (__fastcall *renderHealth)(LevelRendererCamera *this, BaseActorRenderContext *, const ViewRenderData *);\n  void (__fastcall *renderProcessBar)(LevelRendererCamera *this, BaseActorRenderContext *, const ViewRenderData *);\n  void (__fastcall *renderHolographicCursor)(LevelRendererCamera *this, ScreenContext *);\n  void (__fastcall *renderVRHitFlash)(LevelRendererCamera *this, ScreenContext *);\n  bool (__fastcall *getForceFog)(LevelRendererCamera *this, const Actor *);\n  void (__fastcall *setupFog)(LevelRendererCamera *this, ScreenContext *, const float);\n  float (__fastcall *getAmbientBrightness)(LevelRendererCamera *this);\n  void (__fastcall *preRenderUpdate)(LevelRendererCamera *this, ScreenContext *, LevelRenderPreRenderUpdateParameters *);\n  void (__fastcall *render)(LevelRendererCamera *this, BaseActorRenderContext *, const ViewRenderObject *, IClientInstance *, LevelRendererCommandListInit *);\n  void (__fastcall *postRenderUpdate)(LevelRendererCamera *this);\n  bool (__fastcall *isPositionTooCloseToCamera)(LevelRendererCamera *this, const Vec3 *);\n  void (__fastcall *blockEntityAboutToBeRemoved)(LevelRendererCamera *this, BlockSource *, std::shared_ptr<BlockActor>);\n  void (__fastcall *notifyGeoChangedForAffectedEntities)(LevelRendererCamera *this, RenderChunkShared *, unsigned __int8);\n  void (__fastcall *queueRenderEntities)(LevelRendererCamera *this, const LevelRenderPreRenderUpdateParameters *);\n  const Block *(__fastcall *_getBlockForBlockEnity)(LevelRendererCamera *this, const BlockActor *);\n  void (__fastcall *_fetchAdditionalBlockEntities)(LevelRendererCamera *this, std::vector<BlockActor *> *);\n  FogDefinition::DistanceSettingType (__fastcall *_getFogDistanceSettingType)(LevelRendererCamera *this);\n  FogDefinition::DensitySettingType (__fastcall *_getFogDensitySettingType)(LevelRendererCamera *this);\n};\n\n")])])]),e("h3",{attrs:{id:"levelrendererplayer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrendererplayer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererPlayer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelRendererPlayer_vtbl\n{\n  void (__fastcall *~PlayerListener)(PlayerListener *this);\n  void (__fastcall *onWillChangeDimension)(PlayerListener *this, Player *);\n  void (__fastcall *onDimensionChanged)(PlayerListener *this, Player *);\n  void (__fastcall *onPlayerDestruction)(PlayerListener *this, Player *);\n  void (__fastcall *addCameraListenerToRenderChunkCoordinator)(LevelRendererCamera *this);\n  void (__fastcall *onAppSuspended)(LevelRendererCamera *this);\n  void (__fastcall *onAppResumed)(LevelRendererCamera *this);\n  void (__fastcall *onDeviceLost)(LevelRendererCamera *this);\n  void (__fastcall *onLowMemory)(LevelRendererCamera *this);\n  void (__fastcall *tickLevelRendererCamera)(LevelRendererCamera *this);\n  void (__fastcall *tickRain)(LevelRendererCamera *this);\n  void (__fastcall *callRenderNameTags)(LevelRendererCamera *this, ScreenContext *, const ViewRenderObject *, Font *);\n  NameTagRenderObjectCollection *(__fastcall *extractNameTags)(LevelRendererCamera *this, NameTagRenderObjectCollection *result, ScreenContext *);\n  void (__fastcall *callRenderCracks)(LevelRendererCamera *this, BaseActorRenderContext *, const ViewRenderObject *);\n  CrackRenderObjectCollection *(__fastcall *extractCracks)(LevelRendererCamera *this, CrackRenderObjectCollection *result, ScreenContext *);\n  void (__fastcall *renderEntityEffects)(LevelRendererCamera *this, BaseActorRenderContext *);\n  void (__fastcall *renderBlockEntities)(LevelRendererCamera *this, BaseActorRenderContext *, bool);\n  void (__fastcall *renderBindEffects)(LevelRendererCamera *this, BaseActorRenderContext *);\n  void (__fastcall *renderFonts)(LevelRendererCamera *this, BaseActorRenderContext *);\n  void (__fastcall *renderHealth)(LevelRendererCamera *this, BaseActorRenderContext *, const ViewRenderData *);\n  void (__fastcall *renderProcessBar)(LevelRendererCamera *this, BaseActorRenderContext *, const ViewRenderData *);\n  void (__fastcall *renderHolographicCursor)(LevelRendererCamera *this, ScreenContext *);\n  void (__fastcall *renderVRHitFlash)(LevelRendererCamera *this, ScreenContext *);\n  bool (__fastcall *getForceFog)(LevelRendererCamera *this, const Actor *);\n  void (__fastcall *setupFog)(LevelRendererCamera *this, ScreenContext *, const float);\n  float (__fastcall *getAmbientBrightness)(LevelRendererCamera *this);\n  void (__fastcall *preRenderUpdate)(LevelRendererCamera *this, ScreenContext *, LevelRenderPreRenderUpdateParameters *);\n  void (__fastcall *render)(LevelRendererCamera *this, BaseActorRenderContext *, const ViewRenderObject *, IClientInstance *, LevelRendererCommandListInit *);\n  void (__fastcall *postRenderUpdate)(LevelRendererCamera *this);\n  bool (__fastcall *isPositionTooCloseToCamera)(LevelRendererCamera *this, const Vec3 *);\n  void (__fastcall *blockEntityAboutToBeRemoved)(LevelRendererCamera *this, BlockSource *, std::shared_ptr<BlockActor>);\n  void (__fastcall *notifyGeoChangedForAffectedEntities)(LevelRendererCamera *this, RenderChunkShared *, unsigned __int8);\n  void (__fastcall *queueRenderEntities)(LevelRendererCamera *this, const LevelRenderPreRenderUpdateParameters *);\n  const Block *(__fastcall *_getBlockForBlockEnity)(LevelRendererCamera *this, const BlockActor *);\n  void (__fastcall *_fetchAdditionalBlockEntities)(LevelRendererCamera *this, std::vector<BlockActor *> *);\n  FogDefinition::DistanceSettingType (__fastcall *_getFogDistanceSettingType)(LevelRendererCamera *this);\n  FogDefinition::DensitySettingType (__fastcall *_getFogDensitySettingType)(LevelRendererCamera *this);\n  float (__fastcall *getUnderwaterVisionClarity)(LevelRendererPlayer *this);\n};\n\n")])])]),e("h3",{attrs:{id:"lessonactiondata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessonactiondata"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonActionData")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj LessonActionData\n{\n  _BYTE lessonAction[1];\n  std::string source;\n};\n\n")])])]),e("h3",{attrs:{id:"lessonprogressionservice"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessonprogressionservice"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonProgressionService")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LessonProgressionService : ServiceClient, ILessonProgressionService\n{\n  const std::string mHostUrl;\n  LessonInfo mLessonInfo;\n  std::string mUserToken;\n};\n\n")])])]),e("h3",{attrs:{id:"lessonprogressionservice-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessonprogressionservice-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonProgressionService_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LessonProgressionService_vtbl\n{\n  void (__fastcall *~ServiceClient)(ServiceClient *this);\n  void (__fastcall *update)(ServiceClient *this);\n  void (__fastcall *_submitRequest)(ServiceClient *this, std::shared_ptr<RequestHandler>);\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencapabilities"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencapabilities"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenCapabilities")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LibraryItemScreenCapabilities : TypedScreenCapabilities<LibraryItemScreenCapabilities>\n{\n  bool mShareLinkIgnored;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencapabilities-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencapabilities-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenCapabilities_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryItemScreenCapabilities_vtbl\n{\n  void (__fastcall *~IScreenCapabilities)(IScreenCapabilities *this);\n  bool (__fastcall *isOfType)(IScreenCapabilities *this, typeid_t<IScreenCapabilities>);\n};\n\n")])])]),e("h3",{attrs:{id:"levelloader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelloader"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelLoader")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelLoader : Bedrock::EnableNonOwnerReferences\n{\n  IMinecraftGame *mMinecraft;\n  std::shared_ptr<ImportLevelData> mQueuedImportLoad;\n  std::vector<ImportLevelData> mLevelImportQueue;\n  std::unique_ptr<LevelSummary> mLevelToLoad;\n  std::atomic<bool> mPendingLoadRequest;\n  std::string mRealmToLoad;\n  std::atomic<bool> mLoadingRealmLink;\n};\n\n")])])]),e("h3",{attrs:{id:"latencygraphdisplay-measurement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latencygraphdisplay-measurement"}},[t._v("#")]),t._v(" "),e("code",[t._v("LatencyGraphDisplay::Measurement")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LatencyGraphDisplay::Measurement\n{\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mTimePoint;\n  std::chrono::duration<__int64,std::ratio<1,1000> > mLatency;\n};\n\n")])])]),e("h3",{attrs:{id:"latencygraphdisplay"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latencygraphdisplay"}},[t._v("#")]),t._v(" "),e("code",[t._v("LatencyGraphDisplay")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LatencyGraphDisplay\n{\n  NetworkHandler *mNetworkHandler;\n  RectangleArea mArea;\n  bool mIsInGame;\n  std::vector<LatencyGraphDisplay::Measurement> mLatencyMeasurements;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mLastLatencyUpdate;\n};\n\n")])])]),e("h3",{attrs:{id:"loadingscreen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loadingscreen"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoadingScreen")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LoadingScreen\n{\n  cg::ImageDescription mLoadingScreenImageDescription;\n  float mWaveSeconds;\n  long double mLastTimeStamp;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-env"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-env"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Env")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::Env\n{\n  leveldb::Env_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-sequentialfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-sequentialfile"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::SequentialFile")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::SequentialFile\n{\n  leveldb::SequentialFile_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-sequentialfile-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-sequentialfile-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::SequentialFile_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::SequentialFile_vtbl\n{\n  void (__fastcall *~SequentialFile)(leveldb::SequentialFile *this);\n  leveldb::Status *(__fastcall *Read)(leveldb::SequentialFile *this, leveldb::Status *result, unsigned __int64, leveldb::Slice *, char *);\n  leveldb::Status *(__fastcall *Skip)(leveldb::SequentialFile *this, leveldb::Status *result, unsigned __int64);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-randomaccessfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-randomaccessfile"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::RandomAccessFile")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::RandomAccessFile\n{\n  leveldb::RandomAccessFile_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-randomaccessfile-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-randomaccessfile-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::RandomAccessFile_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::RandomAccessFile_vtbl\n{\n  void (__fastcall *~RandomAccessFile)(leveldb::RandomAccessFile *this);\n  leveldb::Status *(__fastcall *Read)(leveldb::RandomAccessFile *this, leveldb::Status *result, unsigned __int64, unsigned __int64, leveldb::Slice *, char *);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-writablefile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-writablefile"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::WritableFile")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::WritableFile\n{\n  leveldb::WritableFile_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-writablefile-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-writablefile-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::WritableFile_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::WritableFile_vtbl\n{\n  void (__fastcall *~WritableFile)(leveldb::WritableFile *this);\n  leveldb::Status *(__fastcall *Append)(leveldb::WritableFile *this, leveldb::Status *result, const leveldb::Slice *);\n  leveldb::Status *(__fastcall *Close)(leveldb::WritableFile *this, leveldb::Status *result);\n  leveldb::Status *(__fastcall *Flush)(leveldb::WritableFile *this, leveldb::Status *result);\n  leveldb::Status *(__fastcall *Sync)(leveldb::WritableFile *this, leveldb::Status *result);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-filelock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-filelock"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::FileLock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::FileLock\n{\n  leveldb::FileLock_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-filelock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-filelock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::FileLock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::FileLock_vtbl\n{\n  void (__fastcall *~FileLock)(leveldb::FileLock *this);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-logger-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-logger-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Logger_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::Logger_vtbl\n{\n  void (__fastcall *~Logger)(leveldb::Logger *this);\n  void (__fastcall *Logv)(leveldb::Logger *this, const char *, char *);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-env-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-env-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Env_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::Env_vtbl\n{\n  void (__fastcall *~Env)(leveldb::Env *this);\n  leveldb::Status *(__fastcall *NewSequentialFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::SequentialFile **);\n  leveldb::Status *(__fastcall *NewRandomAccessFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::RandomAccessFile **);\n  leveldb::Status *(__fastcall *NewWritableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);\n  leveldb::Status *(__fastcall *NewAppendableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);\n  bool (__fastcall *FileExists)(leveldb::Env *this, const std::string *);\n  leveldb::Status *(__fastcall *GetChildren)(leveldb::Env *this, leveldb::Status *result, const std::string *, std::vector<std::string> *);\n  leveldb::Status *(__fastcall *DeleteFileA)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *CreateDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *DeleteDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *GetFileSize)(leveldb::Env *this, leveldb::Status *result, const std::string *, unsigned __int64 *);\n  leveldb::Status *(__fastcall *RenameFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, const std::string *);\n  leveldb::Status *(__fastcall *LockFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::FileLock **);\n  leveldb::Status *(__fastcall *UnlockFile)(leveldb::Env *this, leveldb::Status *result, leveldb::FileLock *);\n  void (__fastcall *Schedule)(leveldb::Env *this, void (__fastcall *)(void *), void *);\n  void (__fastcall *StartThread)(leveldb::Env *this, void (__fastcall *)(void *), void *);\n  leveldb::Status *(__fastcall *GetTestDirectory)(leveldb::Env *this, leveldb::Status *result, std::string *);\n  leveldb::Status *(__fastcall *NewLogger)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::Logger **);\n  unsigned __int64 (__fastcall *NowMicros)(leveldb::Env *this);\n  void (__fastcall *SleepForMicroseconds)(leveldb::Env *this, int);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-envwrapper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-envwrapper"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::EnvWrapper")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::EnvWrapper : leveldb::Env\n{\n  leveldb::Env *target_;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-envwrapper-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-envwrapper-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::EnvWrapper_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::EnvWrapper_vtbl\n{\n  void (__fastcall *~Env)(leveldb::Env *this);\n  leveldb::Status *(__fastcall *NewSequentialFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::SequentialFile **);\n  leveldb::Status *(__fastcall *NewRandomAccessFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::RandomAccessFile **);\n  leveldb::Status *(__fastcall *NewWritableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);\n  leveldb::Status *(__fastcall *NewAppendableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);\n  bool (__fastcall *FileExists)(leveldb::Env *this, const std::string *);\n  leveldb::Status *(__fastcall *GetChildren)(leveldb::Env *this, leveldb::Status *result, const std::string *, std::vector<std::string> *);\n  leveldb::Status *(__fastcall *DeleteFileA)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *CreateDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *DeleteDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *GetFileSize)(leveldb::Env *this, leveldb::Status *result, const std::string *, unsigned __int64 *);\n  leveldb::Status *(__fastcall *RenameFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, const std::string *);\n  leveldb::Status *(__fastcall *LockFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::FileLock **);\n  leveldb::Status *(__fastcall *UnlockFile)(leveldb::Env *this, leveldb::Status *result, leveldb::FileLock *);\n  void (__fastcall *Schedule)(leveldb::Env *this, void (__fastcall *)(void *), void *);\n  void (__fastcall *StartThread)(leveldb::Env *this, void (__fastcall *)(void *), void *);\n  leveldb::Status *(__fastcall *GetTestDirectory)(leveldb::Env *this, leveldb::Status *result, std::string *);\n  leveldb::Status *(__fastcall *NewLogger)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::Logger **);\n  unsigned __int64 (__fastcall *NowMicros)(leveldb::Env *this);\n  void (__fastcall *SleepForMicroseconds)(leveldb::Env *this, int);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-cache"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Cache")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::Cache\n{\n  leveldb::Cache_vtbl *__vftable /*VFT*/;\n  struct leveldb::Cache::Rep *rep_;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-cache-handle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-cache-handle"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Cache::Handle")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::Cache::Handle\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-cache-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-cache-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Cache_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::Cache_vtbl\n{\n  void (__fastcall *~Cache)(leveldb::Cache *this);\n  leveldb::Cache::Handle *(__fastcall *Insert)(leveldb::Cache *this, const leveldb::Slice *, void *, unsigned __int64, void (__fastcall *)(const leveldb::Slice *, void *));\n  leveldb::Cache::Handle *(__fastcall *Lookup)(leveldb::Cache *this, const leveldb::Slice *);\n  void (__fastcall *Release)(leveldb::Cache *this, leveldb::Cache::Handle *);\n  void *(__fastcall *Value)(leveldb::Cache *this, leveldb::Cache::Handle *);\n  void (__fastcall *Erase)(leveldb::Cache *this, const leveldb::Slice *);\n  unsigned __int64 (__fastcall *NewId)(leveldb::Cache *this);\n  void (__fastcall *Prune)(leveldb::Cache *this);\n  unsigned __int64 (__fastcall *TotalCharge)(leveldb::Cache *this);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-filterpolicy-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-filterpolicy-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::FilterPolicy_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::FilterPolicy_vtbl\n{\n  void (__fastcall *~FilterPolicy)(leveldb::FilterPolicy *this);\n  const char *(__fastcall *Name)(leveldb::FilterPolicy *this);\n  void (__fastcall *CreateFilter)(leveldb::FilterPolicy *this, const leveldb::Slice *, int, std::string *);\n  bool (__fastcall *KeyMayMatch)(leveldb::FilterPolicy *this, const leveldb::Slice *, const leveldb::Slice *);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-compressor-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-compressor-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Compressor_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::Compressor_vtbl\n{\n  void (__fastcall *~Compressor)(leveldb::Compressor *this);\n  void (__fastcall *compressImpl)(leveldb::Compressor *this, const char *, unsigned __int64, std::string *);\n  bool (__fastcall *decompress)(leveldb::Compressor *this, const char *, unsigned __int64, std::string *);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-comparator-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-comparator-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Comparator_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::Comparator_vtbl\n{\n  void (__fastcall *~Comparator)(leveldb::Comparator *this);\n  int (__fastcall *Compare)(leveldb::Comparator *this, const leveldb::Slice *, const leveldb::Slice *);\n  const char *(__fastcall *Name)(leveldb::Comparator *this);\n  void (__fastcall *FindShortestSeparator)(leveldb::Comparator *this, std::string *, const leveldb::Slice *);\n  void (__fastcall *FindShortSuccessor)(leveldb::Comparator *this, std::string *);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-snapshot"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-snapshot"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Snapshot")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj leveldb::Snapshot\n{\n  leveldb::Snapshot_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-snapshot-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-snapshot-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Snapshot_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::Snapshot_vtbl\n{\n  void (__fastcall *~Snapshot)(leveldb::Snapshot *this);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-decompressallocator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-decompressallocator"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::DecompressAllocator")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::DecompressAllocator\n{\n  leveldb::DecompressAllocator_vtbl *__vftable /*VFT*/;\n  std::mutex mutex;\n  std::vector<std::string> stack;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-decompressallocator-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-decompressallocator-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::DecompressAllocator_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::DecompressAllocator_vtbl\n{\n  void (__fastcall *~DecompressAllocator)(leveldb::DecompressAllocator *this);\n  std::string *(__fastcall *get)(leveldb::DecompressAllocator *this, std::string *result);\n  void (__fastcall *release)(leveldb::DecompressAllocator *this, std::string *);\n  void (__fastcall *prune)(leveldb::DecompressAllocator *this);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-writeoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-writeoptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::WriteOptions")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::WriteOptions\n{\n  bool sync;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-db"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-db"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::DB")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::DB\n{\n  leveldb::DB_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-writebatch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-writebatch"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::WriteBatch")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::WriteBatch\n{\n  std::string rep_;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-iterator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-iterator"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Iterator")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::Iterator\n{\n  leveldb::Iterator_vtbl *__vftable /*VFT*/;\n  leveldb::Iterator::Cleanup cleanup_;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-iterator-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-iterator-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Iterator_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::Iterator_vtbl\n{\n  void (__fastcall *~Iterator)(leveldb::Iterator *this);\n  bool (__fastcall *Valid)(leveldb::Iterator *this);\n  void (__fastcall *SeekToFirst)(leveldb::Iterator *this);\n  void (__fastcall *SeekToLast)(leveldb::Iterator *this);\n  void (__fastcall *Seek)(leveldb::Iterator *this, const leveldb::Slice *);\n  void (__fastcall *Next)(leveldb::Iterator *this);\n  void (__fastcall *Prev)(leveldb::Iterator *this);\n  leveldb::Slice *(__fastcall *key)(leveldb::Iterator *this, leveldb::Slice *result);\n  leveldb::Slice *(__fastcall *value)(leveldb::Iterator *this, leveldb::Slice *result);\n  leveldb::Status *(__fastcall *status)(leveldb::Iterator *this, leveldb::Status *result);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-iterator-cleanup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-iterator-cleanup"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Iterator::Cleanup")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct leveldb::Iterator::Cleanup\n{\n  void (__fastcall *function)(void *, void *);\n  void *arg1;\n  void *arg2;\n  leveldb::Iterator::Cleanup *next;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-range"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-range"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::Range")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj leveldb::Range\n{\n  leveldb::Slice start;\n  leveldb::Slice limit;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-db-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-db-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::DB_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::DB_vtbl\n{\n  void (__fastcall *~DB)(leveldb::DB *this);\n  leveldb::Status *(__fastcall *Put)(leveldb::DB *this, leveldb::Status *result, const leveldb::WriteOptions *, const leveldb::Slice *, const leveldb::Slice *);\n  leveldb::Status *(__fastcall *Delete)(leveldb::DB *this, leveldb::Status *result, const leveldb::WriteOptions *, const leveldb::Slice *);\n  leveldb::Status *(__fastcall *Write)(leveldb::DB *this, leveldb::Status *result, const leveldb::WriteOptions *, leveldb::WriteBatch *);\n  leveldb::Status *(__fastcall *Get)(leveldb::DB *this, leveldb::Status *result, const leveldb::ReadOptions *, const leveldb::Slice *, std::string *);\n  leveldb::Iterator *(__fastcall *NewIterator)(leveldb::DB *this, const leveldb::ReadOptions *);\n  const leveldb::Snapshot *(__fastcall *GetSnapshot)(leveldb::DB *this);\n  void (__fastcall *ReleaseSnapshot)(leveldb::DB *this, const leveldb::Snapshot *);\n  bool (__fastcall *GetProperty)(leveldb::DB *this, const leveldb::Slice *, std::string *);\n  void (__fastcall *GetApproximateSizes)(leveldb::DB *this, const leveldb::Range *, int, unsigned __int64 *);\n  void (__fastcall *CompactRange)(leveldb::DB *this, const leveldb::Slice *, const leveldb::Slice *);\n  void (__fastcall *SuspendCompaction)(leveldb::DB *this);\n  void (__fastcall *ResumeCompaction)(leveldb::DB *this);\n};\n\n")])])]),e("h3",{attrs:{id:"listenerinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listenerinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListenerInfo")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj ListenerInfo\n{\n  std::function<void __cdecl(BlockPos const &,unsigned int,Block const &)> mCallback;\n  Vec3 mPosition;\n  float mRadiusSqr;\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkgarbagecollector"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkgarbagecollector"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkGarbageCollector")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelChunkGarbageCollector\n{\n  Dimension *mDimension;\n  MPMCQueue<std::unique_ptr<LevelChunk,LevelChunkFinalDeleter> > mLevelChunksToDiscard;\n  std::atomic<unsigned __int64> mPendingDeletes;\n};\n\n")])])]),e("h3",{attrs:{id:"lootitemfunction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootitemfunction"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootItemFunction")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LootItemFunction\n{\n  LootItemFunction_vtbl *__vftable /*VFT*/;\n  std::vector<std::unique_ptr<LootItemCondition>> mPredicates;\n};\n\n")])])]),e("h3",{attrs:{id:"lootpoolentry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootpoolentry"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootPoolEntry")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LootPoolEntry\n{\n  LootPoolEntry_vtbl *__vftable /*VFT*/;\n  int mWeight;\n  int mQuality;\n  std::vector<std::unique_ptr<LootItemCondition>> mConditions;\n  std::unique_ptr<LootPoolEntry> mSubTable;\n};\n\n")])])]),e("h3",{attrs:{id:"lootpoolentry-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootpoolentry-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootPoolEntry_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LootPoolEntry_vtbl\n{\n  bool (__fastcall *_createItem)(LootPoolEntry *this, std::vector<ItemStack> *, Random *, LootTableContext *);\n  void (__fastcall *~LootPoolEntry)(LootPoolEntry *this);\n};\n\n")])])]),e("h3",{attrs:{id:"lootitemcondition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootitemcondition"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootItemCondition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LootItemCondition\n{\n  LootItemCondition_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"lootitemcondition-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootitemcondition-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootItemCondition_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LootItemCondition_vtbl\n{\n  void (__fastcall *~LootItemCondition)(LootItemCondition *this);\n  bool (__fastcall *applies)(LootItemCondition *this, Random *, LootTableContext *);\n};\n\n")])])]),e("h3",{attrs:{id:"lootpooltiers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootpooltiers"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootPoolTiers")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct LootPoolTiers\n{\n  int mRangeForInitialTier;\n  int mBonusRolls;\n  float mBonusRollChance;\n};\n\n")])])]),e("h3",{attrs:{id:"lootpool"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootpool"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootPool")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LootPool\n{\n  std::vector<std::unique_ptr<LootPoolEntry>> mEntries;\n  std::vector<std::unique_ptr<LootItemCondition>> mConditions;\n  std::unique_ptr<LootPoolTiers> mTiers;\n  RandomValueBounds mRolls;\n  RandomValueBounds mBonusRolls;\n};\n\n")])])]),e("h3",{attrs:{id:"loottable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loottable"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootTable")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj LootTable\n{\n  std::string mDir;\n  std::vector<std::unique_ptr<LootPool>> mPools;\n};\n\n")])])]),e("h3",{attrs:{id:"lootitemfunction-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootitemfunction-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootItemFunction_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LootItemFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),e("h3",{attrs:{id:"legacystructuresettings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacystructuresettings"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyStructureSettings")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyStructureSettings\n{\n  float mIntegrity;\n  unsigned int mSeed;\n  Projection mProjection;\n  Mirror mMirror;\n  Rotation mRotation;\n  bool mIgnoreStructureBlocks;\n  bool mIgnoreJigsawBlocks;\n  bool mWaterBelowSeaLevel;\n  const Block *mIgnoreBlock;\n  ChunkPos mChunkPos;\n  BlockPos mRefPos;\n  BoundingBox mBoundingBox;\n  std::unordered_map<unsigned char,unsigned char> mSwapAuxValues;\n  const std::vector<std::unique_ptr<StructurePoolBlockRule>> *mBlockRules;\n  const std::vector<std::unique_ptr<StructurePoolBlockTagRule>> *mBlockTagRules;\n};\n\n")])])]),e("h3",{attrs:{id:"leveleventcoordinator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventcoordinator"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventCoordinator")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelEventCoordinator : EventCoordinator<LevelEventListener>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leveldatawrapper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldatawrapper"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDataWrapper")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelDataWrapper\n{\n  LevelData *mLevelDataFromLevel;\n  LevelData mLevelDataFromDisk;\n};\n\n")])])]),e("h3",{attrs:{id:"loottables"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loottables"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootTables")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LootTables\n{\n  std::unordered_map<std::string,std::unique_ptr<LootTable>> mLootTables;\n  std::mutex mLootTableMutex;\n};\n\n")])])]),e("h3",{attrs:{id:"level-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#level-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Level_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Level_vtbl\n{\n  void (__fastcall *~BlockSourceListener)(BlockSourceListener *this);\n  void (__fastcall *onSourceCreated)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onSourceDestroyed)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onAreaChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, const BlockPos *);\n  void (__fastcall *onBlockChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, unsigned int, const Block *, const Block *, int, const ActorBlockSyncMessage *);\n  void (__fastcall *onBrightnessChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onBlockEntityChanged)(BlockSourceListener *this, BlockSource *, BlockActor *);\n  void (__fastcall *onBlockEntityAboutToBeRemoved)(BlockSourceListener *this, BlockSource *, std::shared_ptr<BlockActor>);\n  void (__fastcall *onEntityChanged)(BlockSourceListener *this, BlockSource *, Actor *);\n  void (__fastcall *onBlockEvent)(BlockSourceListener *this, BlockSource *, int, int, int, int, int);\n  bool (__fastcall *initialize)(Level *this, const std::string *, const LevelSettings *, LevelData *, const std::string *);\n  bool (__fastcall *postProcessResources)(Level *this);\n  void (__fastcall *startLeaveGame)(Level *this);\n  Actor *(__fastcall *addEntity)(Level *this, BlockSource *, std::unique_ptr<Actor>);\n  Actor *(__fastcall *addGlobalEntity)(Level *this, BlockSource *, std::unique_ptr<Actor>);\n  Actor *(__fastcall *addAutonomousEntity)(Level *this, BlockSource *, std::unique_ptr<Actor>);\n  void (__fastcall *addPlayer)(Level *this, std::unique_ptr<Player>);\n  std::unique_ptr<Actor> *(__fastcall *takeEntity)(Level *this, std::unique_ptr<Actor> *result, ActorUniqueID);\n  std::unique_ptr<Actor> *(__fastcall *borrowEntity)(Level *this, std::unique_ptr<Actor> *result, ActorUniqueID, LevelChunk *);\n  const Tick *(__fastcall *getCurrentServerTick)(Level *this, const Tick *result);\n  Factory<BaseLightTextureImageBuilder,Level &,Scheduler &> *(__fastcall *getLightTextureImageBuilderFactory)(Level *this);\n  const Factory<BaseLightTextureImageBuilder,Level &,Scheduler &> *(__fastcall *getLightTextureImageBuilderFactory)(Level *this);\n  void (__fastcall *onPlayerDeath)(Level *this, Player *, const ActorDamageSource *);\n  void (__fastcall *tick)(Level *this);\n  void (__fastcall *directTickEntities)(Level *this, BlockSource *);\n  void (__fastcall *updateSleepingPlayerList)(Level *this);\n  void (__fastcall *setDifficulty)(Level *this, Difficulty);\n  void (__fastcall *setCommandsEnabled)(Level *this, bool);\n  void (__fastcall *setWorldTemplateOptionsUnlocked)(Level *this);\n  void (__fastcall *saveAdditionalData)(Level *this);\n  LevelEventCoordinator *(__fastcall *getLevelEventCoordinator)(Level *this);\n  void (__fastcall *onChunkLoaded)(Level *this, ChunkSource *, LevelChunk *);\n  void (__fastcall *queueEntityRemoval)(Level *this, std::unique_ptr<Actor> *, bool);\n  void (__fastcall *removeEntityReferences)(Level *this, Actor *, bool);\n  void (__fastcall *loadFunctionManager)(Level *this);\n  ResourcePackManager *(__fastcall *getClientResourcePackManager)(Level *this);\n  ResourcePackManager *(__fastcall *getServerResourcePackManager)(Level *this);\n  TradeTables *(__fastcall *getTradeTables)(Level *this);\n  void (__fastcall *addEntryToTagCache)(Level *this, const std::string *);\n  void (__fastcall *addEntriesToTagCache)(Level *this, const std::vector<std::string>);\n  void (__fastcall *dropEntryFromTagCache)(Level *this, const std::string *);\n  void (__fastcall *clearTagCache)(Level *this);\n  void (__fastcall *decrementTagCache)(Level *this, const std::string *, TagRegistry<IDType<LevelTagIDType>,IDType<LevelTagSetIDType> > *);\n  void (__fastcall *incrementTagCache)(Level *this, const std::string *, TagRegistry<IDType<LevelTagIDType>,IDType<LevelTagSetIDType> > *);\n  void (__fastcall *runCommand)(Level *this, Command *, CommandOrigin *, CommandOriginSystem);\n  void (__fastcall *runCommand)(Level *this, const HashedString *, CommandOrigin *, CommandOriginSystem, const CurrentCmdVersion);\n  TagRegistry<IDType<LevelTagIDType>,IDType<LevelTagSetIDType> > *(__fastcall *getTagRegistry)(Level *this);\n  bool (__fastcall *canUseSkin)(Level *this, const SerializedSkin *, const NetworkIdentifier *, const mce::UUID *, const std::string *);\n  PositionTrackingDB::PositionTrackingDBServer *(__fastcall *getPositionTrackerDBServer)(Level *this);\n  void (__fastcall *setFinishedInitializing)(Level *this);\n};\n\n")])])]),e("h3",{attrs:{id:"lockless-weakatomic-unsigned-int64"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lockless-weakatomic-unsigned-int64"}},[t._v("#")]),t._v(" "),e("code",[t._v("Lockless::WeakAtomic<unsigned __int64>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Lockless::WeakAtomic<unsigned __int64>\n{\n  std::atomic<unsigned __int64> mValue;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LegacyClientNetworkHandler : ClientNetworkHandler, LevelListener\n{\n  std::unique_ptr<LevelStorage> mCacheStorage;\n  Bedrock::NonOwnerPointer<SoundPlayerInterface> mSoundPlayer;\n  MultiPlayerLevel *mLevel;\n  PacketSender *mPacketSender;\n  std::vector<ActorLink> mPendingLinks;\n  int mPendingTime;\n  std::string mServerIdentifier;\n  std::unique_ptr<NetworkChunkInserter> mChunkInsertQueue;\n  NetworkIdentifier mServerGuid;\n  std::unique_ptr<Certificate> mUserCertificate;\n  std::shared_ptr<MPMCQueue<unsigned __int64> > mCacheMisses;\n  std::shared_ptr<MPMCQueue<unsigned __int64> > mCacheHits;\n  std::unordered_set<unsigned __int64> mBlobKeysNeedingResponse;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mNextChunkRequestDrainTime;\n  std::queue<std::pair<mce::UUID,SerializedSkin>> mPendingPersonaSkinsToProcess;\n  std::queue<std::pair<mce::UUID,SerializedSkin>> mPendingLegacySkinsToProcess;\n  std::shared_ptr<bool> mExistanceTracker;\n  std::vector<std::pair<mce::UUID,SerializedSkin>> mSkinsCurrentlyProcessing;\n  std::unordered_map<mce::UUID,persona::PersonaCharacterHandle> mSessionPersonas;\n  unsigned int mSkinsRemainingToProcess;\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkphase1deleter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkphase1deleter"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkPhase1Deleter")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelChunkPhase1Deleter\n{\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkblockactoraccesstoken"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkblockactoraccesstoken"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkBlockActorAccessToken")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelChunkBlockActorAccessToken\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lodestonecompasscomponentcalculator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lodestonecompasscomponentcalculator"}},[t._v("#")]),t._v(" "),e("code",[t._v("LodestoneCompassComponentCalculator")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LodestoneCompassComponentCalculator\n{\n  CompassSpriteCalculator mSpriteCalculator;\n  float mExpiresAtTime;\n  bool mTrackOnlyInSameDimension;\n  BlockPos mLookFromPos;\n  AutomaticID<Dimension,int> mLookFromDimension;\n};\n\n")])])]),e("h3",{attrs:{id:"lodestonecompasssystem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lodestonecompasssystem"}},[t._v("#")]),t._v(" "),e("code",[t._v("LodestoneCompassSystem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LodestoneCompassSystem : ITickingSystem\n{\n  IClientInstance *mClientInstance;\n};\n\n")])])]),e("h3",{attrs:{id:"lodestonecompasssystem-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lodestonecompasssystem-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LodestoneCompassSystem_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LodestoneCompassSystem_vtbl\n{\n  void (__fastcall *~ITickingSystem)(ITickingSystem *this);\n  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitem-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitem-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItem_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryItem_vtbl\n{\n  void (__fastcall *~LessonItem)(LessonItem *this);\n  bool (__fastcall *isValid)(LessonItem *this);\n  void (__fastcall *_createImageInfo)(LessonItem *this);\n  const ResourceLocation *(__fastcall *_getImageResourceLocation)(LessonItem *this);\n};\n\n")])])]),e("h3",{attrs:{id:"librarycollectionconfig"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarycollectionconfig"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryCollectionConfig")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryCollectionConfig\n{\n  const WorldTemplateManager *mWorldTemplateManager;\n  const std::optional<std::vector<std::string> > mKeywords;\n  _BYTE mExcludedDisplayCategories[4];\n  _BYTE mCollectionSource[4];\n  std::string mChannelName;\n};\n\n")])])]),e("h3",{attrs:{id:"librarycollection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarycollection"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryCollection")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryCollection : InstructionalContentCollection, std::enable_shared_from_this<LibraryCollection>\n{\n  std::shared_ptr<LibraryCollectionConfig> mConfig;\n  std::shared_ptr<LibraryItem> mInvalidItem;\n};\n\n")])])]),e("h3",{attrs:{id:"librarycollection-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarycollection-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryCollection_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryCollection_vtbl\n{\n  void (__fastcall *~InstructionalContentCollection)(InstructionalContentCollection *this);\n  void (__fastcall *addItem)(InstructionalContentCollection *this, std::shared_ptr<LessonItem>);\n  void (__fastcall *refresh)(InstructionalContentCollection *this);\n  void (__fastcall *fetchItems)(InstructionalContentCollection *this);\n  void (__fastcall *onItemImported)(InstructionalContentCollection *this, const LessonItem *);\n};\n\n")])])]),e("h3",{attrs:{id:"lecternblockactor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lecternblockactor"}},[t._v("#")]),t._v(" "),e("code",[t._v("LecternBlockActor")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LecternBlockActor : BlockActor, Container\n{\n  int mPage;\n  int mTotalPages;\n  ItemStack mBook;\n};\n\n")])])]),e("h3",{attrs:{id:"lecternblockactor-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lecternblockactor-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LecternBlockActor_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LecternBlockActor_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n};\n\n")])])]),e("h3",{attrs:{id:"loomscreencontrollerproxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loomscreencontrollerproxy"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoomScreenControllerProxy")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LoomScreenControllerProxy : ScreenControllerProxy\n{\n  const LoomScreenControllerProxyCallbacks mCallbacks;\n};\n\n")])])]),e("h3",{attrs:{id:"loomscreencontrollerproxy-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loomscreencontrollerproxy-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoomScreenControllerProxy_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LoomScreenControllerProxy_vtbl\n{\n  void (__fastcall *~ScreenControllerProxy)(ScreenControllerProxy *this);\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-levelrendererdebuginformation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-levelrendererdebuginformation"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::LevelRendererDebugInformation")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelRendererCamera::LevelRendererDebugInformation\n{\n  std::vector<FrustumEdges> lastFrusumEdges;\n  std::vector<mce::Camera> lastCascadeCameras;\n  mce::Camera lastDebugCamera;\n  glm::tvec3<float,0> mReferenceForwardVector;\n  std::vector<FrustumEdges> frusumEdges;\n  std::vector<mce::Camera> cascadeCameras;\n  int renderDebugCamera;\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-crackrenderobject-rebind-crackrenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-crackrenderobject-rebind-crackrenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<CrackRenderObject>::rebind<CrackRenderObject>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<CrackRenderObject>::rebind<CrackRenderObject>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-crackrenderobject-rebind-std-container-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-crackrenderobject-rebind-std-container-proxy"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<CrackRenderObject>::rebind<std::_Container_proxy>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<CrackRenderObject>::rebind<std::_Container_proxy>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-actorshadowrenderobject-rebind-actorshadowrenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-actorshadowrenderobject-rebind-actorshadowrenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<ActorShadowRenderObject>::rebind<ActorShadowRenderObject>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<ActorShadowRenderObject>::rebind<ActorShadowRenderObject>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-actorshadowrenderobject-rebind-std-container-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-actorshadowrenderobject-rebind-std-container-proxy"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<ActorShadowRenderObject>::rebind<std::_Container_proxy>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<ActorShadowRenderObject>::rebind<std::_Container_proxy>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-particletyperenderobject-rebind-particletyperenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-particletyperenderobject-rebind-particletyperenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<ParticleTypeRenderObject>::rebind<ParticleTypeRenderObject>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<ParticleTypeRenderObject>::rebind<ParticleTypeRenderObject>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-particletyperenderobject-rebind-std-container-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-particletyperenderobject-rebind-std-container-proxy"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<ParticleTypeRenderObject>::rebind<std::_Container_proxy>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<ParticleTypeRenderObject>::rebind<std::_Container_proxy>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-nametagrenderobject-rebind-nametagrenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-nametagrenderobject-rebind-nametagrenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<NameTagRenderObject>::rebind<NameTagRenderObject>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<NameTagRenderObject>::rebind<NameTagRenderObject>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-nametagrenderobject-rebind-std-container-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-nametagrenderobject-rebind-std-container-proxy"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<NameTagRenderObject>::rebind<std::_Container_proxy>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<NameTagRenderObject>::rebind<std::_Container_proxy>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-mce-textureptr-rebind-mce-textureptr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-mce-textureptr-rebind-mce-textureptr"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<mce::TexturePtr>::rebind<mce::TexturePtr>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<mce::TexturePtr>::rebind<mce::TexturePtr>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-mce-textureptr-rebind-std-container-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-mce-textureptr-rebind-std-container-proxy"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<mce::TexturePtr>::rebind<std::_Container_proxy>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<mce::TexturePtr>::rebind<std::_Container_proxy>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-viewrenderobject-rebind-viewrenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-viewrenderobject-rebind-viewrenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<ViewRenderObject>::rebind<ViewRenderObject>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<ViewRenderObject>::rebind<ViewRenderObject>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"linearallocator-viewrenderobject-rebind-std-container-proxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linearallocator-viewrenderobject-rebind-std-container-proxy"}},[t._v("#")]),t._v(" "),e("code",[t._v("LinearAllocator<ViewRenderObject>::rebind<std::_Container_proxy>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LinearAllocator<ViewRenderObject>::rebind<std::_Container_proxy>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"list-entry64"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list-entry64"}},[t._v("#")]),t._v(" "),e("code",[t._v("LIST_ENTRY64")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct LIST_ENTRY64\n{\n  unsigned __int64 Flink;\n  unsigned __int64 Blink;\n};\n\n")])])]),e("h3",{attrs:{id:"list-entry32"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list-entry32"}},[t._v("#")]),t._v(" "),e("code",[t._v("LIST_ENTRY32")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct LIST_ENTRY32\n{\n  unsigned int Flink;\n  unsigned int Blink;\n};\n\n")])])]),e("h3",{attrs:{id:"lconv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lconv"}},[t._v("#")]),t._v(" "),e("code",[t._v("lconv")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct lconv\n{\n  char *decimal_point;\n  char *thousands_sep;\n  char *grouping;\n  char *int_curr_symbol;\n  char *currency_symbol;\n  char *mon_decimal_point;\n  char *mon_thousands_sep;\n  char *mon_grouping;\n  char *positive_sign;\n  char *negative_sign;\n  char int_frac_digits;\n  char frac_digits;\n  char p_cs_precedes;\n  char p_sep_by_space;\n  char n_cs_precedes;\n  char n_sep_by_space;\n  char p_sign_posn;\n  char n_sign_posn;\n  wchar_t *_W_decimal_point;\n  wchar_t *_W_thousands_sep;\n  wchar_t *_W_int_curr_symbol;\n  wchar_t *_W_currency_symbol;\n  wchar_t *_W_mon_decimal_point;\n  wchar_t *_W_mon_thousands_sep;\n  wchar_t *_W_positive_sign;\n  wchar_t *_W_negative_sign;\n};\n\n")])])]),e("h3",{attrs:{id:"linger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linger"}},[t._v("#")]),t._v(" "),e("code",[t._v("linger")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct linger\n{\n  unsigned __int16 l_onoff;\n  unsigned __int16 l_linger;\n};\n\n")])])]),e("h3",{attrs:{id:"liquidoffsetbehavior"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#liquidoffsetbehavior"}},[t._v("#")]),t._v(" "),e("code",[t._v("LiquidOffsetBehavior")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LiquidOffsetBehavior : CameraBehavior<LiquidOffsetBehavior>\n{\n  float mHeightOffset;\n};\n\n")])])]),e("h3",{attrs:{id:"liquidoffsetbehavior-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#liquidoffsetbehavior-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LiquidOffsetBehavior_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LiquidOffsetBehavior_vtbl\n{\n  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);\n  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);\n  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);\n  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);\n  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);\n  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);\n  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);\n  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);\n  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);\n};\n\n")])])]),e("h3",{attrs:{id:"lookatbehavior"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatbehavior"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtBehavior")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LookAtBehavior : CameraBehavior<LookAtBehavior>\n{\n  RectangleArea mSoftBounds;\n  RectangleArea mHardBounds;\n  CriticallyDampedSpring<float> mSoftBoundsSmoothingSpring;\n  float mAngularVelocity;\n};\n\n")])])]),e("h3",{attrs:{id:"lookatbehavior-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatbehavior-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtBehavior_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LookAtBehavior_vtbl\n{\n  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);\n  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);\n  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);\n  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);\n  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);\n  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);\n  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);\n  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);\n  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);\n};\n\n")])])]),e("h3",{attrs:{id:"liquidoffsetbehaviorloader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#liquidoffsetbehaviorloader"}},[t._v("#")]),t._v(" "),e("code",[t._v("LiquidOffsetBehaviorLoader")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LiquidOffsetBehaviorLoader : CameraBehaviorLoader\n{\n};\n\n")])])]),e("h3",{attrs:{id:"liquidoffsetbehaviorloader-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#liquidoffsetbehaviorloader-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LiquidOffsetBehaviorLoader_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LiquidOffsetBehaviorLoader_vtbl\n{\n  void (__fastcall *~CameraBehaviorLoader)(CameraBehaviorLoader *this);\n  std::unique_ptr<ICameraBehavior> *(__fastcall *create)(CameraBehaviorLoader *this, std::unique_ptr<ICameraBehavior> *result);\n  void (__fastcall *parse)(CameraBehaviorLoader *this, Json::Value *, ICameraBehavior *);\n};\n\n")])])]),e("h3",{attrs:{id:"lookatbehaviorloader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatbehaviorloader"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtBehaviorLoader")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LookAtBehaviorLoader : CameraBehaviorLoader\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lookatbehaviorloader-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatbehaviorloader-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtBehaviorLoader_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LookAtBehaviorLoader_vtbl\n{\n  void (__fastcall *~CameraBehaviorLoader)(CameraBehaviorLoader *this);\n  std::unique_ptr<ICameraBehavior> *(__fastcall *create)(CameraBehaviorLoader *this, std::unique_ptr<ICameraBehavior> *result);\n  void (__fastcall *parse)(CameraBehaviorLoader *this, Json::Value *, ICameraBehavior *);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldataoverridevalues"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldataoverridevalues"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDataOverrideValues")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelDataOverrideValues\n{\n  std::unordered_map<HashedString,LevelDataValue> mOverrides;\n  std::vector<GameRule> mGameRules;\n  std::unordered_map<enum AbilitiesIndex,Ability> mAbilities;\n  AdventureSettingsOverride mAdventureSettings;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyworldconversionmanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyworldconversionmanager"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyWorldConversionManager")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyWorldConversionManager\n{\n  MainMenuScreenModel *mMainMenuScreenModel;\n  _BYTE mConversionState[4];\n  float mLegacyWorldConversionProgress;\n  std::shared_ptr<bool> mExistenceTracker;\n  IDlcBatchModel *mDownloadingContent;\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-worldimporter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldimporter"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldImporter")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) Legacy::WorldImporter\n{\n  Legacy::WorldImporter_vtbl *__vftable /*VFT*/;\n  std::shared_ptr<CallbackTokenContext<std::function<void __cdecl(enum Legacy::ImportStatus,float,std::shared_ptr<ImportResult>)> > > mImportContext;\n  std::shared_ptr<CallbackTokenContext<std::function<void __cdecl(enum Legacy::RetrieveStatus)> > > mRetrieveContext;\n  std::vector<LegacyWorldInfo> mWorldList;\n  std::atomic<bool> mFetchInProgress;\n  std::mutex mWorldListMutex;\n  std::unique_ptr<TaskGroup> mTaskGroup;\n  std::shared_ptr<Legacy::WorldConverter> mWorldConverter;\n  Legacy::WorldConverter::Type mWorldConverterType;\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-worldimporter-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldimporter-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldImporter_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Legacy::WorldImporter_vtbl\n{\n  void (__fastcall *~WorldImporter)(Legacy::WorldImporter *this);\n  void (__fastcall *deleteWorld)(Legacy::WorldImporter *this, std::shared_ptr<Social::User>, const std::string *, std::function<void __cdecl(void)>);\n  void (__fastcall *_doRetrieve)(Legacy::WorldImporter *this, std::shared_ptr<Social::User>, std::shared_ptr<CallbackTokenContext<std::function<void __cdecl(enum Legacy::RetrieveStatus)> > >);\n  void (__fastcall *_doImport)(Legacy::WorldImporter *this, std::shared_ptr<Social::User>, const LegacyWorldInfo *, const Core::Path *, std::shared_ptr<CallbackTokenContext<std::function<void __cdecl(enum Legacy::ImportStatus,float,std::shared_ptr<ImportResult>)> > >);\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-worldconverter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldconverter"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldConverter")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Legacy::WorldConverter\n{\n  Legacy::WorldConverter_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-worldconverter-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldconverter-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldConverter_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Legacy::WorldConverter_vtbl\n{\n  void (__fastcall *~WorldConverter)(Legacy::WorldConverter *this);\n  std::shared_future<void> *(__fastcall *addBlob)(Legacy::WorldConverter *this, std::shared_future<void> *result, const std::string *, Legacy::WorldConverterBlobType, std::vector<unsigned char> *);\n  std::future<Legacy::WorldConversionReport> *(__fastcall *complete)(Legacy::WorldConverter *this, std::future<Legacy::WorldConversionReport> *result);\n  void (__fastcall *setEstimatedBlobCount)(Legacy::WorldConverter *this, unsigned __int64);\n  void (__fastcall *setBlobNames)(Legacy::WorldConverter *this, const std::vector<std::string> *);\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-worldprocessrequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldprocessrequest"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldProcessRequest")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Legacy::WorldProcessRequest\n{\n  Legacy::WorldProcessRequest_vtbl *__vftable /*VFT*/;\n  std::function<void __cdecl(enum Legacy::ImportStatus,float,std::shared_ptr<ImportResult>)> mStatusCallback;\n  LegacyWorldInfo mWorldInfo;\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-worldprocessrequest-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldprocessrequest-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldProcessRequest_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Legacy::WorldProcessRequest_vtbl\n{\n  void (__fastcall *~WorldProcessRequest)(Legacy::WorldProcessRequest *this);\n  Legacy::WorldProcessingType (__fastcall *getProcessingType)(Legacy::WorldProcessRequest *this);\n  Core::PathBuffer<std::string > *(__fastcall *getOutputPath)(Legacy::WorldProcessRequest *this, Core::PathBuffer<std::string > *result);\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-uploadworldprocessrequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-uploadworldprocessrequest"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::UploadWorldProcessRequest")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Legacy::UploadWorldProcessRequest : Legacy::WorldProcessRequest\n{\n  std::unordered_map<std::string,std::string> mUserData;\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-uploadworldprocessrequest-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-uploadworldprocessrequest-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::UploadWorldProcessRequest_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Legacy::UploadWorldProcessRequest_vtbl\n{\n  void (__fastcall *~WorldProcessRequest)(Legacy::WorldProcessRequest *this);\n  Legacy::WorldProcessingType (__fastcall *getProcessingType)(Legacy::WorldProcessRequest *this);\n  Core::PathBuffer<std::string > *(__fastcall *getOutputPath)(Legacy::WorldProcessRequest *this, Core::PathBuffer<std::string > *result);\n};\n\n")])])]),e("h3",{attrs:{id:"lockless-weakatomic-spscqueue-std-string-512-block"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lockless-weakatomic-spscqueue-std-string-512-block"}},[t._v("#")]),t._v(" "),e("code",[t._v("Lockless::WeakAtomic<SPSCQueue<std::string,512>::Block *>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Lockless::WeakAtomic<SPSCQueue<std::string,512>::Block *>\n{\n  std::atomic<SPSCQueue<std::string,512>::Block *> mValue;\n};\n\n")])])]),e("h3",{attrs:{id:"localnetworkpeer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localnetworkpeer"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalNetworkPeer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalNetworkPeer : NetworkPeer\n{\n  std::weak_ptr<LocalNetworkPeer> mOtherPeer;\n  std::unique_ptr<SPSCQueue<std::string,512>> mIncomingData;\n};\n\n")])])]),e("h3",{attrs:{id:"localnetworkpeer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localnetworkpeer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalNetworkPeer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LocalNetworkPeer_vtbl\n{\n  void (__fastcall *~NetworkPeer)(NetworkPeer *this);\n  void (__fastcall *sendPacket)(NetworkPeer *this, const std::string *, NetworkPeer::Reliability, int, unsigned __int16, Compressibility);\n  NetworkPeer::DataStatus (__fastcall *receivePacket)(NetworkPeer *this, std::string *);\n  NetworkPeer::NetworkStatus *(__fastcall *getNetworkStatus)(NetworkPeer *this, NetworkPeer::NetworkStatus *result);\n  void (__fastcall *addIncomingData)(NetworkPeer *this, std::string);\n  void (__fastcall *update)(NetworkPeer *this);\n  void (__fastcall *flush)(NetworkPeer *this, std::function<void __cdecl(void)> *);\n};\n\n")])])]),e("h3",{attrs:{id:"leavelevelprogresshandler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leavelevelprogresshandler"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeaveLevelProgressHandler")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LeaveLevelProgressHandler : EmptyProgressHandler\n{\n  std::string mProgressMessage;\n  _BYTE mLoadingState[4];\n};\n\n")])])]),e("h3",{attrs:{id:"leavelevelprogresshandler-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leavelevelprogresshandler-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeaveLevelProgressHandler_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LeaveLevelProgressHandler_vtbl\n{\n  void (__fastcall *~ProgressHandler)(ProgressHandler *this);\n  void (__fastcall *onStart)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *tick)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *onCancel)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *onExit)(ProgressHandler *this, MinecraftScreenModel *);\n  LoadingState (__fastcall *getLoadingState)(ProgressHandler *this, MinecraftScreenModel *);\n  float (__fastcall *getLoadingProgress)(ProgressHandler *this, MinecraftScreenModel *);\n  std::string *(__fastcall *getProgressMessage)(ProgressHandler *this, std::string *result, MinecraftScreenModel *);\n  void (__fastcall *addEventProperties)(ProgressHandler *this, std::unordered_map<std::string,std::string> *);\n  std::string *(__fastcall *getTTSProgressMessage)(ProgressHandler *this, std::string *result);\n  std::string *(__fastcall *getTitleText)(ProgressHandler *this, std::string *result);\n  ProgressAnimation (__fastcall *showLoadingBar)(ProgressHandler *this);\n};\n\n")])])]),e("h3",{attrs:{id:"librarysearchquery"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarysearchquery"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibrarySearchQuery")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibrarySearchQuery\n{\n  int mSkip;\n  std::string mProductId;\n  _BYTE mType[1];\n  std::optional<std::vector<std::string> > mKeywords;\n  std::vector<std::string> mProductIds;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryimageparams"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryimageparams"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryImageParams")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryImageParams\n{\n  std::string mContentUrl;\n};\n\n")])])]),e("h3",{attrs:{id:"logsettingsupdater"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logsettingsupdater"}},[t._v("#")]),t._v(" "),e("code",[t._v("LogSettingsUpdater")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LogSettingsUpdater\n{\n  LogSettingsUpdater_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"logsettingsupdater-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logsettingsupdater-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LogSettingsUpdater_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LogSettingsUpdater_vtbl\n{\n  void (__fastcall *~LogSettingsUpdater)(LogSettingsUpdater *this);\n  void (__fastcall *save)(LogSettingsUpdater *this);\n  bool (__fastcall *getDevLogAppend)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogAppend)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogFlushImmediate)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogFlushImmediate)(LogSettingsUpdater *this, bool);\n  int (__fastcall *getDevLogFlushDelay)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogFlushDelay)(LogSettingsUpdater *this, int);\n  bool (__fastcall *getDevLogTimestamp)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogTimestamp)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogTrace)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogTrace)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogArea)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogArea)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogPriority)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogPriority)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogProcessId)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogProcessId)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogThreadId)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogThreadId)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogMessageId)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogMessageId)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogSilentLogging)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogSilentLogging)(LogSettingsUpdater *this, bool);\n  std::string *(__fastcall *getDevLogAreaFilterString)(LogSettingsUpdater *this, std::string *result);\n  void (__fastcall *setDevLogAreaFilterString)(LogSettingsUpdater *this, const std::string *);\n  unsigned int (__fastcall *getDevLogPriorityFilter)(LogSettingsUpdater *this);\n  void (__fastcall *toggleDevLogPriorityFilter)(LogSettingsUpdater *this, unsigned int);\n};\n\n")])])]),e("h3",{attrs:{id:"logoptionsupdater"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logoptionsupdater"}},[t._v("#")]),t._v(" "),e("code",[t._v("LogOptionsUpdater")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LogOptionsUpdater : LogSettingsUpdater\n{\n  std::shared_ptr<Options> mOptions;\n};\n\n")])])]),e("h3",{attrs:{id:"logoptionsupdater-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logoptionsupdater-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LogOptionsUpdater_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LogOptionsUpdater_vtbl\n{\n  void (__fastcall *~LogSettingsUpdater)(LogSettingsUpdater *this);\n  void (__fastcall *save)(LogSettingsUpdater *this);\n  bool (__fastcall *getDevLogAppend)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogAppend)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogFlushImmediate)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogFlushImmediate)(LogSettingsUpdater *this, bool);\n  int (__fastcall *getDevLogFlushDelay)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogFlushDelay)(LogSettingsUpdater *this, int);\n  bool (__fastcall *getDevLogTimestamp)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogTimestamp)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogTrace)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogTrace)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogArea)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogArea)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogPriority)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogPriority)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogProcessId)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogProcessId)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogThreadId)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogThreadId)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogMessageId)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogMessageId)(LogSettingsUpdater *this, bool);\n  bool (__fastcall *getDevLogSilentLogging)(LogSettingsUpdater *this);\n  void (__fastcall *setDevLogSilentLogging)(LogSettingsUpdater *this, bool);\n  std::string *(__fastcall *getDevLogAreaFilterString)(LogSettingsUpdater *this, std::string *result);\n  void (__fastcall *setDevLogAreaFilterString)(LogSettingsUpdater *this, const std::string *);\n  unsigned int (__fastcall *getDevLogPriorityFilter)(LogSettingsUpdater *this);\n  void (__fastcall *toggleDevLogPriorityFilter)(LogSettingsUpdater *this, unsigned int);\n};\n\n")])])]),e("h3",{attrs:{id:"loginstatemachine-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loginstatemachine-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoginStateMachine_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LoginStateMachine_vtbl\n{\n  void (__fastcall *~LoginStateMachine)(LoginStateMachine *this);\n};\n\n")])])]),e("h3",{attrs:{id:"launchscriptstage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#launchscriptstage"}},[t._v("#")]),t._v(" "),e("code",[t._v("LaunchScriptStage")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LaunchScriptStage : BaseStage\n{\n};\n\n")])])]),e("h3",{attrs:{id:"launchscriptstage-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#launchscriptstage-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LaunchScriptStage_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LaunchScriptStage_vtbl\n{\n  void (__fastcall *~BaseStage)(BaseStage *this);\n  void (__fastcall *onAwake)(BaseStage *this);\n  void (__fastcall *onUpdate)(BaseStage *this);\n  bool (__fastcall *ayncTask)(BaseStage *this);\n};\n\n")])])]),e("h3",{attrs:{id:"loginfinishstage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loginfinishstage"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoginFinishStage")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LoginFinishStage : BaseStage\n{\n};\n\n")])])]),e("h3",{attrs:{id:"loginfinishstage-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loginfinishstage-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoginFinishStage_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LoginFinishStage_vtbl\n{\n  void (__fastcall *~BaseStage)(BaseStage *this);\n  void (__fastcall *onAwake)(BaseStage *this);\n  void (__fastcall *onUpdate)(BaseStage *this);\n  bool (__fastcall *ayncTask)(BaseStage *this);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldbenv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldbenv"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbEnv")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelDbEnv : leveldb::Env\n{\n  std::unique_ptr<TaskGroup> mLevelDBTasks;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldbenv-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldbenv-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbEnv_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelDbEnv_vtbl\n{\n  void (__fastcall *~Env)(leveldb::Env *this);\n  leveldb::Status *(__fastcall *NewSequentialFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::SequentialFile **);\n  leveldb::Status *(__fastcall *NewRandomAccessFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::RandomAccessFile **);\n  leveldb::Status *(__fastcall *NewWritableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);\n  leveldb::Status *(__fastcall *NewAppendableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);\n  bool (__fastcall *FileExists)(leveldb::Env *this, const std::string *);\n  leveldb::Status *(__fastcall *GetChildren)(leveldb::Env *this, leveldb::Status *result, const std::string *, std::vector<std::string> *);\n  leveldb::Status *(__fastcall *DeleteFileA)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *CreateDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *DeleteDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *GetFileSize)(leveldb::Env *this, leveldb::Status *result, const std::string *, unsigned __int64 *);\n  leveldb::Status *(__fastcall *RenameFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, const std::string *);\n  leveldb::Status *(__fastcall *LockFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::FileLock **);\n  leveldb::Status *(__fastcall *UnlockFile)(leveldb::Env *this, leveldb::Status *result, leveldb::FileLock *);\n  void (__fastcall *Schedule)(leveldb::Env *this, void (__fastcall *)(void *), void *);\n  void (__fastcall *StartThread)(leveldb::Env *this, void (__fastcall *)(void *), void *);\n  leveldb::Status *(__fastcall *GetTestDirectory)(leveldb::Env *this, leveldb::Status *result, std::string *);\n  leveldb::Status *(__fastcall *NewLogger)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::Logger **);\n  unsigned __int64 (__fastcall *NowMicros)(leveldb::Env *this);\n  void (__fastcall *SleepForMicroseconds)(leveldb::Env *this, int);\n};\n\n")])])]),e("h3",{attrs:{id:"librarydeeplink"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarydeeplink"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryDeeplink")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryDeeplink\n{\n  std::string itemId;\n};\n\n")])])]),e("h3",{attrs:{id:"librarydeeplinklistener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarydeeplinklistener"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryDeeplinkListener")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryDeeplinkListener : UriListener\n{\n  std::function<SceneStack & __cdecl(void)> mGetSceneStack;\n  std::function<SceneFactory & __cdecl(void)> mGetPrimarySceneFactory;\n  std::function<LibraryRepository & __cdecl(void)> mGetLibraryRepository;\n  std::function<void __cdecl(void)> mRequestLeaveGame;\n  std::function<bool __cdecl(void)> mIsLeavingGameDone;\n  std::function<bool __cdecl(void)> mIsInGame;\n  std::unique_ptr<LibraryDeeplink> mPendingLink;\n  std::mutex mLinkMutex;\n  std::shared_ptr<bool> mExistenceTracker;\n  std::unique_ptr<LibraryDeeplink> mLeaveGamePendingLink;\n};\n\n")])])]),e("h3",{attrs:{id:"librarydeeplinklistener-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarydeeplinklistener-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryDeeplinkListener_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryDeeplinkListener_vtbl\n{\n  void (__fastcall *~UriListener)(UriListener *this);\n  void (__fastcall *onUri)(UriListener *this, const ActivationUri *);\n  void (__fastcall *tick)(UriListener *this);\n};\n\n")])])]),e("h3",{attrs:{id:"lowmemorywatcher"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lowmemorywatcher"}},[t._v("#")]),t._v(" "),e("code",[t._v("LowMemoryWatcher")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LowMemoryWatcher\n{\n};\n\n")])])]),e("h3",{attrs:{id:"levelloader-importlevel-l19-lambda-3bb3ecb6e11687a565c90fd72d569076"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelloader-importlevel-l19-lambda-3bb3ecb6e11687a565c90fd72d569076"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelLoader::_importLevel::__l19::<lambda_3bb3ecb6e11687a565c90fd72d569076>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelLoader::_importLevel::__l19::<lambda_3bb3ecb6e11687a565c90fd72d569076>\n{\n  LevelLoader *const __this;\n  std::shared_ptr<ImportLevelData> modalOwnership;\n};\n\n")])])]),e("h3",{attrs:{id:"livehorserenderer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#livehorserenderer"}},[t._v("#")]),t._v(" "),e("code",[t._v("LiveHorseRenderer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LiveHorseRenderer : MinecraftUICustomRenderer\n{\n};\n\n")])])]),e("h3",{attrs:{id:"livehorserenderer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#livehorserenderer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LiveHorseRenderer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LiveHorseRenderer_vtbl\n{\n  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);\n  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);\n  std::shared_ptr<UICustomRenderer> *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr<UICustomRenderer> *result);\n  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);\n  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);\n  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);\n  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);\n  int (__fastcall *getCustomId)(UICustomRenderer *this);\n  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);\n  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);\n  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);\n  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);\n  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);\n  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue<ScreenEvent> *);\n  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);\n  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);\n  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);\n};\n\n")])])]),e("h3",{attrs:{id:"liveplayerrenderer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#liveplayerrenderer"}},[t._v("#")]),t._v(" "),e("code",[t._v("LivePlayerRenderer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LivePlayerRenderer : MinecraftUICustomRenderer\n{\n};\n\n")])])]),e("h3",{attrs:{id:"liveplayerrenderer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#liveplayerrenderer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LivePlayerRenderer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LivePlayerRenderer_vtbl\n{\n  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);\n  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);\n  std::shared_ptr<UICustomRenderer> *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr<UICustomRenderer> *result);\n  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);\n  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);\n  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);\n  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);\n  int (__fastcall *getCustomId)(UICustomRenderer *this);\n  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);\n  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);\n  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);\n  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);\n  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);\n  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue<ScreenEvent> *);\n  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);\n  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);\n  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);\n};\n\n")])])]),e("h3",{attrs:{id:"libraryprogresshandler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryprogresshandler"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryProgressHandler")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryProgressHandler : StoreProgressHandler\n{\n  std::vector<std::pair<std::string,std::string >> mProperties;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryprogresshandler-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryprogresshandler-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryProgressHandler_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryProgressHandler_vtbl\n{\n  void (__fastcall *~ProgressHandler)(ProgressHandler *this);\n  void (__fastcall *onStart)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *tick)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *onCancel)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *onExit)(ProgressHandler *this, MinecraftScreenModel *);\n  LoadingState (__fastcall *getLoadingState)(ProgressHandler *this, MinecraftScreenModel *);\n  float (__fastcall *getLoadingProgress)(ProgressHandler *this, MinecraftScreenModel *);\n  std::string *(__fastcall *getProgressMessage)(ProgressHandler *this, std::string *result, MinecraftScreenModel *);\n  void (__fastcall *addEventProperties)(ProgressHandler *this, std::unordered_map<std::string,std::string> *);\n  std::string *(__fastcall *getTTSProgressMessage)(ProgressHandler *this, std::string *result);\n  std::string *(__fastcall *getTitleText)(ProgressHandler *this, std::string *result);\n  ProgressAnimation (__fastcall *showLoadingBar)(ProgressHandler *this);\n};\n\n")])])]),e("h3",{attrs:{id:"lodestonecompassitem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lodestonecompassitem"}},[t._v("#")]),t._v(" "),e("code",[t._v("LodestoneCompassItem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LodestoneCompassItem : Item\n{\n  int mAtlasWidth;\n  int mAtlasHeight;\n  TextureUVCoordinateSet mFrames[32];\n};\n\n")])])]),e("h3",{attrs:{id:"lodestoneblockactor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lodestoneblockactor"}},[t._v("#")]),t._v(" "),e("code",[t._v("LodestoneBlockActor")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LodestoneBlockActor : BlockActor\n{\n  PositionTrackingId mTrackingDBHandle;\n};\n\n")])])]),e("h3",{attrs:{id:"lodestoneblockactor-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lodestoneblockactor-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LodestoneBlockActor_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LodestoneBlockActor_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n};\n\n")])])]),e("h3",{attrs:{id:"legacyoptionsparser"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyoptionsparser"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyOptionsParser")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyOptionsParser\n{\n  std::unordered_map<enum LegacyOption,std::variant<bool,unsigned char,unsigned int>> mOptions;\n  std::unordered_map<enum LegacyStat,std::variant<unsigned int,std::vector<unsigned int> >> mStats;\n};\n\n")])])]),e("h3",{attrs:{id:"librarytemplatesscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarytemplatesscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryTemplatesScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryTemplatesScreenController : MainMenuScreenController\n{\n  std::shared_ptr<LibraryCollection> mCollection;\n};\n\n")])])]),e("h3",{attrs:{id:"librarytemplatesscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarytemplatesscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryTemplatesScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryTemplatesScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LateJoinPreGameScreenController : MinecraftScreenController\n{\n  std::function<void __cdecl(void)> mUserReadyToJoinCallback;\n  bool mIsSigningInToXBL;\n  bool mIsUserReady;\n  bool mShouldPromptForPlatformConnection;\n  bool mShouldCheckPremiumPlatformAccess;\n  bool mCheckingPremiumPlatformAccess;\n  bool mHasBeenPromptedForXBLSignIn;\n  bool mAutoXBLSignInAttempted;\n  bool mShowingWarning;\n  bool mIsAnimatingTextVisible;\n  std::string mAnimatedMessage;\n  int mAnimationCount;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mLastAnimatingTextUpdate;\n  std::unique_ptr<PlatformMultiplayerRestrictions> mPlatformMultiplayerRestrictions;\n  bool mHasXBLBroadcast;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LateJoinPreGameScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"leavelevelprogressscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leavelevelprogressscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeaveLevelProgressScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LeaveLevelProgressScreenController : MinecraftScreenController\n{\n  bool mInitiated;\n  bool mNext;\n  bool mForceRenderBelow;\n  std::string mCalledFrom;\n  __int64 mLastAudioProgressNotificationUpdate;\n  const __int64 mProgressMessageInterval;\n  std::unique_ptr<ProgressHandler> mProgressHandler;\n  std::deque<std::unique_ptr<ProgressHandler>> mProgressHandlerList;\n  bool mHasTicked;\n  bool mPostInitEventFired;\n};\n\n")])])]),e("h3",{attrs:{id:"leavelevelprogressscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leavelevelprogressscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeaveLevelProgressScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LeaveLevelProgressScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"libraryinfo-baselibraryinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryinfo-baselibraryinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryInfo::BaseLibraryInfo")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryInfo::BaseLibraryInfo\n{\n  LibraryInfo::BaseLibraryInfo_vtbl *__vftable /*VFT*/;\n  std::string mSectionHeader;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryinfo-baselibraryinfo-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryinfo-baselibraryinfo-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryInfo::BaseLibraryInfo_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryInfo::BaseLibraryInfo_vtbl\n{\n  void (__fastcall *~BaseLibraryInfo)(LibraryInfo::BaseLibraryInfo *this);\n  const gsl::basic_string_span<char const ,-1> *(__fastcall *getType)(LibraryInfo::BaseLibraryInfo *this);\n};\n\n")])])]),e("h3",{attrs:{id:"libraryinfo-expandable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryinfo-expandable"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryInfo::Expandable")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LibraryInfo::Expandable : LibraryInfo::BaseLibraryInfo\n{\n  std::string mBodyText;\n  bool mCanExpand;\n  bool mExpanded;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryinfo-expandable-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryinfo-expandable-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryInfo::Expandable_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryInfo::Expandable_vtbl\n{\n  void (__fastcall *~BaseLibraryInfo)(LibraryInfo::BaseLibraryInfo *this);\n  const gsl::basic_string_span<char const ,-1> *(__fastcall *getType)(LibraryInfo::BaseLibraryInfo *this);\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController : MainMenuScreenController\n{\n  std::vector<std::unique_ptr<LibraryInfo::BaseLibraryInfo>> mInfoSections;\n  std::shared_ptr<LibraryItem> mItem;\n  std::shared_ptr<EducationContentManagerScreenController> mEducationContentManagerScreenController;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryItemScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"librarymodalscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarymodalscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryModalScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryModalScreenController : MinecraftScreenController\n{\n  std::function<void __cdecl(bool)> mOnModalDismissed;\n  LibraryModalScreenType mType;\n  std::vector<std::pair<std::string,std::string >> mEventProperties;\n};\n\n")])])]),e("h3",{attrs:{id:"librarymodalscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarymodalscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryModalScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryModalScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"librarymodalscreencontroller-registerbindings-l2-lambda-087130434c3e499fd28e1431cd7fab25"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarymodalscreencontroller-registerbindings-l2-lambda-087130434c3e499fd28e1431cd7fab25"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryModalScreenController::_registerBindings::__l2::<lambda_087130434c3e499fd28e1431cd7fab25>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryModalScreenController::_registerBindings::__l2::<lambda_087130434c3e499fd28e1431cd7fab25>\n{\n  LibraryModalScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LibraryScreenController : MainMenuScreenController\n{\n  std::shared_ptr<LibraryCollection> mLibraryCollection;\n  std::string mLibraryTitle;\n  std::string mLibraryIcon;\n  std::string mLibraryPageDescription;\n  LibraryScreenController::ItemType mItemType;\n  _BYTE mOptionalFeatures[4];\n  LibraryScreenController::ScreenType mScreenType;\n  std::string mSearchFilter;\n  bool mShowingError;\n  bool mShowingWelcome;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"localworlduploadscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localworlduploadscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalWorldUploadScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalWorldUploadScreenController : PlayScreenController\n{\n  std::string mRealmID;\n};\n\n")])])]),e("h3",{attrs:{id:"localworlduploadscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localworlduploadscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalWorldUploadScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LocalWorldUploadScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"localworlduploadscreencontroller-displaylockedworldpopup-l2-lambda-fae9e036f6a709420bc784d748119f15"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localworlduploadscreencontroller-displaylockedworldpopup-l2-lambda-fae9e036f6a709420bc784d748119f15"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalWorldUploadScreenController::_displayLockedWorldPopup::__l2::<lambda_fae9e036f6a709420bc784d748119f15>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LocalWorldUploadScreenController::_displayLockedWorldPopup::__l2::<lambda_fae9e036f6a709420bc784d748119f15>\n{\n  std::weak_ptr<LocalWorldUploadScreenController> weakThis;\n  int worldIndex;\n};\n\n")])])]),e("h3",{attrs:{id:"localworlduploadscreencontroller-displaylockedworldpopup-l2-lambda-fae9e036f6a709420bc784d748119f15-l5-lambda-42032e03240096d558f0ecd13cc817c1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localworlduploadscreencontroller-displaylockedworldpopup-l2-lambda-fae9e036f6a709420bc784d748119f15-l5-lambda-42032e03240096d558f0ecd13cc817c1"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalWorldUploadScreenController::_displayLockedWorldPopup::__l2::<lambda_fae9e036f6a709420bc784d748119f15>::()::__l5::<lambda_42032e03240096d558f0ecd13cc817c1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalWorldUploadScreenController::_displayLockedWorldPopup::__l2::<lambda_fae9e036f6a709420bc784d748119f15>::()::__l5::<lambda_42032e03240096d558f0ecd13cc817c1>\n{\n  std::weak_ptr<LocalWorldUploadScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"localworlduploadscreencontroller-registereventhandlers-l2-lambda-9fcf662c83052d8e55bcccdf4358cecc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localworlduploadscreencontroller-registereventhandlers-l2-lambda-9fcf662c83052d8e55bcccdf4358cecc"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalWorldUploadScreenController::_registerEventHandlers::__l2::<lambda_9fcf662c83052d8e55bcccdf4358cecc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalWorldUploadScreenController::_registerEventHandlers::__l2::<lambda_9fcf662c83052d8e55bcccdf4358cecc>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"localworlduploadscreencontroller-registereventhandlers-l2-lambda-d4b4b7c4a91a0108e2c65e3720de2740"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localworlduploadscreencontroller-registereventhandlers-l2-lambda-d4b4b7c4a91a0108e2c65e3720de2740"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalWorldUploadScreenController::_registerEventHandlers::__l2::<lambda_d4b4b7c4a91a0108e2c65e3720de2740>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalWorldUploadScreenController::_registerEventHandlers::__l2::<lambda_d4b4b7c4a91a0108e2c65e3720de2740>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"localworlduploadscreencontroller-registereventhandlers-l2-lambda-becf3e005d1dab992c4902507fb24787"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localworlduploadscreencontroller-registereventhandlers-l2-lambda-becf3e005d1dab992c4902507fb24787"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalWorldUploadScreenController::_registerEventHandlers::__l2::<lambda_becf3e005d1dab992c4902507fb24787>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalWorldUploadScreenController::_registerEventHandlers::__l2::<lambda_becf3e005d1dab992c4902507fb24787>\n{\n  LocalWorldUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"localworlduploadscreencontroller-registereventhandlers-l2-lambda-becf3e005d1dab992c4902507fb24787-l11-lambda-1066b5068e9cdcc2f4dbd9f71796742d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localworlduploadscreencontroller-registereventhandlers-l2-lambda-becf3e005d1dab992c4902507fb24787-l11-lambda-1066b5068e9cdcc2f4dbd9f71796742d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalWorldUploadScreenController::_registerEventHandlers::__l2::<lambda_becf3e005d1dab992c4902507fb24787>::()::__l11::<lambda_1066b5068e9cdcc2f4dbd9f71796742d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalWorldUploadScreenController::_registerEventHandlers::__l2::<lambda_becf3e005d1dab992c4902507fb24787>::()::__l11::<lambda_1066b5068e9cdcc2f4dbd9f71796742d>\n{\n  std::weak_ptr<LocalWorldUploadScreenController> weakThis;\n  const int index;\n  LocalWorldInfo *localWorldInfo;\n};\n\n")])])]),e("h3",{attrs:{id:"localworlduploadscreencontroller-upload-l10-lambda-2698453db4a1ba74e29f4215bf63a159"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localworlduploadscreencontroller-upload-l10-lambda-2698453db4a1ba74e29f4215bf63a159"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalWorldUploadScreenController::_upload::__l10::<lambda_2698453db4a1ba74e29f4215bf63a159>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LocalWorldUploadScreenController::_upload::__l10::<lambda_2698453db4a1ba74e29f4215bf63a159>\n{\n  std::weak_ptr<LocalWorldUploadScreenController> weakThis;\n  const int worldIndex;\n};\n\n")])])]),e("h3",{attrs:{id:"librarytemplatesscreencontroller-ctor-l2-lambda-29746ef258516070803c1c986989629c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarytemplatesscreencontroller-ctor-l2-lambda-29746ef258516070803c1c986989629c"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryTemplatesScreenController::{ctor}::__l2::<lambda_29746ef258516070803c1c986989629c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryTemplatesScreenController::{ctor}::__l2::<lambda_29746ef258516070803c1c986989629c>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-setsortmethod-l2-lambda-34cf7c76c65b80e6aef470045b73afd4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-setsortmethod-l2-lambda-34cf7c76c65b80e6aef470045b73afd4"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_setSortMethod::__l2::<lambda_34cf7c76c65b80e6aef470045b73afd4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_setSortMethod::__l2::<lambda_34cf7c76c65b80e6aef470045b73afd4>\n{\n  LibraryScreenController::SortMode mode;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-showfetcherror-l2-lambda-526012f7c57d670a5a7e6daa10021cd4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-showfetcherror-l2-lambda-526012f7c57d670a5a7e6daa10021cd4"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_showFetchError::__l2::<lambda_526012f7c57d670a5a7e6daa10021cd4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_showFetchError::__l2::<lambda_526012f7c57d670a5a7e6daa10021cd4>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registereventhandlers-l2-lambda-2e85df82a80b79582bd9ee3c2037830b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registereventhandlers-l2-lambda-2e85df82a80b79582bd9ee3c2037830b"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerEventHandlers::__l2::<lambda_2e85df82a80b79582bd9ee3c2037830b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerEventHandlers::__l2::<lambda_2e85df82a80b79582bd9ee3c2037830b>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registereventhandlers-l2-lambda-40fe056b894a595bec516c0d262394f0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registereventhandlers-l2-lambda-40fe056b894a595bec516c0d262394f0"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerEventHandlers::__l2::<lambda_40fe056b894a595bec516c0d262394f0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerEventHandlers::__l2::<lambda_40fe056b894a595bec516c0d262394f0>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registereventhandlers-l2-lambda-4fc5d32bf862a581c7a8305ddb3d645a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registereventhandlers-l2-lambda-4fc5d32bf862a581c7a8305ddb3d645a"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerEventHandlers::__l2::<lambda_4fc5d32bf862a581c7a8305ddb3d645a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerEventHandlers::__l2::<lambda_4fc5d32bf862a581c7a8305ddb3d645a>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registerbindings-l2-lambda-592aaa9af0f34fa7d316807ced80c51d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registerbindings-l2-lambda-592aaa9af0f34fa7d316807ced80c51d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerBindings::__l2::<lambda_592aaa9af0f34fa7d316807ced80c51d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerBindings::__l2::<lambda_592aaa9af0f34fa7d316807ced80c51d>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registerbindings-l2-lambda-003322239f7d3b3a0e7dcf32a85acb00"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registerbindings-l2-lambda-003322239f7d3b3a0e7dcf32a85acb00"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerBindings::__l2::<lambda_003322239f7d3b3a0e7dcf32a85acb00>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerBindings::__l2::<lambda_003322239f7d3b3a0e7dcf32a85acb00>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registerbindings-l2-lambda-4ca42b3ff47004f759f016fb1d350a8b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registerbindings-l2-lambda-4ca42b3ff47004f759f016fb1d350a8b"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerBindings::__l2::<lambda_4ca42b3ff47004f759f016fb1d350a8b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerBindings::__l2::<lambda_4ca42b3ff47004f759f016fb1d350a8b>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registerbindings-l2-lambda-1ad56a19b0aaec404015dfe5e71a7b51"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registerbindings-l2-lambda-1ad56a19b0aaec404015dfe5e71a7b51"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerBindings::__l2::<lambda_1ad56a19b0aaec404015dfe5e71a7b51>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerBindings::__l2::<lambda_1ad56a19b0aaec404015dfe5e71a7b51>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registerbindings-l2-lambda-58f7c788d2793cd65ab27620d2b58e14"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registerbindings-l2-lambda-58f7c788d2793cd65ab27620d2b58e14"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerBindings::__l2::<lambda_58f7c788d2793cd65ab27620d2b58e14>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerBindings::__l2::<lambda_58f7c788d2793cd65ab27620d2b58e14>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registerbindings-l2-lambda-6fc9dddd00491e3231bbb6b94fc16730"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registerbindings-l2-lambda-6fc9dddd00491e3231bbb6b94fc16730"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerBindings::__l2::<lambda_6fc9dddd00491e3231bbb6b94fc16730>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerBindings::__l2::<lambda_6fc9dddd00491e3231bbb6b94fc16730>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registerbindings-l2-lambda-faec0e1c485b695748d343d61d26e335"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registerbindings-l2-lambda-faec0e1c485b695748d343d61d26e335"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerBindings::__l2::<lambda_faec0e1c485b695748d343d61d26e335>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerBindings::__l2::<lambda_faec0e1c485b695748d343d61d26e335>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registerbindings-l2-lambda-a84e6a2879858b01baa1af4dc9cc0d84"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registerbindings-l2-lambda-a84e6a2879858b01baa1af4dc9cc0d84"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerBindings::__l2::<lambda_a84e6a2879858b01baa1af4dc9cc0d84>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerBindings::__l2::<lambda_a84e6a2879858b01baa1af4dc9cc0d84>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registerbindings-l2-lambda-aa3c29a3c9badb697bf403a6eec86020"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registerbindings-l2-lambda-aa3c29a3c9badb697bf403a6eec86020"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerBindings::__l2::<lambda_aa3c29a3c9badb697bf403a6eec86020>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerBindings::__l2::<lambda_aa3c29a3c9badb697bf403a6eec86020>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registerbindings-l2-lambda-4484ddcd96c40510c135b3d3e8d7c7b4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registerbindings-l2-lambda-4484ddcd96c40510c135b3d3e8d7c7b4"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerBindings::__l2::<lambda_4484ddcd96c40510c135b3d3e8d7c7b4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerBindings::__l2::<lambda_4484ddcd96c40510c135b3d3e8d7c7b4>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-registerbindings-l2-lambda-b45253f217c103c3c281f24a56d9cc7a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-registerbindings-l2-lambda-b45253f217c103c3c281f24a56d9cc7a"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::_registerBindings::__l2::<lambda_b45253f217c103c3c281f24a56d9cc7a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::_registerBindings::__l2::<lambda_b45253f217c103c3c281f24a56d9cc7a>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-ctor-l2-lambda-e2595befff5f97c37c862491bb6d8dc3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-ctor-l2-lambda-e2595befff5f97c37c862491bb6d8dc3"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::{ctor}::__l2::<lambda_e2595befff5f97c37c862491bb6d8dc3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::{ctor}::__l2::<lambda_e2595befff5f97c37c862491bb6d8dc3>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-ctor-l2-lambda-d163638d4056721e193208c1ef876d19"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-ctor-l2-lambda-d163638d4056721e193208c1ef876d19"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::{ctor}::__l2::<lambda_d163638d4056721e193208c1ef876d19>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::{ctor}::__l2::<lambda_d163638d4056721e193208c1ef876d19>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-ctor-l2-lambda-f522437ef474c2023bbd9f7d37663094"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-ctor-l2-lambda-f522437ef474c2023bbd9f7d37663094"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::{ctor}::__l2::<lambda_f522437ef474c2023bbd9f7d37663094>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::{ctor}::__l2::<lambda_f522437ef474c2023bbd9f7d37663094>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryscreencontroller-ctor-l2-lambda-1d96d24b26056472ec708bba1eb67920"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryscreencontroller-ctor-l2-lambda-1d96d24b26056472ec708bba1eb67920"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryScreenController::{ctor}::__l2::<lambda_1d96d24b26056472ec708bba1eb67920>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryScreenController::{ctor}::__l2::<lambda_1d96d24b26056472ec708bba1eb67920>\n{\n  LibraryScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"librarymodalscreencontroller-registereventhandlers-l2-lambda-e97a7064925225453990c159c1b5a710"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarymodalscreencontroller-registereventhandlers-l2-lambda-e97a7064925225453990c159c1b5a710"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryModalScreenController::_registerEventHandlers::__l2::<lambda_e97a7064925225453990c159c1b5a710>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryModalScreenController::_registerEventHandlers::__l2::<lambda_e97a7064925225453990c159c1b5a710>\n{\n  LibraryModalScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"librarymodalscreencontroller-registereventhandlers-l2-lambda-cc8d376245468c569ce317f69c50021d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarymodalscreencontroller-registereventhandlers-l2-lambda-cc8d376245468c569ce317f69c50021d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryModalScreenController::_registerEventHandlers::__l2::<lambda_cc8d376245468c569ce317f69c50021d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryModalScreenController::_registerEventHandlers::__l2::<lambda_cc8d376245468c569ce317f69c50021d>\n{\n  LibraryModalScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-showdownloaderror-l2-lambda-b67c97bb12ba6d2617e855b44112162c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-showdownloaderror-l2-lambda-b67c97bb12ba6d2617e855b44112162c"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_showDownloadError::__l2::<lambda_b67c97bb12ba6d2617e855b44112162c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_showDownloadError::__l2::<lambda_b67c97bb12ba6d2617e855b44112162c>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registerexpandableeventhandlers-l2-lambda-504f1c51c45ed55299e1a8b3b4a5e5a0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registerexpandableeventhandlers-l2-lambda-504f1c51c45ed55299e1a8b3b4a5e5a0"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerExpandableEventHandlers::__l2::<lambda_504f1c51c45ed55299e1a8b3b4a5e5a0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerExpandableEventHandlers::__l2::<lambda_504f1c51c45ed55299e1a8b3b4a5e5a0>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registerexpandablebindings-l2-lambda-4f0fbf9f691d41dc49368c26c8aab563"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registerexpandablebindings-l2-lambda-4f0fbf9f691d41dc49368c26c8aab563"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerExpandableBindings::__l2::<lambda_4f0fbf9f691d41dc49368c26c8aab563>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerExpandableBindings::__l2::<lambda_4f0fbf9f691d41dc49368c26c8aab563>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registerexpandablebindings-l2-lambda-835e671893d81523f10198403040902a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registerexpandablebindings-l2-lambda-835e671893d81523f10198403040902a"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerExpandableBindings::__l2::<lambda_835e671893d81523f10198403040902a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerExpandableBindings::__l2::<lambda_835e671893d81523f10198403040902a>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registerexpandablebindings-l2-lambda-f83a362b4b3275278afdfba6ad8196fd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registerexpandablebindings-l2-lambda-f83a362b4b3275278afdfba6ad8196fd"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerExpandableBindings::__l2::<lambda_f83a362b4b3275278afdfba6ad8196fd>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerExpandableBindings::__l2::<lambda_f83a362b4b3275278afdfba6ad8196fd>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registerexpandablebindings-l2-lambda-f88d272e9fe6ad4770165d68281bc662"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registerexpandablebindings-l2-lambda-f88d272e9fe6ad4770165d68281bc662"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerExpandableBindings::__l2::<lambda_f88d272e9fe6ad4770165d68281bc662>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerExpandableBindings::__l2::<lambda_f88d272e9fe6ad4770165d68281bc662>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registereventhandlers-l2-lambda-03d032e11e2bf2824f88c76f19bce8e1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registereventhandlers-l2-lambda-03d032e11e2bf2824f88c76f19bce8e1"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerEventHandlers::__l2::<lambda_03d032e11e2bf2824f88c76f19bce8e1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerEventHandlers::__l2::<lambda_03d032e11e2bf2824f88c76f19bce8e1>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registereventhandlers-l2-lambda-a055fc0148af0ab9dc3c88d9a503c9ba"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registereventhandlers-l2-lambda-a055fc0148af0ab9dc3c88d9a503c9ba"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerEventHandlers::__l2::<lambda_a055fc0148af0ab9dc3c88d9a503c9ba>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerEventHandlers::__l2::<lambda_a055fc0148af0ab9dc3c88d9a503c9ba>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registereventhandlers-l5-lambda-ad859bdd7a509facab0bc14290af00b8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registereventhandlers-l5-lambda-ad859bdd7a509facab0bc14290af00b8"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerEventHandlers::__l5::<lambda_ad859bdd7a509facab0bc14290af00b8>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerEventHandlers::__l5::<lambda_ad859bdd7a509facab0bc14290af00b8>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registereventhandlers-l5-lambda-0a736d5bacb4799a4171f194f00e16e5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registereventhandlers-l5-lambda-0a736d5bacb4799a4171f194f00e16e5"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerEventHandlers::__l5::<lambda_0a736d5bacb4799a4171f194f00e16e5>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerEventHandlers::__l5::<lambda_0a736d5bacb4799a4171f194f00e16e5>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registereventhandlers-l5-lambda-423aa8538b7e6a879e79ac94b8908e05"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registereventhandlers-l5-lambda-423aa8538b7e6a879e79ac94b8908e05"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerEventHandlers::__l5::<lambda_423aa8538b7e6a879e79ac94b8908e05>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerEventHandlers::__l5::<lambda_423aa8538b7e6a879e79ac94b8908e05>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registereventhandlers-l2-lambda-32691a90d1b36a98278bd07c6302b122"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registereventhandlers-l2-lambda-32691a90d1b36a98278bd07c6302b122"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerEventHandlers::__l2::<lambda_32691a90d1b36a98278bd07c6302b122>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerEventHandlers::__l2::<lambda_32691a90d1b36a98278bd07c6302b122>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registereventhandlers-l2-lambda-fd86b907f8ac3730499ec26fc21d04e1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registereventhandlers-l2-lambda-fd86b907f8ac3730499ec26fc21d04e1"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerEventHandlers::__l2::<lambda_fd86b907f8ac3730499ec26fc21d04e1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerEventHandlers::__l2::<lambda_fd86b907f8ac3730499ec26fc21d04e1>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registerbindings-l2-lambda-9fdcb5459b12627cc618fff16a327770"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registerbindings-l2-lambda-9fdcb5459b12627cc618fff16a327770"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerBindings::__l2::<lambda_9fdcb5459b12627cc618fff16a327770>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerBindings::__l2::<lambda_9fdcb5459b12627cc618fff16a327770>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registerbindings-l2-lambda-ee6216ed259f203f73f369f52a7fbbcc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registerbindings-l2-lambda-ee6216ed259f203f73f369f52a7fbbcc"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerBindings::__l2::<lambda_ee6216ed259f203f73f369f52a7fbbcc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerBindings::__l2::<lambda_ee6216ed259f203f73f369f52a7fbbcc>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registerbindings-l2-lambda-b4bc70e6bc72bba158b072b609a3a118"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registerbindings-l2-lambda-b4bc70e6bc72bba158b072b609a3a118"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerBindings::__l2::<lambda_b4bc70e6bc72bba158b072b609a3a118>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerBindings::__l2::<lambda_b4bc70e6bc72bba158b072b609a3a118>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registerbindings-l2-lambda-89121a3083e353d2c662975b555e8c15"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registerbindings-l2-lambda-89121a3083e353d2c662975b555e8c15"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerBindings::__l2::<lambda_89121a3083e353d2c662975b555e8c15>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerBindings::__l2::<lambda_89121a3083e353d2c662975b555e8c15>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registerbindings-l2-lambda-6690d83ebe1652ca5dec16da007ac28d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registerbindings-l2-lambda-6690d83ebe1652ca5dec16da007ac28d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerBindings::__l2::<lambda_6690d83ebe1652ca5dec16da007ac28d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerBindings::__l2::<lambda_6690d83ebe1652ca5dec16da007ac28d>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registerbindings-l2-lambda-69d9433a19f7d10ccb8ee4b8b008d492"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registerbindings-l2-lambda-69d9433a19f7d10ccb8ee4b8b008d492"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerBindings::__l2::<lambda_69d9433a19f7d10ccb8ee4b8b008d492>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerBindings::__l2::<lambda_69d9433a19f7d10ccb8ee4b8b008d492>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"leavelevelprogressscreencontroller-registerprogressbindings-l2-lambda-7226532f83cfe7721df3c8fb6ebef7a2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leavelevelprogressscreencontroller-registerprogressbindings-l2-lambda-7226532f83cfe7721df3c8fb6ebef7a2"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeaveLevelProgressScreenController::_registerProgressBindings::__l2::<lambda_7226532f83cfe7721df3c8fb6ebef7a2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeaveLevelProgressScreenController::_registerProgressBindings::__l2::<lambda_7226532f83cfe7721df3c8fb6ebef7a2>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leavelevelprogressscreencontroller-registerprogressbindings-l2-lambda-e9b0f1bfeddb77c39a03f871c3ee1a21"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leavelevelprogressscreencontroller-registerprogressbindings-l2-lambda-e9b0f1bfeddb77c39a03f871c3ee1a21"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeaveLevelProgressScreenController::_registerProgressBindings::__l2::<lambda_e9b0f1bfeddb77c39a03f871c3ee1a21>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeaveLevelProgressScreenController::_registerProgressBindings::__l2::<lambda_e9b0f1bfeddb77c39a03f871c3ee1a21>\n{\n  LeaveLevelProgressScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"leavelevelprogressscreencontroller-registerprogressbindings-l2-lambda-3403c299cda5ec0a610db5d55a315bbd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leavelevelprogressscreencontroller-registerprogressbindings-l2-lambda-3403c299cda5ec0a610db5d55a315bbd"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeaveLevelProgressScreenController::_registerProgressBindings::__l2::<lambda_3403c299cda5ec0a610db5d55a315bbd>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeaveLevelProgressScreenController::_registerProgressBindings::__l2::<lambda_3403c299cda5ec0a610db5d55a315bbd>\n{\n  LeaveLevelProgressScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"leavelevelprogressscreencontroller-registerprogressbindings-l2-lambda-72a669de99520c8152738e82da58597f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leavelevelprogressscreencontroller-registerprogressbindings-l2-lambda-72a669de99520c8152738e82da58597f"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeaveLevelProgressScreenController::_registerProgressBindings::__l2::<lambda_72a669de99520c8152738e82da58597f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeaveLevelProgressScreenController::_registerProgressBindings::__l2::<lambda_72a669de99520c8152738e82da58597f>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leavelevelprogressscreencontroller-registerprogressbindings-l2-lambda-cbb3e692c34d9e8db877e750b675b2d2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leavelevelprogressscreencontroller-registerprogressbindings-l2-lambda-cbb3e692c34d9e8db877e750b675b2d2"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeaveLevelProgressScreenController::_registerProgressBindings::__l2::<lambda_cbb3e692c34d9e8db877e750b675b2d2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeaveLevelProgressScreenController::_registerProgressBindings::__l2::<lambda_cbb3e692c34d9e8db877e750b675b2d2>\n{\n  LeaveLevelProgressScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"leavelevelprogressscreencontroller-registerprogressbindings-l2-lambda-4780206e4404167244a0a482ba6bb3fc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leavelevelprogressscreencontroller-registerprogressbindings-l2-lambda-4780206e4404167244a0a482ba6bb3fc"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeaveLevelProgressScreenController::_registerProgressBindings::__l2::<lambda_4780206e4404167244a0a482ba6bb3fc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeaveLevelProgressScreenController::_registerProgressBindings::__l2::<lambda_4780206e4404167244a0a482ba6bb3fc>\n{\n  LeaveLevelProgressScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-warnrestrictedplatformmultiplayer-l2-lambda-1be6f90f58b2b81e229f2878164a7de3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-warnrestrictedplatformmultiplayer-l2-lambda-1be6f90f58b2b81e229f2878164a7de3"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_warnRestrictedPlatformMultiplayer::__l2::<lambda_1be6f90f58b2b81e229f2878164a7de3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_warnRestrictedPlatformMultiplayer::__l2::<lambda_1be6f90f58b2b81e229f2878164a7de3>\n{\n  std::weak_ptr<LateJoinPreGameScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-warnlockedskin-l2-lambda-19391f408f1629e0c8aeeeb8df94d075"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-warnlockedskin-l2-lambda-19391f408f1629e0c8aeeeb8df94d075"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_warnLockedSkin::__l2::<lambda_19391f408f1629e0c8aeeeb8df94d075>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_warnLockedSkin::__l2::<lambda_19391f408f1629e0c8aeeeb8df94d075>\n{\n  std::weak_ptr<LateJoinPreGameScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-promptforxblsignin-l5-lambda-df34f8976fe36144931864476a9d9544"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-promptforxblsignin-l5-lambda-df34f8976fe36144931864476a9d9544"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_promptForXBLSignIn::__l5::<lambda_df34f8976fe36144931864476a9d9544>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_promptForXBLSignIn::__l5::<lambda_df34f8976fe36144931864476a9d9544>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-checkpremiumaccessandshowupsell-l2-lambda-2760d6c2b2b29a79ae8f23ce45c3a731-l13-lambda-fba2d11ecdbb6d3e527c8ed17d1e13c9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-checkpremiumaccessandshowupsell-l2-lambda-2760d6c2b2b29a79ae8f23ce45c3a731-l13-lambda-fba2d11ecdbb6d3e527c8ed17d1e13c9"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_checkPremiumAccessAndShowUpsell::__l2::<lambda_2760d6c2b2b29a79ae8f23ce45c3a731>::()::__l13::<lambda_fba2d11ecdbb6d3e527c8ed17d1e13c9>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_checkPremiumAccessAndShowUpsell::__l2::<lambda_2760d6c2b2b29a79ae8f23ce45c3a731>::()::__l13::<lambda_fba2d11ecdbb6d3e527c8ed17d1e13c9>\n{\n  std::function<void __cdecl(bool)> callback;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-promptforplatformconnection-l5-lambda-11ededcc0ecdc0e554d02d3f0cad45f0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-promptforplatformconnection-l5-lambda-11ededcc0ecdc0e554d02d3f0cad45f0"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_promptForPlatformConnection::__l5::<lambda_11ededcc0ecdc0e554d02d3f0cad45f0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_promptForPlatformConnection::__l5::<lambda_11ededcc0ecdc0e554d02d3f0cad45f0>\n{\n  std::weak_ptr<LateJoinPreGameScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-handleuserreadytojoingame-l24-lambda-fa7ba01f28dd7b30e619b7a7a3868da8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-handleuserreadytojoingame-l24-lambda-fa7ba01f28dd7b30e619b7a7a3868da8"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_handleUserReadyToJoinGame::__l24::<lambda_fa7ba01f28dd7b30e619b7a7a3868da8>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_handleUserReadyToJoinGame::__l24::<lambda_fa7ba01f28dd7b30e619b7a7a3868da8>\n{\n  std::weak_ptr<LateJoinPreGameScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-handleuserreadytojoingame-l10-lambda-3c9f9995d67fce18f2bf3e46bc5b70cf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-handleuserreadytojoingame-l10-lambda-3c9f9995d67fce18f2bf3e46bc5b70cf"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_handleUserReadyToJoinGame::__l10::<lambda_3c9f9995d67fce18f2bf3e46bc5b70cf>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_handleUserReadyToJoinGame::__l10::<lambda_3c9f9995d67fce18f2bf3e46bc5b70cf>\n{\n  std::weak_ptr<LateJoinPreGameScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-handleuserreadytojoingame-l8-lambda-d8c4c23fdf45a0d6db35f16bc1d463da"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-handleuserreadytojoingame-l8-lambda-d8c4c23fdf45a0d6db35f16bc1d463da"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_handleUserReadyToJoinGame::__l8::<lambda_d8c4c23fdf45a0d6db35f16bc1d463da>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_handleUserReadyToJoinGame::__l8::<lambda_d8c4c23fdf45a0d6db35f16bc1d463da>\n{\n  std::weak_ptr<LateJoinPreGameScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-tickuserstate-l57-lambda-119962919777b57b4e564f544aadbe2d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-tickuserstate-l57-lambda-119962919777b57b4e564f544aadbe2d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_tickUserState::__l57::<lambda_119962919777b57b4e564f544aadbe2d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_tickUserState::__l57::<lambda_119962919777b57b4e564f544aadbe2d>\n{\n  std::weak_ptr<LateJoinPreGameScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-tickuserstate-l57-lambda-1a10213e3c09240800599327c4c141c2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-tickuserstate-l57-lambda-1a10213e3c09240800599327c4c141c2"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_tickUserState::__l57::<lambda_1a10213e3c09240800599327c4c141c2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_tickUserState::__l57::<lambda_1a10213e3c09240800599327c4c141c2>\n{\n  std::weak_ptr<LateJoinPreGameScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-tickuserstate-l50-lambda-5040f9d2caee16f9898a9a6c180a0744"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-tickuserstate-l50-lambda-5040f9d2caee16f9898a9a6c180a0744"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_tickUserState::__l50::<lambda_5040f9d2caee16f9898a9a6c180a0744>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_tickUserState::__l50::<lambda_5040f9d2caee16f9898a9a6c180a0744>\n{\n  std::weak_ptr<LateJoinPreGameScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-tickuserstate-l50-lambda-5040f9d2caee16f9898a9a6c180a0744-l5-lambda-945543d829378eec2113aad8e7fb2137"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-tickuserstate-l50-lambda-5040f9d2caee16f9898a9a6c180a0744-l5-lambda-945543d829378eec2113aad8e7fb2137"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_tickUserState::__l50::<lambda_5040f9d2caee16f9898a9a6c180a0744>::()::__l5::<lambda_945543d829378eec2113aad8e7fb2137>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_tickUserState::__l50::<lambda_5040f9d2caee16f9898a9a6c180a0744>::()::__l5::<lambda_945543d829378eec2113aad8e7fb2137>\n{\n  std::weak_ptr<LateJoinPreGameScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-tickuserstate-l50-lambda-5040f9d2caee16f9898a9a6c180a0744-l5-lambda-3fb86b5128e8375f8cefd08fd1a96017"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-tickuserstate-l50-lambda-5040f9d2caee16f9898a9a6c180a0744-l5-lambda-3fb86b5128e8375f8cefd08fd1a96017"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_tickUserState::__l50::<lambda_5040f9d2caee16f9898a9a6c180a0744>::()::__l5::<lambda_3fb86b5128e8375f8cefd08fd1a96017>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_tickUserState::__l50::<lambda_5040f9d2caee16f9898a9a6c180a0744>::()::__l5::<lambda_3fb86b5128e8375f8cefd08fd1a96017>\n{\n  std::weak_ptr<LateJoinPreGameScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-registerbindings-l2-lambda-5951322b3af1fcd4613a60e8db986b39"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-registerbindings-l2-lambda-5951322b3af1fcd4613a60e8db986b39"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_registerBindings::__l2::<lambda_5951322b3af1fcd4613a60e8db986b39>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_registerBindings::__l2::<lambda_5951322b3af1fcd4613a60e8db986b39>\n{\n  LateJoinPreGameScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-registerbindings-l2-lambda-ad0506e389c52452432310d87eea53d1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-registerbindings-l2-lambda-ad0506e389c52452432310d87eea53d1"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_registerBindings::__l2::<lambda_ad0506e389c52452432310d87eea53d1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_registerBindings::__l2::<lambda_ad0506e389c52452432310d87eea53d1>\n{\n  LateJoinPreGameScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"latejoinpregamescreencontroller-registereventhandlers-l2-lambda-d11fdb5ae823c967517c6f51d11fbe2d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#latejoinpregamescreencontroller-registereventhandlers-l2-lambda-d11fdb5ae823c967517c6f51d11fbe2d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LateJoinPreGameScreenController::_registerEventHandlers::__l2::<lambda_d11fdb5ae823c967517c6f51d11fbe2d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LateJoinPreGameScreenController::_registerEventHandlers::__l2::<lambda_d11fdb5ae823c967517c6f51d11fbe2d>\n{\n  LateJoinPreGameScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryitemscreencontroller-registersubcontrollers-l2-lambda-8ae0bfb7c7b89f1a91e50295c6c13497"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryitemscreencontroller-registersubcontrollers-l2-lambda-8ae0bfb7c7b89f1a91e50295c6c13497"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryItemScreenController::_registerSubControllers::__l2::<lambda_8ae0bfb7c7b89f1a91e50295c6c13497>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryItemScreenController::_registerSubControllers::__l2::<lambda_8ae0bfb7c7b89f1a91e50295c6c13497>\n{\n  LibraryItemScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcontainermanagermodel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcontainermanagermodel"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelContainerManagerModel")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelContainerManagerModel : ContainerManagerModel\n{\n  BlockPos mBlockPos;\n  ActorUniqueID mEntityUniqueID;\n  BlockActorType mBlockActorType;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcontainermanagermodel-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcontainermanagermodel-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelContainerManagerModel_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelContainerManagerModel_vtbl\n{\n  void (__fastcall *~IContainerManager)(IContainerManager *this);\n  ContainerID (__fastcall *getContainerId)(IContainerManager *this);\n  void (__fastcall *setContainerId)(IContainerManager *this, ContainerID);\n  ContainerType (__fastcall *getContainerType)(IContainerManager *this);\n  void (__fastcall *setContainerType)(IContainerManager *this, ContainerType);\n  void (__fastcall *serverInitItemStackIds)(IContainerManager *this);\n  std::vector<ItemStack> *(__fastcall *getItemCopies)(IContainerManager *this, std::vector<ItemStack> *result);\n  void (__fastcall *setSlot)(IContainerManager *this, int, const ItemStack *, bool);\n  const ItemStack *(__fastcall *getSlot)(IContainerManager *this, int);\n  void (__fastcall *setData)(IContainerManager *this, int, int);\n  void (__fastcall *broadcastChanges)(IContainerManager *this);\n  bool (__fastcall *validateContainer)(IContainerManager *this);\n  bool (__fastcall *isValid)(ContainerManagerModel *this, float);\n  ContainerScreenContext *(__fastcall *_postInit)(ContainerManagerModel *this, ContainerScreenContext *result);\n};\n\n")])])]),e("h3",{attrs:{id:"layoutvariables-invalidatedependencies-l5-lambda-e07b7deff4995bf8bd69bba837bd8c55"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutvariables-invalidatedependencies-l5-lambda-e07b7deff4995bf8bd69bba837bd8c55"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutVariables::invalidateDependencies::__l5::<lambda_e07b7deff4995bf8bd69bba837bd8c55>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutVariables::invalidateDependencies::__l5::<lambda_e07b7deff4995bf8bd69bba837bd8c55>\n{\n  LayoutVariables *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutvariables-invalidate-l5-lambda-b407bc94efcada76e00e0c86eee9e18a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutvariables-invalidate-l5-lambda-b407bc94efcada76e00e0c86eee9e18a"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutVariables::invalidate::__l5::<lambda_b407bc94efcada76e00e0c86eee9e18a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutVariables::invalidate::__l5::<lambda_b407bc94efcada76e00e0c86eee9e18a>\n{\n  LayoutVariables *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutvariable-addpostcomputationalneeds-l12-lambda-9681c2640052c89a49869a8acee0ff4e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutvariable-addpostcomputationalneeds-l12-lambda-9681c2640052c89a49869a8acee0ff4e"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutVariable::addPostComputationalNeeds::__l12::<lambda_9681c2640052c89a49869a8acee0ff4e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutVariable::addPostComputationalNeeds::__l12::<lambda_9681c2640052c89a49869a8acee0ff4e>\n{\n  LayoutVariable *const __this;\n  VariableRef var;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutvariable-addpostcomputationalneeds-l8-lambda-d5f578f60651d527eac6c074ba6fbc90"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutvariable-addpostcomputationalneeds-l8-lambda-d5f578f60651d527eac6c074ba6fbc90"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutVariable::addPostComputationalNeeds::__l8::<lambda_d5f578f60651d527eac6c074ba6fbc90>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutVariable::addPostComputationalNeeds::__l8::<lambda_d5f578f60651d527eac6c074ba6fbc90>\n{\n  LayoutVariable *const __this;\n  VariableRef var;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutvariable-overriderenderablelayoutrule-l2-lambda-fdcd53cd549c0efcb3113306a5f2b5ff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutvariable-overriderenderablelayoutrule-l2-lambda-fdcd53cd549c0efcb3113306a5f2b5ff"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutVariable::overrideRenderableLayoutRule::__l2::<lambda_fdcd53cd549c0efcb3113306a5f2b5ff>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutVariable::overrideRenderableLayoutRule::__l2::<lambda_fdcd53cd549c0efcb3113306a5f2b5ff>\n{\n  const LayoutVariableType *type;\n  float *overrideValue;\n  bool *hasOverride;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutrule-addstackpanelitemremaindersizeterms-l2-lambda-a7a1569b1f1accbf7feb1785883dbd6f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-addstackpanelitemremaindersizeterms-l2-lambda-a7a1569b1f1accbf7feb1785883dbd6f"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addStackPanelItemRemainderSizeTerms::__l2::<lambda_a7a1569b1f1accbf7feb1785883dbd6f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LayoutRule::addStackPanelItemRemainderSizeTerms::__l2::<lambda_a7a1569b1f1accbf7feb1785883dbd6f>\n{\n  UIControl *parent;\n  UIControl *control;\n  const LayoutVariableType sizeType;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutmanager-update-l2-lambda-14197656028e6e2a39273b46fbee8311"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutmanager-update-l2-lambda-14197656028e6e2a39273b46fbee8311"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutManager::_update::__l2::<lambda_14197656028e6e2a39273b46fbee8311>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutManager::_update::__l2::<lambda_14197656028e6e2a39273b46fbee8311>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"layoutrule-addfillgriddimensionterm-l2-lambda-5c4d56ce84a9d367db2a6bbb1aa4ff51"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-addfillgriddimensionterm-l2-lambda-5c4d56ce84a9d367db2a6bbb1aa4ff51"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addFillGridDimensionTerm::__l2::<lambda_5c4d56ce84a9d367db2a6bbb1aa4ff51>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(4)) LayoutRule::addFillGridDimensionTerm::__l2::<lambda_5c4d56ce84a9d367db2a6bbb1aa4ff51>\n{\n  ui::OrientationType rescalingType;\n  LayoutVariableType dimensionType;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutrule-addrescalinggriddimensionterm-l2-lambda-e2b9bd49291b78dd9523e89aa06e496e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-addrescalinggriddimensionterm-l2-lambda-e2b9bd49291b78dd9523e89aa06e496e"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addRescalingGridDimensionTerm::__l2::<lambda_e2b9bd49291b78dd9523e89aa06e496e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(4)) LayoutRule::addRescalingGridDimensionTerm::__l2::<lambda_e2b9bd49291b78dd9523e89aa06e496e>\n{\n  std::weak_ptr<UIControl> weakControl;\n  ui::OrientationType rescalingType;\n  LayoutVariableType dimensionType;\n};\n\n")])])]),e("h3",{attrs:{id:"layoutrule-addgriditemsizeterms-l2-lambda-6805c03e4c85f3b7ce1f7d54eaa2d6c1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-addgriditemsizeterms-l2-lambda-6805c03e4c85f3b7ce1f7d54eaa2d6c1"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addGridItemSizeTerms::__l2::<lambda_6805c03e4c85f3b7ce1f7d54eaa2d6c1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutRule::addGridItemSizeTerms::__l2::<lambda_6805c03e4c85f3b7ce1f7d54eaa2d6c1>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"layoutrule-addgriditempositionterms-l15-lambda-f27ec7ee38cb33031bbaa23767312977"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-addgriditempositionterms-l15-lambda-f27ec7ee38cb33031bbaa23767312977"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addGridItemPositionTerms::__l15::<lambda_f27ec7ee38cb33031bbaa23767312977>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutRule::addGridItemPositionTerms::__l15::<lambda_f27ec7ee38cb33031bbaa23767312977>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"layoutrule-addgriditempositionterms-l13-lambda-f954b369726128e1a26f9745705bfd06"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-addgriditempositionterms-l13-lambda-f954b369726128e1a26f9745705bfd06"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addGridItemPositionTerms::__l13::<lambda_f954b369726128e1a26f9745705bfd06>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutRule::addGridItemPositionTerms::__l13::<lambda_f954b369726128e1a26f9745705bfd06>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"layoutrule-addaxisoffsetterms-l33-lambda-50705c4513fadd86996a53c169f1338a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-addaxisoffsetterms-l33-lambda-50705c4513fadd86996a53c169f1338a"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addAxisOffsetTerms::__l33::<lambda_50705c4513fadd86996a53c169f1338a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutRule::addAxisOffsetTerms::__l33::<lambda_50705c4513fadd86996a53c169f1338a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"layoutrule-addaxisoffsetterms-l28-lambda-91dac979fa969834c8a6db500143ca61"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layoutrule-addaxisoffsetterms-l28-lambda-91dac979fa969834c8a6db500143ca61"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayoutRule::addAxisOffsetTerms::__l28::<lambda_91dac979fa969834c8a6db500143ca61>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayoutRule::addAxisOffsetTerms::__l28::<lambda_91dac979fa969834c8a6db500143ca61>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leaditem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leaditem"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeadItem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeadItem : Item\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leashfenceknotactor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leashfenceknotactor"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeashFenceKnotActor")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeashFenceKnotActor : HangingActor\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leashfenceknotactor-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leashfenceknotactor-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeashFenceKnotActor_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LeashFenceKnotActor_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *setDir)(HangingActor *this, int);\n  int (__fastcall *getWidth)(HangingActor *this);\n  int (__fastcall *getHeight)(HangingActor *this);\n  void (__fastcall *dropItem)(HangingActor *this);\n  bool (__fastcall *placeHangingEntity)(HangingActor *this, BlockSource *, int);\n  bool (__fastcall *wouldSurvive)(HangingActor *this, BlockSource *);\n};\n\n")])])]),e("h3",{attrs:{id:"legacyskinimporter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyskinimporter"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacySkinImporter")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacySkinImporter\n{\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-convertworldprocessrequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-convertworldprocessrequest"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::ConvertWorldProcessRequest")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Legacy::ConvertWorldProcessRequest : Legacy::WorldProcessRequest\n{\n  const Core::PathBuffer<std::string > mOutputPath;\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-convertworldprocessrequest-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-convertworldprocessrequest-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::ConvertWorldProcessRequest_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Legacy::ConvertWorldProcessRequest_vtbl\n{\n  void (__fastcall *~WorldProcessRequest)(Legacy::WorldProcessRequest *this);\n  Legacy::WorldProcessingType (__fastcall *getProcessingType)(Legacy::WorldProcessRequest *this);\n  Core::PathBuffer<std::string > *(__fastcall *getOutputPath)(Legacy::WorldProcessRequest *this, Core::PathBuffer<std::string > *result);\n};\n\n")])])]),e("h3",{attrs:{id:"legacyworldconversionmanager-tryacquiremissingdlc-l13-lambda-c59ca1f0521e57b0b8cb56bd175b7c0d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyworldconversionmanager-tryacquiremissingdlc-l13-lambda-c59ca1f0521e57b0b8cb56bd175b7c0d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyWorldConversionManager::tryAcquireMissingDlc::__l13::<lambda_c59ca1f0521e57b0b8cb56bd175b7c0d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyWorldConversionManager::tryAcquireMissingDlc::__l13::<lambda_c59ca1f0521e57b0b8cb56bd175b7c0d>\n{\n  std::function<void __cdecl(bool)> downloadCompleteCallback;\n};\n\n")])])]),e("h3",{attrs:{id:"loginscreenmodel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loginscreenmodel"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoginScreenModel")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(2)) LoginScreenModel : MinecraftScreenModel\n{\n  int _offline_step;\n  bool misLocalVerified;\n  bool mShowOfflinePanel;\n  bool mShowBlockPanel;\n};\n\n")])])]),e("h3",{attrs:{id:"loginscreenmodel-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loginscreenmodel-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoginScreenModel_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LoginScreenModel_vtbl\n{\n  void (__fastcall *~IDlcBatcher)(IDlcBatcher *this);\n  IDlcBatchModel *(__fastcall *getDlcBatchModel)(IDlcBatcher *this, const std::vector<PackIdVersion> *);\n  IDlcBatchModel *(__fastcall *getDlcBatchModel)(IDlcBatcher *this, const std::vector<std::string> *);\n  IDlcBatchModel *(__fastcall *getDlcBatchModel)(IDlcBatcher *this, const std::vector<DlcId> *);\n};\n\n")])])]),e("h3",{attrs:{id:"loginscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loginscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoginScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LoginScreenController : MinecraftScreenController\n{\n  std::shared_ptr<LoginScreenModel> mModel;\n  std::string strCmd;\n};\n\n")])])]),e("h3",{attrs:{id:"loginscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loginscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LoginScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LoginScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"logoscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logoscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("LogoScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LogoScreenController : MinecraftScreenController\n{\n  int mTickCount;\n};\n\n")])])]),e("h3",{attrs:{id:"logoscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#logoscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LogoScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LogoScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-mockworldconverter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-mockworldconverter"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::MockWorldConverter")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Legacy::MockWorldConverter : Legacy::WorldConverter\n{\n  std::vector<std::shared_future<void>> mBlobRequests;\n  std::unique_ptr<std::promise<void>> mAddPromise;\n  std::unique_ptr<std::promise<Legacy::WorldConversionReport>> mCompletionPromise;\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-mockworldconverter-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-mockworldconverter-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::MockWorldConverter_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Legacy::MockWorldConverter_vtbl\n{\n  void (__fastcall *~WorldConverter)(Legacy::WorldConverter *this);\n  std::shared_future<void> *(__fastcall *addBlob)(Legacy::WorldConverter *this, std::shared_future<void> *result, const std::string *, Legacy::WorldConverterBlobType, std::vector<unsigned char> *);\n  std::future<Legacy::WorldConversionReport> *(__fastcall *complete)(Legacy::WorldConverter *this, std::future<Legacy::WorldConversionReport> *result);\n  void (__fastcall *setEstimatedBlobCount)(Legacy::WorldConverter *this, unsigned __int64);\n  void (__fastcall *setBlobNames)(Legacy::WorldConverter *this, const std::vector<std::string> *);\n};\n\n")])])]),e("h3",{attrs:{id:"legacyoptionsconverterinternal-controlconversionrule"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyoptionsconverterinternal-controlconversionrule"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyOptionsConverterInternal::ControlConversionRule")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct LegacyOptionsConverterInternal::ControlConversionRule\n{\n  LegacyOption mSourceOption;\n  Remapping::ActionEnum mTargetOption;\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-worldimporternull"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldimporternull"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldImporterNull")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Legacy::WorldImporterNull : Legacy::WorldImporter\n{\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-worldimporternull-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldimporternull-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldImporterNull_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Legacy::WorldImporterNull_vtbl\n{\n  void (__fastcall *~WorldImporter)(Legacy::WorldImporter *this);\n  void (__fastcall *deleteWorld)(Legacy::WorldImporter *this, std::shared_ptr<Social::User>, const std::string *, std::function<void __cdecl(void)>);\n  void (__fastcall *_doRetrieve)(Legacy::WorldImporter *this, std::shared_ptr<Social::User>, std::shared_ptr<CallbackTokenContext<std::function<void __cdecl(enum Legacy::RetrieveStatus)> > >);\n  void (__fastcall *_doImport)(Legacy::WorldImporter *this, std::shared_ptr<Social::User>, const LegacyWorldInfo *, const Core::Path *, std::shared_ptr<CallbackTokenContext<std::function<void __cdecl(enum Legacy::ImportStatus,float,std::shared_ptr<ImportResult>)> > >);\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-mockworldconverter-addblob-l2-lambda-d798fe43560fed98984479fd716ec9a4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-mockworldconverter-addblob-l2-lambda-d798fe43560fed98984479fd716ec9a4"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::MockWorldConverter::addBlob::__l2::<lambda_d798fe43560fed98984479fd716ec9a4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Legacy::MockWorldConverter::addBlob::__l2::<lambda_d798fe43560fed98984479fd716ec9a4>\n{\n  Legacy::MockWorldConverter *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-mockworldconverter-complete-l2-lambda-6225b4d1cc004d91aa6f5d2ac62a66a2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-mockworldconverter-complete-l2-lambda-6225b4d1cc004d91aa6f5d2ac62a66a2"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::MockWorldConverter::complete::__l2::<lambda_6225b4d1cc004d91aa6f5d2ac62a66a2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Legacy::MockWorldConverter::complete::__l2::<lambda_6225b4d1cc004d91aa6f5d2ac62a66a2>\n{\n  Legacy::MockWorldConverter *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-worldimporternull-doretrieve-l2-lambda-5fd84d04f4d9e18dde859c83a7aeea8c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldimporternull-doretrieve-l2-lambda-5fd84d04f4d9e18dde859c83a7aeea8c"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldImporterNull::_doRetrieve::__l2::<lambda_5fd84d04f4d9e18dde859c83a7aeea8c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Legacy::WorldImporterNull::_doRetrieve::__l2::<lambda_5fd84d04f4d9e18dde859c83a7aeea8c>\n{\n  std::shared_ptr<CallbackTokenContext<std::function<void __cdecl(enum Legacy::RetrieveStatus)> > > context;\n};\n\n")])])]),e("h3",{attrs:{id:"legacy-worldimporter-importworld-l2-lambda-366519f82ad483b9658c695262c21046-l2-lambda-029db122c2aba31f880589b4e73532c2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacy-worldimporter-importworld-l2-lambda-366519f82ad483b9658c695262c21046-l2-lambda-029db122c2aba31f880589b4e73532c2"}},[t._v("#")]),t._v(" "),e("code",[t._v("Legacy::WorldImporter::importWorld::__l2::<lambda_366519f82ad483b9658c695262c21046>::()::__l2::<lambda_029db122c2aba31f880589b4e73532c2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) Legacy::WorldImporter::importWorld::__l2::<lambda_366519f82ad483b9658c695262c21046>::()::__l2::<lambda_029db122c2aba31f880589b4e73532c2>\n{\n  std::shared_ptr<CallbackTokenContext<std::function<void __cdecl(enum Legacy::ImportStatus,float,std::shared_ptr<ImportResult>)> > > context;\n  float percentDone;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyoptionsconverterinternal-negatedboolsetter-l2-lambda-b4747c6076915628af900f4b75083eb0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyoptionsconverterinternal-negatedboolsetter-l2-lambda-b4747c6076915628af900f4b75083eb0"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyOptionsConverterInternal::_negatedBoolSetter::__l2::<lambda_b4747c6076915628af900f4b75083eb0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyOptionsConverterInternal::_negatedBoolSetter::__l2::<lambda_b4747c6076915628af900f4b75083eb0>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"legacyoptionsconverterinternal-percentagefloatsetter-l2-lambda-e887955fbe7612448a5f2a759da3961f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyoptionsconverterinternal-percentagefloatsetter-l2-lambda-e887955fbe7612448a5f2a759da3961f"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyOptionsConverterInternal::_percentageFloatSetter::__l2::<lambda_e887955fbe7612448a5f2a759da3961f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyOptionsConverterInternal::_percentageFloatSetter::__l2::<lambda_e887955fbe7612448a5f2a759da3961f>\n{\n  bool requiresInputMode;\n  const float min;\n  const float max;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyoptionsconverterinternal-ingamesensitivitysetter-l2-lambda-72df878e104f4ab4b8d6fe67024baa56"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyoptionsconverterinternal-ingamesensitivitysetter-l2-lambda-72df878e104f4ab4b8d6fe67024baa56"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyOptionsConverterInternal::_inGameSensitivitySetter::__l2::<lambda_72df878e104f4ab4b8d6fe67024baa56>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyOptionsConverterInternal::_inGameSensitivitySetter::__l2::<lambda_72df878e104f4ab4b8d6fe67024baa56>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"legacyoptionsconverterinternal-makesplitscreenrecipe-l2-lambda-5b304ff6f5a9c619b90fe260b81fee93"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyoptionsconverterinternal-makesplitscreenrecipe-l2-lambda-5b304ff6f5a9c619b90fe260b81fee93"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyOptionsConverterInternal::_makeSplitScreenRecipe::__l2::<lambda_5b304ff6f5a9c619b90fe260b81fee93>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyOptionsConverterInternal::_makeSplitScreenRecipe::__l2::<lambda_5b304ff6f5a9c619b90fe260b81fee93>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"legacyoptionsconverterinternal-genericoptionsetter-l2-lambda-a3c38dbff1e05b52f7304b834d586c65"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyoptionsconverterinternal-genericoptionsetter-l2-lambda-a3c38dbff1e05b52f7304b834d586c65"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyOptionsConverterInternal::_genericOptionSetter::__l2::<lambda_a3c38dbff1e05b52f7304b834d586c65>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyOptionsConverterInternal::_genericOptionSetter::__l2::<lambda_a3c38dbff1e05b52f7304b834d586c65>\n{\n  bool isInputModeType;\n};\n\n")])])]),e("h3",{attrs:{id:"libraryrepository-setbasecategories-l5-lambda-2066f59cd6c06baa6bbdf9824299fff4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryrepository-setbasecategories-l5-lambda-2066f59cd6c06baa6bbdf9824299fff4"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryRepository::_setBaseCategories::__l5::<lambda_2066f59cd6c06baa6bbdf9824299fff4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryRepository::_setBaseCategories::__l5::<lambda_2066f59cd6c06baa6bbdf9824299fff4>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"libraryrepository-setbasecategories-l5-lambda-787f1a273d7eb8bfb0c708bd7f6fefb2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryrepository-setbasecategories-l5-lambda-787f1a273d7eb8bfb0c708bd7f6fefb2"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryRepository::_setBaseCategories::__l5::<lambda_787f1a273d7eb8bfb0c708bd7f6fefb2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryRepository::_setBaseCategories::__l5::<lambda_787f1a273d7eb8bfb0c708bd7f6fefb2>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"librarydeeplinklistener-poptopredundantscreensforlink-l2-lambda-92e18333a64979893b240d0e28eda47b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarydeeplinklistener-poptopredundantscreensforlink-l2-lambda-92e18333a64979893b240d0e28eda47b"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryDeeplinkListener::_popTopRedundantScreensForLink::__l2::<lambda_92e18333a64979893b240d0e28eda47b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryDeeplinkListener::_popTopRedundantScreensForLink::__l2::<lambda_92e18333a64979893b240d0e28eda47b>\n{\n  int *popCount;\n  const LibraryDeeplink *link;\n};\n\n")])])]),e("h3",{attrs:{id:"librarydeeplinklistener-navigatetolink-l2-lambda-c9dd85ac71e71bb44e446e8aa86a665c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarydeeplinklistener-navigatetolink-l2-lambda-c9dd85ac71e71bb44e446e8aa86a665c"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryDeeplinkListener::_navigateToLink::__l2::<lambda_c9dd85ac71e71bb44e446e8aa86a665c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryDeeplinkListener::_navigateToLink::__l2::<lambda_c9dd85ac71e71bb44e446e8aa86a665c>\n{\n  std::shared_ptr<SearchResult> searchResult;\n};\n\n")])])]),e("h3",{attrs:{id:"librarydeeplinklistener-tick-l10-lambda-7c8013903e6c620252792920307d3a88"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarydeeplinklistener-tick-l10-lambda-7c8013903e6c620252792920307d3a88"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryDeeplinkListener::tick::__l10::<lambda_7c8013903e6c620252792920307d3a88>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryDeeplinkListener::tick::__l10::<lambda_7c8013903e6c620252792920307d3a88>\n{\n  LibraryDeeplinkListener *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelstoragewritebatch-perfcontext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelstoragewritebatch-perfcontext"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelStorageWriteBatch::PerfContext")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelStorageWriteBatch::PerfContext\n{\n  unsigned __int64 mOperation;\n  unsigned __int64 mSize;\n  std::string mKey;\n  const char *mReason;\n};\n\n")])])]),e("h3",{attrs:{id:"labtablereactioncomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#labtablereactioncomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("LabTableReactionComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LabTableReactionComponent\n{\n  LabTableReactionComponent_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"labtablereaction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#labtablereaction"}},[t._v("#")]),t._v(" "),e("code",[t._v("LabTableReaction")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LabTableReaction\n{\n  LabTableReaction_vtbl *__vftable /*VFT*/;\n  int mLifetime;\n  int mMaxLifetime;\n  int mStartDelay;\n  std::unique_ptr<ItemStack> mResultItem;\n  std::unique_ptr<BlockPos> mPos;\n  std::unique_ptr<Random> mRandom;\n  std::vector<std::unique_ptr<LabTableReactionComponent>> mComponents;\n  LabTableReactionType mType;\n  bool mIsClientSide;\n};\n\n")])])]),e("h3",{attrs:{id:"labtablereaction-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#labtablereaction-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LabTableReaction_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LabTableReaction_vtbl\n{\n  void (__fastcall *~LabTableReaction)(LabTableReaction *this);\n};\n\n")])])]),e("h3",{attrs:{id:"labtablereactioncomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#labtablereactioncomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LabTableReactionComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LabTableReactionComponent_vtbl\n{\n  void (__fastcall *~LabTableReactionComponent)(LabTableReactionComponent *this);\n  void (__fastcall *_onStart)(LabTableReactionComponent *this, LabTableReaction *, BlockSource *);\n  void (__fastcall *_onTick)(LabTableReactionComponent *this, LabTableReaction *, BlockSource *);\n  void (__fastcall *_onEnd)(LabTableReactionComponent *this, LabTableReaction *, BlockSource *);\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkpackethandler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkpackethandler"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkPacketHandler")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelChunkPacketHandler\n{\n  std::unique_ptr<LevelChunk> mChunk;\n  std::shared_ptr<ClientBlobCache::Cache> mCache;\n  std::shared_ptr<LevelChunkPacket> mPacket;\n  std::shared_ptr<MPMCQueue<unsigned __int64> > mCacheMissesSender;\n  std::shared_ptr<MPMCQueue<unsigned __int64> > mCacheHitsSender;\n  std::queue<std::vector<std::function<TaskResult __cdecl(void)>>> mSteps;\n  std::function<void __cdecl(void)> mMainThreadCallback;\n  std::string mCacheBuffer;\n  unsigned __int64 mReused;\n  const unsigned __int64 mSequenceId;\n  unsigned __int64 mDeserializeStepID;\n  ReadOnlyBinaryStream mInputStream;\n  bool mCacheEnabled;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l5-lambda-50d3db24a5bec797058b2c78ad99f47c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l5-lambda-50d3db24a5bec797058b2c78ad99f47c"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l5::<lambda_50d3db24a5bec797058b2c78ad99f47c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::handle::__l5::<lambda_50d3db24a5bec797058b2c78ad99f47c>\n{\n  std::shared_ptr<ClientCacheMissResponsePacket> packet;\n  std::weak_ptr<ClientBlobCache::Cache> weakCache;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l5-lambda-e5fb10c013ff0013c5f4f6e683e20f5e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l5-lambda-e5fb10c013ff0013c5f4f6e683e20f5e"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l5::<lambda_e5fb10c013ff0013c5f4f6e683e20f5e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::handle::__l5::<lambda_e5fb10c013ff0013c5f4f6e683e20f5e>\n{\n  std::shared_ptr<LevelChunkPacketHandler> handler;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l8-lambda-4527d45382e962cb3d399b4de6ee053d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l8-lambda-4527d45382e962cb3d399b4de6ee053d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l8::<lambda_4527d45382e962cb3d399b4de6ee053d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::handle::__l8::<lambda_4527d45382e962cb3d399b4de6ee053d>\n{\n  LegacyClientNetworkHandler *const __this;\n  GameType *oldGameType;\n  const SetDefaultGameTypePacket *packet;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l30-lambda-5bbdb8ecc7b00ebae4d53327f056c63c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l30-lambda-5bbdb8ecc7b00ebae4d53327f056c63c"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l30::<lambda_5bbdb8ecc7b00ebae4d53327f056c63c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::handle::__l30::<lambda_5bbdb8ecc7b00ebae4d53327f056c63c>\n{\n  const AnimatePacket *packet;\n  Actor **actor;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l8-lambda-18a1f2295913ecc0708303e695387a34"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l8-lambda-18a1f2295913ecc0708303e695387a34"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l8::<lambda_18a1f2295913ecc0708303e695387a34>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::handle::__l8::<lambda_18a1f2295913ecc0708303e695387a34>\n{\n  ActorUniqueID actorID;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l2-lambda-60c978a53a5fe45c288483d97f872bc7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l2-lambda-60c978a53a5fe45c288483d97f872bc7"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l2::<lambda_60c978a53a5fe45c288483d97f872bc7>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::handle::__l2::<lambda_60c978a53a5fe45c288483d97f872bc7>\n{\n  std::shared_ptr<BlockActorDataPacket> packet;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handleupdateblockpacketcommon-l2-lambda-0ac3299732fa6b5afee2093497510e87"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handleupdateblockpacketcommon-l2-lambda-0ac3299732fa6b5afee2093497510e87"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::_handleUpdateBlockPacketCommon::__l2::<lambda_0ac3299732fa6b5afee2093497510e87>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::_handleUpdateBlockPacketCommon::__l2::<lambda_0ac3299732fa6b5afee2093497510e87>\n{\n  LegacyClientNetworkHandler *const __this;\n  std::shared_ptr<UpdateBlockPacket> packet;\n  const ActorBlockSyncMessage *syncMsg;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l16-lambda-3ce999330be42e727157d222c2549fe1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l16-lambda-3ce999330be42e727157d222c2549fe1"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l16::<lambda_3ce999330be42e727157d222c2549fe1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::handle::__l16::<lambda_3ce999330be42e727157d222c2549fe1>\n{\n  std::unique_ptr<Actor> *actor;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l13-lambda-6bdbd85477b87c3c976119e6dc58a2c6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l13-lambda-6bdbd85477b87c3c976119e6dc58a2c6"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l13::<lambda_6bdbd85477b87c3c976119e6dc58a2c6>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::handle::__l13::<lambda_6bdbd85477b87c3c976119e6dc58a2c6>\n{\n  Actor **actorPtr;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l79-lambda-01023bcc68158513be1b945f962111f7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l79-lambda-01023bcc68158513be1b945f962111f7"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l79::<lambda_01023bcc68158513be1b945f962111f7>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::handle::__l79::<lambda_01023bcc68158513be1b945f962111f7>\n{\n  Player **newPlayer;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l73-lambda-2d31bee4ec57d2ac4f70c1fb047a841e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l73-lambda-2d31bee4ec57d2ac4f70c1fb047a841e"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l73::<lambda_2d31bee4ec57d2ac4f70c1fb047a841e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::handle::__l73::<lambda_2d31bee4ec57d2ac4f70c1fb047a841e>\n{\n  Player **newPlayer;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l80-lambda-bd67e2cdad03d9a8e3ff6597cb9546e0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l80-lambda-bd67e2cdad03d9a8e3ff6597cb9546e0"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l80::<lambda_bd67e2cdad03d9a8e3ff6597cb9546e0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::handle::__l80::<lambda_bd67e2cdad03d9a8e3ff6597cb9546e0>\n{\n  Actor *e;\n  const AddActorPacket *packet;\n};\n\n")])])]),e("h3",{attrs:{id:"legacyclientnetworkhandler-handle-l14-lambda-c81464e57e27a752f526241c77eb712d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacyclientnetworkhandler-handle-l14-lambda-c81464e57e27a752f526241c77eb712d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyClientNetworkHandler::handle::__l14::<lambda_c81464e57e27a752f526241c77eb712d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyClientNetworkHandler::handle::__l14::<lambda_c81464e57e27a752f526241c77eb712d>\n{\n  Actor *e;\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkpackethandler-ctor-l2-lambda-01b139c4196b261d5ccde8d6a94cde0b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkpackethandler-ctor-l2-lambda-01b139c4196b261d5ccde8d6a94cde0b"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkPacketHandler::{ctor}::__l2::<lambda_01b139c4196b261d5ccde8d6a94cde0b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelChunkPacketHandler::{ctor}::__l2::<lambda_01b139c4196b261d5ccde8d6a94cde0b>\n{\n  LevelChunkPacketHandler *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkpackethandler-ctor-l5-lambda-745e17290d2e5fd570c2fbe56c36a69c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkpackethandler-ctor-l5-lambda-745e17290d2e5fd570c2fbe56c36a69c"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkPacketHandler::{ctor}::__l5::<lambda_745e17290d2e5fd570c2fbe56c36a69c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelChunkPacketHandler::{ctor}::__l5::<lambda_745e17290d2e5fd570c2fbe56c36a69c>\n{\n  LevelChunkPacketHandler *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkpackethandler-ctor-l25-lambda-676b75949d35579bbaf125e1c21542f7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkpackethandler-ctor-l25-lambda-676b75949d35579bbaf125e1c21542f7"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkPacketHandler::{ctor}::__l25::<lambda_676b75949d35579bbaf125e1c21542f7>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelChunkPacketHandler::{ctor}::__l25::<lambda_676b75949d35579bbaf125e1c21542f7>\n{\n  LevelChunkPacketHandler *const __this;\n  unsigned __int64 i;\n};\n\n")])])]),e("h3",{attrs:{id:"levelchunkpackethandler-ctor-l2-lambda-8b9953b041846740f45b6457b5ad7f05"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelchunkpackethandler-ctor-l2-lambda-8b9953b041846740f45b6457b5ad7f05"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelChunkPacketHandler::{ctor}::__l2::<lambda_8b9953b041846740f45b6457b5ad7f05>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelChunkPacketHandler::{ctor}::__l2::<lambda_8b9953b041846740f45b6457b5ad7f05>\n{\n  LevelChunkPacketHandler *const __this;\n  Dimension *dimension;\n};\n\n")])])]),e("h3",{attrs:{id:"liquidblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#liquidblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("LiquidBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LiquidBlock : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"liquidblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#liquidblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LiquidBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LiquidBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"lavaparticle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lavaparticle"}},[t._v("#")]),t._v(" "),e("code",[t._v("LavaParticle")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LavaParticle : Particle\n{\n  float oSize;\n};\n\n")])])]),e("h3",{attrs:{id:"lavaparticle-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lavaparticle-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LavaParticle_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LavaParticle_vtbl\n{\n  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);\n  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);\n  void (__fastcall *~Particle)(Particle *this);\n  void (__fastcall *normalTick)(Particle *this);\n  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);\n  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);\n  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);\n  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);\n  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);\n};\n\n")])])]),e("h3",{attrs:{id:"levelsoundeventmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelsoundeventmap"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelSoundEventMap")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelSoundEventMap\n{\n};\n\n")])])]),e("h3",{attrs:{id:"loadskinimage-l20-lambda-30762dfb3a744678726a5d657f2e6492"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loadskinimage-l20-lambda-30762dfb3a744678726a5d657f2e6492"}},[t._v("#")]),t._v(" "),e("code",[t._v("loadSkinImage::__l20::<lambda_30762dfb3a744678726a5d657f2e6492>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj loadSkinImage::__l20::<lambda_30762dfb3a744678726a5d657f2e6492>\n{\n  std::weak_ptr<FileWatcherUpdate> fileWatcherUpdate;\n};\n\n")])])]),e("h3",{attrs:{id:"localplayer-changedimension-l2-lambda-a055da54da88576cc7150c596c08db5b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localplayer-changedimension-l2-lambda-a055da54da88576cc7150c596c08db5b"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalPlayer::changeDimension::__l2::<lambda_a055da54da88576cc7150c596c08db5b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalPlayer::changeDimension::__l2::<lambda_a055da54da88576cc7150c596c08db5b>\n{\n  LocalPlayer *const __this;\n  AutomaticID<Dimension,int> *fromId;\n  AutomaticID<Dimension,int> *toId;\n  const ChangeDimensionPacket *packet;\n};\n\n")])])]),e("h3",{attrs:{id:"localplayer-sendclientauthplayeractions-l2-lambda-6ebef926ab90091319f9af2eb20602f6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localplayer-sendclientauthplayeractions-l2-lambda-6ebef926ab90091319f9af2eb20602f6"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalPlayer::_sendClientAuthPlayerActions::__l2::<lambda_6ebef926ab90091319f9af2eb20602f6>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalPlayer::_sendClientAuthPlayerActions::__l2::<lambda_6ebef926ab90091319f9af2eb20602f6>\n{\n  PacketSender *packetSender;\n};\n\n")])])]),e("h3",{attrs:{id:"localplayer-normaltick-l43-lambda-1c7c59adf65d7bd18b6fc05fa9067a13"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localplayer-normaltick-l43-lambda-1c7c59adf65d7bd18b6fc05fa9067a13"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalPlayer::normalTick::__l43::<lambda_1c7c59adf65d7bd18b6fc05fa9067a13>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalPlayer::normalTick::__l43::<lambda_1c7c59adf65d7bd18b6fc05fa9067a13>\n{\n  const ItemStack *offhandItem;\n};\n\n")])])]),e("h3",{attrs:{id:"localplayer-normaltick-l37-lambda-412280d90323b2c3367ab255026d5d95"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localplayer-normaltick-l37-lambda-412280d90323b2c3367ab255026d5d95"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalPlayer::normalTick::__l37::<lambda_412280d90323b2c3367ab255026d5d95>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalPlayer::normalTick::__l37::<lambda_412280d90323b2c3367ab255026d5d95>\n{\n  const ItemStack *selectedItem;\n};\n\n")])])]),e("h3",{attrs:{id:"localplayer-normaltick-l37-lambda-f770b27f9a6723b8f794240b0e693940"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localplayer-normaltick-l37-lambda-f770b27f9a6723b8f794240b0e693940"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalPlayer::normalTick::__l37::<lambda_f770b27f9a6723b8f794240b0e693940>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalPlayer::normalTick::__l37::<lambda_f770b27f9a6723b8f794240b0e693940>\n{\n  const ItemStack *selectedItem;\n};\n\n")])])]),e("h3",{attrs:{id:"lightningboltrenderer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lightningboltrenderer"}},[t._v("#")]),t._v(" "),e("code",[t._v("LightningBoltRenderer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LightningBoltRenderer : ActorRenderer\n{\n  mce::MaterialPtr mLightningMat;\n};\n\n")])])]),e("h3",{attrs:{id:"lightningboltrenderer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lightningboltrenderer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LightningBoltRenderer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LightningBoltRenderer_vtbl\n{\n  void (__fastcall *~ActorShaderManager)(ActorShaderManager *this);\n  mce::Color *(__fastcall *_getOverlayColor)(ActorShaderManager *this, mce::Color *result, Actor *, float);\n  void (__fastcall *render)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderDebug)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderEffects)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderTrading)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *, float);\n  void (__fastcall *renderFlame)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderLeash)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderWaterHole)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *addAdditionalRenderingIfNeeded)(ActorRenderer *this, mce::TextureGroup *);\n  void (__fastcall *renderWeaponEffect)(ActorRenderer *this, BaseActorRenderContext *, Actor *);\n  void (__fastcall *renderBindEffects)(ActorRenderer *this, BaseActorRenderContext *, Actor *);\n  AABB *(__fastcall *getRenderBounds)(ActorRenderer *this, AABB *result, const Actor *);\n  Vec3 *(__fastcall *getLeashOffset)(ActorRenderer *this, Vec3 *result, Actor *, float, float, float, bool, bool);\n  void (__fastcall *setIsOnScreen)(ActorRenderer *this, Actor *, const bool, float);\n  bool (__fastcall *shouldUpdateBonesAndEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);\n  bool (__fastcall *shouldUpdateEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);\n  void (__fastcall *_bindModelEffectRender)(ActorRenderer *this, BaseActorRenderContext *, Mob *);\n};\n\n")])])]),e("h3",{attrs:{id:"lightningbolt"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lightningbolt"}},[t._v("#")]),t._v(" "),e("code",[t._v("LightningBolt")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(4)) LightningBolt : Actor\n{\n  unsigned int mSeed;\n  int mLife;\n  int mFlashes;\n  bool mCanHurt;\n  bool mHasTriedToHurt;\n};\n\n")])])]),e("h3",{attrs:{id:"lightningbolt-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lightningbolt-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LightningBolt_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LightningBolt_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  bool (__fastcall *shouldAlwaysRender)(LightningBolt *this);\n};\n\n")])])]),e("h3",{attrs:{id:"leafblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leafblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeafBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeafBlock : BlockLegacy\n{\n  bool mHasTransparentLeaves;\n  bool mHasFastAlphaTest;\n  WeakPtr<BlockLegacy> mSapling;\n};\n\n")])])]),e("h3",{attrs:{id:"leafblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leafblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeafBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LeafBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getExtraResourceItem)(LeafBlock *this, ItemInstance *result, const Block *);\n};\n\n")])])]),e("h3",{attrs:{id:"lecternrenderer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lecternrenderer"}},[t._v("#")]),t._v(" "),e("code",[t._v("LecternRenderer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LecternRenderer : BlockActorRenderer\n{\n  mce::TexturePtr mBookTex;\n  EnchantingBookModel mBook;\n};\n\n")])])]),e("h3",{attrs:{id:"lecternrenderer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lecternrenderer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LecternRenderer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LecternRenderer_vtbl\n{\n  void (__fastcall *~ActorShaderManager)(ActorShaderManager *this);\n  mce::Color *(__fastcall *_getOverlayColor)(ActorShaderManager *this, mce::Color *result, Actor *, float);\n  void (__fastcall *render)(BlockActorRenderer *this, BaseActorRenderContext *, BlockActorRenderData *);\n  void (__fastcall *renderAlpha)(BlockActorRenderer *this, BaseActorRenderContext *, BlockActorRenderData *);\n  std::vector<NameTagRenderObject> *(__fastcall *extractText)(BlockActorRenderer *this, std::vector<NameTagRenderObject> *result, Tessellator *, BlockActor *, const std::string *, const std::vector<int> *, Vec3, bool);\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullercachedbase-changeelement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullercachedbase-changeelement"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerCachedBase::ChangeElement")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct LevelCullerCachedBase::ChangeElement\n{\n  LevelCullerCachedBase::ChangeID mChangeType;\n  unsigned __int64 mListIdx;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullercachedbase-resetcullingworlddimensions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullercachedbase-resetcullingworlddimensions"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerCachedBase::ResetCullingWorldDimensions")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelCullerCachedBase::ResetCullingWorldDimensions\n{\n  int mViewSideSize;\n  DimensionHeightRange mHeightRange;\n  int mMaxCullingSteps;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullercachedbase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullercachedbase"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerCachedBase")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelCullerCachedBase : LevelCullerBase\n{\n  std::unique_ptr<ChunkVisibilityCache> mChunkVisibilityCache;\n  int mChunkViewAreaSide;\n  std::optional<DimensionHeightRange> mHeightRange;\n  int mMaxCullingSteps;\n  ChunkPos mLastCullingChunkPos;\n  unsigned __int8 mChunkVisibilityFrameID;\n  std::vector<LevelCullerCachedBase::ChangeElement> mChangeList;\n  std::vector<SubChunkPos> mApplyInvalidateList;\n  std::vector<LevelCullerCachedBase::UpdateChunkData> mApplyUpdatesList;\n  std::vector<LevelCullerCachedBase::ResetCullingWorldDimensions> mApplyResetCullingWorldDataList;\n  std::vector<Bounds> mChangeValidAreaList;\n  Bounds mValidArea;\n  SpinLock mApplyChangesSpinLock;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullercachedbase-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullercachedbase-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerCachedBase_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelCullerCachedBase_vtbl\n{\n  void (__fastcall *~LevelCullerBase)(LevelCullerBase *this);\n  void (__fastcall *handleCullingDutiesThisUpdate)(LevelCullerBase *this, const Vec3 *, const Vec3 *, LevelRendererCamera *);\n  void (__fastcall *triggerCull)(LevelCullerBase *this, bool);\n  void (__fastcall *getVisibleSubchunks)(LevelCullerBase *this, std::vector<SubChunkPos> *);\n  void (__fastcall *resetCullingWorldDimensions)(LevelCullerBase *this, int, const DimensionHeightRange *, int);\n  void (__fastcall *changeValidArea)(LevelCullerBase *this, const Bounds *);\n  void (__fastcall *updateChunkData)(LevelCullerBase *this, const RenderChunkShared *);\n  bool (__fastcall *isBlockPositionVisible)(LevelCullerBase *this, const BlockPos *);\n  void (__fastcall *invalidateChunk)(LevelCullerBase *this, const SubChunkPos *);\n  void (__fastcall *setEmpty)(LevelCullerBase *this, const SubChunkPos *, bool);\n  bool (__fastcall *isBusy)(LevelCullerBase *this);\n  bool (__fastcall *shouldRecullAfterChunkChange)(LevelCullerBase *this, const RenderChunkShared *);\n  unsigned int (__fastcall *getCullIteration)(LevelCullerBase *this);\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullerdistancefield"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullerdistancefield"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerDistanceField")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelCullerDistanceField : LevelCullerCachedBase, std::enable_shared_from_this<LevelCullerDistanceField>\n{\n  std::vector<DistanceFieldCullingStep> mNarrowPhaseHeap;\n  SpinLock mRenderChunksVisibleFromCullingPointSpinLock;\n  std::vector<SubChunkPos> mRenderChunksVisibleFromCullingPoint[2];\n  unsigned __int64 mActiveRenderChunksVisibleList;\n  unsigned __int64 mWorldingRenderChunksVisibleList;\n  std::atomic<unsigned int> mTasksCount;\n  std::atomic<unsigned int> mCullIteration;\n  bool mCullNextFrame;\n  Vec3 mCullingOrigin;\n  ChunkPos mCullingOriginCP;\n  DistanceFieldCullingStep mSwapTemp;\n  std::atomic<bool> mTaskScheduled;\n  Vec3 mCurrentCameraPos;\n  Vec3 mCurrentCameraForward;\n  Vec3 mNextCameraPos;\n  Vec3 mNextCameraForward;\n  int mSteps;\n  float mTotalTime;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullerdistancefield-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullerdistancefield-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerDistanceField_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelCullerDistanceField_vtbl\n{\n  void (__fastcall *~LevelCullerBase)(LevelCullerBase *this);\n  void (__fastcall *handleCullingDutiesThisUpdate)(LevelCullerBase *this, const Vec3 *, const Vec3 *, LevelRendererCamera *);\n  void (__fastcall *triggerCull)(LevelCullerBase *this, bool);\n  void (__fastcall *getVisibleSubchunks)(LevelCullerBase *this, std::vector<SubChunkPos> *);\n  void (__fastcall *resetCullingWorldDimensions)(LevelCullerBase *this, int, const DimensionHeightRange *, int);\n  void (__fastcall *changeValidArea)(LevelCullerBase *this, const Bounds *);\n  void (__fastcall *updateChunkData)(LevelCullerBase *this, const RenderChunkShared *);\n  bool (__fastcall *isBlockPositionVisible)(LevelCullerBase *this, const BlockPos *);\n  void (__fastcall *invalidateChunk)(LevelCullerBase *this, const SubChunkPos *);\n  void (__fastcall *setEmpty)(LevelCullerBase *this, const SubChunkPos *, bool);\n  bool (__fastcall *isBusy)(LevelCullerBase *this);\n  bool (__fastcall *shouldRecullAfterChunkChange)(LevelCullerBase *this, const RenderChunkShared *);\n  unsigned int (__fastcall *getCullIteration)(LevelCullerBase *this);\n  void (__fastcall *_prepareForCulling)(LevelCullerDistanceField *this, LevelRendererCamera *);\n  float (__fastcall *_computeLinearDistance)(LevelCullerDistanceField *this, const Vec3 *);\n  bool (__fastcall *_doesRenderDistanceApply)(LevelCullerDistanceField *this);\n  bool (__fastcall *_checkPositionAgainstBounds)(LevelCullerDistanceField *this, const SubChunkPos *);\n  bool (__fastcall *_checkDistanceDelta)(LevelCullerDistanceField *this, float);\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullerdistancefieldorthographic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullerdistancefieldorthographic"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerDistanceFieldOrthographic")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelCullerDistanceFieldOrthographic : LevelCullerDistanceField\n{\n  Bounds mBounds;\n  glm::tvec4<float,0> mSidePlanes[4];\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullerdistancefieldorthographic-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullerdistancefieldorthographic-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerDistanceFieldOrthographic_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelCullerDistanceFieldOrthographic_vtbl\n{\n  void (__fastcall *~LevelCullerBase)(LevelCullerBase *this);\n  void (__fastcall *handleCullingDutiesThisUpdate)(LevelCullerBase *this, const Vec3 *, const Vec3 *, LevelRendererCamera *);\n  void (__fastcall *triggerCull)(LevelCullerBase *this, bool);\n  void (__fastcall *getVisibleSubchunks)(LevelCullerBase *this, std::vector<SubChunkPos> *);\n  void (__fastcall *resetCullingWorldDimensions)(LevelCullerBase *this, int, const DimensionHeightRange *, int);\n  void (__fastcall *changeValidArea)(LevelCullerBase *this, const Bounds *);\n  void (__fastcall *updateChunkData)(LevelCullerBase *this, const RenderChunkShared *);\n  bool (__fastcall *isBlockPositionVisible)(LevelCullerBase *this, const BlockPos *);\n  void (__fastcall *invalidateChunk)(LevelCullerBase *this, const SubChunkPos *);\n  void (__fastcall *setEmpty)(LevelCullerBase *this, const SubChunkPos *, bool);\n  bool (__fastcall *isBusy)(LevelCullerBase *this);\n  bool (__fastcall *shouldRecullAfterChunkChange)(LevelCullerBase *this, const RenderChunkShared *);\n  unsigned int (__fastcall *getCullIteration)(LevelCullerBase *this);\n  void (__fastcall *_prepareForCulling)(LevelCullerDistanceField *this, LevelRendererCamera *);\n  float (__fastcall *_computeLinearDistance)(LevelCullerDistanceField *this, const Vec3 *);\n  bool (__fastcall *_doesRenderDistanceApply)(LevelCullerDistanceField *this);\n  bool (__fastcall *_checkPositionAgainstBounds)(LevelCullerDistanceField *this, const SubChunkPos *);\n  bool (__fastcall *_checkDistanceDelta)(LevelCullerDistanceField *this, float);\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullerdistancefieldperspective"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullerdistancefieldperspective"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerDistanceFieldPerspective")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelCullerDistanceFieldPerspective : LevelCullerDistanceField\n{\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullerdistancefieldperspective-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullerdistancefieldperspective-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerDistanceFieldPerspective_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelCullerDistanceFieldPerspective_vtbl\n{\n  void (__fastcall *~LevelCullerBase)(LevelCullerBase *this);\n  void (__fastcall *handleCullingDutiesThisUpdate)(LevelCullerBase *this, const Vec3 *, const Vec3 *, LevelRendererCamera *);\n  void (__fastcall *triggerCull)(LevelCullerBase *this, bool);\n  void (__fastcall *getVisibleSubchunks)(LevelCullerBase *this, std::vector<SubChunkPos> *);\n  void (__fastcall *resetCullingWorldDimensions)(LevelCullerBase *this, int, const DimensionHeightRange *, int);\n  void (__fastcall *changeValidArea)(LevelCullerBase *this, const Bounds *);\n  void (__fastcall *updateChunkData)(LevelCullerBase *this, const RenderChunkShared *);\n  bool (__fastcall *isBlockPositionVisible)(LevelCullerBase *this, const BlockPos *);\n  void (__fastcall *invalidateChunk)(LevelCullerBase *this, const SubChunkPos *);\n  void (__fastcall *setEmpty)(LevelCullerBase *this, const SubChunkPos *, bool);\n  bool (__fastcall *isBusy)(LevelCullerBase *this);\n  bool (__fastcall *shouldRecullAfterChunkChange)(LevelCullerBase *this, const RenderChunkShared *);\n  unsigned int (__fastcall *getCullIteration)(LevelCullerBase *this);\n  void (__fastcall *_prepareForCulling)(LevelCullerDistanceField *this, LevelRendererCamera *);\n  float (__fastcall *_computeLinearDistance)(LevelCullerDistanceField *this, const Vec3 *);\n  bool (__fastcall *_doesRenderDistanceApply)(LevelCullerDistanceField *this);\n  bool (__fastcall *_checkPositionAgainstBounds)(LevelCullerDistanceField *this, const SubChunkPos *);\n  bool (__fastcall *_checkDistanceDelta)(LevelCullerDistanceField *this, float);\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullersunshadow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullersunshadow"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerSunShadow")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelCullerSunShadow : LevelCullerCachedBase\n{\n  bool mCullNextFrame;\n  SpinLock mRenderChunksVisibleFromCullingPointSpinLock;\n  std::vector<SubChunkPos> mRenderChunksVisibleFromCullingPoint[2];\n  unsigned __int64 mActiveRenderChunksVisibleList;\n  unsigned __int64 mWorldingRenderChunksVisibleList;\n  Vec3 mCurrentCameraPos;\n  Vec3 mCullingOrigin;\n  ChunkPos mCullingOriginCP;\n  std::atomic<unsigned int> mCullIteration;\n  Bounds mBounds;\n  glm::tvec4<float,0> mSidePlanes[4];\n  std::atomic<bool> mTaskScheduled;\n  std::atomic<unsigned int> mTasksCount;\n  Vec3 mNextCameraPos;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullersunshadow-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullersunshadow-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerSunShadow_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelCullerSunShadow_vtbl\n{\n  void (__fastcall *~LevelCullerBase)(LevelCullerBase *this);\n  void (__fastcall *handleCullingDutiesThisUpdate)(LevelCullerBase *this, const Vec3 *, const Vec3 *, LevelRendererCamera *);\n  void (__fastcall *triggerCull)(LevelCullerBase *this, bool);\n  void (__fastcall *getVisibleSubchunks)(LevelCullerBase *this, std::vector<SubChunkPos> *);\n  void (__fastcall *resetCullingWorldDimensions)(LevelCullerBase *this, int, const DimensionHeightRange *, int);\n  void (__fastcall *changeValidArea)(LevelCullerBase *this, const Bounds *);\n  void (__fastcall *updateChunkData)(LevelCullerBase *this, const RenderChunkShared *);\n  bool (__fastcall *isBlockPositionVisible)(LevelCullerBase *this, const BlockPos *);\n  void (__fastcall *invalidateChunk)(LevelCullerBase *this, const SubChunkPos *);\n  void (__fastcall *setEmpty)(LevelCullerBase *this, const SubChunkPos *, bool);\n  bool (__fastcall *isBusy)(LevelCullerBase *this);\n  bool (__fastcall *shouldRecullAfterChunkChange)(LevelCullerBase *this, const RenderChunkShared *);\n  unsigned int (__fastcall *getCullIteration)(LevelCullerBase *this);\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullernone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullernone"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerNone")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelCullerNone : LevelCullerBase\n{\n  std::vector<SubChunkPos> mVisibleSubChunks;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullernone-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullernone-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerNone_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelCullerNone_vtbl\n{\n  void (__fastcall *~LevelCullerBase)(LevelCullerBase *this);\n  void (__fastcall *handleCullingDutiesThisUpdate)(LevelCullerBase *this, const Vec3 *, const Vec3 *, LevelRendererCamera *);\n  void (__fastcall *triggerCull)(LevelCullerBase *this, bool);\n  void (__fastcall *getVisibleSubchunks)(LevelCullerBase *this, std::vector<SubChunkPos> *);\n  void (__fastcall *resetCullingWorldDimensions)(LevelCullerBase *this, int, const DimensionHeightRange *, int);\n  void (__fastcall *changeValidArea)(LevelCullerBase *this, const Bounds *);\n  void (__fastcall *updateChunkData)(LevelCullerBase *this, const RenderChunkShared *);\n  bool (__fastcall *isBlockPositionVisible)(LevelCullerBase *this, const BlockPos *);\n  void (__fastcall *invalidateChunk)(LevelCullerBase *this, const SubChunkPos *);\n  void (__fastcall *setEmpty)(LevelCullerBase *this, const SubChunkPos *, bool);\n  bool (__fastcall *isBusy)(LevelCullerBase *this);\n  bool (__fastcall *shouldRecullAfterChunkChange)(LevelCullerBase *this, const RenderChunkShared *);\n  unsigned int (__fastcall *getCullIteration)(LevelCullerBase *this);\n};\n\n")])])]),e("h3",{attrs:{id:"levelbuilder-schedulechunksort-l2-lambda-ca9f475f5abe9fd2bd8d315c3e337e8a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-schedulechunksort-l2-lambda-ca9f475f5abe9fd2bd8d315c3e337e8a"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::scheduleChunkSort::__l2::<lambda_ca9f475f5abe9fd2bd8d315c3e337e8a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelBuilder::scheduleChunkSort::__l2::<lambda_ca9f475f5abe9fd2bd8d315c3e337e8a>\n{\n  const std::shared_ptr<RenderChunkInstanced> renderChunkInstanced;\n  std::shared_ptr<SortTaskContext> sortTaskContext;\n  LevelBuilder *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelbuilder-schedulechunksort-l2-lambda-0213a46f6c28c89d46d5304ec9dc3af0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-schedulechunksort-l2-lambda-0213a46f6c28c89d46d5304ec9dc3af0"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::scheduleChunkSort::__l2::<lambda_0213a46f6c28c89d46d5304ec9dc3af0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelBuilder::scheduleChunkSort::__l2::<lambda_0213a46f6c28c89d46d5304ec9dc3af0>\n{\n  const std::shared_ptr<RenderChunkInstanced> renderChunkInstanced;\n  std::shared_ptr<SortTaskContext> sortTaskContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelbuilder-schedulechunksort-l19-lambda-645c2dfcf2f77d157bab94892f7fdf5b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-schedulechunksort-l19-lambda-645c2dfcf2f77d157bab94892f7fdf5b"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::scheduleChunkSort::__l19::<lambda_645c2dfcf2f77d157bab94892f7fdf5b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelBuilder::scheduleChunkSort::__l19::<lambda_645c2dfcf2f77d157bab94892f7fdf5b>\n{\n  LevelBuilder *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelbuilder-schedulechunkbuild-l11-lambda-1a475e5ac8540ac7cb31a3455a6528d7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-schedulechunkbuild-l11-lambda-1a475e5ac8540ac7cb31a3455a6528d7"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::scheduleChunkBuild::__l11::<lambda_1a475e5ac8540ac7cb31a3455a6528d7>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelBuilder::scheduleChunkBuild::__l11::<lambda_1a475e5ac8540ac7cb31a3455a6528d7>\n{\n  LevelBuilder *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelbuilder-schedulechunkbuild-l2-lambda-781943cdbadde60e3ecf438faf85c914"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-schedulechunkbuild-l2-lambda-781943cdbadde60e3ecf438faf85c914"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::scheduleChunkBuild::__l2::<lambda_781943cdbadde60e3ecf438faf85c914>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelBuilder::scheduleChunkBuild::__l2::<lambda_781943cdbadde60e3ecf438faf85c914>\n{\n  LevelBuilder *const __this;\n  ClientBlockPipeline::TessellatorContext *pipelineContext;\n  BlockSource **region;\n};\n\n")])])]),e("h3",{attrs:{id:"levelbuilder-recreatebuilders-l13-lambda-f7e2fe60366fd092cba4f0d948a03be6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-recreatebuilders-l13-lambda-f7e2fe60366fd092cba4f0d948a03be6"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::recreateBuilders::__l13::<lambda_f7e2fe60366fd092cba4f0d948a03be6>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelBuilder::recreateBuilders::__l13::<lambda_f7e2fe60366fd092cba4f0d948a03be6>\n{\n  LevelBuilder *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelbuilder-recreatebuilders-l13-lambda-ea2e2c03424d2e9ca36c3a4505d717b2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-recreatebuilders-l13-lambda-ea2e2c03424d2e9ca36c3a4505d717b2"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::recreateBuilders::__l13::<lambda_ea2e2c03424d2e9ca36c3a4505d717b2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelBuilder::recreateBuilders::__l13::<lambda_ea2e2c03424d2e9ca36c3a4505d717b2>\n{\n  MinecraftGameplayGraphicsResources *minecraftGameplayGraphicsResources;\n  ClientBlockPipeline::TessellatorContext *pipelineContext;\n  BlockSource **region;\n};\n\n")])])]),e("h3",{attrs:{id:"levelbuilder-buildrenderchunks-l2-lambda-a08ac9d83425319e6a6e10392713a815"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelbuilder-buildrenderchunks-l2-lambda-a08ac9d83425319e6a6e10392713a815"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelBuilder::_buildRenderChunks::__l2::<lambda_a08ac9d83425319e6a6e10392713a815>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelBuilder::_buildRenderChunks::__l2::<lambda_a08ac9d83425319e6a6e10392713a815>\n{\n  LevelBuilder *const __this;\n  const Vec3 cameraPos;\n  Vec3 cameraForward;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-takepicture-l25-lambda-966f471d8bd52e85682cd189483f4859"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-takepicture-l25-lambda-966f471d8bd52e85682cd189483f4859"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::takePicture::__l25::<lambda_966f471d8bd52e85682cd189483f4859>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::takePicture::__l25::<lambda_966f471d8bd52e85682cd189483f4859>\n{\n  LevelRenderer *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-createviewrenderobject-l2-lambda-06c0d9ebcdc7bb0d6b8014e75fd06a48"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-createviewrenderobject-l2-lambda-06c0d9ebcdc7bb0d6b8014e75fd06a48"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::createViewRenderObject::__l2::<lambda_06c0d9ebcdc7bb0d6b8014e75fd06a48>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::createViewRenderObject::__l2::<lambda_06c0d9ebcdc7bb0d6b8014e75fd06a48>\n{\n  ScreenContext *screenContext;\n  unsigned __int8 *oldScreenContextSubClientId;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-queuechunk-l14-lambda-2ad54a24c26a56bab19ead12d48483ee"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-queuechunk-l14-lambda-2ad54a24c26a56bab19ead12d48483ee"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::queueChunk::__l14::<lambda_2ad54a24c26a56bab19ead12d48483ee>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::queueChunk::__l14::<lambda_2ad54a24c26a56bab19ead12d48483ee>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-queuechunk-l14-lambda-1c7bae9e0e8e75154218cbbb1a06b46f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-queuechunk-l14-lambda-1c7bae9e0e8e75154218cbbb1a06b46f"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::queueChunk::__l14::<lambda_1c7bae9e0e8e75154218cbbb1a06b46f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::queueChunk::__l14::<lambda_1c7bae9e0e8e75154218cbbb1a06b46f>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-queuechunk-l14-lambda-e3ecd698544eea2955d458a6197fb71e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-queuechunk-l14-lambda-e3ecd698544eea2955d458a6197fb71e"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::queueChunk::__l14::<lambda_e3ecd698544eea2955d458a6197fb71e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::queueChunk::__l14::<lambda_e3ecd698544eea2955d458a6197fb71e>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-queuechunk-l17-lambda-f80110362d34345c177c11033da0fab1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-queuechunk-l17-lambda-f80110362d34345c177c11033da0fab1"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::queueChunk::__l17::<lambda_f80110362d34345c177c11033da0fab1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::queueChunk::__l17::<lambda_f80110362d34345c177c11033da0fab1>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-queuechunk-l17-lambda-a5f77baf381576dd0df113ed6627093f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-queuechunk-l17-lambda-a5f77baf381576dd0df113ed6627093f"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::queueChunk::__l17::<lambda_a5f77baf381576dd0df113ed6627093f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::queueChunk::__l17::<lambda_a5f77baf381576dd0df113ed6627093f>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-queuechunk-l17-lambda-5f1fe1d401ded85d05fced13872eea5b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-queuechunk-l17-lambda-5f1fe1d401ded85d05fced13872eea5b"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::queueChunk::__l17::<lambda_5f1fe1d401ded85d05fced13872eea5b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::queueChunk::__l17::<lambda_5f1fe1d401ded85d05fced13872eea5b>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-updateeditviewarea-l12-lambda-783b19e5ed4e5307f406058f5c908b18"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-updateeditviewarea-l12-lambda-783b19e5ed4e5307f406058f5c908b18"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::updateEditViewArea::__l12::<lambda_783b19e5ed4e5307f406058f5c908b18>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelRendererCamera::updateEditViewArea::__l12::<lambda_783b19e5ed4e5307f406058f5c908b18>\n{\n  LevelRendererCamera *const __this;\n  bool isOrthoCamera;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l136-lambda-95f9375e63923262021f4f30b6a3d7f7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l136-lambda-95f9375e63923262021f4f30b6a3d7f7"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l136::<lambda_95f9375e63923262021f4f30b6a3d7f7>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l136::<lambda_95f9375e63923262021f4f30b6a3d7f7>\n{\n  LevelRendererCamera *const __this;\n  ScreenContext *screenContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l133-lambda-4764c359c2ec24a8a0939836d0dd3563"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l133-lambda-4764c359c2ec24a8a0939836d0dd3563"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l133::<lambda_4764c359c2ec24a8a0939836d0dd3563>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l133::<lambda_4764c359c2ec24a8a0939836d0dd3563>\n{\n  ScreenContext *screenContext;\n  const ViewRenderObject *renderObj;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l123-lambda-9d443ce3f6a4f06289231c5ca55306cc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l123-lambda-9d443ce3f6a4f06289231c5ca55306cc"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l123::<lambda_9d443ce3f6a4f06289231c5ca55306cc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l123::<lambda_9d443ce3f6a4f06289231c5ca55306cc>\n{\n  LevelRendererCamera *const __this;\n  ScreenContext *screenContext;\n  const ViewRenderObject *renderObj;\n  FontHandle *fontHandle;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l117-lambda-318f9183abd68b382aa93085aacaff59"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l117-lambda-318f9183abd68b382aa93085aacaff59"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l117::<lambda_318f9183abd68b382aa93085aacaff59>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l117::<lambda_318f9183abd68b382aa93085aacaff59>\n{\n  LevelRendererCamera *const __this;\n  BaseActorRenderContext *baseEntityRenderContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l109-lambda-e354dc0c7e5eadaff08b5d6664232090"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l109-lambda-e354dc0c7e5eadaff08b5d6664232090"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l109::<lambda_e354dc0c7e5eadaff08b5d6664232090>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l109::<lambda_e354dc0c7e5eadaff08b5d6664232090>\n{\n  LevelRendererCamera *const __this;\n  BaseActorRenderContext *baseEntityRenderContext;\n  const ViewRenderObject *renderObj;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l105-lambda-4fe7d505b0540ad3ff640da8f3a8c852"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l105-lambda-4fe7d505b0540ad3ff640da8f3a8c852"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l105::<lambda_4fe7d505b0540ad3ff640da8f3a8c852>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l105::<lambda_4fe7d505b0540ad3ff640da8f3a8c852>\n{\n  ScreenContext *screenContext;\n  const ViewRenderObject *renderObj;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l102-lambda-8eaadf639f8a587c43525cc3ddbd5cc3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l102-lambda-8eaadf639f8a587c43525cc3ddbd5cc3"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l102::<lambda_8eaadf639f8a587c43525cc3ddbd5cc3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l102::<lambda_8eaadf639f8a587c43525cc3ddbd5cc3>\n{\n  ScreenContext *screenContext;\n  const ViewRenderObject *renderObj;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l99-lambda-b77b8e6ba7ca21f3c605c9c0aa5a50de"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l99-lambda-b77b8e6ba7ca21f3c605c9c0aa5a50de"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l99::<lambda_b77b8e6ba7ca21f3c605c9c0aa5a50de>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l99::<lambda_b77b8e6ba7ca21f3c605c9c0aa5a50de>\n{\n  ScreenContext *screenContext;\n  const ViewRenderObject *renderObj;\n  LevelRendererCamera *const __this;\n  BaseActorRenderContext *baseEntityRenderContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l93-lambda-f3cc7f48a90c411b5548465bf4eb0500"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l93-lambda-f3cc7f48a90c411b5548465bf4eb0500"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l93::<lambda_f3cc7f48a90c411b5548465bf4eb0500>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l93::<lambda_f3cc7f48a90c411b5548465bf4eb0500>\n{\n  LevelRendererCamera *const __this;\n  BaseActorRenderContext *baseEntityRenderContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l90-lambda-8ef8c01b7db41447ee8f6790dba84dc2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l90-lambda-8ef8c01b7db41447ee8f6790dba84dc2"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l90::<lambda_8ef8c01b7db41447ee8f6790dba84dc2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l90::<lambda_8ef8c01b7db41447ee8f6790dba84dc2>\n{\n  ScreenContext *screenContext;\n  const ViewRenderObject *renderObj;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l86-lambda-92c4a9c5072df1bf21f23835db0b55b3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l86-lambda-92c4a9c5072df1bf21f23835db0b55b3"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l86::<lambda_92c4a9c5072df1bf21f23835db0b55b3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l86::<lambda_92c4a9c5072df1bf21f23835db0b55b3>\n{\n  LevelRendererCamera *const __this;\n  ScreenContext *screenContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l83-lambda-570d4a787024f68a608698b74170fdba"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l83-lambda-570d4a787024f68a608698b74170fdba"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l83::<lambda_570d4a787024f68a608698b74170fdba>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l83::<lambda_570d4a787024f68a608698b74170fdba>\n{\n  LevelRendererCamera *const __this;\n  BaseActorRenderContext *baseEntityRenderContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l80-lambda-63d7ae77897f6b7eed49e76ef924ebca"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l80-lambda-63d7ae77897f6b7eed49e76ef924ebca"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l80::<lambda_63d7ae77897f6b7eed49e76ef924ebca>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l80::<lambda_63d7ae77897f6b7eed49e76ef924ebca>\n{\n  ScreenContext *screenContext;\n  const ViewRenderObject *renderObj;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l76-lambda-716be9c58d56683595928c27d77b513c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l76-lambda-716be9c58d56683595928c27d77b513c"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l76::<lambda_716be9c58d56683595928c27d77b513c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l76::<lambda_716be9c58d56683595928c27d77b513c>\n{\n  LevelRendererCamera *const __this;\n  ScreenContext *screenContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l73-lambda-d57d135460e5fe98e6080c441bc8e7e1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l73-lambda-d57d135460e5fe98e6080c441bc8e7e1"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l73::<lambda_d57d135460e5fe98e6080c441bc8e7e1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l73::<lambda_d57d135460e5fe98e6080c441bc8e7e1>\n{\n  ScreenContext *screenContext;\n  const ViewRenderObject *renderObj;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l67-lambda-7b9c96c25bd51daa0708c6f6129d6813"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l67-lambda-7b9c96c25bd51daa0708c6f6129d6813"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l67::<lambda_7b9c96c25bd51daa0708c6f6129d6813>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l67::<lambda_7b9c96c25bd51daa0708c6f6129d6813>\n{\n  LevelRendererCamera *const __this;\n  BaseActorRenderContext *baseEntityRenderContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l2-lambda-e5cf65af315eee176ad31648f3749adc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l2-lambda-e5cf65af315eee176ad31648f3749adc"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l2::<lambda_e5cf65af315eee176ad31648f3749adc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l2::<lambda_e5cf65af315eee176ad31648f3749adc>\n{\n  LevelRendererCamera *const __this;\n  ScreenContext *screenContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l2-lambda-528f95f81012b8c94d11f5be3db617db"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l2-lambda-528f95f81012b8c94d11f5be3db617db"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l2::<lambda_528f95f81012b8c94d11f5be3db617db>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l2::<lambda_528f95f81012b8c94d11f5be3db617db>\n{\n  LevelRendererCamera *const __this;\n  ScreenContext *screenContext;\n  const ViewRenderObject *renderObj;\n  bool *drawSky;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l55-lambda-c69ba69cc2350aedc765efc2f688c073"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l55-lambda-c69ba69cc2350aedc765efc2f688c073"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l55::<lambda_c69ba69cc2350aedc765efc2f688c073>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l55::<lambda_c69ba69cc2350aedc765efc2f688c073>\n{\n  LevelRendererCamera *const __this;\n  BaseActorRenderContext *baseEntityRenderContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l51-lambda-98cf3401a20e8e5843b28a87774a2606"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l51-lambda-98cf3401a20e8e5843b28a87774a2606"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l51::<lambda_98cf3401a20e8e5843b28a87774a2606>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l51::<lambda_98cf3401a20e8e5843b28a87774a2606>\n{\n  LevelRendererCamera *const __this;\n  BaseActorRenderContext *baseEntityRenderContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l44-lambda-3a2cf6803c057b1f0eedb96b6c8e35ae"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l44-lambda-3a2cf6803c057b1f0eedb96b6c8e35ae"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l44::<lambda_3a2cf6803c057b1f0eedb96b6c8e35ae>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l44::<lambda_3a2cf6803c057b1f0eedb96b6c8e35ae>\n{\n  LevelRendererCamera *const __this;\n  ScreenContext *screenContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-render-l41-lambda-67ec6388db038753bb187b676b98ee9d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-render-l41-lambda-67ec6388db038753bb187b676b98ee9d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::render::__l41::<lambda_67ec6388db038753bb187b676b98ee9d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::render::__l41::<lambda_67ec6388db038753bb187b676b98ee9d>\n{\n  LevelRendererCamera *const __this;\n  BaseActorRenderContext *baseEntityRenderContext;\n  IClientInstance *ci;\n  const ViewRenderObject *renderObj;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-updateperchunkfacesortstate-l10-lambda-ad3c5498b074c18dbed9687ee13fd757"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-updateperchunkfacesortstate-l10-lambda-ad3c5498b074c18dbed9687ee13fd757"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::updatePerChunkFaceSortState::__l10::<lambda_ad3c5498b074c18dbed9687ee13fd757>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::updatePerChunkFaceSortState::__l10::<lambda_ad3c5498b074c18dbed9687ee13fd757>\n{\n  std::shared_ptr<GridArea<std::shared_ptr<RenderChunkInstanced> > > bufferedarea;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-updateviewarea-l15-lambda-9e7cacf76a280e28aa6f2804db39f29f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-updateviewarea-l15-lambda-9e7cacf76a280e28aa6f2804db39f29f"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::updateViewArea::__l15::<lambda_9e7cacf76a280e28aa6f2804db39f29f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelRendererCamera::updateViewArea::__l15::<lambda_9e7cacf76a280e28aa6f2804db39f29f>\n{\n  LevelRendererCamera *const __this;\n  bool isOrthoCamera;\n  const Vec3 cameraPos;\n  const Vec3 cameraForward;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-tickclouds-l16-lambda-c498a643277d80fd7defa07ea47ad7b1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-tickclouds-l16-lambda-c498a643277d80fd7defa07ea47ad7b1"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::tickClouds::__l16::<lambda_c498a643277d80fd7defa07ea47ad7b1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(4)) LevelRendererCamera::tickClouds::__l16::<lambda_c498a643277d80fd7defa07ea47ad7b1>\n{\n  LevelRendererCamera *const __this;\n  const Vec3 cloudCenterPos;\n  unsigned __int8 cloudSide;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-tickclouds-l16-lambda-0fcd12c8aea96aebe4424114849d6276"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-tickclouds-l16-lambda-0fcd12c8aea96aebe4424114849d6276"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::tickClouds::__l16::<lambda_0fcd12c8aea96aebe4424114849d6276>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(4)) LevelRendererCamera::tickClouds::__l16::<lambda_0fcd12c8aea96aebe4424114849d6276>\n{\n  LevelRendererCamera *const __this;\n  std::weak_ptr<cg::ImageBuffer> weakCloudsImage;\n  const Vec3 cloudCenterPos;\n  unsigned __int8 cloudSide;\n  const bool tessellateBothSides;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-ctor-l2-lambda-2b79d398d8ef1477337b0f5b1b355659"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-ctor-l2-lambda-2b79d398d8ef1477337b0f5b1b355659"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::{ctor}::__l2::<lambda_2b79d398d8ef1477337b0f5b1b355659>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::{ctor}::__l2::<lambda_2b79d398d8ef1477337b0f5b1b355659>\n{\n  LevelRendererCamera *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-initpipelinetessellatorresources-l2-lambda-9b5a046e70bef75fe559e6f2f6d097f3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-initpipelinetessellatorresources-l2-lambda-9b5a046e70bef75fe559e6f2f6d097f3"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::_initPipelineTessellatorResources::__l2::<lambda_9b5a046e70bef75fe559e6f2f6d097f3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::_initPipelineTessellatorResources::__l2::<lambda_9b5a046e70bef75fe559e6f2f6d097f3>\n{\n  EntityRegistryOwned *registry;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-frameupdate-l2-lambda-f701b1f8a7c0d93b2005ab7edabc9284"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-frameupdate-l2-lambda-f701b1f8a7c0d93b2005ab7edabc9284"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::frameUpdate::__l2::<lambda_f701b1f8a7c0d93b2005ab7edabc9284>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::frameUpdate::__l2::<lambda_f701b1f8a7c0d93b2005ab7edabc9284>\n{\n  Tessellator *tessellator;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-frameupdate-l2-lambda-335d2fb1dc9014b3677a9cffb46c1dff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-frameupdate-l2-lambda-335d2fb1dc9014b3677a9cffb46c1dff"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::frameUpdate::__l2::<lambda_335d2fb1dc9014b3677a9cffb46c1dff>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::frameUpdate::__l2::<lambda_335d2fb1dc9014b3677a9cffb46c1dff>\n{\n  Tessellator *tessellator;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-frameupdate-l2-lambda-1b526a2d8548c21b383a97342d5ad487"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-frameupdate-l2-lambda-1b526a2d8548c21b383a97342d5ad487"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::frameUpdate::__l2::<lambda_1b526a2d8548c21b383a97342d5ad487>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::frameUpdate::__l2::<lambda_1b526a2d8548c21b383a97342d5ad487>\n{\n  Tessellator *tessellator;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-frameupdate-l12-lambda-9fcbb6855f88afb816127fda2a20d74b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-frameupdate-l12-lambda-9fcbb6855f88afb816127fda2a20d74b"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::frameUpdate::__l12::<lambda_9fcbb6855f88afb816127fda2a20d74b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelRenderer::frameUpdate::__l12::<lambda_9fcbb6855f88afb816127fda2a20d74b>\n{\n  Tessellator *tessellator;\n  int i;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-frameupdate-l7-lambda-ea844ceccd1de22890beb07c0e8397bd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-frameupdate-l7-lambda-ea844ceccd1de22890beb07c0e8397bd"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::frameUpdate::__l7::<lambda_ea844ceccd1de22890beb07c0e8397bd>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::frameUpdate::__l7::<lambda_ea844ceccd1de22890beb07c0e8397bd>\n{\n  Tessellator *tessellator;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-frameupdate-l4-lambda-f01a01cf11ce104a02ae2020719b2211"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-frameupdate-l4-lambda-f01a01cf11ce104a02ae2020719b2211"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::frameUpdate::__l4::<lambda_f01a01cf11ce104a02ae2020719b2211>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LevelRenderer::frameUpdate::__l4::<lambda_f01a01cf11ce104a02ae2020719b2211>\n{\n  Tessellator *tessellator;\n  int i;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-frameupdate-l2-lambda-758885b258945a6ca5117dcdf942ff98"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-frameupdate-l2-lambda-758885b258945a6ca5117dcdf942ff98"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::frameUpdate::__l2::<lambda_758885b258945a6ca5117dcdf942ff98>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::frameUpdate::__l2::<lambda_758885b258945a6ca5117dcdf942ff98>\n{\n  Tessellator *tessellator;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-frameupdate-l2-lambda-0a9ac793f429e4a5f673b4e4d4c70978"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-frameupdate-l2-lambda-0a9ac793f429e4a5f673b4e4d4c70978"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::frameUpdate::__l2::<lambda_0a9ac793f429e4a5f673b4e4d4c70978>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::frameUpdate::__l2::<lambda_0a9ac793f429e4a5f673b4e4d4c70978>\n{\n  Tessellator *tessellator;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-frameupdate-l2-lambda-71f033f9b3e4d327aca2e59532492b67"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-frameupdate-l2-lambda-71f033f9b3e4d327aca2e59532492b67"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::frameUpdate::__l2::<lambda_71f033f9b3e4d327aca2e59532492b67>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::frameUpdate::__l2::<lambda_71f033f9b3e4d327aca2e59532492b67>\n{\n  Tessellator *tessellator;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-frameupdate-l2-lambda-acf188f954ccaf27d95c5bbd57ac08c6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-frameupdate-l2-lambda-acf188f954ccaf27d95c5bbd57ac08c6"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::frameUpdate::__l2::<lambda_acf188f954ccaf27d95c5bbd57ac08c6>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::frameUpdate::__l2::<lambda_acf188f954ccaf27d95c5bbd57ac08c6>\n{\n  ClientFrameUpdateContext *clientFrameUpdateContext;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-ctor-l2-lambda-85bf7fc9e6a1eeb9e971efa9bf3ba2ca"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-ctor-l2-lambda-85bf7fc9e6a1eeb9e971efa9bf3ba2ca"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::{ctor}::__l2::<lambda_85bf7fc9e6a1eeb9e971efa9bf3ba2ca>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::{ctor}::__l2::<lambda_85bf7fc9e6a1eeb9e971efa9bf3ba2ca>\n{\n  LevelRenderer *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-ctor-l2-lambda-f4d845fc283e1eef5eaad1dddf1583e3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-ctor-l2-lambda-f4d845fc283e1eef5eaad1dddf1583e3"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::{ctor}::__l2::<lambda_f4d845fc283e1eef5eaad1dddf1583e3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::{ctor}::__l2::<lambda_f4d845fc283e1eef5eaad1dddf1583e3>\n{\n  LevelRenderer *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderer-ctor-l2-lambda-1c42f68ee32956de6883e2d635c9f079"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderer-ctor-l2-lambda-1c42f68ee32956de6883e2d635c9f079"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRenderer::{ctor}::__l2::<lambda_1c42f68ee32956de6883e2d635c9f079>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRenderer::{ctor}::__l2::<lambda_1c42f68ee32956de6883e2d635c9f079>\n{\n  LevelRenderer *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullersunshadow-handlecullingdutiesthisupdate-l5-lambda-16329a48841731d4df3946d7f44c0fbf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullersunshadow-handlecullingdutiesthisupdate-l5-lambda-16329a48841731d4df3946d7f44c0fbf"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerSunShadow::handleCullingDutiesThisUpdate::__l5::<lambda_16329a48841731d4df3946d7f44c0fbf>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelCullerSunShadow::handleCullingDutiesThisUpdate::__l5::<lambda_16329a48841731d4df3946d7f44c0fbf>\n{\n  LevelCullerSunShadow *const __this;\n  LevelRendererCamera *levelRendererCamera;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcullerdistancefield-handlecullingdutiesthisupdate-l5-lambda-fde9076c36ef6dc7b65d1999d984afcb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcullerdistancefield-handlecullingdutiesthisupdate-l5-lambda-fde9076c36ef6dc7b65d1999d984afcb"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelCullerDistanceField::handleCullingDutiesThisUpdate::__l5::<lambda_fde9076c36ef6dc7b65d1999d984afcb>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelCullerDistanceField::handleCullingDutiesThisUpdate::__l5::<lambda_fde9076c36ef6dc7b65d1999d984afcb>\n{\n  std::weak_ptr<LevelCullerDistanceField> weakThis;\n  LevelRendererCamera *levelRendererCamera;\n};\n\n")])])]),e("h3",{attrs:{id:"levelrenderercamera-setupviewarea-l2-lambda-d53e0703952e2c097317ba99365db65e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelrenderercamera-setupviewarea-l2-lambda-d53e0703952e2c097317ba99365db65e"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelRendererCamera::setupViewArea::__l2::<lambda_d53e0703952e2c097317ba99365db65e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelRendererCamera::setupViewArea::__l2::<lambda_d53e0703952e2c097317ba99365db65e>\n{\n  LevelRendererCamera *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"lessonactionrequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessonactionrequest"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonActionRequest")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LessonActionRequest : RequestHandler\n{\n  const LessonProgressionService *mService;\n  const std::string mHostUrl;\n  LessonInfo mLessonInfo;\n  LessonActionData mRequestData;\n  std::function<void __cdecl(bool,std::string const &)> mResponseCallback;\n  std::string mStatus;\n  bool mSuccess;\n};\n\n")])])]),e("h3",{attrs:{id:"lessonactionrequest-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessonactionrequest-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonActionRequest_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LessonActionRequest_vtbl\n{\n  void (__fastcall *~RequestHandler)(RequestHandler *this);\n  void (__fastcall *send)(RequestHandler *this);\n  void (__fastcall *sendCachedRequest)(RequestHandler *this);\n  bool (__fastcall *update)(RequestHandler *this);\n  bool (__fastcall *isDone)(RequestHandler *this);\n  void (__fastcall *onComplete)(RequestHandler *this);\n  bool (__fastcall *canSendRequest)(RequestHandler *this);\n  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);\n};\n\n")])])]),e("h3",{attrs:{id:"lessonstatusrequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessonstatusrequest"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonStatusRequest")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LessonStatusRequest : RequestHandler\n{\n  const LessonProgressionService *mService;\n  const std::string mHostUrl;\n  LessonInfo mLessonInfo;\n  std::function<void __cdecl(bool,enum CompletionState::Value,std::optional<std::string >)> mResponseCallback;\n  std::string mStatus;\n  bool mSuccess;\n  CompletionState::Value mLessonState;\n  std::optional<std::string > mQuizUrl;\n};\n\n")])])]),e("h3",{attrs:{id:"lessonstatusrequest-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lessonstatusrequest-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LessonStatusRequest_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LessonStatusRequest_vtbl\n{\n  void (__fastcall *~RequestHandler)(RequestHandler *this);\n  void (__fastcall *send)(RequestHandler *this);\n  void (__fastcall *sendCachedRequest)(RequestHandler *this);\n  bool (__fastcall *update)(RequestHandler *this);\n  bool (__fastcall *isDone)(RequestHandler *this);\n  void (__fastcall *onComplete)(RequestHandler *this);\n  bool (__fastcall *canSendRequest)(RequestHandler *this);\n  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);\n};\n\n")])])]),e("h3",{attrs:{id:"librarysearchrequest-cachemetadata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarysearchrequest-cachemetadata"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibrarySearchRequest::CacheMetadata")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibrarySearchRequest::CacheMetadata\n{\n  std::string mCacheWriteDate;\n  std::string mAcceptLanguage;\n  std::string mRequestedBy;\n  std::string mClientVersion;\n};\n\n")])])]),e("h3",{attrs:{id:"librarysearchrequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarysearchrequest"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibrarySearchRequest")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibrarySearchRequest : CachedRequest\n{\n  gsl::not_null<Bedrock::NonOwnerPointer<DateManager const > > mDateManager;\n  const std::string mHostUrl;\n  const std::string mAcceptLanguage;\n  const std::string mDateCreated;\n  LibrarySearchQuery mQuery;\n  std::string mGetQuery;\n  std::function<void __cdecl(std::vector<std::shared_ptr<LibraryItem>> &,std::vector<std::string> &,bool)> mResponseCallback;\n  LibrarySearchRequest::CacheMetadata mCacheMetadata;\n  unsigned int mCacheMaxAgeHours;\n  std::vector<std::shared_ptr<LibraryItem>> mResults;\n  std::vector<std::string> mBadProductIds;\n  bool mHasMorePages;\n  std::string mCorrelationVector;\n};\n\n")])])]),e("h3",{attrs:{id:"librarysearchrequest-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#librarysearchrequest-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibrarySearchRequest_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibrarySearchRequest_vtbl\n{\n  void (__fastcall *~RequestHandler)(RequestHandler *this);\n  void (__fastcall *send)(RequestHandler *this);\n  void (__fastcall *sendCachedRequest)(RequestHandler *this);\n  bool (__fastcall *update)(RequestHandler *this);\n  bool (__fastcall *isDone)(RequestHandler *this);\n  void (__fastcall *onComplete)(RequestHandler *this);\n  bool (__fastcall *canSendRequest)(RequestHandler *this);\n  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);\n};\n\n")])])]),e("h3",{attrs:{id:"libraryimagerequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryimagerequest"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryImageRequest")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LibraryImageRequest : FileDataRequest\n{\n};\n\n")])])]),e("h3",{attrs:{id:"libraryimagerequest-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#libraryimagerequest-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LibraryImageRequest_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LibraryImageRequest_vtbl\n{\n  void (__fastcall *~RequestHandler)(RequestHandler *this);\n  void (__fastcall *send)(RequestHandler *this);\n  void (__fastcall *sendCachedRequest)(RequestHandler *this);\n  bool (__fastcall *update)(RequestHandler *this);\n  bool (__fastcall *isDone)(RequestHandler *this);\n  void (__fastcall *onComplete)(RequestHandler *this);\n  bool (__fastcall *canSendRequest)(RequestHandler *this);\n  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);\n};\n\n")])])]),e("h3",{attrs:{id:"lodestoneblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lodestoneblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("LodestoneBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LodestoneBlock : ActorBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lodestoneblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lodestoneblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LodestoneBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LodestoneBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),e("h3",{attrs:{id:"layerdetails-storage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerdetails-storage"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerDetails::Storage")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayerDetails::Storage\n{\n  unsigned __int64 mReadableBytes;\n  unsigned __int64 mWriteableBytes;\n  std::unique_ptr<char [0]> mReadStorage;\n  std::unique_ptr<char [0]> mWriteStorage;\n};\n\n")])])]),e("h3",{attrs:{id:"layerdetails-layerbase-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerdetails-layerbase-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerDetails::LayerBase_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LayerDetails::LayerBase_vtbl\n{\n  void (__fastcall *~LayerBase)(LayerDetails::LayerBase *this);\n  void (__fastcall *init)(LayerDetails::LayerBase *this, __int64);\n};\n\n")])])]),e("h3",{attrs:{id:"layerdetails-transferdata-float"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerdetails-transferdata-float"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerDetails::TransferData<float>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayerDetails::TransferData<float> : LayerDetails::Storage\n{\n};\n\n")])])]),e("h3",{attrs:{id:"layer-float"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layer-float"}},[t._v("#")]),t._v(" "),e("code",[t._v("Layer<float>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Layer<float> : LayerDetails::LayerBase\n{\n};\n\n")])])]),e("h3",{attrs:{id:"layer-float-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layer-float-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Layer<float>_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Layer<float>_vtbl\n{\n  void (__fastcall *~LayerBase)(LayerDetails::LayerBase *this);\n  void (__fastcall *init)(LayerDetails::LayerBase *this, __int64);\n  LayerDetails::TransferData<float> *(__fastcall *_allocateAndFill)(Layer<float> *this, LayerDetails::TransferData<float> *result, unsigned __int64, int, int, unsigned int, unsigned int);\n};\n\n")])])]),e("h3",{attrs:{id:"layerdetails-bufferaccessor-char"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerdetails-bufferaccessor-char"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerDetails::BufferAccessor<char>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj LayerDetails::BufferAccessor<char>\n{\n  char *mStorage;\n  unsigned __int64 mCount;\n};\n\n")])])]),e("h3",{attrs:{id:"layerdetails-bufferaccessor-float"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerdetails-bufferaccessor-float"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerDetails::BufferAccessor<float>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayerDetails::BufferAccessor<float>\n{\n  char *mStorage;\n  unsigned __int64 mCount;\n};\n\n")])])]),e("h3",{attrs:{id:"layerdetails-workingdata-float-char"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerdetails-workingdata-float-char"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerDetails::WorkingData<float,char>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayerDetails::WorkingData<float,char> : LayerDetails::Storage\n{\n  const LayerDetails::BufferAccessor<char> mParentArea;\n  LayerDetails::BufferAccessor<float> mResult;\n};\n\n")])])]),e("h3",{attrs:{id:"layerdetails-transferdata-char"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerdetails-transferdata-char"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerDetails::TransferData<char>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayerDetails::TransferData<char> : LayerDetails::Storage\n{\n};\n\n")])])]),e("h3",{attrs:{id:"layerdetails-bufferaccessor-float-typedbits"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerdetails-bufferaccessor-float-typedbits"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerDetails::BufferAccessor<float>::TypedBits")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayerDetails::BufferAccessor<float>::TypedBits\n{\n  char *mLocation;\n};\n\n")])])]),e("h3",{attrs:{id:"loottablecontext-builder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loottablecontext-builder"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootTableContext::Builder")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LootTableContext::Builder\n{\n  Level *mLevel;\n  BlockSource *mRegion;\n  float mLuck;\n  Actor *mThisEntity;\n  Player *mKillerPlayer;\n  const ActorDamageSource *mDeathSource;\n  float mExplosionRadius;\n  std::string mOriginalItemName;\n};\n\n")])])]),e("h3",{attrs:{id:"leashabledefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leashabledefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeashableDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LeashableDefinition\n{\n  float mSoftDistance;\n  float mHardDistance;\n  float mMaxDistance;\n  DefinitionTrigger mOnLeash;\n  DefinitionTrigger mOnUnleash;\n  bool mCanBeStolen;\n};\n\n")])])]),e("h3",{attrs:{id:"leashablecomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leashablecomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeashableComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeashableComponent : IEntityComponent\n{\n};\n\n")])])]),e("h3",{attrs:{id:"legacytradeabledefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacytradeabledefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyTradeableDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LegacyTradeableDefinition\n{\n  std::string mDisplayName;\n  std::string mTradeTablePath;\n  bool mUseNewTradeScreen;\n  bool mPersistTrades;\n  bool mConvertTradesEconomy;\n};\n\n")])])]),e("h3",{attrs:{id:"lookatcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LookAtComponent : IEntityComponent\n{\n  bool mSetTarget;\n  float mSearchRadius;\n  bool mAllowInvulnerable;\n  int mCoolingTime;\n};\n\n")])])]),e("h3",{attrs:{id:"lookcontrol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookcontrol"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookControl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LookControl : Control\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lookcontrol-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookcontrol-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookControl_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LookControl_vtbl\n{\n  void (__fastcall *~Control)(Control *this);\n  void (__fastcall *initializeInternal)(LookControl *this, Mob *);\n  void (__fastcall *tick)(LookControl *this, Mob *);\n};\n\n")])])]),e("h3",{attrs:{id:"legacytradeablecomponent-getinteraction-l17-lambda-92c5888b87b9a838aa19e047a1eced20"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacytradeablecomponent-getinteraction-l17-lambda-92c5888b87b9a838aa19e047a1eced20"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyTradeableComponent::getInteraction::__l17::<lambda_92c5888b87b9a838aa19e047a1eced20>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LegacyTradeableComponent::getInteraction::__l17::<lambda_92c5888b87b9a838aa19e047a1eced20>\n{\n  Player *player;\n  Actor *owner;\n  const bool useNewTradeScreen;\n};\n\n")])])]),e("h3",{attrs:{id:"leashablecomponent-getinteraction-l22-lambda-702674731951615cfb31cf33ab54eea3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leashablecomponent-getinteraction-l22-lambda-702674731951615cfb31cf33ab54eea3"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeashableComponent::getInteraction::__l22::<lambda_702674731951615cfb31cf33ab54eea3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeashableComponent::getInteraction::__l22::<lambda_702674731951615cfb31cf33ab54eea3>\n{\n  Actor *owner;\n  Player *player;\n  LeashableComponent *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"leashablecomponent-getinteraction-l11-lambda-bfec5b7a45ae662edfa6da94275f0ae2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leashablecomponent-getinteraction-l11-lambda-bfec5b7a45ae662edfa6da94275f0ae2"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeashableComponent::getInteraction::__l11::<lambda_bfec5b7a45ae662edfa6da94275f0ae2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeashableComponent::getInteraction::__l11::<lambda_bfec5b7a45ae662edfa6da94275f0ae2>\n{\n  Actor *owner;\n  LeashableComponent *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"leashabledefinition-buildschema-l2-lambda-3ad7096af803fcc3f75cab3f5e6e033d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leashabledefinition-buildschema-l2-lambda-3ad7096af803fcc3f75cab3f5e6e033d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeashableDefinition::buildSchema::__l2::<lambda_3ad7096af803fcc3f75cab3f5e6e033d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeashableDefinition::buildSchema::__l2::<lambda_3ad7096af803fcc3f75cab3f5e6e033d>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lookatposgoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatposgoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtPosGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LookAtPosGoal : Goal\n{\n  BlockPos mLookAt;\n  bool mIsLooking;\n  bool mRejectOther;\n  int mAngleOfViewX;\n  int mAngleOfViewY;\n  int mLookTime;\n  int mMinLookTime;\n  int mMaxLookTime;\n  float mProbability;\n  Mob *mMob;\n};\n\n")])])]),e("h3",{attrs:{id:"lookatposgoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatposgoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtPosGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LookAtPosGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),e("h3",{attrs:{id:"lookatsystem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatsystem"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtSystem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LookAtSystem : ITickingSystem\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lookatsystem-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatsystem-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtSystem_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LookAtSystem_vtbl\n{\n  void (__fastcall *~ITickingSystem)(ITickingSystem *this);\n  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);\n};\n\n")])])]),e("h3",{attrs:{id:"lookcontrolsystem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookcontrolsystem"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookControlSystem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LookControlSystem : ITickingSystem\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lookcontrolsystem-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookcontrolsystem-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookControlSystem_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LookControlSystem_vtbl\n{\n  void (__fastcall *~ITickingSystem)(ITickingSystem *this);\n  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldbsequentialfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldbsequentialfile"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbSequentialFile")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelDbSequentialFile : leveldb::SequentialFile\n{\n  Core::File mFile;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldbsequentialfile-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldbsequentialfile-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbSequentialFile_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelDbSequentialFile_vtbl\n{\n  void (__fastcall *~SequentialFile)(leveldb::SequentialFile *this);\n  leveldb::Status *(__fastcall *Read)(leveldb::SequentialFile *this, leveldb::Status *result, unsigned __int64, leveldb::Slice *, char *);\n  leveldb::Status *(__fastcall *Skip)(leveldb::SequentialFile *this, leveldb::Status *result, unsigned __int64);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldbrandomaccessfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldbrandomaccessfile"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbRandomAccessFile")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelDbRandomAccessFile : leveldb::RandomAccessFile\n{\n  Core::File mFile;\n  std::mutex mMutex;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldbrandomaccessfile-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldbrandomaccessfile-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbRandomAccessFile_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelDbRandomAccessFile_vtbl\n{\n  void (__fastcall *~RandomAccessFile)(leveldb::RandomAccessFile *this);\n  leveldb::Status *(__fastcall *Read)(leveldb::RandomAccessFile *this, leveldb::Status *result, unsigned __int64, unsigned __int64, leveldb::Slice *, char *);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldbwritablefile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldbwritablefile"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbWritableFile")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelDbWritableFile : leveldb::WritableFile\n{\n  Core::File mFile;\n  std::string mFilenameHackForManifestSync;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldbwritablefile-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldbwritablefile-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbWritableFile_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelDbWritableFile_vtbl\n{\n  void (__fastcall *~WritableFile)(leveldb::WritableFile *this);\n  leveldb::Status *(__fastcall *Append)(leveldb::WritableFile *this, leveldb::Status *result, const leveldb::Slice *);\n  leveldb::Status *(__fastcall *Close)(leveldb::WritableFile *this, leveldb::Status *result);\n  leveldb::Status *(__fastcall *Flush)(leveldb::WritableFile *this, leveldb::Status *result);\n  leveldb::Status *(__fastcall *Sync)(leveldb::WritableFile *this, leveldb::Status *result);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldbfilelock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldbfilelock"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbFileLock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelDbFileLock : leveldb::FileLock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leveldbfilelock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldbfilelock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbFileLock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelDbFileLock_vtbl\n{\n  void (__fastcall *~FileLock)(leveldb::FileLock *this);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldblogger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldblogger"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbLogger")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelDbLogger : leveldb::Logger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leveldblogger-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldblogger-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbLogger_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelDbLogger_vtbl\n{\n  void (__fastcall *~Logger)(leveldb::Logger *this);\n  void (__fastcall *Logv)(leveldb::Logger *this, const char *, char *);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldbenv-schedule-l2-lambda-f49969aee8341d0263f8b75ad776edc4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldbenv-schedule-l2-lambda-f49969aee8341d0263f8b75ad776edc4"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelDbEnv::Schedule::__l2::<lambda_f49969aee8341d0263f8b75ad776edc4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelDbEnv::Schedule::__l2::<lambda_f49969aee8341d0263f8b75ad776edc4>\n{\n  void (__fastcall *function)(void *);\n  void *arg;\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-zlibcompressorbase-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-zlibcompressorbase-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::ZlibCompressorBase_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::ZlibCompressorBase_vtbl\n{\n  void (__fastcall *~Compressor)(leveldb::Compressor *this);\n  void (__fastcall *compressImpl)(leveldb::Compressor *this, const char *, unsigned __int64, std::string *);\n  bool (__fastcall *decompress)(leveldb::Compressor *this, const char *, unsigned __int64, std::string *);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-zlibcompressor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-zlibcompressor"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::ZlibCompressor")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::ZlibCompressor : leveldb::ZlibCompressorBase\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-zlibcompressor-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-zlibcompressor-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::ZlibCompressor_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::ZlibCompressor_vtbl\n{\n  void (__fastcall *~Compressor)(leveldb::Compressor *this);\n  void (__fastcall *compressImpl)(leveldb::Compressor *this, const char *, unsigned __int64, std::string *);\n  bool (__fastcall *decompress)(leveldb::Compressor *this, const char *, unsigned __int64, std::string *);\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-zlibcompressorraw"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-zlibcompressorraw"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::ZlibCompressorRaw")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj leveldb::ZlibCompressorRaw : leveldb::ZlibCompressorBase\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leveldb-zlibcompressorraw-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveldb-zlibcompressorraw-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("leveldb::ZlibCompressorRaw_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ leveldb::ZlibCompressorRaw_vtbl\n{\n  void (__fastcall *~Compressor)(leveldb::Compressor *this);\n  void (__fastcall *compressImpl)(leveldb::Compressor *this, const char *, unsigned __int64, std::string *);\n  bool (__fastcall *decompress)(leveldb::Compressor *this, const char *, unsigned __int64, std::string *);\n};\n\n")])])]),e("h3",{attrs:{id:"localconnector-onremotedisconnected-l5-lambda-f93dfeaa3e76b9e290819e2fab7d0ef9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#localconnector-onremotedisconnected-l5-lambda-f93dfeaa3e76b9e290819e2fab7d0ef9"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocalConnector::onRemoteDisconnected::__l5::<lambda_f93dfeaa3e76b9e290819e2fab7d0ef9>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LocalConnector::onRemoteDisconnected::__l5::<lambda_f93dfeaa3e76b9e290819e2fab7d0ef9>\n{\n  NetworkIdentifier otherId;\n  LocalConnector *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"listcommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listcommand"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListCommand")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj ListCommand : ServerCommand\n{\n};\n\n")])])]),e("h3",{attrs:{id:"listcommand-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listcommand-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListCommand_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ ListCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),e("h3",{attrs:{id:"listdcommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listdcommand"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListDCommand")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) ListDCommand : ServerCommand\n{\n  _BYTE mDetails[4];\n};\n\n")])])]),e("h3",{attrs:{id:"listdcommand-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listdcommand-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListDCommand_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ ListDCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),e("h3",{attrs:{id:"locatecommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#locatecommand"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocateCommand")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LocateCommand : Command\n{\n  StructureFeatureType mFeature;\n};\n\n")])])]),e("h3",{attrs:{id:"locatecommand-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#locatecommand-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LocateCommand_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LocateCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),e("h3",{attrs:{id:"listcommand-execute-l15-lambda-0d606404f3730d0f1e0a107965271e32"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listcommand-execute-l15-lambda-0d606404f3730d0f1e0a107965271e32"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListCommand::execute::__l15::<lambda_0d606404f3730d0f1e0a107965271e32>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj ListCommand::execute::__l15::<lambda_0d606404f3730d0f1e0a107965271e32>\n{\n  std::vector<Player const *> *players;\n};\n\n")])])]),e("h3",{attrs:{id:"listcommand-execute-l13-lambda-2e7f0392e569b6bdc30e6bc9305fa0a4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listcommand-execute-l13-lambda-2e7f0392e569b6bdc30e6bc9305fa0a4"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListCommand::execute::__l13::<lambda_2e7f0392e569b6bdc30e6bc9305fa0a4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj ListCommand::execute::__l13::<lambda_2e7f0392e569b6bdc30e6bc9305fa0a4>\n{\n  std::vector<Player const *> *players;\n  std::string *resultList;\n};\n\n")])])]),e("h3",{attrs:{id:"loottabledefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#loottabledefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootTableDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LootTableDefinition\n{\n  std::string mFilePath;\n};\n\n")])])]),e("h3",{attrs:{id:"legacybodycontrol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacybodycontrol"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyBodyControl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LegacyBodyControl : BodyControl\n{\n};\n\n")])])]),e("h3",{attrs:{id:"legacybodycontrol-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#legacybodycontrol-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LegacyBodyControl_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LegacyBodyControl_vtbl\n{\n  void (__fastcall *~Control)(Control *this);\n  void (__fastcall *clientTick)(BodyControl *this, Mob *);\n};\n\n")])])]),e("h3",{attrs:{id:"llama"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#llama"}},[t._v("#")]),t._v(" "),e("code",[t._v("Llama")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Llama : Animal\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lookatblocknode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatblocknode"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtBlockNode")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LookAtBlockNode : BehaviorNode\n{\n  BlockPos mBlockPos;\n  int mDelayTicks;\n  int mDelayCounter;\n};\n\n")])])]),e("h3",{attrs:{id:"lookatblocknode-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatblocknode-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtBlockNode_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LookAtBlockNode_vtbl\n{\n  void (__fastcall *~BehaviorNode)(BehaviorNode *this);\n  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);\n  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);\n};\n\n")])])]),e("h3",{attrs:{id:"lookatblockdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatblockdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtBlockDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LookAtBlockDefinition : BehaviorDefinition\n{\n  BlockPos mBlockPos;\n  std::string mBlockPosId;\n};\n\n")])])]),e("h3",{attrs:{id:"lookatblockdefinition-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatblockdefinition-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtBlockDefinition_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LookAtBlockDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),e("h3",{attrs:{id:"lookatactornode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatactornode"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtActorNode")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LookAtActorNode : BehaviorNode\n{\n  int mDelayTicks;\n  int mDelayCounter;\n  ActorType mEntityType;\n  int mSearchRadius;\n};\n\n")])])]),e("h3",{attrs:{id:"lookatactornode-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatactornode-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtActorNode_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LookAtActorNode_vtbl\n{\n  void (__fastcall *~BehaviorNode)(BehaviorNode *this);\n  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);\n  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);\n};\n\n")])])]),e("h3",{attrs:{id:"lookatactordefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatactordefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtActorDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LookAtActorDefinition : BehaviorDefinition\n{\n  std::string mEntityName;\n  std::string mEntityType;\n  int mSearchRadius;\n  std::string mSearchRadiusId;\n};\n\n")])])]),e("h3",{attrs:{id:"lookatactordefinition-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lookatactordefinition-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LookAtActorDefinition_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LookAtActorDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),e("h3",{attrs:{id:"leashfenceknotactor-getinteraction-l5-lambda-fba8b1fcb26f3ee345fc375a962d8254"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leashfenceknotactor-getinteraction-l5-lambda-fba8b1fcb26f3ee345fc375a962d8254"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeashFenceKnotActor::getInteraction::__l5::<lambda_fba8b1fcb26f3ee345fc375a962d8254>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeashFenceKnotActor::getInteraction::__l5::<lambda_fba8b1fcb26f3ee345fc375a962d8254>\n{\n  LeashFenceKnotActor *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"leashfenceknotactor-numberofanimalsattached-l2-lambda-48e561cf7a23ad8053577180ab266e54"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leashfenceknotactor-numberofanimalsattached-l2-lambda-48e561cf7a23ad8053577180ab266e54"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeashFenceKnotActor::numberofAnimalsAttached::__l2::<lambda_48e561cf7a23ad8053577180ab266e54>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeashFenceKnotActor::numberofAnimalsAttached::__l2::<lambda_48e561cf7a23ad8053577180ab266e54>\n{\n  int *count;\n};\n\n")])])]),e("h3",{attrs:{id:"leashfenceknotactor-removeanimals-l2-lambda-3bbb238cec2a42e346a1795feb7cd16f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leashfenceknotactor-removeanimals-l2-lambda-3bbb238cec2a42e346a1795feb7cd16f"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeashFenceKnotActor::removeAnimals::__l2::<lambda_3bbb238cec2a42e346a1795feb7cd16f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeashFenceKnotActor::removeAnimals::__l2::<lambda_3bbb238cec2a42e346a1795feb7cd16f>\n{\n  Player *player;\n};\n\n")])])]),e("h3",{attrs:{id:"lavaslime"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lavaslime"}},[t._v("#")]),t._v(" "),e("code",[t._v("LavaSlime")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LavaSlime : Slime\n{\n};\n\n")])])]),e("h3",{attrs:{id:"largefireball"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#largefireball"}},[t._v("#")]),t._v(" "),e("code",[t._v("LargeFireball")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LargeFireball : Fireball\n{\n  int mExplosionPower;\n};\n\n")])])]),e("h3",{attrs:{id:"largefireball-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#largefireball-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LargeFireball_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LargeFireball_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  float (__fastcall *getInertia)(Fireball *this);\n  void (__fastcall *onHit)(Fireball *this, const HitResult *);\n  ParticleType (__fastcall *getTrailParticle)(Fireball *this);\n  bool (__fastcall *shouldBurn)(Fireball *this);\n};\n\n")])])]),e("h3",{attrs:{id:"llamaspit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#llamaspit"}},[t._v("#")]),t._v(" "),e("code",[t._v("LlamaSpit")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LlamaSpit : PredictableProjectile\n{\n  ActorUniqueID ownerId;\n  MovementInterpolator mInterpolation;\n};\n\n")])])]),e("h3",{attrs:{id:"llamaspit-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#llamaspit-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LlamaSpit_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LlamaSpit_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n};\n\n")])])]),e("h3",{attrs:{id:"levelcontainermodel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcontainermodel"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelContainerModel")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelContainerModel : ContainerModel\n{\n  Player *mPlayer;\n  BlockPos mBlockPos;\n  BlockActorType mBlockEntityType;\n  ActorUniqueID mEntityUniqueId;\n  std::vector<Container *> initContainerList;\n};\n\n")])])]),e("h3",{attrs:{id:"levelcontainermodel-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcontainermodel-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelContainerModel_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LevelContainerModel_vtbl\n{\n  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);\n  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);\n  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);\n  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);\n  void (__fastcall *postInit)(ContainerModel *this);\n  void (__fastcall *releaseResources)(ContainerModel *this);\n  int (__fastcall *getContainerSize)(ContainerModel *this);\n  int (__fastcall *getFilteredContainerSize)(ContainerModel *this);\n  void (__fastcall *tick)(ContainerModel *this, int);\n  ContainerWeakRef *(__fastcall *getContainerWeakRef)(ContainerModel *this, ContainerWeakRef *result);\n  const ItemStack *(__fastcall *getItemStack)(ContainerModel *this, int);\n  const std::vector<ItemStack> *(__fastcall *getItems)(ContainerModel *this);\n  const ItemInstance *(__fastcall *getItemInstance)(ContainerModel *this, int);\n  const ItemStackBase *(__fastcall *getItemStackBase)(ContainerModel *this, int);\n  bool (__fastcall *isItemInstanceBased)(ContainerModel *this);\n  void (__fastcall *setItem)(ContainerModel *this, int, const ItemStack *);\n  bool (__fastcall *isValid)(ContainerModel *this);\n  bool (__fastcall *isItemFiltered)(ContainerModel *this, const ItemStackBase *);\n  bool (__fastcall *isExpanableItemFiltered)(ContainerModel *this, int);\n  ContainerExpandStatus (__fastcall *getItemExpandStatus)(ContainerModel *this, int);\n  const std::string *(__fastcall *getItemGroupName)(ContainerModel *this, int);\n  void (__fastcall *switchItemExpando)(ContainerModel *this, int);\n  Container *(__fastcall *_getContainer)(ContainerModel *this);\n  int (__fastcall *_getContainerOffset)(ContainerModel *this);\n  void (__fastcall *_onItemChanged)(ContainerModel *this, int, const ItemStack *, const ItemStack *);\n};\n\n")])])]),e("h3",{attrs:{id:"levelcontainermanagermodel-postinit-l2-lambda-3dd4d1f2c36000a64e678bfd6b26033b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#levelcontainermanagermodel-postinit-l2-lambda-3dd4d1f2c36000a64e678bfd6b26033b"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelContainerManagerModel::_postInit::__l2::<lambda_3dd4d1f2c36000a64e678bfd6b26033b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelContainerManagerModel::_postInit::__l2::<lambda_3dd4d1f2c36000a64e678bfd6b26033b>\n{\n  LevelContainerManagerModel *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"leveleventcoordinator-sendlevelbiomesregistered-l2-lambda-ddc846bd8e8a8ff1387a315cf3b7d60c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventcoordinator-sendlevelbiomesregistered-l2-lambda-ddc846bd8e8a8ff1387a315cf3b7d60c"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventCoordinator::sendLevelBiomesRegistered::__l2::<lambda_ddc846bd8e8a8ff1387a315cf3b7d60c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelEventCoordinator::sendLevelBiomesRegistered::__l2::<lambda_ddc846bd8e8a8ff1387a315cf3b7d60c>\n{\n  BiomeRegistry *biomeRegistry;\n};\n\n")])])]),e("h3",{attrs:{id:"leveleventcoordinator-sendleveltick-l2-lambda-ec1aec075e5a64d264e03959a3191abd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventcoordinator-sendleveltick-l2-lambda-ec1aec075e5a64d264e03959a3191abd"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventCoordinator::sendLevelTick::__l2::<lambda_ec1aec075e5a64d264e03959a3191abd>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelEventCoordinator::sendLevelTick::__l2::<lambda_ec1aec075e5a64d264e03959a3191abd>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leveleventcoordinator-sendleveladdedactor-l2-lambda-2070b6ba94f287344509b3253827d448"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventcoordinator-sendleveladdedactor-l2-lambda-2070b6ba94f287344509b3253827d448"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventCoordinator::sendLevelAddedActor::__l2::<lambda_2070b6ba94f287344509b3253827d448>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelEventCoordinator::sendLevelAddedActor::__l2::<lambda_2070b6ba94f287344509b3253827d448>\n{\n  Level *level;\n  Actor *actor;\n};\n\n")])])]),e("h3",{attrs:{id:"leveleventcoordinator-sendlevelremovedactor-l2-lambda-e9c3114ff799af2f6b051c7a5dd1a2a5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventcoordinator-sendlevelremovedactor-l2-lambda-e9c3114ff799af2f6b051c7a5dd1a2a5"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventCoordinator::sendLevelRemovedActor::__l2::<lambda_e9c3114ff799af2f6b051c7a5dd1a2a5>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelEventCoordinator::sendLevelRemovedActor::__l2::<lambda_e9c3114ff799af2f6b051c7a5dd1a2a5>\n{\n  Level *level;\n  Actor *actor;\n};\n\n")])])]),e("h3",{attrs:{id:"leveleventcoordinator-sendlevelinitialized-l2-lambda-a4358936410fc0ba7f7d64f32435908c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leveleventcoordinator-sendlevelinitialized-l2-lambda-a4358936410fc0ba7f7d64f32435908c"}},[t._v("#")]),t._v(" "),e("code",[t._v("LevelEventCoordinator::sendLevelInitialized::__l2::<lambda_a4358936410fc0ba7f7d64f32435908c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LevelEventCoordinator::sendLevelInitialized::__l2::<lambda_a4358936410fc0ba7f7d64f32435908c>\n{\n  Level *level;\n};\n\n")])])]),e("h3",{attrs:{id:"lootenchant"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootenchant"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootEnchant")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LootEnchant : Enchant\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lootenchant-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootenchant-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootEnchant_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LootEnchant_vtbl\n{\n  void (__fastcall *~Enchant)(Enchant *this);\n  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);\n  int (__fastcall *getMinCost)(Enchant *this, int);\n  int (__fastcall *getMaxCost)(Enchant *this, int);\n  int (__fastcall *getMinLevel)(Enchant *this);\n  int (__fastcall *getMaxLevel)(Enchant *this);\n  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);\n  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);\n  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);\n  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);\n  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);\n  bool (__fastcall *isProtectionEnchant)(Enchant *this);\n  bool (__fastcall *isTreasureOnly)(Enchant *this);\n  bool (__fastcall *isDiscoverable)(Enchant *this);\n};\n\n")])])]),e("h3",{attrs:{id:"lingeringpotionitem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lingeringpotionitem"}},[t._v("#")]),t._v(" "),e("code",[t._v("LingeringPotionItem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) LingeringPotionItem : PotionItem\n{\n  TextureUVCoordinateSet mLingeringIcons[17];\n  _BYTE mLingeringPotionVariants[68];\n};\n\n")])])]),e("h3",{attrs:{id:"leafblockitem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leafblockitem"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeafBlockItem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeafBlockItem : BlockItem\n{\n  const Block *m_parentBlock;\n};\n\n")])])]),e("h3",{attrs:{id:"layerdetails-transferdata-biome"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerdetails-transferdata-biome"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerDetails::TransferData<Biome *>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LayerDetails::TransferData<Biome *> : LayerDetails::Storage\n{\n};\n\n")])])]),e("h3",{attrs:{id:"layer-biome-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layer-biome-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Layer<Biome *>_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Layer<Biome *>_vtbl\n{\n  void (__fastcall *~LayerBase)(LayerDetails::LayerBase *this);\n  void (__fastcall *init)(LayerDetails::LayerBase *this, __int64);\n  LayerDetails::TransferData<Biome *> *(__fastcall *_allocateAndFill)(Layer<Biome *> *this, LayerDetails::TransferData<Biome *> *result, unsigned __int64, int, int, unsigned int, unsigned int);\n};\n\n")])])]),e("h3",{attrs:{id:"layerbiomesource-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layerbiomesource-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LayerBiomeSource_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LayerBiomeSource_vtbl\n{\n  void (__fastcall *~BiomeSource)(BiomeSource *this);\n  void (__fastcall *fillBiomes)(BiomeSource *this, LevelChunk *);\n  BiomeArea *(__fastcall *getBiomeArea)(BiomeSource *this, BiomeArea *result, const BoundingBox *, unsigned int);\n  bool (__fastcall *containsOnly)(BiomeSource *this, int, int, int, gsl::span<int const ,-1>);\n  const Biome *(__fastcall *getBiome)(BiomeSource *this, int, int);\n};\n\n")])])]),e("h3",{attrs:{id:"lecternblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lecternblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("LecternBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj LecternBlock : ActorBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lecternblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lecternblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LecternBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LecternBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),e("h3",{attrs:{id:"lootcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LootComponent\n{\n  std::string mLootTable;\n};\n\n")])])]),e("h3",{attrs:{id:"listenonremovecomponentdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listenonremovecomponentdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListenOnRemoveComponentDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) ListenOnRemoveComponentDescription : BlockComponentDescription\n{\n  bool mValue;\n};\n\n")])])]),e("h3",{attrs:{id:"listenonremovecomponentdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listenonremovecomponentdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListenOnRemoveComponentDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ ListenOnRemoveComponentDescription_vtbl\n{\n  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);\n  const std::string *(__fastcall *getName)(BlockComponentDescription *this);\n  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);\n  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,BlockComponentGroupDescription> > *, const BlockComponentFactory *);\n  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"listenonremovecomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#listenonremovecomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("ListenOnRemoveComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj ListenOnRemoveComponent\n{\n  bool mValue;\n};\n\n")])])]),e("h3",{attrs:{id:"lootcomponentdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootcomponentdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootComponentDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LootComponentDescription : BlockComponentDescription\n{\n  std::string mLootTable;\n};\n\n")])])]),e("h3",{attrs:{id:"lootcomponentdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootcomponentdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootComponentDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LootComponentDescription_vtbl\n{\n  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);\n  const std::string *(__fastcall *getName)(BlockComponentDescription *this);\n  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);\n  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,BlockComponentGroupDescription> > *, const BlockComponentFactory *);\n  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"lootcomponentdescription-buildschema-l2-lambda-3945d8a3b1d9e1908875af1d7a69fb2d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lootcomponentdescription-buildschema-l2-lambda-3945d8a3b1d9e1908875af1d7a69fb2d"}},[t._v("#")]),t._v(" "),e("code",[t._v("LootComponentDescription::buildSchema::__l2::<lambda_3945d8a3b1d9e1908875af1d7a69fb2d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LootComponentDescription::buildSchema::__l2::<lambda_3945d8a3b1d9e1908875af1d7a69fb2d>\n{\n  const BlockComponentFactory *factory;\n};\n\n")])])]),e("h3",{attrs:{id:"ladderblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ladderblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("LadderBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LadderBlock : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"ladderblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ladderblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LadderBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LadderBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"lanternblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lanternblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("LanternBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LanternBlock : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lanternblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lanternblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LanternBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LanternBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"leverblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leverblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeverBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LeverBlock : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"leverblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#leverblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LeverBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LeverBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *updateShape)(LeverBlock *this, BlockSource *, const BlockPos *);\n};\n\n")])])]),e("h3",{attrs:{id:"lightblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lightblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("LightBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LightBlock : AirBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"lightblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lightblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("LightBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ LightBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"lightgemblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lightgemblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("LightGemBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj LightGemBlock : BlockLegacy\n{\n};\n\n")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);