(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{467:function(t,a,e){"use strict";e.r(a);var s=e(27),o=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"s-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#s-4"}},[t._v("#")]),t._v(" S~4")]),t._v(" "),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-93622f71b2d1b3da07fa44fe633e4d31"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-93622f71b2d1b3da07fa44fe633e4d31"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_93622f71b2d1b3da07fa44fe633e4d31>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_93622f71b2d1b3da07fa44fe633e4d31>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-a4dc38abafd6bb1f7f898eecf86647d8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-a4dc38abafd6bb1f7f898eecf86647d8"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_a4dc38abafd6bb1f7f898eecf86647d8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_a4dc38abafd6bb1f7f898eecf86647d8>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-599c3e3b52bab211657dd2b12258525f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-599c3e3b52bab211657dd2b12258525f"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_599c3e3b52bab211657dd2b12258525f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_599c3e3b52bab211657dd2b12258525f>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-843fbf8f658197deabd5d66aca0b5d2c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-843fbf8f658197deabd5d66aca0b5d2c"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_843fbf8f658197deabd5d66aca0b5d2c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_843fbf8f658197deabd5d66aca0b5d2c>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-44713807c694a34247116ac42237d921"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-44713807c694a34247116ac42237d921"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_44713807c694a34247116ac42237d921>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_44713807c694a34247116ac42237d921>\n{\n  RedstoneScreenType <args_0>;\n};\n\n")])])]),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-2dc9e558cd4384c30952098dabdf69a6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-2dc9e558cd4384c30952098dabdf69a6"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_2dc9e558cd4384c30952098dabdf69a6>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_2dc9e558cd4384c30952098dabdf69a6>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-bf6bd47537effc5005cc8af06f921a6b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-bf6bd47537effc5005cc8af06f921a6b"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_bf6bd47537effc5005cc8af06f921a6b>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_bf6bd47537effc5005cc8af06f921a6b>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-0ebaf0371ff09f45dab2f48e7253d4f7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-0ebaf0371ff09f45dab2f48e7253d4f7"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_0ebaf0371ff09f45dab2f48e7253d4f7>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_0ebaf0371ff09f45dab2f48e7253d4f7>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-b7f24edb716c239e18ac72d4f3c6733d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-b7f24edb716c239e18ac72d4f3c6733d"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_b7f24edb716c239e18ac72d4f3c6733d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_b7f24edb716c239e18ac72d4f3c6733d>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-a36afaf8a1afa0684c71071850b6dc59"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-a36afaf8a1afa0684c71071850b6dc59"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_a36afaf8a1afa0684c71071850b6dc59>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_a36afaf8a1afa0684c71071850b6dc59>\n{\n  const HashedString <args_0>;\n};\n\n")])])]),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-3d8d548af9390a3e89d693eb21f9053e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-3d8d548af9390a3e89d693eb21f9053e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_3d8d548af9390a3e89d693eb21f9053e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_3d8d548af9390a3e89d693eb21f9053e>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-0b5b22390697ce2a7c10dc25a536ea1d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-0b5b22390697ce2a7c10dc25a536ea1d"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_0b5b22390697ce2a7c10dc25a536ea1d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_0b5b22390697ce2a7c10dc25a536ea1d>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenecreationutils-bindingamescreencreator-l2-lambda-ce0fde19203617737ec3f13040734e6d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenecreationutils-bindingamescreencreator-l2-lambda-ce0fde19203617737ec3f13040734e6d"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_ce0fde19203617737ec3f13040734e6d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneCreationUtils::bindInGameScreenCreator::__l2::<lambda_ce0fde19203617737ec3f13040734e6d>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"social-lambda-a70a5a9432f0adfeb3ed076c01d0ac59"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-a70a5a9432f0adfeb3ed076c01d0ac59"}},[t._v("#")]),t._v(" "),a("code",[t._v("Social::<lambda_a70a5a9432f0adfeb3ed076c01d0ac59>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Social::<lambda_a70a5a9432f0adfeb3ed076c01d0ac59>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"social-lambda-52ce7f45f90c5c2a0dd6d8adeb080876"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-52ce7f45f90c5c2a0dd6d8adeb080876"}},[t._v("#")]),t._v(" "),a("code",[t._v("Social::<lambda_52ce7f45f90c5c2a0dd6d8adeb080876>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Social::<lambda_52ce7f45f90c5c2a0dd6d8adeb080876>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"social-lambda-b7ca127a156cd86fc46069d07be131eb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-b7ca127a156cd86fc46069d07be131eb"}},[t._v("#")]),t._v(" "),a("code",[t._v("Social::<lambda_b7ca127a156cd86fc46069d07be131eb>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Social::<lambda_b7ca127a156cd86fc46069d07be131eb>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"social-lambda-2ffb157acc314cd7a898b1a1b9dafa1a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#social-lambda-2ffb157acc314cd7a898b1a1b9dafa1a"}},[t._v("#")]),t._v(" "),a("code",[t._v("Social::<lambda_2ffb157acc314cd7a898b1a1b9dafa1a>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Social::<lambda_2ffb157acc314cd7a898b1a1b9dafa1a>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scaffoldingclimbersystem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scaffoldingclimbersystem"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScaffoldingClimberSystem")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScaffoldingClimberSystem : ITickingSystem\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scaffoldingclimbersystem-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scaffoldingclimbersystem-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScaffoldingClimberSystem_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ScaffoldingClimberSystem_vtbl\n{\n  void (__fastcall *~ITickingSystem)(ITickingSystem *this);\n  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);\n};\n\n")])])]),a("h3",{attrs:{id:"scalebyagesystem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scalebyagesystem"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScaleByAgeSystem")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScaleByAgeSystem : ITickingSystem\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scalebyagesystem-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scalebyagesystem-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScaleByAgeSystem_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ScaleByAgeSystem_vtbl\n{\n  void (__fastcall *~ITickingSystem)(ITickingSystem *this);\n  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);\n};\n\n")])])]),a("h3",{attrs:{id:"sleepstate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sleepstate"}},[t._v("#")]),t._v(" "),a("code",[t._v("SleepState")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SleepState : PetSleepWithOwnerState\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sleepstate-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sleepstate-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SleepState_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SleepState_vtbl\n{\n  void (__fastcall *~PetSleepWithOwnerState)(PetSleepWithOwnerState *this);\n  void (__fastcall *tick)(PetSleepWithOwnerState *this);\n  void (__fastcall *start)(PetSleepWithOwnerState *this);\n  void (__fastcall *stop)(PetSleepWithOwnerState *this);\n};\n\n")])])]),a("h3",{attrs:{id:"scaredgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scaredgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScaredGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) ScaredGoal : Goal\n{\n  Mob *mMob;\n  int mInterval;\n};\n\n")])])]),a("h3",{attrs:{id:"scaredgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scaredgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScaredGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ScaredGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"shareitemsgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shareitemsgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShareItemsGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ShareItemsGoal : Goal\n{\n  Mob *mMob;\n  int mThrowCountdown;\n  int mSearchRange;\n  float mSpeedModifier;\n  float mGoalRadiusSq;\n  int mTimeToRecalcPath;\n  std::vector<MobDescriptor> mMobFilters;\n  ItemStack mItemToShare;\n  std::unique_ptr<Path> mPath;\n};\n\n")])])]),a("h3",{attrs:{id:"shareitemsgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shareitemsgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShareItemsGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ShareItemsGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"shulkerpeekgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shulkerpeekgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShulkerPeekGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ShulkerPeekGoal : Goal\n{\n  int mPeekTime;\n  Mob *mMob;\n};\n\n")])])]),a("h3",{attrs:{id:"shulkerpeekgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shulkerpeekgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShulkerPeekGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ShulkerPeekGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"sitgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sitgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SitGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SitGoal : Goal\n{\n  Mob *mMob;\n};\n\n")])])]),a("h3",{attrs:{id:"sitgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sitgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SitGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SitGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"skeletonhorsetrapgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skeletonhorsetrapgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SkeletonHorseTrapGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SkeletonHorseTrapGoal : Goal\n{\n  Horse *mHorse;\n  int mTrapLifeTicks;\n  float mTriggerDistance;\n};\n\n")])])]),a("h3",{attrs:{id:"skeletonhorsetrapgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skeletonhorsetrapgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SkeletonHorseTrapGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SkeletonHorseTrapGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"sleepgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sleepgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SleepGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SleepGoal : MoveToPOIGoal\n{\n  Mob *mMob;\n  BedHelper mBedHelper;\n  BlockPos mBedPos;\n  Vec3 mSleepPos;\n  Vec3 mBedOffset;\n  Vec3 mExitPos;\n  int mBedDir;\n  float mBodyRot;\n  const float mSleepYOffset;\n  const float mSleepColliderHeight;\n  const float mSleepColliderWidth;\n  Vec2 mDefaultColliderDim;\n  const Tick mGoalCooldownMax;\n  Tick mCooldownTick;\n  bool mWoken;\n  bool mGoalEndedEarly;\n};\n\n")])])]),a("h3",{attrs:{id:"sleepgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sleepgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SleepGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SleepGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n  bool (__fastcall *hasReachedTarget)(BaseMoveToGoal *this);\n  bool (__fastcall *isValidTarget)(BaseMoveToGoal *this, BlockSource *, const BlockPos *);\n  int (__fastcall *_nextStartTick)(BaseMoveToGoal *this);\n  bool (__fastcall *_canReach)(BaseMoveToGoal *this, const BlockPos *);\n  void (__fastcall *_moveToBlock)(BaseMoveToGoal *this);\n  Vec3 *(__fastcall *_getTargetPosition)(BaseMoveToGoal *this, Vec3 *result);\n  unsigned __int64 (__fastcall *_getRepathTime)(BaseMoveToGoal *this);\n  bool (__fastcall *getPOI)(MoveToPOIGoal *this, POIType);\n  std::weak_ptr<POIInstance> *(__fastcall *_getOwnedPOI)(MoveToPOIGoal *this, std::weak_ptr<POIInstance> *result, POIType);\n};\n\n")])])]),a("h3",{attrs:{id:"slimeattackdefinition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimeattackdefinition"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeAttackDefinition")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SlimeAttackDefinition : BaseGoalDefinition\n{\n  float mMaxRotationX;\n  float mMaxRotationY;\n  float mSpeedMultiplier;\n  float mGrowTiredCooldownTime;\n  bool mSetPersistent;\n};\n\n")])])]),a("h3",{attrs:{id:"slimeattackdefinition-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimeattackdefinition-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeAttackDefinition_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SlimeAttackDefinition_vtbl\n{\n  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);\n  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);\n  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);\n};\n\n")])])]),a("h3",{attrs:{id:"slimeattackgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimeattackgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeAttackGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SlimeAttackGoal : Goal\n{\n  Mob *mMob;\n  int mGrowTiredTicks;\n  int mGrowTiredCooldownTicks;\n  float mMaxRotationX;\n  float mMaxRotationY;\n  float mSpeedMultiplier;\n  float mSetPersistent;\n};\n\n")])])]),a("h3",{attrs:{id:"slimeattackgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimeattackgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeAttackGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SlimeAttackGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"slimefloatdefinition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimefloatdefinition"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeFloatDefinition")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SlimeFloatDefinition : BaseGoalDefinition\n{\n  float mJumpChancePercentage;\n  float mSpeedMultiplier;\n};\n\n")])])]),a("h3",{attrs:{id:"slimefloatdefinition-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimefloatdefinition-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeFloatDefinition_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SlimeFloatDefinition_vtbl\n{\n  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);\n  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);\n  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);\n};\n\n")])])]),a("h3",{attrs:{id:"slimefloatgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimefloatgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeFloatGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SlimeFloatGoal : Goal\n{\n  Mob *mMob;\n  float mJumpChancePercentage;\n  float mSpeedMultiplier;\n};\n\n")])])]),a("h3",{attrs:{id:"slimefloatgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimefloatgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeFloatGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SlimeFloatGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"slimekeeponjumpingdefinition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimekeeponjumpingdefinition"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeKeepOnJumpingDefinition")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SlimeKeepOnJumpingDefinition : BaseGoalDefinition\n{\n  float mSpeedMultiplier;\n};\n\n")])])]),a("h3",{attrs:{id:"slimekeeponjumpingdefinition-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimekeeponjumpingdefinition-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeKeepOnJumpingDefinition_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SlimeKeepOnJumpingDefinition_vtbl\n{\n  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);\n  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);\n  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);\n};\n\n")])])]),a("h3",{attrs:{id:"slimekeeponjumpinggoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimekeeponjumpinggoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeKeepOnJumpingGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SlimeKeepOnJumpingGoal : Goal\n{\n  Mob *mMob;\n  float mSpeedMultiplier;\n};\n\n")])])]),a("h3",{attrs:{id:"slimekeeponjumpinggoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimekeeponjumpinggoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeKeepOnJumpingGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SlimeKeepOnJumpingGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"slimerandomdirectiondefinition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimerandomdirectiondefinition"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeRandomDirectionDefinition")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SlimeRandomDirectionDefinition : BaseGoalDefinition\n{\n  int mAddRandomTime;\n  int mTurnRange;\n  float mMinChangeDirectionTime;\n};\n\n")])])]),a("h3",{attrs:{id:"slimerandomdirectiondefinition-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimerandomdirectiondefinition-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeRandomDirectionDefinition_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SlimeRandomDirectionDefinition_vtbl\n{\n  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);\n  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);\n  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);\n};\n\n")])])]),a("h3",{attrs:{id:"slimerandomdirectiongoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimerandomdirectiongoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeRandomDirectionGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SlimeRandomDirectionGoal : Goal\n{\n  Mob *mMob;\n  int mNextRandomizeTicks;\n  int mMinChangeDirectionTicks;\n  int mAddRandomTicks;\n  int mTurnRange;\n  float mChosenDegrees;\n};\n\n")])])]),a("h3",{attrs:{id:"slimerandomdirectiongoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slimerandomdirectiongoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SlimeRandomDirectionGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SlimeRandomDirectionGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"snackgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#snackgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SnackGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SnackGoal : Goal\n{\n  Mob *mMob;\n  std::vector<ItemDescriptor> mItems;\n  unsigned __int64 mCooldown;\n  const int mSnackCooldownTotal;\n  const int mCooldownMin;\n  const int mStopChance;\n  TempEPtr<Actor> mTarget;\n  std::unique_ptr<Path> mPath;\n};\n\n")])])]),a("h3",{attrs:{id:"snackgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#snackgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SnackGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SnackGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n  int (__fastcall *getRandomEatingEnd)(SnackGoal *this);\n};\n\n")])])]),a("h3",{attrs:{id:"sneezegoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sneezegoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SneezeGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SneezeGoal : Goal\n{\n  int mCooldown;\n  int mCooldownTimer;\n  float mProbability;\n  int mPreSneezeTimer;\n  float mDropItemChance;\n  std::string mLootTable;\n  LevelSoundEvent mSneezeSound;\n  LevelSoundEvent mPreSneezeSound;\n  float mPrepareTime;\n  const std::vector<MobDescriptor> mReactMobFilters;\n  float mReactWithin;\n  Mob *mMob;\n};\n\n")])])]),a("h3",{attrs:{id:"sneezegoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sneezegoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SneezeGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SneezeGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"stalkandpounceontargetgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stalkandpounceontargetgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("StalkAndPounceOnTargetGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) StalkAndPounceOnTargetGoal : Goal\n{\n  float mStalkSpeed;\n  float mStalkingMaxDistanceSqr;\n  float mLeapHeight;\n  float mLeapDistance;\n  float mMaxPounceDistanceSqr;\n  float mStrikeDistanceSqr;\n  int mInterestedTicks;\n  int mStuckTicks;\n  Tick mEndTimestamp;\n  ActorFilterGroup mStuckBlockList;\n  _BYTE mState[1];\n  Mob *mMob;\n  bool mSetPersistent;\n};\n\n")])])]),a("h3",{attrs:{id:"stalkandpounceontargetgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stalkandpounceontargetgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("StalkAndPounceOnTargetGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ StalkAndPounceOnTargetGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"stompattackdefinition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stompattackdefinition"}},[t._v("#")]),t._v(" "),a("code",[t._v("StompAttackDefinition")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StompAttackDefinition : MeleeAttackDefinition\n{\n  float mStompRangeMultiplier;\n  float mNoDamageRangeMultiplier;\n};\n\n")])])]),a("h3",{attrs:{id:"stompattackdefinition-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stompattackdefinition-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("StompAttackDefinition_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ StompAttackDefinition_vtbl\n{\n  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);\n  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);\n  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);\n};\n\n")])])]),a("h3",{attrs:{id:"stompattackgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stompattackgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("StompAttackGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StompAttackGoal : MeleeAttackGoal\n{\n  float mStompRangeMultiplier;\n  float mNoDamageRangeMultiplier;\n};\n\n")])])]),a("h3",{attrs:{id:"stompattackgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stompattackgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("StompAttackGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ StompAttackGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n  void (__fastcall *_attemptMoveToTarget)(MeleeAttackGoal *this, Actor *);\n  void (__fastcall *_attemptAttackTarget)(MeleeAttackGoal *this, Actor *, float, float, float);\n};\n\n")])])]),a("h3",{attrs:{id:"stompblockgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stompblockgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("StompBlockGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) StompBlockGoal : BaseMoveToBlockGoal\n{\n  const Block *mBlockToRemove;\n  int mTicksSinceReachedGoal;\n};\n\n")])])]),a("h3",{attrs:{id:"stompblockgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stompblockgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("StompBlockGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ StompBlockGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n  bool (__fastcall *hasReachedTarget)(BaseMoveToGoal *this);\n  bool (__fastcall *isValidTarget)(BaseMoveToGoal *this, BlockSource *, const BlockPos *);\n  int (__fastcall *_nextStartTick)(BaseMoveToGoal *this);\n  bool (__fastcall *_canReach)(BaseMoveToGoal *this, const BlockPos *);\n  void (__fastcall *_moveToBlock)(BaseMoveToGoal *this);\n  Vec3 *(__fastcall *_getTargetPosition)(BaseMoveToGoal *this, Vec3 *result);\n  unsigned __int64 (__fastcall *_getRepathTime)(BaseMoveToGoal *this);\n  bool (__fastcall *findTargetBlock)(BaseMoveToBlockGoal *this);\n  void (__fastcall *_createBreakProgressParticles)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);\n  void (__fastcall *_createDestroyParticles)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);\n  void (__fastcall *_playBreakProgressSound)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);\n  void (__fastcall *_playDestroySound)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);\n};\n\n")])])]),a("h3",{attrs:{id:"stompblockgoal-findtargetblock-l2-lambda-a693b3bf6a29e3a3addea54b11f109b6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stompblockgoal-findtargetblock-l2-lambda-a693b3bf6a29e3a3addea54b11f109b6"}},[t._v("#")]),t._v(" "),a("code",[t._v("StompBlockGoal::findTargetBlock::__l2::<lambda_a693b3bf6a29e3a3addea54b11f109b6>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StompBlockGoal::findTargetBlock::__l2::<lambda_a693b3bf6a29e3a3addea54b11f109b6>\n{\n  StompBlockGoal *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"stompegggoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stompegggoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("StompEggGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StompEggGoal : StompBlockGoal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"stompegggoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stompegggoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("StompEggGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ StompEggGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n  bool (__fastcall *hasReachedTarget)(BaseMoveToGoal *this);\n  bool (__fastcall *isValidTarget)(BaseMoveToGoal *this, BlockSource *, const BlockPos *);\n  int (__fastcall *_nextStartTick)(BaseMoveToGoal *this);\n  bool (__fastcall *_canReach)(BaseMoveToGoal *this, const BlockPos *);\n  void (__fastcall *_moveToBlock)(BaseMoveToGoal *this);\n  Vec3 *(__fastcall *_getTargetPosition)(BaseMoveToGoal *this, Vec3 *result);\n  unsigned __int64 (__fastcall *_getRepathTime)(BaseMoveToGoal *this);\n  bool (__fastcall *findTargetBlock)(BaseMoveToBlockGoal *this);\n  void (__fastcall *_createBreakProgressParticles)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);\n  void (__fastcall *_createDestroyParticles)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);\n  void (__fastcall *_playBreakProgressSound)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);\n  void (__fastcall *_playDestroySound)(StompBlockGoal *this, Level *, BlockSource *, BlockPos);\n};\n\n")])])]),a("h3",{attrs:{id:"strolltowardsvillagegoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strolltowardsvillagegoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("StrollTowardsVillageGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) StrollTowardsVillageGoal : MoveToVillageGoal\n{\n  float mStartChance;\n};\n\n")])])]),a("h3",{attrs:{id:"strolltowardsvillagegoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strolltowardsvillagegoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("StrollTowardsVillageGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ StrollTowardsVillageGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n  bool (__fastcall *hasReachedTarget)(BaseMoveToGoal *this);\n  bool (__fastcall *isValidTarget)(BaseMoveToGoal *this, BlockSource *, const BlockPos *);\n  int (__fastcall *_nextStartTick)(BaseMoveToGoal *this);\n  bool (__fastcall *_canReach)(BaseMoveToGoal *this, const BlockPos *);\n  void (__fastcall *_moveToBlock)(BaseMoveToGoal *this);\n  Vec3 *(__fastcall *_getTargetPosition)(BaseMoveToGoal *this, Vec3 *result);\n  unsigned __int64 (__fastcall *_getRepathTime)(BaseMoveToGoal *this);\n  BlockPos *(__fastcall *_selectRandomPosInVillage)(MoveToVillageGoal *this, BlockPos *result);\n};\n\n")])])]),a("h3",{attrs:{id:"swellgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swellgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwellGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SwellGoal : Goal\n{\n  Creeper *mCreeper;\n  float mStartSwellDist;\n  float mStopSwellDist;\n  TempEPtr<Actor> mTarget;\n};\n\n")])])]),a("h3",{attrs:{id:"swellgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swellgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwellGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SwellGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"swimidledefinition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swimidledefinition"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwimIdleDefinition")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SwimIdleDefinition : BaseGoalDefinition\n{\n  float mSuccessRate;\n  float mIdleTime;\n};\n\n")])])]),a("h3",{attrs:{id:"swimidledefinition-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swimidledefinition-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwimIdleDefinition_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SwimIdleDefinition_vtbl\n{\n  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);\n  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);\n  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);\n};\n\n")])])]),a("h3",{attrs:{id:"swimidlegoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swimidlegoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwimIdleGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SwimIdleGoal : Goal\n{\n  Mob *mMob;\n  int mTicks;\n  int mIdleTicks;\n  float mSuccessRate;\n  Vec3 mWantedPosition;\n};\n\n")])])]),a("h3",{attrs:{id:"swimidlegoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swimidlegoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwimIdleGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SwimIdleGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"swimwanderdefinition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swimwanderdefinition"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwimWanderDefinition")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SwimWanderDefinition : BaseGoalDefinition\n{\n  float mInterval;\n  float mLookAheadDistance;\n  float mSpeedMultiplier;\n  float mWanderTime;\n};\n\n")])])]),a("h3",{attrs:{id:"swimwanderdefinition-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swimwanderdefinition-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwimWanderDefinition_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SwimWanderDefinition_vtbl\n{\n  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);\n  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);\n  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);\n};\n\n")])])]),a("h3",{attrs:{id:"swimwandergoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swimwandergoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwimWanderGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SwimWanderGoal : Goal\n{\n  Mob *mMob;\n  int mTicks;\n  int mWanderTicks;\n  float mInterval;\n  float mLookAheadDistance;\n  float mSpeedMultiplier;\n  Vec3 mWanted;\n};\n\n")])])]),a("h3",{attrs:{id:"swimwandergoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swimwandergoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwimWanderGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SwimWanderGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"swimwithentitydefinition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swimwithentitydefinition"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwimWithEntityDefinition")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SwimWithEntityDefinition : BaseGoalDefinition\n{\n  float mSuccessRate;\n  float mChanceToStop;\n  float mIntervalRefreshTime;\n  float mCatchUpThreshold;\n  float mMatchDirectionThreshold;\n  float mCatchUpMultiplier;\n  float mSpeedMultiplier;\n  float mSearchRange;\n  float mStopDistance;\n  std::vector<MobDescriptor> mTargetTypes;\n};\n\n")])])]),a("h3",{attrs:{id:"swimwithentitydefinition-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swimwithentitydefinition-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwimWithEntityDefinition_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SwimWithEntityDefinition_vtbl\n{\n  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);\n  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);\n  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);\n};\n\n")])])]),a("h3",{attrs:{id:"swimwithentitygoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swimwithentitygoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwimWithEntityGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SwimWithEntityGoal : Goal\n{\n  Mob *mMob;\n  TempEPtr<Actor> mFollowing;\n  int mIntervalRefreshTicks;\n  int mIntervalTicks;\n  float mChanceToStop;\n  float mSuccessRate;\n  float mCatchUpThreshold;\n  float mMatchDirectionThreshold;\n  float mCatchUpMultiplier;\n  float mSpeedMultiplier;\n  float mSearchRange;\n  float mStopDistance;\n  SwimWithEntityGoal::EntityGoals mCurrentGoal;\n  std::vector<MobDescriptor> mTargetTypes;\n};\n\n")])])]),a("h3",{attrs:{id:"swimwithentitygoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swimwithentitygoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwimWithEntityGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SwimWithEntityGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"swoopattackdefinition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swoopattackdefinition"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwoopAttackDefinition")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SwoopAttackDefinition : BaseGoalDefinition\n{\n  float mDamageReach;\n  float mSpeedMultiplier;\n  FloatRange mCooldownTime;\n};\n\n")])])]),a("h3",{attrs:{id:"swoopattackdefinition-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swoopattackdefinition-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwoopAttackDefinition_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SwoopAttackDefinition_vtbl\n{\n  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);\n  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);\n  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);\n};\n\n")])])]),a("h3",{attrs:{id:"swoopattackgoal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swoopattackgoal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwoopAttackGoal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SwoopAttackGoal : Goal\n{\n  Mob *mMob;\n  bool mHurtTarget;\n  int mAttackTicks;\n  float mDamageReach;\n  float mSpeedMultiplier;\n  FloatRange mCooldownTicks;\n};\n\n")])])]),a("h3",{attrs:{id:"swoopattackgoal-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swoopattackgoal-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwoopAttackGoal_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SwoopAttackGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),a("h3",{attrs:{id:"swoopattackdefinition-buildschema-l2-lambda-0a8e5f314faa38471a21cb2cdc3a3253"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swoopattackdefinition-buildschema-l2-lambda-0a8e5f314faa38471a21cb2cdc3a3253"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwoopAttackDefinition::buildSchema::__l2::<lambda_0a8e5f314faa38471a21cb2cdc3a3253>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SwoopAttackDefinition::buildSchema::__l2::<lambda_0a8e5f314faa38471a21cb2cdc3a3253>\n{\n  bool cooldownJsonRequired;\n  std::string cooldownField;\n};\n\n")])])]),a("h3",{attrs:{id:"swoopattackdefinition-buildschema-l2-lambda-dac5f2c072a8807319193c03bd4687d5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swoopattackdefinition-buildschema-l2-lambda-dac5f2c072a8807319193c03bd4687d5"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwoopAttackDefinition::buildSchema::__l2::<lambda_dac5f2c072a8807319193c03bd4687d5>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SwoopAttackDefinition::buildSchema::__l2::<lambda_dac5f2c072a8807319193c03bd4687d5>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"smithingtablecontainermanagercontroller-setupcallbacks-l8-lambda-7fd07675839948997f4dbbeb20ca8892"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablecontainermanagercontroller-setupcallbacks-l8-lambda-7fd07675839948997f4dbbeb20ca8892"}},[t._v("#")]),t._v(" "),a("code",[t._v("SmithingTableContainerManagerController::_setupCallbacks::__l8::<lambda_7fd07675839948997f4dbbeb20ca8892>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SmithingTableContainerManagerController::_setupCallbacks::__l8::<lambda_7fd07675839948997f4dbbeb20ca8892>\n{\n  SmithingTableContainerManagerController *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"smithingtablecontainermanagercontroller-setupcallbacks-l5-lambda-6f8bbbdf91b02ffa39d5070bc0fe2f56"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smithingtablecontainermanagercontroller-setupcallbacks-l5-lambda-6f8bbbdf91b02ffa39d5070bc0fe2f56"}},[t._v("#")]),t._v(" "),a("code",[t._v("SmithingTableContainerManagerController::_setupCallbacks::__l5::<lambda_6f8bbbdf91b02ffa39d5070bc0fe2f56>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SmithingTableContainerManagerController::_setupCallbacks::__l5::<lambda_6f8bbbdf91b02ffa39d5070bc0fe2f56>\n{\n  SmithingTableContainerManagerController *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"stonecuttercontainermanagercontroller-setupcallbacks-l2-lambda-14fc1e693546ebebc2676629b20a40fb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stonecuttercontainermanagercontroller-setupcallbacks-l2-lambda-14fc1e693546ebebc2676629b20a40fb"}},[t._v("#")]),t._v(" "),a("code",[t._v("StonecutterContainerManagerController::_setupCallbacks::__l2::<lambda_14fc1e693546ebebc2676629b20a40fb>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StonecutterContainerManagerController::_setupCallbacks::__l2::<lambda_14fc1e693546ebebc2676629b20a40fb>\n{\n  StonecutterContainerManagerController *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"stonecuttercontainermanagermodel-getresultforitem-l2-lambda-941bbeac7973bc74b49ff8e09c55ff70"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stonecuttercontainermanagermodel-getresultforitem-l2-lambda-941bbeac7973bc74b49ff8e09c55ff70"}},[t._v("#")]),t._v(" "),a("code",[t._v("StonecutterContainerManagerModel::getResultForItem::__l2::<lambda_941bbeac7973bc74b49ff8e09c55ff70>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StonecutterContainerManagerModel::getResultForItem::__l2::<lambda_941bbeac7973bc74b49ff8e09c55ff70>\n{\n  std::vector<std::reference_wrapper<Recipe const >> *recipes;\n};\n\n")])])]),a("h3",{attrs:{id:"spikefeature-endspike"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spikefeature-endspike"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpikeFeature::EndSpike")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpikeFeature::EndSpike\n{\n  const int mCenterX;\n  const int mCenterZ;\n  const int mRadius;\n  const int mHeight;\n  const bool mGuarded;\n  const AABB mTopBoundingBox;\n};\n\n")])])]),a("h3",{attrs:{id:"spikefeature-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spikefeature-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpikeFeature_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SpikeFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);\n};\n\n")])])]),a("h3",{attrs:{id:"scatteredfeaturestart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatteredfeaturestart"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatteredFeatureStart")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatteredFeatureStart : StructureStart\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatteredfeaturestart-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatteredfeaturestart-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatteredFeatureStart_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ScatteredFeatureStart_vtbl\n{\n  void (__fastcall *~StructureStart)(StructureStart *this);\n  bool (__fastcall *postProcess)(StructureStart *this, BlockSource *, Random *, const BoundingBox *);\n  bool (__fastcall *isValid)(StructureStart *this);\n  StructureFeatureType (__fastcall *getType)(StructureStart *this);\n};\n\n")])])]),a("h3",{attrs:{id:"strongholdfeature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strongholdfeature"}},[t._v("#")]),t._v(" "),a("code",[t._v("StrongholdFeature")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StrongholdFeature : StructureFeature\n{\n  bool isSpotSelected;\n  const Biome *forceBiomeOverride;\n  ChunkPos selectedChunks[3];\n  VillageFeature *villages;\n  std::mutex positionMutex;\n  const int TOTAL_VILLAGE_STRONGHOLDS;\n  const int GRID_SIZE;\n  const int GRID_INSET;\n  const int MIN_STRONGHOLD_DISTANCE;\n  const float STRONGHOLD_CHANCE;\n  const int MAX_GRID_SEARCH_DISTANCE;\n};\n\n")])])]),a("h3",{attrs:{id:"strongholdfeature-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strongholdfeature-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("StrongholdFeature_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ StrongholdFeature_vtbl\n{\n  void (__fastcall *~StructureFeature)(StructureFeature *this);\n  bool (__fastcall *postProcess)(StructureFeature *this, BlockSource *, Random *, int, int);\n  bool (__fastcall *getNearestGeneratedFeature)(StructureFeature *this, Dimension *, BiomeSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *isFeatureChunk)(StructureFeature *this, const BiomeSource *, Random *, const ChunkPos *, unsigned int);\n  std::unique_ptr<StructureStart> *(__fastcall *createStructureStart)(StructureFeature *this, std::unique_ptr<StructureStart> *result, Dimension *, BiomeSource *, Random *, const ChunkPos *);\n  StructureStart *(__fastcall *getStructureAt)(StructureFeature *this, int, int, int);\n  std::vector<BlockPos> *(__fastcall *getGuesstimatedFeaturePositions)(StructureFeature *this, std::vector<BlockPos> *result);\n};\n\n")])])]),a("h3",{attrs:{id:"shipwreckfeature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shipwreckfeature"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShipwreckFeature")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ShipwreckFeature : StructureFeature\n{\n  int mSpacing;\n  int mMinSeparation;\n  OceanMonumentFeature *mMonument;\n  std::vector<int> mAllowedBiomes;\n};\n\n")])])]),a("h3",{attrs:{id:"shipwreckfeature-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shipwreckfeature-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShipwreckFeature_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ShipwreckFeature_vtbl\n{\n  void (__fastcall *~StructureFeature)(StructureFeature *this);\n  bool (__fastcall *postProcess)(StructureFeature *this, BlockSource *, Random *, int, int);\n  bool (__fastcall *getNearestGeneratedFeature)(StructureFeature *this, Dimension *, BiomeSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *isFeatureChunk)(StructureFeature *this, const BiomeSource *, Random *, const ChunkPos *, unsigned int);\n  std::unique_ptr<StructureStart> *(__fastcall *createStructureStart)(StructureFeature *this, std::unique_ptr<StructureStart> *result, Dimension *, BiomeSource *, Random *, const ChunkPos *);\n  StructureStart *(__fastcall *getStructureAt)(StructureFeature *this, int, int, int);\n  std::vector<BlockPos> *(__fastcall *getGuesstimatedFeaturePositions)(StructureFeature *this, std::vector<BlockPos> *result);\n};\n\n")])])]),a("h3",{attrs:{id:"shipwreckstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shipwreckstart"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShipwreckStart")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ShipwreckStart : StructureStart\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shipwreckstart-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shipwreckstart-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShipwreckStart_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ShipwreckStart_vtbl\n{\n  void (__fastcall *~StructureStart)(StructureStart *this);\n  bool (__fastcall *postProcess)(StructureStart *this, BlockSource *, Random *, const BoundingBox *);\n  bool (__fastcall *isValid)(StructureStart *this);\n  StructureFeatureType (__fastcall *getType)(StructureStart *this);\n};\n\n")])])]),a("h3",{attrs:{id:"shipwreckpiece"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shipwreckpiece"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShipwreckPiece")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ShipwreckPiece : StructurePiece\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shipwreckpiece-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shipwreckpiece-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShipwreckPiece_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ShipwreckPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"strongholdstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strongholdstart"}},[t._v("#")]),t._v(" "),a("code",[t._v("StrongholdStart")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) StrongholdStart : StructureStart\n{\n  bool valid;\n};\n\n")])])]),a("h3",{attrs:{id:"strongholdstart-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strongholdstart-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("StrongholdStart_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ StrongholdStart_vtbl\n{\n  void (__fastcall *~StructureStart)(StructureStart *this);\n  bool (__fastcall *postProcess)(StructureStart *this, BlockSource *, Random *, const BoundingBox *);\n  bool (__fastcall *isValid)(StructureStart *this);\n  StructureFeatureType (__fastcall *getType)(StructureStart *this);\n};\n\n")])])]),a("h3",{attrs:{id:"sandfeature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sandfeature"}},[t._v("#")]),t._v(" "),a("code",[t._v("SandFeature")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SandFeature : Feature\n{\n  const Block *mBlock;\n  int mRadius;\n};\n\n")])])]),a("h3",{attrs:{id:"sandfeature-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sandfeature-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SandFeature_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SandFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);\n};\n\n")])])]),a("h3",{attrs:{id:"springfeature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springfeature"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpringFeature")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpringFeature : Feature\n{\n  const Block *mBlock;\n};\n\n")])])]),a("h3",{attrs:{id:"springfeature-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springfeature-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpringFeature_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SpringFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);\n};\n\n")])])]),a("h3",{attrs:{id:"seaanemonefeature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seaanemonefeature"}},[t._v("#")]),t._v(" "),a("code",[t._v("SeaAnemoneFeature")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SeaAnemoneFeature : Feature\n{\n};\n\n")])])]),a("h3",{attrs:{id:"seaanemonefeature-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seaanemonefeature-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SeaAnemoneFeature_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SeaAnemoneFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);\n};\n\n")])])]),a("h3",{attrs:{id:"seagrassfeature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seagrassfeature"}},[t._v("#")]),t._v(" "),a("code",[t._v("SeagrassFeature")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SeagrassFeature : Feature\n{\n};\n\n")])])]),a("h3",{attrs:{id:"seagrassfeature-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seagrassfeature-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SeagrassFeature_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SeagrassFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);\n};\n\n")])])]),a("h3",{attrs:{id:"seapicklefeature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seapicklefeature"}},[t._v("#")]),t._v(" "),a("code",[t._v("SeaPickleFeature")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SeaPickleFeature : Feature\n{\n};\n\n")])])]),a("h3",{attrs:{id:"seapicklefeature-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seapicklefeature-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SeaPickleFeature_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SeaPickleFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreetrunk-buildschema-l2-lambda-9a0cf54a7c6987b75629f9dc8e25d931"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreetrunk-buildschema-l2-lambda-9a0cf54a7c6987b75629f9dc8e25d931"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeTrunk::_buildSchema::__l2::<lambda_9a0cf54a7c6987b75629f9dc8e25d931>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::<lambda_9a0cf54a7c6987b75629f9dc8e25d931>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreetrunk-buildschema-l4-lambda-5a49cb9530c9848feed416a429bb7578"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreetrunk-buildschema-l4-lambda-5a49cb9530c9848feed416a429bb7578"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeTrunk::_buildSchema::__l4::<lambda_5a49cb9530c9848feed416a429bb7578>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeTrunk::_buildSchema::__l4::<lambda_5a49cb9530c9848feed416a429bb7578>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreetrunk-buildschema-l2-lambda-aa946525ce16594a79edba5c0ce3c281"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreetrunk-buildschema-l2-lambda-aa946525ce16594a79edba5c0ce3c281"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeTrunk::_buildSchema::__l2::<lambda_aa946525ce16594a79edba5c0ce3c281>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::<lambda_aa946525ce16594a79edba5c0ce3c281>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreetrunk-buildschema-l2-lambda-334c50db7f7943517c1d62b1a1f6ed19"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreetrunk-buildschema-l2-lambda-334c50db7f7943517c1d62b1a1f6ed19"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeTrunk::_buildSchema::__l2::<lambda_334c50db7f7943517c1d62b1a1f6ed19>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::<lambda_334c50db7f7943517c1d62b1a1f6ed19>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreetrunk-buildschema-l3-lambda-47acba9ca575e196af6184deb709b75f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreetrunk-buildschema-l3-lambda-47acba9ca575e196af6184deb709b75f"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeTrunk::_buildSchema::__l3::<lambda_47acba9ca575e196af6184deb709b75f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeTrunk::_buildSchema::__l3::<lambda_47acba9ca575e196af6184deb709b75f>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreetrunk-buildschema-l2-lambda-2694a72f79fa4fb7ed9ec7d7aeab4a73"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreetrunk-buildschema-l2-lambda-2694a72f79fa4fb7ed9ec7d7aeab4a73"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeTrunk::_buildSchema::__l2::<lambda_2694a72f79fa4fb7ed9ec7d7aeab4a73>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::<lambda_2694a72f79fa4fb7ed9ec7d7aeab4a73>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreetrunk-buildschema-l2-lambda-7204e36fc61c7f88675eae865e9c7faf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreetrunk-buildschema-l2-lambda-7204e36fc61c7f88675eae865e9c7faf"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeTrunk::_buildSchema::__l2::<lambda_7204e36fc61c7f88675eae865e9c7faf>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::<lambda_7204e36fc61c7f88675eae865e9c7faf>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-4f2736b071532fdaed6c3238c29de24e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-4f2736b071532fdaed6c3238c29de24e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_4f2736b071532fdaed6c3238c29de24e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_4f2736b071532fdaed6c3238c29de24e>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-8fdc9b990dea9ddb2781ac8baaf6f522"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-8fdc9b990dea9ddb2781ac8baaf6f522"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_8fdc9b990dea9ddb2781ac8baaf6f522>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_8fdc9b990dea9ddb2781ac8baaf6f522>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-f6e5d4c154a8ae9bd1f6062d56bb7f2c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-f6e5d4c154a8ae9bd1f6062d56bb7f2c"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_f6e5d4c154a8ae9bd1f6062d56bb7f2c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_f6e5d4c154a8ae9bd1f6062d56bb7f2c>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-5fd9c82cf29ce0f35711c88be0cbb321"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-5fd9c82cf29ce0f35711c88be0cbb321"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_5fd9c82cf29ce0f35711c88be0cbb321>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_5fd9c82cf29ce0f35711c88be0cbb321>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-6b8601fb6dc02f88ec8688cedf2edab9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-6b8601fb6dc02f88ec8688cedf2edab9"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_6b8601fb6dc02f88ec8688cedf2edab9>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_6b8601fb6dc02f88ec8688cedf2edab9>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l5-lambda-8a5617fb33e81e3200dd8bc1f270cae1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l5-lambda-8a5617fb33e81e3200dd8bc1f270cae1"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l5::<lambda_8a5617fb33e81e3200dd8bc1f270cae1>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l5::<lambda_8a5617fb33e81e3200dd8bc1f270cae1>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-18810eaec2e6274e1efb268878dc3223"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-18810eaec2e6274e1efb268878dc3223"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_18810eaec2e6274e1efb268878dc3223>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_18810eaec2e6274e1efb268878dc3223>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-633d5d73bf0d4ff5fb3df6ad3999b270"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-633d5d73bf0d4ff5fb3df6ad3999b270"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_633d5d73bf0d4ff5fb3df6ad3999b270>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_633d5d73bf0d4ff5fb3df6ad3999b270>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-f2a04e346fc5c98f20440d9e14936534"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-f2a04e346fc5c98f20440d9e14936534"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_f2a04e346fc5c98f20440d9e14936534>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_f2a04e346fc5c98f20440d9e14936534>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l4-lambda-77c8da8048774a10c2ccfe7c1faf3c6d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l4-lambda-77c8da8048774a10c2ccfe7c1faf3c6d"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l4::<lambda_77c8da8048774a10c2ccfe7c1faf3c6d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l4::<lambda_77c8da8048774a10c2ccfe7c1faf3c6d>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l4-lambda-cd0696f13ce9c1d0a0684a62f58acccf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l4-lambda-cd0696f13ce9c1d0a0684a62f58acccf"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l4::<lambda_cd0696f13ce9c1d0a0684a62f58acccf>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l4::<lambda_cd0696f13ce9c1d0a0684a62f58acccf>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-0eefe2a7ccefc732975aba87eb8f6491"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-0eefe2a7ccefc732975aba87eb8f6491"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_0eefe2a7ccefc732975aba87eb8f6491>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_0eefe2a7ccefc732975aba87eb8f6491>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-44126bd2db340a1b088a36a59ab8f28d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-44126bd2db340a1b088a36a59ab8f28d"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_44126bd2db340a1b088a36a59ab8f28d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_44126bd2db340a1b088a36a59ab8f28d>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l3-lambda-fa648e9934b0a3209964fba61308bc56"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l3-lambda-fa648e9934b0a3209964fba61308bc56"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l3::<lambda_fa648e9934b0a3209964fba61308bc56>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l3::<lambda_fa648e9934b0a3209964fba61308bc56>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l3-lambda-9239166c63a95c8d3353ef96d31987cf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l3-lambda-9239166c63a95c8d3353ef96d31987cf"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l3::<lambda_9239166c63a95c8d3353ef96d31987cf>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l3::<lambda_9239166c63a95c8d3353ef96d31987cf>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-d107e4e3f3cf13351d394e09260d3385"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-d107e4e3f3cf13351d394e09260d3385"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_d107e4e3f3cf13351d394e09260d3385>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_d107e4e3f3cf13351d394e09260d3385>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-fca7866f235039823ff3afefd1b4d428"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-fca7866f235039823ff3afefd1b4d428"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_fca7866f235039823ff3afefd1b4d428>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_fca7866f235039823ff3afefd1b4d428>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-401c47c46ba1b3035efaf6e498058cf3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-401c47c46ba1b3035efaf6e498058cf3"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_401c47c46ba1b3035efaf6e498058cf3>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_401c47c46ba1b3035efaf6e498058cf3>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-99ca4703c28310cf1b5d42a8a68d1b8e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-99ca4703c28310cf1b5d42a8a68d1b8e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_99ca4703c28310cf1b5d42a8a68d1b8e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_99ca4703c28310cf1b5d42a8a68d1b8e>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-17d26e6de326e0cb30a78ea9675b8c02"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-17d26e6de326e0cb30a78ea9675b8c02"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_17d26e6de326e0cb30a78ea9675b8c02>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_17d26e6de326e0cb30a78ea9675b8c02>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-297f1d7cada4032c574fd76d19fb9c3f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-297f1d7cada4032c574fd76d19fb9c3f"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_297f1d7cada4032c574fd76d19fb9c3f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_297f1d7cada4032c574fd76d19fb9c3f>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-d0af4e4571eece2f793be4451608e3f8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-d0af4e4571eece2f793be4451608e3f8"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_d0af4e4571eece2f793be4451608e3f8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_d0af4e4571eece2f793be4451608e3f8>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-66f16c7c6c79bb568769181120decd24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-66f16c7c6c79bb568769181120decd24"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_66f16c7c6c79bb568769181120decd24>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_66f16c7c6c79bb568769181120decd24>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l4-lambda-1e212d0f28d8e1c31753c88b2200c09c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l4-lambda-1e212d0f28d8e1c31753c88b2200c09c"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l4::<lambda_1e212d0f28d8e1c31753c88b2200c09c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l4::<lambda_1e212d0f28d8e1c31753c88b2200c09c>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l4-lambda-413cf5e39448ade55c26a9f72b911c3f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l4-lambda-413cf5e39448ade55c26a9f72b911c3f"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l4::<lambda_413cf5e39448ade55c26a9f72b911c3f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l4::<lambda_413cf5e39448ade55c26a9f72b911c3f>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-2b1dec13cb427f4a2c5893153eb1ccfb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-2b1dec13cb427f4a2c5893153eb1ccfb"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_2b1dec13cb427f4a2c5893153eb1ccfb>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_2b1dec13cb427f4a2c5893153eb1ccfb>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-b0526add3214a40b1f63dc26b9bec28d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-b0526add3214a40b1f63dc26b9bec28d"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_b0526add3214a40b1f63dc26b9bec28d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_b0526add3214a40b1f63dc26b9bec28d>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l3-lambda-9b8ce1f677434b80763cdd6dc239f214"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l3-lambda-9b8ce1f677434b80763cdd6dc239f214"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l3::<lambda_9b8ce1f677434b80763cdd6dc239f214>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l3::<lambda_9b8ce1f677434b80763cdd6dc239f214>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l3-lambda-eccc61c7bc240398106f0c3ec97076bb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l3-lambda-eccc61c7bc240398106f0c3ec97076bb"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l3::<lambda_eccc61c7bc240398106f0c3ec97076bb>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l3::<lambda_eccc61c7bc240398106f0c3ec97076bb>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-9105a6e584fc9f5b2e1653f92d74c379"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-9105a6e584fc9f5b2e1653f92d74c379"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_9105a6e584fc9f5b2e1653f92d74c379>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_9105a6e584fc9f5b2e1653f92d74c379>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-a0fd6c49d498a24c3b9bbf2f9aa7545f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-a0fd6c49d498a24c3b9bbf2f9aa7545f"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_a0fd6c49d498a24c3b9bbf2f9aa7545f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_a0fd6c49d498a24c3b9bbf2f9aa7545f>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-1db25be528727c880487320b6fe0653e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-1db25be528727c880487320b6fe0653e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_1db25be528727c880487320b6fe0653e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_1db25be528727c880487320b6fe0653e>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-9ee29b475dc6eac67a5ef09bf23aa45c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-9ee29b475dc6eac67a5ef09bf23aa45c"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_9ee29b475dc6eac67a5ef09bf23aa45c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_9ee29b475dc6eac67a5ef09bf23aa45c>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-7b952491334165ac96498525aca14203"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-7b952491334165ac96498525aca14203"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_7b952491334165ac96498525aca14203>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_7b952491334165ac96498525aca14203>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l5-lambda-96fb45bf078dfc128c134291bd87f0ca"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l5-lambda-96fb45bf078dfc128c134291bd87f0ca"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l5::<lambda_96fb45bf078dfc128c134291bd87f0ca>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l5::<lambda_96fb45bf078dfc128c134291bd87f0ca>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-38fd965631aa6711f037f9057add2524"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-38fd965631aa6711f037f9057add2524"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_38fd965631aa6711f037f9057add2524>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_38fd965631aa6711f037f9057add2524>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-115e85a690f241af304488eebedeb75b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-115e85a690f241af304488eebedeb75b"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_115e85a690f241af304488eebedeb75b>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_115e85a690f241af304488eebedeb75b>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-8088bcbb51f3e94fa86fc3e4425ccd25"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-8088bcbb51f3e94fa86fc3e4425ccd25"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_8088bcbb51f3e94fa86fc3e4425ccd25>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_8088bcbb51f3e94fa86fc3e4425ccd25>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l4-lambda-f0c0b10dbc699410ad3ed1c03f581df4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l4-lambda-f0c0b10dbc699410ad3ed1c03f581df4"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l4::<lambda_f0c0b10dbc699410ad3ed1c03f581df4>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l4::<lambda_f0c0b10dbc699410ad3ed1c03f581df4>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l4-lambda-b1ed281f6e775bfc2d4f3f8e4f04ba1c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l4-lambda-b1ed281f6e775bfc2d4f3f8e4f04ba1c"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l4::<lambda_b1ed281f6e775bfc2d4f3f8e4f04ba1c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l4::<lambda_b1ed281f6e775bfc2d4f3f8e4f04ba1c>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-6108a2c04376bc528045d0627f45713d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-6108a2c04376bc528045d0627f45713d"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_6108a2c04376bc528045d0627f45713d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_6108a2c04376bc528045d0627f45713d>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-c670f8d9a276d5fde9772c8a3b6e2d11"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-c670f8d9a276d5fde9772c8a3b6e2d11"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_c670f8d9a276d5fde9772c8a3b6e2d11>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_c670f8d9a276d5fde9772c8a3b6e2d11>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l3-lambda-aec916c82bceefd18b7ad1999ca05487"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l3-lambda-aec916c82bceefd18b7ad1999ca05487"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l3::<lambda_aec916c82bceefd18b7ad1999ca05487>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l3::<lambda_aec916c82bceefd18b7ad1999ca05487>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l3-lambda-0007908e8fc98706aac256d2be0c4318"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l3-lambda-0007908e8fc98706aac256d2be0c4318"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l3::<lambda_0007908e8fc98706aac256d2be0c4318>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l3::<lambda_0007908e8fc98706aac256d2be0c4318>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatteredfeaturepiece"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatteredfeaturepiece"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatteredFeaturePiece")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatteredFeaturePiece : StructurePiece\n{\n  int mWidth;\n  int mHeight;\n  int mDepth;\n  int mHeightPosition;\n};\n\n")])])]),a("h3",{attrs:{id:"scatteredfeaturepiece-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatteredfeaturepiece-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatteredFeaturePiece_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ScatteredFeaturePiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"swamplandhut"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swamplandhut"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwamplandHut")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SwamplandHut : ScatteredFeaturePiece\n{\n  bool mSpawnedWitch;\n};\n\n")])])]),a("h3",{attrs:{id:"swamplandhut-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swamplandhut-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SwamplandHut_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SwamplandHut_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"strongholdpiece-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strongholdpiece-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("StrongholdPiece_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ StrongholdPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shstairsdown"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shstairsdown"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHStairsDown")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SHStairsDown : StrongholdPiece\n{\n  bool isSource;\n};\n\n")])])]),a("h3",{attrs:{id:"shstairsdown-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shstairsdown-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHStairsDown_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHStairsDown_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shportalroom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shportalroom"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHPortalRoom")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SHPortalRoom : StrongholdPiece\n{\n  bool hasPlacedMobSpawner;\n};\n\n")])])]),a("h3",{attrs:{id:"shportalroom-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shportalroom-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHPortalRoom_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHPortalRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shstartpiece"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shstartpiece"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHStartPiece")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SHStartPiece : SHStairsDown\n{\n  std::vector<StructurePiece *> pendingChildren;\n  SHPortalRoom *portalRoom;\n  std::string imposedPiece;\n  std::string previousPiece;\n  std::vector<PieceWeight> pieceWeights;\n};\n\n")])])]),a("h3",{attrs:{id:"shstartpiece-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shstartpiece-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHStartPiece_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHStartPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shchestcorridor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shchestcorridor"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHChestCorridor")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SHChestCorridor : StrongholdPiece\n{\n  bool hasPlacedChest;\n};\n\n")])])]),a("h3",{attrs:{id:"shchestcorridor-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shchestcorridor-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHChestCorridor_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHChestCorridor_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shfillercorridor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shfillercorridor"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHFillerCorridor")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SHFillerCorridor : StrongholdPiece\n{\n  int steps;\n};\n\n")])])]),a("h3",{attrs:{id:"shfillercorridor-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shfillercorridor-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHFillerCorridor_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHFillerCorridor_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shfivecrossing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shfivecrossing"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHFiveCrossing")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SHFiveCrossing : StrongholdPiece\n{\n  bool leftHigh;\n  bool leftLow;\n  bool rightHigh;\n  bool rightLow;\n};\n\n")])])]),a("h3",{attrs:{id:"shfivecrossing-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shfivecrossing-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHFiveCrossing_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHFiveCrossing_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shleftturn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shleftturn"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHLeftTurn")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SHLeftTurn : StrongholdPiece\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shleftturn-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shleftturn-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHLeftTurn_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHLeftTurn_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shrightturn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shrightturn"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHRightTurn")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SHRightTurn : StrongholdPiece\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shrightturn-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shrightturn-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHRightTurn_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHRightTurn_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shlibrary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shlibrary"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHLibrary")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SHLibrary : StrongholdPiece\n{\n  bool isTall;\n};\n\n")])])]),a("h3",{attrs:{id:"shlibrary-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shlibrary-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHLibrary_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHLibrary_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shprisonhall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shprisonhall"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHPrisonHall")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SHPrisonHall : StrongholdPiece\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shprisonhall-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shprisonhall-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHPrisonHall_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHPrisonHall_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shroomcrossing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shroomcrossing"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHRoomCrossing")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SHRoomCrossing : StrongholdPiece\n{\n  int type;\n};\n\n")])])]),a("h3",{attrs:{id:"shroomcrossing-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shroomcrossing-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHRoomCrossing_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHRoomCrossing_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shstraight"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shstraight"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHStraight")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SHStraight : StrongholdPiece\n{\n  bool leftChild;\n  bool rightChild;\n};\n\n")])])]),a("h3",{attrs:{id:"shstraight-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shstraight-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHStraight_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHStraight_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"shstraightstairsdown"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shstraightstairsdown"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHStraightStairsDown")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SHStraightStairsDown : StrongholdPiece\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shstraightstairsdown-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shstraightstairsdown-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHStraightStairsDown_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SHStraightStairsDown_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),a("h3",{attrs:{id:"smoothstoneselector"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smoothstoneselector"}},[t._v("#")]),t._v(" "),a("code",[t._v("SmoothStoneSelector")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SmoothStoneSelector : BlockSelector\n{\n};\n\n")])])]),a("h3",{attrs:{id:"smoothstoneselector-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smoothstoneselector-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SmoothStoneSelector_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SmoothStoneSelector_vtbl\n{\n  void (__fastcall *~BlockSelector)(BlockSelector *this);\n  const Block *(__fastcall *next)(BlockSelector *this, Random *, int, int, int, bool);\n};\n\n")])])]),a("h3",{attrs:{id:"sharedcounter-endcrystalitem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-endcrystalitem"}},[t._v("#")]),t._v(" "),a("code",[t._v("SharedCounter<EndCrystalItem>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SharedCounter<EndCrystalItem>\n{\n  EndCrystalItem *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),a("h3",{attrs:{id:"sharedptr-endcrystalitem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sharedptr-endcrystalitem"}},[t._v("#")]),t._v(" "),a("code",[t._v("SharedPtr<EndCrystalItem>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SharedPtr<EndCrystalItem>\n{\n  SharedCounter<EndCrystalItem> *pc;\n};\n\n")])])]),a("h3",{attrs:{id:"sharedcounter-endgatewayblock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sharedcounter-endgatewayblock"}},[t._v("#")]),t._v(" "),a("code",[t._v("SharedCounter<EndGatewayBlock>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SharedCounter<EndGatewayBlock>\n{\n  EndGatewayBlock *ptr;\n  std::atomic<int> share_count;\n  std::atomic<int> weak_count;\n};\n\n")])])]),a("h3",{attrs:{id:"soundchannelfmod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soundchannelfmod"}},[t._v("#")]),t._v(" "),a("code",[t._v("SoundChannelFMOD")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SoundChannelFMOD\n{\n};\n\n")])])]),a("h3",{attrs:{id:"soundsystemfmod-addtosoundcache-l5-lambda-cae3fd833bb655085bfe054d224c3470-l2-lambda-9b09a02bff452da82691cbf9ff79d1cd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soundsystemfmod-addtosoundcache-l5-lambda-cae3fd833bb655085bfe054d224c3470-l2-lambda-9b09a02bff452da82691cbf9ff79d1cd"}},[t._v("#")]),t._v(" "),a("code",[t._v("SoundSystemFMOD::_addToSoundCache::__l5::<lambda_cae3fd833bb655085bfe054d224c3470>::()::__l2::<lambda_9b09a02bff452da82691cbf9ff79d1cd>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SoundSystemFMOD::_addToSoundCache::__l5::<lambda_cae3fd833bb655085bfe054d224c3470>::()::__l2::<lambda_9b09a02bff452da82691cbf9ff79d1cd>\n{\n  FMOD::System *system;\n};\n\n")])])]),a("h3",{attrs:{id:"soundsystemfmod-updatemusicstatus-l5-lambda-8360d204e655f2c1c10b888daad4dfc3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soundsystemfmod-updatemusicstatus-l5-lambda-8360d204e655f2c1c10b888daad4dfc3"}},[t._v("#")]),t._v(" "),a("code",[t._v("SoundSystemFMOD::_updateMusicStatus::__l5::<lambda_8360d204e655f2c1c10b888daad4dfc3>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SoundSystemFMOD::_updateMusicStatus::__l5::<lambda_8360d204e655f2c1c10b888daad4dfc3>\n{\n  SoundSystemFMOD *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"soundsystemfmod-stopmusic-l8-lambda-6ef4ca1ed178cf81809ef2edf360f6ea"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soundsystemfmod-stopmusic-l8-lambda-6ef4ca1ed178cf81809ef2edf360f6ea"}},[t._v("#")]),t._v(" "),a("code",[t._v("SoundSystemFMOD::stopMusic::__l8::<lambda_6ef4ca1ed178cf81809ef2edf360f6ea>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SoundSystemFMOD::stopMusic::__l8::<lambda_6ef4ca1ed178cf81809ef2edf360f6ea>\n{\n  SoundSystemFMOD *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"soundsystemfmod-loadrawfrommemory-l8-lambda-5bb05d132cbf8074618a264696cff1ab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soundsystemfmod-loadrawfrommemory-l8-lambda-5bb05d132cbf8074618a264696cff1ab"}},[t._v("#")]),t._v(" "),a("code",[t._v("SoundSystemFMOD::loadRawFromMemory::__l8::<lambda_5bb05d132cbf8074618a264696cff1ab>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SoundSystemFMOD::loadRawFromMemory::__l8::<lambda_5bb05d132cbf8074618a264696cff1ab>\n{\n  int numchannels;\n  int defaultfrequency;\n  SoundFormat format;\n};\n\n")])])]),a("h3",{attrs:{id:"soundsystemfmod-loadasync-l43-lambda-9e3fdf78c49eb3088301e0fd4fc6aa36"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soundsystemfmod-loadasync-l43-lambda-9e3fdf78c49eb3088301e0fd4fc6aa36"}},[t._v("#")]),t._v(" "),a("code",[t._v("SoundSystemFMOD::loadAsync::__l43::<lambda_9e3fdf78c49eb3088301e0fd4fc6aa36>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SoundSystemFMOD::loadAsync::__l43::<lambda_9e3fdf78c49eb3088301e0fd4fc6aa36>\n{\n  std::shared_ptr<Bedrock::Threading::AsyncDeferredResultT<bool> > resultTask;\n  const Core::Path soundName;\n  SoundSystemFMOD *const __this;\n  std::shared_ptr<Bedrock::Threading::IAsyncResult<std::string > > ioTask;\n};\n\n")])])]),a("h3",{attrs:{id:"soundsystemfmod-handlelooping-l2-lambda-b390fbefbce80ef595f22443b108ead0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soundsystemfmod-handlelooping-l2-lambda-b390fbefbce80ef595f22443b108ead0"}},[t._v("#")]),t._v(" "),a("code",[t._v("SoundSystemFMOD::_handleLooping::__l2::<lambda_b390fbefbce80ef595f22443b108ead0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SoundSystemFMOD::_handleLooping::__l2::<lambda_b390fbefbce80ef595f22443b108ead0>\n{\n  SoundSystemFMOD *const __this;\n  unsigned __int64 soundHandle;\n};\n\n")])])]),a("h3",{attrs:{id:"savable-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#savable-state"}},[t._v("#")]),t._v(" "),a("code",[t._v("savable_state")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct savable_state\n{\n  int put_buffer;\n  int put_bits;\n  int last_dc_val[4];\n};\n\n")])])]),a("h3",{attrs:{id:"strandbool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strandbool"}},[t._v("#")]),t._v(" "),a("code",[t._v("StrAndBool")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __declspec(align(8)) StrAndBool\n{\n  char *str;\n  bool b;\n};\n\n")])])]),a("h3",{attrs:{id:"serviceoverrider-bool-cdecl-asserthandlercontext-const-scopedoverrider"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serviceoverrider-bool-cdecl-asserthandlercontext-const-scopedoverrider"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServiceOverrider<bool (__cdecl*)(AssertHandlerContext const &)>::ScopedOverrider")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ServiceOverrider<bool (__cdecl*)(AssertHandlerContext const &)>::ScopedOverrider\n{\n  ServiceOverrider<bool (__cdecl*)(AssertHandlerContext const &)> *mOverrider;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-fatcellvaluetype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-fatcellvaluetype"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::FATCellValueType")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::FATCellValueType\n{\n  unsigned int mPrev;\n  unsigned int mNext;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-filedescriptorrecord"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-filedescriptorrecord"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::FileDescriptorRecord")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const struct __cppobj SFAT::FileDescriptorRecord\n{\n  char mEntityName[128];\n  unsigned int mAttributes;\n  unsigned int mUniqueID;\n  unsigned __int64 mFileSize;\n  unsigned int mStartCluster;\n  unsigned int mCRC;\n  __int64 mTimeCreated;\n  __int64 mTimeModified;\n  unsigned int mLastCluster;\n  unsigned int mOldClusterTrace;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-filebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-filebase"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::FileBase")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SFAT::FileBase\n{\n  SFAT::FileBase_vtbl *__vftable /*VFT*/;\n  SFAT::FileStorageBase *mFileStorage;\n  unsigned int mAccessMode;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-filebase-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-filebase-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::FileBase_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SFAT::FileBase_vtbl\n{\n  void (__fastcall *~FileBase)(SFAT::FileBase *this);\n  bool (__fastcall *isOpen)(SFAT::FileBase *this);\n  SFAT::ErrorCode (__fastcall *close)(SFAT::FileBase *this);\n  SFAT::ErrorCode (__fastcall *read)(SFAT::FileBase *this, void *, unsigned __int64, unsigned __int64 *);\n  SFAT::ErrorCode (__fastcall *write)(SFAT::FileBase *this, const void *, unsigned __int64, unsigned __int64 *);\n  SFAT::ErrorCode (__fastcall *readAtPosition)(SFAT::FileBase *this, void *, unsigned __int64, __int64, unsigned __int64 *);\n  SFAT::ErrorCode (__fastcall *writeAtPosition)(SFAT::FileBase *this, const void *, unsigned __int64, __int64, unsigned __int64 *);\n  SFAT::ErrorCode (__fastcall *seek)(SFAT::FileBase *this, __int64, SFAT::SeekMode);\n  SFAT::ErrorCode (__fastcall *getPosition)(SFAT::FileBase *this, __int64 *);\n  SFAT::ErrorCode (__fastcall *getSize)(SFAT::FileBase *this, unsigned __int64 *);\n  SFAT::ErrorCode (__fastcall *flush)(SFAT::FileBase *this);\n  SFAT::ErrorCode (__fastcall *open)(SFAT::FileBase *this, const char *, const char *);\n  SFAT::ErrorCode (__fastcall *open)(SFAT::FileBase *this, const char *, unsigned int);\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-filestoragebase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-filestoragebase"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::FileStorageBase")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::FileStorageBase\n{\n  SFAT::FileStorageBase_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-filestoragebase-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-filestoragebase-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::FileStorageBase_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SFAT::FileStorageBase_vtbl\n{\n  void (__fastcall *~FileStorageBase)(SFAT::FileStorageBase *this);\n  bool (__fastcall *fileExists)(SFAT::FileStorageBase *this, const char *);\n  bool (__fastcall *directoryExists)(SFAT::FileStorageBase *this, const char *);\n  bool (__fastcall *fileOrDirectoryExists)(SFAT::FileStorageBase *this, const char *);\n  SFAT::ErrorCode (__fastcall *deleteFile)(SFAT::FileStorageBase *this, const char *);\n  SFAT::ErrorCode (__fastcall *removeDirectory)(SFAT::FileStorageBase *this, const char *);\n  SFAT::ErrorCode (__fastcall *createDirectory)(SFAT::FileStorageBase *this, const char *);\n  SFAT::ErrorCode (__fastcall *renameFile)(SFAT::FileStorageBase *this, const char *, const char *);\n  SFAT::ErrorCode (__fastcall *renameDirectory)(SFAT::FileStorageBase *this, const char *, const char *);\n  SFAT::ErrorCode (__fastcall *getFileSize)(SFAT::FileStorageBase *this, const char *, unsigned __int64 *);\n  bool (__fastcall *isFile)(SFAT::FileStorageBase *this, const char *);\n  bool (__fastcall *isDirectory)(SFAT::FileStorageBase *this, const char *);\n  SFAT::ErrorCode (__fastcall *iterateThroughDirectory)(SFAT::FileStorageBase *this, const char *, unsigned int, std::function<enum SFAT::ErrorCode __cdecl(bool &,SFAT::FileDescriptorRecord const &,std::string const &)>);\n  SFAT::ErrorCode (__fastcall *getFreeSpace)(SFAT::FileStorageBase *this, unsigned __int64 *);\n  SFAT::ErrorCode (__fastcall *createFileImpl)(SFAT::FileStorageBase *this, std::shared_ptr<SFAT::FileBase> *);\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-filehandle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-filehandle"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::FileHandle")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::FileHandle\n{\n  std::shared_ptr<SFAT::FileBase> mFileImpl;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-splitfatconfigurationbase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-splitfatconfigurationbase"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::SplitFATConfigurationBase")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SFAT::SplitFATConfigurationBase\n{\n  SFAT::SplitFATConfigurationBase_vtbl *__vftable /*VFT*/;\n  volatile bool mIsReady;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-blockvirtualizationheader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-blockvirtualizationheader"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::BlockVirtualizationHeader")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::BlockVirtualizationHeader\n{\n  unsigned __int16 verificationCode;\n  unsigned __int8 id;\n  unsigned __int8 headerSize;\n  unsigned __int8 virtualBlocksCount;\n  unsigned __int8 scratchBlockIndex;\n  unsigned int dataCRC;\n  unsigned int headerCRC;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-blockvirtualizationdescriptor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-blockvirtualizationdescriptor"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::BlockVirtualizationDescriptor")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::BlockVirtualizationDescriptor\n{\n  SFAT::BlockVirtualizationHeader header;\n  unsigned __int8 blockIndices[64];\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-volumedescriptorextraparameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-volumedescriptorextraparameters"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VolumeDescriptorExtraParameters")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VolumeDescriptorExtraParameters\n{\n  SFAT::BlockVirtualizationDescriptor descriptors[2];\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-volumedescriptor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-volumedescriptor"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VolumeDescriptor")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VolumeDescriptor\n{\n  unsigned int mVolumeVerificationCode;\n  unsigned int mVersion;\n  unsigned int mVolumeDescriptorSize;\n  unsigned int mVolumeControlDataSize;\n  unsigned int mBlockControlDataSize;\n  unsigned int mMaxBlocksCount;\n  unsigned int mFirstClusterOffset;\n  unsigned int mClusterSizeInBytes;\n  unsigned int mChunkSizeInBytes;\n  unsigned int mBytesPerVolumeBlock;\n  unsigned int mFATCopies;\n  unsigned int mFirstFileDataBlockIndex;\n  unsigned int mFlags;\n  unsigned int mFileDescriptorRecordStorageSize;\n  unsigned int mMaxFileNameLength;\n  unsigned int mBytesPerSymbol;\n  $9C8DDCC8F5E8C56759E7410EBD92952D ___u16;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-bitset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-bitset"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::BitSet")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::BitSet\n{\n  unsigned __int64 mSize;\n  std::vector<unsigned __int64> mElements;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-fatblock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-fatblock"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::FATBlock")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SFAT::FATBlock\n{\n  const SFAT::VolumeDescriptor *mVolumeDescriptor;\n  unsigned int mBlockIndex;\n  unsigned int mStartClusterIndex;\n  unsigned int mEndClusterIndex;\n  std::vector<SFAT::FATCellValueType> mTable;\n  SFAT::BitSet mFreeClustersBitSet;\n  bool mIsCacheInSync;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-volumemanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-volumemanager"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VolumeManager")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SFAT::VolumeManager\n{\n  SFAT::VolumeDescriptor mVolumeDescriptor;\n  std::unique_ptr<SFAT::FATDataManager> mFATDataManager;\n  std::unique_ptr<SFAT::DataBlockManager> mDataBlockManager;\n  SFAT::SFATMutex mVolumeExpansionMutex;\n  SFAT::VolumeControlData mVolumeControlData;\n  std::shared_ptr<SFAT::SplitFATConfigurationBase> mLowLevelAccess;\n  SFAT::TransactionEventsLog mTransaction;\n  SFAT::BlockVirtualization mBlockVirtualization;\n  SFAT::FileSystemState mState;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-sfatmutex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-sfatmutex"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::SFATMutex")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::SFATMutex\n{\n  std::mutex mMutex;\n  volatile bool mLocked;\n  std::thread::id mThreadId;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-fatdatamanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-fatdatamanager"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::FATDataManager")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::FATDataManager\n{\n  const SFAT::VolumeDescriptor *mVolumeDescriptor;\n  std::vector<std::unique_ptr<SFAT::FATBlock>> mFATBlocksCache;\n  SFAT::VolumeManager *mVolumeManager;\n  SFAT::SFATMutex mFATBlockReadWriteMutex;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-clusterdatacache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-clusterdatacache"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::ClusterDataCache")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SFAT::ClusterDataCache\n{\n  unsigned int mClusterIndex;\n  std::vector<unsigned char> mBuffer;\n  bool mIsCacheInSync;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-datablockmanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-datablockmanager"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::DataBlockManager")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::DataBlockManager\n{\n  SFAT::VolumeManager *mVolumeManager;\n  unsigned int mClustersPerFATBlock;\n  unsigned int mMaxPossibleBlocksCount;\n  unsigned __int64 mClusterSize;\n  unsigned __int64 mDataBlockSize;\n  std::map<unsigned int,SFAT::ClusterDataCache> mCachedClusters;\n  SFAT::SFATMutex mClusterReadWriteMutex;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-volumecontroldata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-volumecontroldata"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VolumeControlData")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VolumeControlData\n{\n  volatile unsigned int mCountAllocatedDataBlocks;\n  volatile unsigned int mCountAllocatedFATBlocks;\n  volatile unsigned int mCountTotalDataClusters;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-transactionevent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-transactionevent"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::TransactionEvent")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct SFAT::TransactionEvent\n{\n  SFAT::TransactionEventType mEventType;\n  $D35D2DBDCE7D4A8DBDCD409945A10809 ___u1;\n  unsigned int mCRC;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-transactioneventslog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-transactioneventslog"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::TransactionEventsLog")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::TransactionEventsLog\n{\n  SFAT::VolumeManager *mVolumeManager;\n  std::unordered_map<unsigned int,SFAT::TransactionEvent> mFATBlockChanges;\n  std::unordered_map<unsigned int,SFAT::TransactionEvent> mFileClusterChanges;\n  std::unordered_map<unsigned int,SFAT::TransactionEvent> mDirectoryClusterChanges;\n  bool mIsInTransaction;\n  std::vector<unsigned char> mClusterDataBuffer;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-blockvirtualization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-blockvirtualization"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::BlockVirtualization")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::BlockVirtualization\n{\n  SFAT::VolumeManager *mVolumeManager;\n  unsigned __int64 mDescriptorIndex;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-dataplacementstrategybase"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-dataplacementstrategybase"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::DataPlacementStrategyBase")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SFAT::DataPlacementStrategyBase\n{\n  SFAT::DataPlacementStrategyBase_vtbl *__vftable /*VFT*/;\n  SFAT::VolumeManager *mVolumeManager;\n  SFAT::VirtualFileSystem *mVirtualFileSystem;\n  bool mIsActive;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-dataplacementstrategybase-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-dataplacementstrategybase-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::DataPlacementStrategyBase_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SFAT::DataPlacementStrategyBase_vtbl\n{\n  void (__fastcall *~DataPlacementStrategyBase)(SFAT::DataPlacementStrategyBase *this);\n  SFAT::ErrorCode (__fastcall *prepareForWriteTransaction)(SFAT::DataPlacementStrategyBase *this);\n  SFAT::ErrorCode (__fastcall *performDefragmentaionOnTransactionEnd)(SFAT::DataPlacementStrategyBase *this);\n  SFAT::ErrorCode (__fastcall *findFreeCluster)(SFAT::DataPlacementStrategyBase *this, unsigned int *, bool);\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-recoverymanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-recoverymanager"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::RecoveryManager")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::RecoveryManager\n{\n  SFAT::RecoveryManager_vtbl *__vftable /*VFT*/;\n  SFAT::VolumeManager *mVolumeManager;\n  SFAT::VirtualFileSystem *mVirtualFileSystem;\n  std::vector<unsigned char> mClusterDataBuffer;\n  std::vector<SFAT::CellTestResult> mCellsWithProblem;\n  std::vector<SFAT::ClusterChainTestResult> mClusterChainsWithProblem;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-recoverymanager-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-recoverymanager-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::RecoveryManager_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SFAT::RecoveryManager_vtbl\n{\n  void (__fastcall *~RecoveryManager)(SFAT::RecoveryManager *this);\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-virtualfilesystem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-virtualfilesystem"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VirtualFileSystem")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VirtualFileSystem\n{\n  SFAT::VolumeManager mVolumeManager;\n  bool mIsValid;\n  std::unique_ptr<SFAT::RecoveryManager> mRecoveryManager;\n  unsigned int mClusterSize;\n  std::unique_ptr<SFAT::MemoryBufferPool> mMemoryBufferPool;\n  std::shared_ptr<SFAT::DataPlacementStrategyBase> mDefragmentation;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-celltestresult"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-celltestresult"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::CellTestResult")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct SFAT::CellTestResult\n{\n  SFAT::IntegrityStatus mStatus;\n  unsigned int mClusterIndex;\n  unsigned int mRecordIndex;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-descriptorlocation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-descriptorlocation"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::DescriptorLocation")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct SFAT::DescriptorLocation\n{\n  unsigned int mDirectoryStartClusterIndex;\n  unsigned int mDescriptorClusterIndex;\n  unsigned int mRecordIndex;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-clusterchaintestresult"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-clusterchaintestresult"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::ClusterChainTestResult")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct SFAT::ClusterChainTestResult\n{\n  SFAT::IntegrityStatus mStatus;\n  unsigned int mClusterIndex;\n  SFAT::DescriptorLocation mLocation;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-memorybufferpool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-memorybufferpool"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::MemoryBufferPool")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SFAT::MemoryBufferPool\n{\n  std::vector<std::unique_ptr<std::vector<unsigned char>>> mFreeResourceBlocks;\n  const unsigned __int64 mBufferSize;\n  SFAT::SFATMutex mBufferUpdates;\n  const unsigned __int64 mRecommendedReourceMaxCount;\n  volatile int mTotalCountUsed;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-splitfatconfigurationbase-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-splitfatconfigurationbase-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::SplitFATConfigurationBase_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SFAT::SplitFATConfigurationBase_vtbl\n{\n  void (__fastcall *~SplitFATConfigurationBase)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *shutdown)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *create)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *open)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *close)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::FileHandle *(__fastcall *getClusterDataFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *result, int);\n  SFAT::FileHandle *(__fastcall *getFATDataFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *result, int);\n  SFAT::ErrorCode (__fastcall *remove)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *flushFATDataFile)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *flushClusterDataFile)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *allocateDataBlock)(SFAT::SplitFATConfigurationBase *this, SFAT::VolumeManager *, unsigned int);\n  SFAT::ErrorCode (__fastcall *defragmentationOnTransactionEnd)(SFAT::SplitFATConfigurationBase *this);\n  bool (__fastcall *clusterDataFileExists)(SFAT::SplitFATConfigurationBase *this);\n  bool (__fastcall *fatDataFileExists)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *createDataPlacementStrategy)(SFAT::SplitFATConfigurationBase *this, std::shared_ptr<SFAT::DataPlacementStrategyBase> *, SFAT::VolumeManager *, SFAT::VirtualFileSystem *);\n  bool (__fastcall *isTransactionSupported)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *createTransactionFiles)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *tryOpenDirectoryTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);\n  SFAT::ErrorCode (__fastcall *tryOpenDataTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);\n  SFAT::ErrorCode (__fastcall *cleanupDirectoryTransactionFile)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *cleanupDataTransactionFile)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *cleanupTempTransactionFile)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *finalizeTransactionFile)(SFAT::SplitFATConfigurationBase *this);\n  void (__fastcall *getTempTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);\n  void (__fastcall *getDirectoryTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-sfatrecursivemutex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-sfatrecursivemutex"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::SFATRecursiveMutex")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::SFATRecursiveMutex\n{\n  std::recursive_mutex mMutex;\n  std::atomic<int> mLockCount;\n  std::thread::id mThreadId;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-splitfatfilestorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-splitfatfilestorage"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::SplitFATFileStorage")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::SplitFATFileStorage : SFAT::FileStorageBase\n{\n  std::unique_ptr<SFAT::VirtualFileSystem> mVirtualFileSystem;\n  SFAT::SFATRecursiveMutex mTransactionMutex;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-splitfatfilestorage-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-splitfatfilestorage-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::SplitFATFileStorage_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SFAT::SplitFATFileStorage_vtbl\n{\n  void (__fastcall *~FileStorageBase)(SFAT::FileStorageBase *this);\n  bool (__fastcall *fileExists)(SFAT::FileStorageBase *this, const char *);\n  bool (__fastcall *directoryExists)(SFAT::FileStorageBase *this, const char *);\n  bool (__fastcall *fileOrDirectoryExists)(SFAT::FileStorageBase *this, const char *);\n  SFAT::ErrorCode (__fastcall *deleteFile)(SFAT::FileStorageBase *this, const char *);\n  SFAT::ErrorCode (__fastcall *removeDirectory)(SFAT::FileStorageBase *this, const char *);\n  SFAT::ErrorCode (__fastcall *createDirectory)(SFAT::FileStorageBase *this, const char *);\n  SFAT::ErrorCode (__fastcall *renameFile)(SFAT::FileStorageBase *this, const char *, const char *);\n  SFAT::ErrorCode (__fastcall *renameDirectory)(SFAT::FileStorageBase *this, const char *, const char *);\n  SFAT::ErrorCode (__fastcall *getFileSize)(SFAT::FileStorageBase *this, const char *, unsigned __int64 *);\n  bool (__fastcall *isFile)(SFAT::FileStorageBase *this, const char *);\n  bool (__fastcall *isDirectory)(SFAT::FileStorageBase *this, const char *);\n  SFAT::ErrorCode (__fastcall *iterateThroughDirectory)(SFAT::FileStorageBase *this, const char *, unsigned int, std::function<enum SFAT::ErrorCode __cdecl(bool &,SFAT::FileDescriptorRecord const &,std::string const &)>);\n  SFAT::ErrorCode (__fastcall *getFreeSpace)(SFAT::FileStorageBase *this, unsigned __int64 *);\n  SFAT::ErrorCode (__fastcall *createFileImpl)(SFAT::FileStorageBase *this, std::shared_ptr<SFAT::FileBase> *);\n};\n\n")])])]),a("h3",{attrs:{id:"stbifile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stbifile"}},[t._v("#")]),t._v(" "),a("code",[t._v("StbiFile")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StbiFile\n{\n  Core::File mFile;\n};\n\n")])])]),a("h3",{attrs:{id:"savegamesecurestorage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#savegamesecurestorage"}},[t._v("#")]),t._v(" "),a("code",[t._v("SaveGameSecureStorage")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj __declspec(align(8)) SaveGameSecureStorage : SecureStorage\n{\n  std::string mSettingsPath;\n  Json::Value mJsonValue;\n  bool mInitialized;\n};\n\n")])])]),a("h3",{attrs:{id:"savegamesecurestorage-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#savegamesecurestorage-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SaveGameSecureStorage_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SaveGameSecureStorage_vtbl\n{\n  void (__fastcall *~SecureStorage)(SecureStorage *this);\n  bool (__fastcall *add)(SecureStorage *this, const std::string *, const std::string *);\n  bool (__fastcall *addOrUpdate)(SecureStorage *this, const std::string *, const std::string *);\n  bool (__fastcall *remove)(SecureStorage *this, const std::string *);\n  bool (__fastcall *get)(SecureStorage *this, const std::string *, std::string *);\n};\n\n")])])]),a("h3",{attrs:{id:"stbi-huffman"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stbi-huffman"}},[t._v("#")]),t._v(" "),a("code",[t._v("stbi__huffman")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct stbi__huffman\n{\n  unsigned __int8 fast[512];\n  unsigned __int16 code[256];\n  unsigned __int8 values[256];\n  unsigned __int8 size[257];\n  unsigned int maxcode[18];\n  int delta[17];\n};\n\n")])])]),a("h3",{attrs:{id:"stbi-jpeg-unnamed-type-img-comp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stbi-jpeg-unnamed-type-img-comp"}},[t._v("#")]),t._v(" "),a("code",[t._v("stbi__jpeg::<unnamed_type_img_comp>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct stbi__jpeg::<unnamed_type_img_comp>\n{\n  int id;\n  int h;\n  int v;\n  int tq;\n  int hd;\n  int ha;\n  int dc_pred;\n  int x;\n  int y;\n  int w2;\n  int h2;\n  unsigned __int8 *data;\n  void *raw_data;\n  void *raw_coeff;\n  unsigned __int8 *linebuf;\n  __int16 *coeff;\n  int coeff_w;\n  int coeff_h;\n};\n\n")])])]),a("h3",{attrs:{id:"stbi-jpeg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stbi-jpeg"}},[t._v("#")]),t._v(" "),a("code",[t._v("stbi__jpeg")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct stbi__jpeg\n{\n  stbi__context *s;\n  stbi__huffman huff_dc[4];\n  stbi__huffman huff_ac[4];\n  unsigned __int16 dequant[4][64];\n  __int16 fast_ac[4][512];\n  int img_h_max;\n  int img_v_max;\n  int img_mcu_x;\n  int img_mcu_y;\n  int img_mcu_w;\n  int img_mcu_h;\n  stbi__jpeg::<unnamed_type_img_comp> img_comp[4];\n  unsigned int code_buffer;\n  int code_bits;\n  unsigned __int8 marker;\n  int nomore;\n  int progressive;\n  int spec_start;\n  int spec_end;\n  int succ_high;\n  int succ_low;\n  int eob_run;\n  int jfif;\n  int app14_color_transform;\n  int rgb;\n  int scan_n;\n  int order[4];\n  int restart_interval;\n  int todo;\n  void (__fastcall *idct_block_kernel)(unsigned __int8 *, int, __int16 *);\n  void (__fastcall *YCbCr_to_RGB_kernel)(unsigned __int8 *, const unsigned __int8 *, const unsigned __int8 *, const unsigned __int8 *, int, int);\n  unsigned __int8 *(__fastcall *resample_row_hv_2_kernel)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, int, int);\n};\n\n")])])]),a("h3",{attrs:{id:"stbi-resample"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stbi-resample"}},[t._v("#")]),t._v(" "),a("code",[t._v("stbi__resample")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __declspec(align(8)) stbi__resample\n{\n  unsigned __int8 *(__fastcall *resample)(unsigned __int8 *, unsigned __int8 *, unsigned __int8 *, int, int);\n  unsigned __int8 *line0;\n  unsigned __int8 *line1;\n  int hs;\n  int vs;\n  int w_lores;\n  int ystep;\n  int ypos;\n};\n\n")])])]),a("h3",{attrs:{id:"stbi-pngchunk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stbi-pngchunk"}},[t._v("#")]),t._v(" "),a("code",[t._v("stbi__pngchunk")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct stbi__pngchunk\n{\n  unsigned int length;\n  unsigned int type;\n};\n\n")])])]),a("h3",{attrs:{id:"stbi-pic-packet"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stbi-pic-packet"}},[t._v("#")]),t._v(" "),a("code",[t._v("stbi__pic_packet")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct stbi__pic_packet\n{\n  unsigned __int8 size;\n  unsigned __int8 type;\n  unsigned __int8 channel;\n};\n\n")])])]),a("h3",{attrs:{id:"stbir-contributors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stbir-contributors"}},[t._v("#")]),t._v(" "),a("code",[t._v("stbir__contributors")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct stbir__contributors\n{\n  int n0;\n  int n1;\n};\n\n")])])]),a("h3",{attrs:{id:"shareablelock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shareablelock"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShareableLock")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ShareableLock\n{\n  std::shared_timed_mutex mMutex;\n};\n\n")])])]),a("h3",{attrs:{id:"shareablelock-scopedunique"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shareablelock-scopedunique"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShareableLock::ScopedUnique")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ShareableLock::ScopedUnique\n{\n  ShareableLock *mLk;\n};\n\n")])])]),a("h3",{attrs:{id:"shareablelock-scopedshared"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shareablelock-scopedshared"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShareableLock::ScopedShared")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ShareableLock::ScopedShared\n{\n  ShareableLock *mLk;\n};\n\n")])])]),a("h3",{attrs:{id:"stopwatchnlast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stopwatchnlast"}},[t._v("#")]),t._v(" "),a("code",[t._v("StopwatchNLast")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StopwatchNLast : Stopwatch\n{\n  int n;\n  int k;\n  std::vector<double> t;\n  long double sum;\n  Stopwatch sw;\n};\n\n")])])]),a("h3",{attrs:{id:"stopwatchnlast-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stopwatchnlast-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("StopwatchNLast_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ StopwatchNLast_vtbl\n{\n  void (__fastcall *~Stopwatch)(Stopwatch *this);\n  long double (__fastcall *stop)(Stopwatch *this);\n  long double (__fastcall *stopContinue)(Stopwatch *this);\n  void (__fastcall *print)(Stopwatch *this, const std::string *);\n};\n\n")])])]),a("h3",{attrs:{id:"scopewatchdog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scopewatchdog"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScopeWatchdog")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScopeWatchdog\n{\n  const std::string mName;\n  std::chrono::duration<__int64,std::ratio<1,1000> > mTimeLimit;\n  bool mLogAlways;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mStartTime;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-crc32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-crc32"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::CRC32")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::CRC32\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-sfatlockguard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-sfatlockguard"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::SFATLockGuard")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::SFATLockGuard\n{\n  SFAT::SFATMutex *mMutex;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-memorybufferhandle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-memorybufferhandle"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::MemoryBufferHandle")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::MemoryBufferHandle\n{\n  SFAT::MemoryBufferPool *mMemoryBufferPool;\n  std::unique_ptr<std::vector<unsigned char>> mObject;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-pathstring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-pathstring"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::PathString")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::PathString\n{\n  std::string mPath;\n  unsigned __int64 mPosition;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-filemanipulator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-filemanipulator"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::FileManipulator")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::FileManipulator\n{\n  SFAT::FileDescriptorRecord mFileDescriptorRecord;\n  SFAT::DescriptorLocation mLocation;\n  SFAT::PathString mFullPath;\n  unsigned int mAccessMode;\n  __int64 mPosition;\n  unsigned int mPositionClusterIndex;\n  __int64 mNextPosition;\n  bool mIsValid;\n  std::vector<unsigned char> mBuffer;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-crc16"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-crc16"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::CRC16")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::CRC16\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-recoverymanager-testsinglefileintegrity-l8-lambda-1e070c6a2247d80fbe8c7e14a3aea2dc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-recoverymanager-testsinglefileintegrity-l8-lambda-1e070c6a2247d80fbe8c7e14a3aea2dc"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::RecoveryManager::testSingleFileIntegrity::__l8::<lambda_1e070c6a2247d80fbe8c7e14a3aea2dc>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::RecoveryManager::testSingleFileIntegrity::__l8::<lambda_1e070c6a2247d80fbe8c7e14a3aea2dc>\n{\n  unsigned int *counter;\n  SFAT::ClusterChainTestResult *result;\n  SFAT::FATDataManager *fatMgr;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-splitfatfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-splitfatfile"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::SplitFATFile")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::SplitFATFile : SFAT::FileBase\n{\n  std::unique_ptr<SFAT::FileManipulator> mFileManipulator;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-splitfatfile-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-splitfatfile-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::SplitFATFile_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SFAT::SplitFATFile_vtbl\n{\n  void (__fastcall *~FileBase)(SFAT::FileBase *this);\n  bool (__fastcall *isOpen)(SFAT::FileBase *this);\n  SFAT::ErrorCode (__fastcall *close)(SFAT::FileBase *this);\n  SFAT::ErrorCode (__fastcall *read)(SFAT::FileBase *this, void *, unsigned __int64, unsigned __int64 *);\n  SFAT::ErrorCode (__fastcall *write)(SFAT::FileBase *this, const void *, unsigned __int64, unsigned __int64 *);\n  SFAT::ErrorCode (__fastcall *readAtPosition)(SFAT::FileBase *this, void *, unsigned __int64, __int64, unsigned __int64 *);\n  SFAT::ErrorCode (__fastcall *writeAtPosition)(SFAT::FileBase *this, const void *, unsigned __int64, __int64, unsigned __int64 *);\n  SFAT::ErrorCode (__fastcall *seek)(SFAT::FileBase *this, __int64, SFAT::SeekMode);\n  SFAT::ErrorCode (__fastcall *getPosition)(SFAT::FileBase *this, __int64 *);\n  SFAT::ErrorCode (__fastcall *getSize)(SFAT::FileBase *this, unsigned __int64 *);\n  SFAT::ErrorCode (__fastcall *flush)(SFAT::FileBase *this);\n  SFAT::ErrorCode (__fastcall *open)(SFAT::FileBase *this, const char *, const char *);\n  SFAT::ErrorCode (__fastcall *open)(SFAT::FileBase *this, const char *, unsigned int);\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-splitfattransactconfiguration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-splitfattransactconfiguration"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::SplitFATTransactConfiguration")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::SplitFATTransactConfiguration : SFAT::SplitFATConfigurationBase\n{\n  SFAT::FileHandle mTempTransactionFile;\n  SFAT::FileHandle mDirectoryTransactionFile;\n  SFAT::FileHandle mDataTransactionFile;\n  std::shared_ptr<SFAT::FileStorageBase> mTransactionFileStorage;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-splitfattransactconfiguration-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-splitfattransactconfiguration-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::SplitFATTransactConfiguration_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SFAT::SplitFATTransactConfiguration_vtbl\n{\n  void (__fastcall *~SplitFATConfigurationBase)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *shutdown)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *create)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *open)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *close)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::FileHandle *(__fastcall *getClusterDataFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *result, int);\n  SFAT::FileHandle *(__fastcall *getFATDataFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *result, int);\n  SFAT::ErrorCode (__fastcall *remove)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *flushFATDataFile)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *flushClusterDataFile)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *allocateDataBlock)(SFAT::SplitFATConfigurationBase *this, SFAT::VolumeManager *, unsigned int);\n  SFAT::ErrorCode (__fastcall *defragmentationOnTransactionEnd)(SFAT::SplitFATConfigurationBase *this);\n  bool (__fastcall *clusterDataFileExists)(SFAT::SplitFATConfigurationBase *this);\n  bool (__fastcall *fatDataFileExists)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *createDataPlacementStrategy)(SFAT::SplitFATConfigurationBase *this, std::shared_ptr<SFAT::DataPlacementStrategyBase> *, SFAT::VolumeManager *, SFAT::VirtualFileSystem *);\n  bool (__fastcall *isTransactionSupported)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *createTransactionFiles)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *tryOpenDirectoryTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);\n  SFAT::ErrorCode (__fastcall *tryOpenDataTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);\n  SFAT::ErrorCode (__fastcall *cleanupDirectoryTransactionFile)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *cleanupDataTransactionFile)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *cleanupTempTransactionFile)(SFAT::SplitFATConfigurationBase *this);\n  SFAT::ErrorCode (__fastcall *finalizeTransactionFile)(SFAT::SplitFATConfigurationBase *this);\n  void (__fastcall *getTempTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);\n  void (__fastcall *getDirectoryTransactionFile)(SFAT::SplitFATConfigurationBase *this, SFAT::FileHandle *);\n  const char *(__fastcall *_getDirectoryTransactionFilePath)(SFAT::SplitFATTransactConfiguration *this);\n  const char *(__fastcall *_getTempTransactionFilePath)(SFAT::SplitFATTransactConfiguration *this);\n  const char *(__fastcall *_getDataTransactionFilePath)(SFAT::SplitFATTransactConfiguration *this);\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-transactioneventslog-restorefromtransactionfile-l14-lambda-f464715ebff49e584bad436c62bdaa1e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-transactioneventslog-restorefromtransactionfile-l14-lambda-f464715ebff49e584bad436c62bdaa1e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::TransactionEventsLog::_restoreFromTransactionFile::__l14::<lambda_f464715ebff49e584bad436c62bdaa1e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::TransactionEventsLog::_restoreFromTransactionFile::__l14::<lambda_f464715ebff49e584bad436c62bdaa1e>\n{\n  SFAT::FileHandle *fileHandle;\n  __int64 *position;\n  unsigned __int64 *countBytesToRead;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-crc24"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-crc24"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::CRC24")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::CRC24\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-virtualfilesystem-isdirectoryempty-l2-lambda-249a999051cf4832137a3f59aaa6c45b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-virtualfilesystem-isdirectoryempty-l2-lambda-249a999051cf4832137a3f59aaa6c45b"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VirtualFileSystem::_isDirectoryEmpty::__l2::<lambda_249a999051cf4832137a3f59aaa6c45b>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VirtualFileSystem::_isDirectoryEmpty::__l2::<lambda_249a999051cf4832137a3f59aaa6c45b>\n{\n  bool *foundEntity;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-virtualfilesystem-createentity-l2-lambda-8b7276f0a3e09da4a84a4e133743effd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-virtualfilesystem-createentity-l2-lambda-8b7276f0a3e09da4a84a4e133743effd"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VirtualFileSystem::_createEntity::__l2::<lambda_8b7276f0a3e09da4a84a4e133743effd>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VirtualFileSystem::_createEntity::__l2::<lambda_8b7276f0a3e09da4a84a4e133743effd>\n{\n  unsigned int *selectedRecordIndex;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-virtualfilesystem-read-l2-lambda-c23223065a2b55117ec1766b47f7c2a6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-virtualfilesystem-read-l2-lambda-c23223065a2b55117ec1766b47f7c2a6"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VirtualFileSystem::read::__l2::<lambda_c23223065a2b55117ec1766b47f7c2a6>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VirtualFileSystem::read::__l2::<lambda_c23223065a2b55117ec1766b47f7c2a6>\n{\n  unsigned __int8 **outputBuffer;\n  unsigned __int64 *bytesRemainedToCopy;\n  unsigned int *clusterReadOffset;\n  std::vector<unsigned char> *clusterData;\n  unsigned int *countClustersRead;\n  unsigned int countClustersToRead;\n  SFAT::VirtualFileSystem *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-virtualfilesystem-iteratethroughdirectory-l2-lambda-cecd217142c34c71fdeb7b761f727b9e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-virtualfilesystem-iteratethroughdirectory-l2-lambda-cecd217142c34c71fdeb7b761f727b9e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VirtualFileSystem::iterateThroughDirectory::__l2::<lambda_cecd217142c34c71fdeb7b761f727b9e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VirtualFileSystem::iterateThroughDirectory::__l2::<lambda_cecd217142c34c71fdeb7b761f727b9e>\n{\n  std::function<enum SFAT::ErrorCode __cdecl(bool &,SFAT::FileDescriptorRecord const &,std::string const &)> *callback;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-virtualfilesystem-trunc-l26-lambda-47ce944f0503b9b4adb1d6cbf279dfdd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-virtualfilesystem-trunc-l26-lambda-47ce944f0503b9b4adb1d6cbf279dfdd"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VirtualFileSystem::_trunc::__l26::<lambda_47ce944f0503b9b4adb1d6cbf279dfdd>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VirtualFileSystem::_trunc::__l26::<lambda_47ce944f0503b9b4adb1d6cbf279dfdd>\n{\n  const SFAT::DescriptorLocation *location;\n  unsigned int newLastClusterIndex;\n  SFAT::VirtualFileSystem *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-virtualfilesystem-iteratethroughdirectoryrecursively-l2-lambda-ebf0c4dc747ea335e16db93745c87fdb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-virtualfilesystem-iteratethroughdirectoryrecursively-l2-lambda-ebf0c4dc747ea335e16db93745c87fdb"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VirtualFileSystem::_iterateThroughDirectoryRecursively::__l2::<lambda_ebf0c4dc747ea335e16db93745c87fdb>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VirtualFileSystem::_iterateThroughDirectoryRecursively::__l2::<lambda_ebf0c4dc747ea335e16db93745c87fdb>\n{\n  SFAT::VirtualFileSystem *const __this;\n  unsigned int *flags;\n  std::function<enum SFAT::ErrorCode __cdecl(bool &,SFAT::DescriptorLocation const &,SFAT::FileDescriptorRecord const &,std::string const &)> *callback;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-virtualfilesystem-getclusterforposition-l2-lambda-25729679247d20f75b7b6e5e2871a905"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-virtualfilesystem-getclusterforposition-l2-lambda-25729679247d20f75b7b6e5e2871a905"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VirtualFileSystem::_getClusterForPosition::__l2::<lambda_25729679247d20f75b7b6e5e2871a905>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VirtualFileSystem::_getClusterForPosition::__l2::<lambda_25729679247d20f75b7b6e5e2871a905>\n{\n  unsigned int *foundClusterIndex;\n  unsigned int *clusterInverseCounter;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-virtualfilesystem-renameentity-l2-lambda-d12879e995d60e1f647dd732045a77ba"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-virtualfilesystem-renameentity-l2-lambda-d12879e995d60e1f647dd732045a77ba"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VirtualFileSystem::_renameEntity::__l2::<lambda_d12879e995d60e1f647dd732045a77ba>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VirtualFileSystem::_renameEntity::__l2::<lambda_d12879e995d60e1f647dd732045a77ba>\n{\n  std::string *newNameStr;\n  bool *foundEntity;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-virtualfilesystem-getcountclusters-l2-lambda-1e9471e70c826f487760fd9bb4988c6e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-virtualfilesystem-getcountclusters-l2-lambda-1e9471e70c826f487760fd9bb4988c6e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VirtualFileSystem::_getCountClusters::__l2::<lambda_1e9471e70c826f487760fd9bb4988c6e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VirtualFileSystem::_getCountClusters::__l2::<lambda_1e9471e70c826f487760fd9bb4988c6e>\n{\n  unsigned int *countClusters;\n  unsigned int *lastClusterIndex;\n};\n\n")])])]),a("h3",{attrs:{id:"sfat-virtualfilesystem-write-l2-lambda-8ccf35fa49cd2e7a64c0d636e7f3b02a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfat-virtualfilesystem-write-l2-lambda-8ccf35fa49cd2e7a64c0d636e7f3b02a"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFAT::VirtualFileSystem::write::__l2::<lambda_8ccf35fa49cd2e7a64c0d636e7f3b02a>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SFAT::VirtualFileSystem::write::__l2::<lambda_8ccf35fa49cd2e7a64c0d636e7f3b02a>\n{\n  unsigned __int64 *sizeWritten;\n  SFAT::FileManipulator *fileManipulator;\n  const unsigned __int8 **inputBuffer;\n  unsigned __int64 *bytesRemainedToCopy;\n  unsigned int *clusterWriteOffset;\n  std::vector<unsigned char> *clusterData;\n  unsigned int *countClustersWritten;\n  unsigned int countClustersToWrite;\n  SFAT::VirtualFileSystem *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"sfnt-headerrec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sfnt-headerrec"}},[t._v("#")]),t._v(" "),a("code",[t._v("SFNT_HeaderRec_")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct SFNT_HeaderRec_\n{\n  unsigned int format_tag;\n  unsigned __int16 num_tables;\n  unsigned __int16 search_range;\n  unsigned __int16 entry_selector;\n  unsigned __int16 range_shift;\n  unsigned int offset;\n};\n\n")])])]),a("h3",{attrs:{id:"stbrp-findresult"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stbrp-findresult"}},[t._v("#")]),t._v(" "),a("code",[t._v("stbrp__findresult")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct stbrp__findresult\n{\n  int x;\n  int y;\n  stbrp_node **prev_link;\n};\n\n")])])]),a("h3",{attrs:{id:"static-vector-std-weak-ptr-bedrock-pubsub-detail-publisherbase-bedrock-pubsub-threadmodel-multithreaded-void-void-cdecl-core-profile-profilegroup-subscriptionbody-32-iterator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static-vector-std-weak-ptr-bedrock-pubsub-detail-publisherbase-bedrock-pubsub-threadmodel-multithreaded-void-void-cdecl-core-profile-profilegroup-subscriptionbody-32-iterator"}},[t._v("#")]),t._v(" "),a("code",[t._v("static_vector<std::weak_ptr<Bedrock::PubSub::Detail::PublisherBase<Bedrock::PubSub::ThreadModel::MultiThreaded,void,void __cdecl(Core::Profile::ProfileGroup &)>::SubscriptionBody>,32>::iterator")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj static_vector<std::weak_ptr<Bedrock::PubSub::Detail::PublisherBase<Bedrock::PubSub::ThreadModel::MultiThreaded,void,void __cdecl(Core::Profile::ProfileGroup &)>::SubscriptionBody>,32>::iterator\n{\n  std::weak_ptr<Bedrock::PubSub::Detail::PublisherBase<Bedrock::PubSub::ThreadModel::MultiThreaded,void,void __cdecl(Core::Profile::ProfileGroup &)>::SubscriptionBody> *mPtr;\n};\n\n")])])]),a("h3",{attrs:{id:"static-vector-std-weak-ptr-bedrock-pubsub-detail-publisherbase-bedrock-pubsub-threadmodel-multithreaded-void-void-cdecl-core-profile-profilegroup-subscriptionbody-32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#static-vector-std-weak-ptr-bedrock-pubsub-detail-publisherbase-bedrock-pubsub-threadmodel-multithreaded-void-void-cdecl-core-profile-profilegroup-subscriptionbody-32"}},[t._v("#")]),t._v(" "),a("code",[t._v("static_vector<std::weak_ptr<Bedrock::PubSub::Detail::PublisherBase<Bedrock::PubSub::ThreadModel::MultiThreaded,void,void __cdecl(Core::Profile::ProfileGroup &)>::SubscriptionBody>,32>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj static_vector<std::weak_ptr<Bedrock::PubSub::Detail::PublisherBase<Bedrock::PubSub::ThreadModel::MultiThreaded,void,void __cdecl(Core::Profile::ProfileGroup &)>::SubscriptionBody>,32>\n{\n  std::_Align_type<double,16> mArray[32];\n  unsigned __int64 mSize;\n};\n\n")])])]),a("h3",{attrs:{id:"serializer-serializeprimaryfield-l2-lambda-9af6748ea60d8af6979b10ce9c586e9b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serializer-serializeprimaryfield-l2-lambda-9af6748ea60d8af6979b10ce9c586e9b"}},[t._v("#")]),t._v(" "),a("code",[t._v("Serializer::serializePrimaryField::__l2::<lambda_9af6748ea60d8af6979b10ce9c586e9b>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Serializer::serializePrimaryField::__l2::<lambda_9af6748ea60d8af6979b10ce9c586e9b>\n{\n  unsigned int kAttributesId;\n  entt::meta_any *any;\n  Serializer *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"starmapobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#starmapobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("starmapobject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct starmapobject\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  _object *func;\n  _object *it;\n};\n\n")])])]),a("h3",{attrs:{id:"stringio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stringio"}},[t._v("#")]),t._v(" "),a("code",[t._v("stringio")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct stringio\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  wchar_t *buf;\n  __int64 pos;\n  __int64 string_size;\n  unsigned __int64 buf_size;\n  char ok;\n  char closed;\n  char readuniversal;\n  char readtranslate;\n  _object *decoder;\n  _object *readnl;\n  _object *writenl;\n  _object *dict;\n  _object *weakreflist;\n};\n\n")])])]),a("h3",{attrs:{id:"semlockobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#semlockobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("SemLockObject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct SemLockObject\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  void *handle;\n  int last_tid;\n  int count;\n  int maxvalue;\n  int kind;\n};\n\n")])])]),a("h3",{attrs:{id:"sre-repeat-t"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sre-repeat-t"}},[t._v("#")]),t._v(" "),a("code",[t._v("SRE_REPEAT_T")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct SRE_REPEAT_T\n{\n  __int64 count;\n  unsigned int *pattern;\n  void *last_ptr;\n  SRE_REPEAT_T *prev;\n};\n\n")])])]),a("h3",{attrs:{id:"scannerobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scannerobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScannerObject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct ScannerObject\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  _object *pattern;\n  SRE_STATE state;\n};\n\n")])])]),a("h3",{attrs:{id:"sre-umatch-context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sre-umatch-context"}},[t._v("#")]),t._v(" "),a("code",[t._v("sre_umatch_context")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct sre_umatch_context\n{\n  __int64 last_ctx_pos;\n  __int64 jump;\n  wchar_t *ptr;\n  unsigned int *pattern;\n  __int64 count;\n  __int64 lastmark;\n  __int64 lastindex;\n  union\n  {\n    unsigned int chr;\n    SRE_REPEAT_T *rep;\n  } u;\n};\n\n")])])]),a("h3",{attrs:{id:"sre-match-context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sre-match-context"}},[t._v("#")]),t._v(" "),a("code",[t._v("sre_match_context")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct sre_match_context\n{\n  __int64 last_ctx_pos;\n  __int64 jump;\n  unsigned __int8 *ptr;\n  unsigned int *pattern;\n  __int64 count;\n  __int64 lastmark;\n  __int64 lastindex;\n  union\n  {\n    unsigned int chr;\n    SRE_REPEAT_T *rep;\n  } u;\n};\n\n")])])]),a("h3",{attrs:{id:"staticmethod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#staticmethod"}},[t._v("#")]),t._v(" "),a("code",[t._v("staticmethod")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct staticmethod\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  _object *sm_callable;\n};\n\n")])])]),a("h3",{attrs:{id:"seqiterobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#seqiterobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("seqiterobject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct seqiterobject\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  int it_index;\n  _object *it_seq;\n};\n\n")])])]),a("h3",{attrs:{id:"sortwrapperobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sortwrapperobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("sortwrapperobject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct sortwrapperobject\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  _object *key;\n  _object *value;\n};\n\n")])])]),a("h3",{attrs:{id:"setiterobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setiterobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("setiterobject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct setiterobject\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  _setobject *si_set;\n  __int64 si_used;\n  __int64 si_pos;\n  __int64 len;\n};\n\n")])])]),a("h3",{attrs:{id:"superobject"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#superobject"}},[t._v("#")]),t._v(" "),a("code",[t._v("superobject")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct superobject\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  _typeobject *type;\n  _object *obj;\n  _typeobject *obj_type;\n};\n\n")])])]),a("h3",{attrs:{id:"stackentry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stackentry"}},[t._v("#")]),t._v(" "),a("code",[t._v("stackentry")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct stackentry\n{\n  int s_state;\n  dfa *s_dfa;\n  _node *s_parent;\n};\n\n")])])]),a("h3",{attrs:{id:"stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stack"}},[t._v("#")]),t._v(" "),a("code",[t._v("stack")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct stack\n{\n  stackentry *s_top;\n  stackentry s_base[1500];\n};\n\n")])])]),a("h3",{attrs:{id:"sp-handle-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sp-handle-object"}},[t._v("#")]),t._v(" "),a("code",[t._v("sp_handle_object")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct sp_handle_object\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  void *handle;\n};\n\n")])])]),a("h3",{attrs:{id:"shaderslibrary"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shaderslibrary"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShadersLibrary")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ShadersLibrary\n{\n  std::map<std::wstring,unsigned int> shaderCacheMap;\n  std::vector<void *> loadedShadersData;\n  unsigned int storedShaderCount;\n  CustomBlob *shaderCache;\n  unsigned __int64 xorKeyLength;\n  unsigned __int64 xorKeyCurrentOffset;\n};\n\n")])])]),a("h3",{attrs:{id:"slidercomponent-updatesliderbarprogress-l2-lambda-0fa219b87a373a09d30835719138e33a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slidercomponent-updatesliderbarprogress-l2-lambda-0fa219b87a373a09d30835719138e33a"}},[t._v("#")]),t._v(" "),a("code",[t._v("SliderComponent::_updateSliderBarProgress::__l2::<lambda_0fa219b87a373a09d30835719138e33a>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SliderComponent::_updateSliderBarProgress::__l2::<lambda_0fa219b87a373a09d30835719138e33a>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"storagedependencyscreencontroller-registerbindings-l2-lambda-abc0411e58cca189896914892e40c16b-l6-lambda-15b24bd133e958d68a060ebbc5b1ece6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storagedependencyscreencontroller-registerbindings-l2-lambda-abc0411e58cca189896914892e40c16b-l6-lambda-15b24bd133e958d68a060ebbc5b1ece6"}},[t._v("#")]),t._v(" "),a("code",[t._v("StorageDependencyScreenController::_registerBindings::__l2::<lambda_abc0411e58cca189896914892e40c16b>::()::__l6::<lambda_15b24bd133e958d68a060ebbc5b1ece6>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StorageDependencyScreenController::_registerBindings::__l2::<lambda_abc0411e58cca189896914892e40c16b>::()::__l6::<lambda_15b24bd133e958d68a060ebbc5b1ece6>\n{\n  PackContentItem *const content;\n};\n\n")])])]),a("h3",{attrs:{id:"startmenuscreencontroller-onopen-l5-lambda-1574bd2e3698b4f242153fd310cd920b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#startmenuscreencontroller-onopen-l5-lambda-1574bd2e3698b4f242153fd310cd920b"}},[t._v("#")]),t._v(" "),a("code",[t._v("StartMenuScreenController::onOpen::__l5::<lambda_1574bd2e3698b4f242153fd310cd920b>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StartMenuScreenController::onOpen::__l5::<lambda_1574bd2e3698b4f242153fd310cd920b>\n{\n  StartMenuScreenController *const __this;\n  const GamePadRemappingLayout *gamepadRemapping;\n};\n\n")])])]),a("h3",{attrs:{id:"storagedependencyscreencontroller-populatealldependencies-l2-lambda-50ff95644bda46b030d63d05eaa74932"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storagedependencyscreencontroller-populatealldependencies-l2-lambda-50ff95644bda46b030d63d05eaa74932"}},[t._v("#")]),t._v(" "),a("code",[t._v("StorageDependencyScreenController::_populateAllDependencies::__l2::<lambda_50ff95644bda46b030d63d05eaa74932>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StorageDependencyScreenController::_populateAllDependencies::__l2::<lambda_50ff95644bda46b030d63d05eaa74932>\n{\n  StorageDependencyScreenController *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"serverformbindinginformation-createbindingdata-l2-lambda-5877bbc18e65de1799e21a4d6baf222e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serverformbindinginformation-createbindingdata-l2-lambda-5877bbc18e65de1799e21a4d6baf222e"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerFormBindingInformation::createBindingData::__l2::<lambda_5877bbc18e65de1799e21a4d6baf222e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ServerFormBindingInformation::createBindingData::__l2::<lambda_5877bbc18e65de1799e21a4d6baf222e>\n{\n  ServerFormBindingInformation *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"subscriptionsscreencontroller-tick-l11-lambda-1109a751a3b331261c66bffc74b4c0d6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subscriptionsscreencontroller-tick-l11-lambda-1109a751a3b331261c66bffc74b4c0d6"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubscriptionsScreenController::tick::__l11::<lambda_1109a751a3b331261c66bffc74b4c0d6>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubscriptionsScreenController::tick::__l11::<lambda_1109a751a3b331261c66bffc74b4c0d6>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"subscriptionsscreencontroller-tick-l11-lambda-3405681c330be99db571a029a5de6d5e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subscriptionsscreencontroller-tick-l11-lambda-3405681c330be99db571a029a5de6d5e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubscriptionsScreenController::tick::__l11::<lambda_3405681c330be99db571a029a5de6d5e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubscriptionsScreenController::tick::__l11::<lambda_3405681c330be99db571a029a5de6d5e>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"subscriptionsscreencontroller-getrealmsubscriptionfromworld-l2-lambda-5cdf67128f3bea6159dd8fc163d38d57-l8-lambda-87d887136041d2858ff416203462d397"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subscriptionsscreencontroller-getrealmsubscriptionfromworld-l2-lambda-5cdf67128f3bea6159dd8fc163d38d57-l8-lambda-87d887136041d2858ff416203462d397"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubscriptionsScreenController::_getRealmSubscriptionFromWorld::__l2::<lambda_5cdf67128f3bea6159dd8fc163d38d57>::()::__l8::<lambda_87d887136041d2858ff416203462d397>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubscriptionsScreenController::_getRealmSubscriptionFromWorld::__l2::<lambda_5cdf67128f3bea6159dd8fc163d38d57>::()::__l8::<lambda_87d887136041d2858ff416203462d397>\n{\n  const Realms::RealmId *realmId;\n};\n\n")])])]),a("h3",{attrs:{id:"subscriptionsscreencontroller-getrealmsubscriptionfromworld-l2-lambda-5cdf67128f3bea6159dd8fc163d38d57-l17-lambda-bae8d35094fb397bedc67c3ba62ad721"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subscriptionsscreencontroller-getrealmsubscriptionfromworld-l2-lambda-5cdf67128f3bea6159dd8fc163d38d57-l17-lambda-bae8d35094fb397bedc67c3ba62ad721"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubscriptionsScreenController::_getRealmSubscriptionFromWorld::__l2::<lambda_5cdf67128f3bea6159dd8fc163d38d57>::()::__l17::<lambda_bae8d35094fb397bedc67c3ba62ad721>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubscriptionsScreenController::_getRealmSubscriptionFromWorld::__l2::<lambda_5cdf67128f3bea6159dd8fc163d38d57>::()::__l17::<lambda_bae8d35094fb397bedc67c3ba62ad721>\n{\n  const Realms::RealmId *realmId;\n};\n\n")])])]),a("h3",{attrs:{id:"screenview-updatecontrolcollections-l36-lambda-803420e90046a466ebce054da63600a8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#screenview-updatecontrolcollections-l36-lambda-803420e90046a466ebce054da63600a8"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScreenView::_updateControlCollections::__l36::<lambda_803420e90046a466ebce054da63600a8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScreenView::_updateControlCollections::__l36::<lambda_803420e90046a466ebce054da63600a8>\n{\n  std::vector<std::shared_ptr<UIControl>> *controlsToRemove;\n};\n\n")])])]),a("h3",{attrs:{id:"scenestack-flushstack-l5-lambda-08197decf7f176c94b189045c2e91557"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenestack-flushstack-l5-lambda-08197decf7f176c94b189045c2e91557"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneStack::flushStack::__l5::<lambda_08197decf7f176c94b189045c2e91557>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneStack::flushStack::__l5::<lambda_08197decf7f176c94b189045c2e91557>\n{\n  SceneStack *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"screenview-handledirtyvisualtree-l50-lambda-2111019e43bda338732d87a7a0c5b0ae"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#screenview-handledirtyvisualtree-l50-lambda-2111019e43bda338732d87a7a0c5b0ae"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScreenView::_handleDirtyVisualTree::__l50::<lambda_2111019e43bda338732d87a7a0c5b0ae>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScreenView::_handleDirtyVisualTree::__l50::<lambda_2111019e43bda338732d87a7a0c5b0ae>\n{\n  ScreenView *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"scenestack-isscreenreplaceable-l8-lambda-42a230a3bda507ad00601db397fdd7c6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenestack-isscreenreplaceable-l8-lambda-42a230a3bda507ad00601db397fdd7c6"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneStack::isScreenReplaceable::__l8::<lambda_42a230a3bda507ad00601db397fdd7c6>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneStack::isScreenReplaceable::__l8::<lambda_42a230a3bda507ad00601db397fdd7c6>\n{\n  bool *canReplace;\n};\n\n")])])]),a("h3",{attrs:{id:"scenefactory-createactivedirectorymodal-l2-lambda-9f02b271ede7732ee4ddc2d56da6dc4c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenefactory-createactivedirectorymodal-l2-lambda-9f02b271ede7732ee4ddc2d56da6dc4c"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneFactory::createActiveDirectoryModal::__l2::<lambda_9f02b271ede7732ee4ddc2d56da6dc4c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneFactory::createActiveDirectoryModal::__l2::<lambda_9f02b271ede7732ee4ddc2d56da6dc4c>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenefactory-createactivedirectorymodal-l2-lambda-9f02b271ede7732ee4ddc2d56da6dc4c-l2-straccessor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenefactory-createactivedirectorymodal-l2-lambda-9f02b271ede7732ee4ddc2d56da6dc4c-l2-straccessor"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneFactory::createActiveDirectoryModal::__l2::<lambda_9f02b271ede7732ee4ddc2d56da6dc4c>::()::__l2::StrAccessor")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneFactory::createActiveDirectoryModal::__l2::<lambda_9f02b271ede7732ee4ddc2d56da6dc4c>::()::__l2::StrAccessor\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenefactory-createactivedirectoryauthenticationscreen-l2-lambda-adcf6bd9062ebad447b2428204664251"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenefactory-createactivedirectoryauthenticationscreen-l2-lambda-adcf6bd9062ebad447b2428204664251"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneFactory::createActiveDirectoryAuthenticationScreen::__l2::<lambda_adcf6bd9062ebad447b2428204664251>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneFactory::createActiveDirectoryAuthenticationScreen::__l2::<lambda_adcf6bd9062ebad447b2428204664251>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scenefactory-createactivedirectoryauthenticationscreen-l2-lambda-adcf6bd9062ebad447b2428204664251-l2-straccessor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenefactory-createactivedirectoryauthenticationscreen-l2-lambda-adcf6bd9062ebad447b2428204664251-l2-straccessor"}},[t._v("#")]),t._v(" "),a("code",[t._v("SceneFactory::createActiveDirectoryAuthenticationScreen::__l2::<lambda_adcf6bd9062ebad447b2428204664251>::()::__l2::StrAccessor")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SceneFactory::createActiveDirectoryAuthenticationScreen::__l2::<lambda_adcf6bd9062ebad447b2428204664251>::()::__l2::StrAccessor\n{\n};\n\n")])])]),a("h3",{attrs:{id:"skinnedmesh-draw-l2-lambda-d8b94b46a694729780a8881de11c5537"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skinnedmesh-draw-l2-lambda-d8b94b46a694729780a8881de11c5537"}},[t._v("#")]),t._v(" "),a("code",[t._v("SkinnedMesh::draw::__l2::<lambda_d8b94b46a694729780a8881de11c5537>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SkinnedMesh::draw::__l2::<lambda_d8b94b46a694729780a8881de11c5537>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scriptenginewithcontext-scriptclientcontext-createentity-l2-lambda-e35908d952b2d50bdbc7c021fe0b8d2e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scriptenginewithcontext-scriptclientcontext-createentity-l2-lambda-e35908d952b2d50bdbc7c021fe0b8d2e"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScriptEngineWithContext<ScriptClientContext>::createEntity::__l2::<lambda_e35908d952b2d50bdbc7c021fe0b8d2e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScriptEngineWithContext<ScriptClientContext>::createEntity::__l2::<lambda_e35908d952b2d50bdbc7c021fe0b8d2e>\n{\n  ScriptEngineWithContext<ScriptClientContext> *const __this;\n  ScriptApi::ScriptObjectHandle *entityHandle;\n  const std::string *templateName;\n  const ScriptApi::ScriptVersionInfo *info;\n};\n\n")])])]),a("h3",{attrs:{id:"social-multiplayeredu-joingame-l2-lambda-c0daf9fcddb69c3e6164bbe064128aa0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#social-multiplayeredu-joingame-l2-lambda-c0daf9fcddb69c3e6164bbe064128aa0"}},[t._v("#")]),t._v(" "),a("code",[t._v("Social::MultiplayerEDU::_joinGame::__l2::<lambda_c0daf9fcddb69c3e6164bbe064128aa0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Social::MultiplayerEDU::_joinGame::__l2::<lambda_c0daf9fcddb69c3e6164bbe064128aa0>\n{\n  Social::MultiplayerEDU *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"social-usermanager-removeclient-l4-lambda-8bffe92b839cdd3926f9f46b2b9196ba"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#social-usermanager-removeclient-l4-lambda-8bffe92b839cdd3926f9f46b2b9196ba"}},[t._v("#")]),t._v(" "),a("code",[t._v("Social::UserManager::removeClient::__l4::<lambda_8bffe92b839cdd3926f9f46b2b9196ba>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Social::UserManager::removeClient::__l4::<lambda_8bffe92b839cdd3926f9f46b2b9196ba>\n{\n  std::shared_ptr<IClientInstance> ci;\n};\n\n")])])]),a("h3",{attrs:{id:"social-xboxliveuser-isuseronfriendlist-l2-lambda-938f7b7cbdf1e4157d9f58c7ba6ac2ab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#social-xboxliveuser-isuseronfriendlist-l2-lambda-938f7b7cbdf1e4157d9f58c7ba6ac2ab"}},[t._v("#")]),t._v(" "),a("code",[t._v("Social::XboxLiveUser::isUserOnFriendList::__l2::<lambda_938f7b7cbdf1e4157d9f58c7ba6ac2ab>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Social::XboxLiveUser::isUserOnFriendList::__l2::<lambda_938f7b7cbdf1e4157d9f58c7ba6ac2ab>\n{\n  const std::string xuid;\n};\n\n")])])]),a("h3",{attrs:{id:"soundengine-isnewmusicqueued-l9-lambda-6058b0ebf9d487346dfc78cfeeed8549"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soundengine-isnewmusicqueued-l9-lambda-6058b0ebf9d487346dfc78cfeeed8549"}},[t._v("#")]),t._v(" "),a("code",[t._v("SoundEngine::_isNewMusicQueued::__l9::<lambda_6058b0ebf9d487346dfc78cfeeed8549>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SoundEngine::_isNewMusicQueued::__l9::<lambda_6058b0ebf9d487346dfc78cfeeed8549>\n{\n  const Core::Path currentMusicItemName;\n};\n\n")])])]),a("h3",{attrs:{id:"storecatalogrepository-fetchrealmscoinoffers-l2-lambda-4414f3671be2def991047236b7ca18b5-l9-lambda-5b34530ea6fe3708d069590feac9be75"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#storecatalogrepository-fetchrealmscoinoffers-l2-lambda-4414f3671be2def991047236b7ca18b5-l9-lambda-5b34530ea6fe3708d069590feac9be75"}},[t._v("#")]),t._v(" "),a("code",[t._v("StoreCatalogRepository::fetchRealmsCoinOffers::__l2::<lambda_4414f3671be2def991047236b7ca18b5>::()::__l9::<lambda_5b34530ea6fe3708d069590feac9be75>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StoreCatalogRepository::fetchRealmsCoinOffers::__l2::<lambda_4414f3671be2def991047236b7ca18b5>::()::__l9::<lambda_5b34530ea6fe3708d069590feac9be75>\n{\n  const std::string sku;\n};\n\n")])])]),a("h3",{attrs:{id:"serverplayerblockusehandler-onbeforemovementsimulation-l2-lambda-c316d9e687abcf3d528563fc19364bf8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serverplayerblockusehandler-onbeforemovementsimulation-l2-lambda-c316d9e687abcf3d528563fc19364bf8"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerPlayerBlockUseHandler::onBeforeMovementSimulation::__l2::<lambda_c316d9e687abcf3d528563fc19364bf8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ServerPlayerBlockUseHandler::onBeforeMovementSimulation::__l2::<lambda_c316d9e687abcf3d528563fc19364bf8>\n{\n  std::unique_ptr<ItemStackRequestData> *itemStackRequest;\n};\n\n")])])]),a("h3",{attrs:{id:"servernetworkhandler-enginedownloadingresponsehelper-l18-lambda-00b0622c98e5187c8a83036a771f6e2e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servernetworkhandler-enginedownloadingresponsehelper-l18-lambda-00b0622c98e5187c8a83036a771f6e2e"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerNetworkHandler::engineDownloadingResponseHelper::__l18::<lambda_00b0622c98e5187c8a83036a771f6e2e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ServerNetworkHandler::engineDownloadingResponseHelper::__l18::<lambda_00b0622c98e5187c8a83036a771f6e2e>\n{\n  const std::string *packIdStr;\n};\n\n")])])]),a("h3",{attrs:{id:"servernetworkhandler-enginedownloadingresponsehelper-l2-lambda-c2403a719f261949b9930649a7bed9eb-l12-lambda-9d5d32d71ee2269e33a959b1a38ae504"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servernetworkhandler-enginedownloadingresponsehelper-l2-lambda-c2403a719f261949b9930649a7bed9eb-l12-lambda-9d5d32d71ee2269e33a959b1a38ae504"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerNetworkHandler::engineDownloadingResponseHelper::__l2::<lambda_c2403a719f261949b9930649a7bed9eb>::()::__l12::<lambda_9d5d32d71ee2269e33a959b1a38ae504>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ServerNetworkHandler::engineDownloadingResponseHelper::__l2::<lambda_c2403a719f261949b9930649a7bed9eb>::()::__l12::<lambda_9d5d32d71ee2269e33a959b1a38ae504>\n{\n  const std::string *packIdStr;\n};\n\n")])])]),a("h3",{attrs:{id:"servernetworkhandler-onclientauthenticated-l2-lambda-5bf7633c5afa8e06c799ce108426113a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servernetworkhandler-onclientauthenticated-l2-lambda-5bf7633c5afa8e06c799ce108426113a"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerNetworkHandler::_onClientAuthenticated::__l2::<lambda_5bf7633c5afa8e06c799ce108426113a>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ServerNetworkHandler::_onClientAuthenticated::__l2::<lambda_5bf7633c5afa8e06c799ce108426113a>\n{\n  ServerNetworkHandler *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"servernetworkhandler-getactiveandinprogressplayercount-l2-lambda-831ea39846ba7d8b403f58c6fc8cdb87"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servernetworkhandler-getactiveandinprogressplayercount-l2-lambda-831ea39846ba7d8b403f58c6fc8cdb87"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerNetworkHandler::_getActiveAndInProgressPlayerCount::__l2::<lambda_831ea39846ba7d8b403f58c6fc8cdb87>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ServerNetworkHandler::_getActiveAndInProgressPlayerCount::__l2::<lambda_831ea39846ba7d8b403f58c6fc8cdb87>\n{\n  const ServerNetworkHandler *const __this;\n  mce::UUID *excludePlayer;\n  int *numPlayers;\n};\n\n")])])]),a("h3",{attrs:{id:"servernetworkhandler-enginedownloadingresponsehelper-l2-lambda-c2403a719f261949b9930649a7bed9eb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servernetworkhandler-enginedownloadingresponsehelper-l2-lambda-c2403a719f261949b9930649a7bed9eb"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerNetworkHandler::engineDownloadingResponseHelper::__l2::<lambda_c2403a719f261949b9930649a7bed9eb>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ServerNetworkHandler::engineDownloadingResponseHelper::__l2::<lambda_c2403a719f261949b9930649a7bed9eb>\n{\n  ServerNetworkHandler *const __this;\n  const NetworkIdentifier *source;\n  std::set<std::string> *downloading;\n};\n\n")])])]),a("h3",{attrs:{id:"scriptinventorycontainercomponent-hascomponent-l2-lambda-cbfd00fac5e89c48dc5b9818cc515444-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scriptinventorycontainercomponent-hascomponent-l2-lambda-cbfd00fac5e89c48dc5b9818cc515444-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScriptInventoryContainerComponent::hasComponent::__l2::<lambda_cbfd00fac5e89c48dc5b9818cc515444>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScriptInventoryContainerComponent::hasComponent::__l2::<lambda_cbfd00fac5e89c48dc5b9818cc515444>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scriptinventorycontainercomponent-hascomponent-l2-lambda-cbfd00fac5e89c48dc5b9818cc515444"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scriptinventorycontainercomponent-hascomponent-l2-lambda-cbfd00fac5e89c48dc5b9818cc515444"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScriptInventoryContainerComponent::hasComponent::__l2::<lambda_cbfd00fac5e89c48dc5b9818cc515444>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScriptInventoryContainerComponent::hasComponent::__l2::<lambda_cbfd00fac5e89c48dc5b9818cc515444>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"serverinstance-suspend-l5-lambda-e2bf1bc6a494a9ac2de26852ce0ed296-l2-lambda-dc1051d76d2d8e5ed26ddec900f12518"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serverinstance-suspend-l5-lambda-e2bf1bc6a494a9ac2de26852ce0ed296-l2-lambda-dc1051d76d2d8e5ed26ddec900f12518"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerInstance::suspend::__l5::<lambda_e2bf1bc6a494a9ac2de26852ce0ed296>::()::__l2::<lambda_dc1051d76d2d8e5ed26ddec900f12518>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ServerInstance::suspend::__l5::<lambda_e2bf1bc6a494a9ac2de26852ce0ed296>::()::__l2::<lambda_dc1051d76d2d8e5ed26ddec900f12518>\n{\n  ServerInstance *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"serverplayer-recoverr5lostinventoryandxp-l2-lambda-07493d55d977c843ffdb606ac04a2f9f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serverplayer-recoverr5lostinventoryandxp-l2-lambda-07493d55d977c843ffdb606ac04a2f9f"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerPlayer::recoverR5LostInventoryAndXP::__l2::<lambda_07493d55d977c843ffdb606ac04a2f9f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ServerPlayer::recoverR5LostInventoryAndXP::__l2::<lambda_07493d55d977c843ffdb606ac04a2f9f>\n{\n  std::vector<BlockPos> chestPositions;\n};\n\n")])])]),a("h3",{attrs:{id:"serverinstance-initializeserver-l49-lambda-3a7cf20926733d23785fdc1bad5b8ff2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serverinstance-initializeserver-l49-lambda-3a7cf20926733d23785fdc1bad5b8ff2"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerInstance::initializeServer::__l49::<lambda_3a7cf20926733d23785fdc1bad5b8ff2>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ServerInstance::initializeServer::__l49::<lambda_3a7cf20926733d23785fdc1bad5b8ff2>\n{\n  std::unordered_map<PackIdVersion,std::string> *packIdToContentKey;\n  ResourcePackRepository *resourcePackRepository;\n};\n\n")])])]),a("h3",{attrs:{id:"squid-spawninkparticles-l2-lambda-20ed655d1fdb0c0dc03fd2267680f974-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-spawninkparticles-l2-lambda-20ed655d1fdb0c0dc03fd2267680f974-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::spawnInkParticles::__l2::<lambda_20ed655d1fdb0c0dc03fd2267680f974>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::spawnInkParticles::__l2::<lambda_20ed655d1fdb0c0dc03fd2267680f974>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-spawninkparticles-l2-lambda-81d88c366bffed15d10e67d2c2427073-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-spawninkparticles-l2-lambda-81d88c366bffed15d10e67d2c2427073-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::spawnInkParticles::__l2::<lambda_81d88c366bffed15d10e67d2c2427073>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::spawnInkParticles::__l2::<lambda_81d88c366bffed15d10e67d2c2427073>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-spawninkparticles-l2-lambda-f866df35e06d0821240572926370310a-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-spawninkparticles-l2-lambda-f866df35e06d0821240572926370310a-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::spawnInkParticles::__l2::<lambda_f866df35e06d0821240572926370310a>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::spawnInkParticles::__l2::<lambda_f866df35e06d0821240572926370310a>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-spawninkparticles-l2-lambda-a6ccd1b2e2a58943ed7603f95ec71137-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-spawninkparticles-l2-lambda-a6ccd1b2e2a58943ed7603f95ec71137-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::spawnInkParticles::__l2::<lambda_a6ccd1b2e2a58943ed7603f95ec71137>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::spawnInkParticles::__l2::<lambda_a6ccd1b2e2a58943ed7603f95ec71137>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-spawninkparticles-l2-lambda-745c8c632ec8667527937f4fd921d65d-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-spawninkparticles-l2-lambda-745c8c632ec8667527937f4fd921d65d-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::spawnInkParticles::__l2::<lambda_745c8c632ec8667527937f4fd921d65d>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::spawnInkParticles::__l2::<lambda_745c8c632ec8667527937f4fd921d65d>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-aistep-l38-lambda-7c935aff097e3f4f0757a5f398e28e3b-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-aistep-l38-lambda-7c935aff097e3f4f0757a5f398e28e3b-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::aiStep::__l38::<lambda_7c935aff097e3f4f0757a5f398e28e3b>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::aiStep::__l38::<lambda_7c935aff097e3f4f0757a5f398e28e3b>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-spawninkparticles-l9-lambda-dd17807679feb6004cad8b221e669871-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-spawninkparticles-l9-lambda-dd17807679feb6004cad8b221e669871-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::spawnInkParticles::__l9::<lambda_dd17807679feb6004cad8b221e669871>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::spawnInkParticles::__l9::<lambda_dd17807679feb6004cad8b221e669871>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-updateentityspecificmolangvariables-l2-lambda-54ff11a541b599c5179e16b1d9d14457-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-updateentityspecificmolangvariables-l2-lambda-54ff11a541b599c5179e16b1d9d14457-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::updateEntitySpecificMolangVariables::__l2::<lambda_54ff11a541b599c5179e16b1d9d14457>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::updateEntitySpecificMolangVariables::__l2::<lambda_54ff11a541b599c5179e16b1d9d14457>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-spawninkparticles-l2-lambda-20ed655d1fdb0c0dc03fd2267680f974"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-spawninkparticles-l2-lambda-20ed655d1fdb0c0dc03fd2267680f974"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::spawnInkParticles::__l2::<lambda_20ed655d1fdb0c0dc03fd2267680f974>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::spawnInkParticles::__l2::<lambda_20ed655d1fdb0c0dc03fd2267680f974>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-updateentityspecificmolangvariables-l2-lambda-54ff11a541b599c5179e16b1d9d14457"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-updateentityspecificmolangvariables-l2-lambda-54ff11a541b599c5179e16b1d9d14457"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::updateEntitySpecificMolangVariables::__l2::<lambda_54ff11a541b599c5179e16b1d9d14457>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::updateEntitySpecificMolangVariables::__l2::<lambda_54ff11a541b599c5179e16b1d9d14457>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-spawninkparticles-l2-lambda-745c8c632ec8667527937f4fd921d65d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-spawninkparticles-l2-lambda-745c8c632ec8667527937f4fd921d65d"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::spawnInkParticles::__l2::<lambda_745c8c632ec8667527937f4fd921d65d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::spawnInkParticles::__l2::<lambda_745c8c632ec8667527937f4fd921d65d>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-aistep-l38-lambda-7c935aff097e3f4f0757a5f398e28e3b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-aistep-l38-lambda-7c935aff097e3f4f0757a5f398e28e3b"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::aiStep::__l38::<lambda_7c935aff097e3f4f0757a5f398e28e3b>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::aiStep::__l38::<lambda_7c935aff097e3f4f0757a5f398e28e3b>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-spawninkparticles-l2-lambda-81d88c366bffed15d10e67d2c2427073"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-spawninkparticles-l2-lambda-81d88c366bffed15d10e67d2c2427073"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::spawnInkParticles::__l2::<lambda_81d88c366bffed15d10e67d2c2427073>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::spawnInkParticles::__l2::<lambda_81d88c366bffed15d10e67d2c2427073>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-spawninkparticles-l2-lambda-a6ccd1b2e2a58943ed7603f95ec71137"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-spawninkparticles-l2-lambda-a6ccd1b2e2a58943ed7603f95ec71137"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::spawnInkParticles::__l2::<lambda_a6ccd1b2e2a58943ed7603f95ec71137>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::spawnInkParticles::__l2::<lambda_a6ccd1b2e2a58943ed7603f95ec71137>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-spawninkparticles-l9-lambda-dd17807679feb6004cad8b221e669871"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-spawninkparticles-l9-lambda-dd17807679feb6004cad8b221e669871"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::spawnInkParticles::__l9::<lambda_dd17807679feb6004cad8b221e669871>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::spawnInkParticles::__l9::<lambda_dd17807679feb6004cad8b221e669871>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"squid-spawninkparticles-l2-lambda-f866df35e06d0821240572926370310a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-spawninkparticles-l2-lambda-f866df35e06d0821240572926370310a"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid::spawnInkParticles::__l2::<lambda_f866df35e06d0821240572926370310a>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Squid::spawnInkParticles::__l2::<lambda_f866df35e06d0821240572926370310a>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"subtreedefinition-load-l2-lambda-812a7dd9662048876f94e3c602f5749a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subtreedefinition-load-l2-lambda-812a7dd9662048876f94e3c602f5749a"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubtreeDefinition::load::__l2::<lambda_812a7dd9662048876f94e3c602f5749a>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubtreeDefinition::load::__l2::<lambda_812a7dd9662048876f94e3c602f5749a>\n{\n  SubtreeDefinition *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"shulker-updateentityspecificmolangvariables-l2-lambda-7ee7d0e96e7f086bf09398b468cf2075-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shulker-updateentityspecificmolangvariables-l2-lambda-7ee7d0e96e7f086bf09398b468cf2075-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_7ee7d0e96e7f086bf09398b468cf2075>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_7ee7d0e96e7f086bf09398b468cf2075>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shulker-updateentityspecificmolangvariables-l2-lambda-acd0cdf20e3b5cde0d6a58a55011ea1d-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shulker-updateentityspecificmolangvariables-l2-lambda-acd0cdf20e3b5cde0d6a58a55011ea1d-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_acd0cdf20e3b5cde0d6a58a55011ea1d>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_acd0cdf20e3b5cde0d6a58a55011ea1d>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shulker-updateentityspecificmolangvariables-l2-lambda-bcd9dfb7d43d7c010ff946aba3e014f2-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shulker-updateentityspecificmolangvariables-l2-lambda-bcd9dfb7d43d7c010ff946aba3e014f2-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_bcd9dfb7d43d7c010ff946aba3e014f2>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_bcd9dfb7d43d7c010ff946aba3e014f2>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"silverfish-spawnanim-l2-lambda-19e1d0aacea10af139bf394457913d53-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#silverfish-spawnanim-l2-lambda-19e1d0aacea10af139bf394457913d53-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Silverfish::spawnAnim::__l2::<lambda_19e1d0aacea10af139bf394457913d53>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Silverfish::spawnAnim::__l2::<lambda_19e1d0aacea10af139bf394457913d53>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shulker-updateentityspecificmolangvariables-l2-lambda-acae4de5d24cbf0518c8cbf9196c47aa-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shulker-updateentityspecificmolangvariables-l2-lambda-acae4de5d24cbf0518c8cbf9196c47aa-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_acae4de5d24cbf0518c8cbf9196c47aa>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_acae4de5d24cbf0518c8cbf9196c47aa>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"silverfish-spawnanim-l2-lambda-19e1d0aacea10af139bf394457913d53"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#silverfish-spawnanim-l2-lambda-19e1d0aacea10af139bf394457913d53"}},[t._v("#")]),t._v(" "),a("code",[t._v("Silverfish::spawnAnim::__l2::<lambda_19e1d0aacea10af139bf394457913d53>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Silverfish::spawnAnim::__l2::<lambda_19e1d0aacea10af139bf394457913d53>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shulker-updateentityspecificmolangvariables-l2-lambda-7ee7d0e96e7f086bf09398b468cf2075"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shulker-updateentityspecificmolangvariables-l2-lambda-7ee7d0e96e7f086bf09398b468cf2075"}},[t._v("#")]),t._v(" "),a("code",[t._v("Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_7ee7d0e96e7f086bf09398b468cf2075>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_7ee7d0e96e7f086bf09398b468cf2075>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shulker-updateentityspecificmolangvariables-l2-lambda-acae4de5d24cbf0518c8cbf9196c47aa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shulker-updateentityspecificmolangvariables-l2-lambda-acae4de5d24cbf0518c8cbf9196c47aa"}},[t._v("#")]),t._v(" "),a("code",[t._v("Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_acae4de5d24cbf0518c8cbf9196c47aa>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_acae4de5d24cbf0518c8cbf9196c47aa>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shulker-updateentityspecificmolangvariables-l2-lambda-acd0cdf20e3b5cde0d6a58a55011ea1d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shulker-updateentityspecificmolangvariables-l2-lambda-acd0cdf20e3b5cde0d6a58a55011ea1d"}},[t._v("#")]),t._v(" "),a("code",[t._v("Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_acd0cdf20e3b5cde0d6a58a55011ea1d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_acd0cdf20e3b5cde0d6a58a55011ea1d>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shulker-updateentityspecificmolangvariables-l2-lambda-bcd9dfb7d43d7c010ff946aba3e014f2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shulker-updateentityspecificmolangvariables-l2-lambda-bcd9dfb7d43d7c010ff946aba3e014f2"}},[t._v("#")]),t._v(" "),a("code",[t._v("Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_bcd9dfb7d43d7c010ff946aba3e014f2>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj Shulker::updateEntitySpecificMolangVariables::__l2::<lambda_bcd9dfb7d43d7c010ff946aba3e014f2>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"spongeblock-spawnabsorbparticles-l4-lambda-281430efca4f4a8de2a9d661daf56df2-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spongeblock-spawnabsorbparticles-l4-lambda-281430efca4f4a8de2a9d661daf56df2-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpongeBlock::_spawnAbsorbParticles::__l4::<lambda_281430efca4f4a8de2a9d661daf56df2>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpongeBlock::_spawnAbsorbParticles::__l4::<lambda_281430efca4f4a8de2a9d661daf56df2>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"spongeblock-spawnabsorbparticles-l4-lambda-281430efca4f4a8de2a9d661daf56df2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spongeblock-spawnabsorbparticles-l4-lambda-281430efca4f4a8de2a9d661daf56df2"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpongeBlock::_spawnAbsorbParticles::__l4::<lambda_281430efca4f4a8de2a9d661daf56df2>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpongeBlock::_spawnAbsorbParticles::__l4::<lambda_281430efca4f4a8de2a9d661daf56df2>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-b89d7faeb8625652467465f4053f1a1e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-b89d7faeb8625652467465f4053f1a1e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_b89d7faeb8625652467465f4053f1a1e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_b89d7faeb8625652467465f4053f1a1e>\n{\n  std::array<unsigned __int64,2> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-ee02d42ed08427f9fb42002a8b8ca57d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-ee02d42ed08427f9fb42002a8b8ca57d"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_ee02d42ed08427f9fb42002a8b8ca57d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_ee02d42ed08427f9fb42002a8b8ca57d>\n{\n  std::array<unsigned __int64,2> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-58da501a9e5a53b0697e720a47037e87"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-58da501a9e5a53b0697e720a47037e87"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_58da501a9e5a53b0697e720a47037e87>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_58da501a9e5a53b0697e720a47037e87>\n{\n  std::array<unsigned __int64,2> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-659fa460fcd8c91f9c29efb516ca29a4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-659fa460fcd8c91f9c29efb516ca29a4"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_659fa460fcd8c91f9c29efb516ca29a4>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_659fa460fcd8c91f9c29efb516ca29a4>\n{\n  std::array<unsigned __int64,2> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-bfaabf8c679a87b6e2d83295f0010d23"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-bfaabf8c679a87b6e2d83295f0010d23"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_bfaabf8c679a87b6e2d83295f0010d23>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_bfaabf8c679a87b6e2d83295f0010d23>\n{\n  std::array<unsigned __int64,2> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-f8315e4b756b9df6ad9782338da705eb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-f8315e4b756b9df6ad9782338da705eb"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_f8315e4b756b9df6ad9782338da705eb>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_f8315e4b756b9df6ad9782338da705eb>\n{\n  std::array<unsigned __int64,2> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-b6e2926387827d0322d995e610a39062"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-b6e2926387827d0322d995e610a39062"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_b6e2926387827d0322d995e610a39062>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_b6e2926387827d0322d995e610a39062>\n{\n  std::array<unsigned __int64,2> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-79653376107e589b67701292641889fb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-79653376107e589b67701292641889fb"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_79653376107e589b67701292641889fb>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_79653376107e589b67701292641889fb>\n{\n  std::array<unsigned __int64,2> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-41ef2a1cf9e6be72ad5379c22f5e274a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-41ef2a1cf9e6be72ad5379c22f5e274a"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_41ef2a1cf9e6be72ad5379c22f5e274a>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_41ef2a1cf9e6be72ad5379c22f5e274a>\n{\n  std::array<unsigned __int64,4> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-f6550f24920c305d2a3228c1caad78b8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-f6550f24920c305d2a3228c1caad78b8"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_f6550f24920c305d2a3228c1caad78b8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_f6550f24920c305d2a3228c1caad78b8>\n{\n  std::array<unsigned __int64,4> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-bc44f7e86affe751fd9c46eb71543178"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-bc44f7e86affe751fd9c46eb71543178"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_bc44f7e86affe751fd9c46eb71543178>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_bc44f7e86affe751fd9c46eb71543178>\n{\n  std::array<unsigned __int64,4> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-469bd9e3b15d63a3bec8b65106f8890c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-469bd9e3b15d63a3bec8b65106f8890c"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_469bd9e3b15d63a3bec8b65106f8890c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_469bd9e3b15d63a3bec8b65106f8890c>\n{\n  std::array<unsigned __int64,4> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-2c377cf4a0b195dfab8182eb8ff7fe0f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-2c377cf4a0b195dfab8182eb8ff7fe0f"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_2c377cf4a0b195dfab8182eb8ff7fe0f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_2c377cf4a0b195dfab8182eb8ff7fe0f>\n{\n  std::array<unsigned __int64,4> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-bbbc0f4fafb53fc32059227f6c0c450f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-bbbc0f4fafb53fc32059227f6c0c450f"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_bbbc0f4fafb53fc32059227f6c0c450f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_bbbc0f4fafb53fc32059227f6c0c450f>\n{\n  std::array<unsigned __int64,4> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-3950691e075ab91cd491b17c4310546e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-3950691e075ab91cd491b17c4310546e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_3950691e075ab91cd491b17c4310546e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_3950691e075ab91cd491b17c4310546e>\n{\n  std::array<unsigned __int64,4> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-83d310390567ffecea966b4919d30ac8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-83d310390567ffecea966b4919d30ac8"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_83d310390567ffecea966b4919d30ac8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_83d310390567ffecea966b4919d30ac8>\n{\n  std::array<unsigned __int64,4> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-d7d9298a0aebfa663a195f3482260e81"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-d7d9298a0aebfa663a195f3482260e81"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_d7d9298a0aebfa663a195f3482260e81>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_d7d9298a0aebfa663a195f3482260e81>\n{\n  std::array<unsigned __int64,8> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-197910b15336c6c57fb079552212abf9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-197910b15336c6c57fb079552212abf9"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_197910b15336c6c57fb079552212abf9>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_197910b15336c6c57fb079552212abf9>\n{\n  std::array<unsigned __int64,8> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-8f4d5d31dc10279ae8a6f79bc1288959"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-8f4d5d31dc10279ae8a6f79bc1288959"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_8f4d5d31dc10279ae8a6f79bc1288959>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_8f4d5d31dc10279ae8a6f79bc1288959>\n{\n  std::array<unsigned __int64,8> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-6cac658f9939f9fdcf21c2bb28998155"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-6cac658f9939f9fdcf21c2bb28998155"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_6cac658f9939f9fdcf21c2bb28998155>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_6cac658f9939f9fdcf21c2bb28998155>\n{\n  std::array<unsigned __int64,8> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-29e923ba2bd56312b230cf095fc262ab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-29e923ba2bd56312b230cf095fc262ab"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_29e923ba2bd56312b230cf095fc262ab>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_29e923ba2bd56312b230cf095fc262ab>\n{\n  std::array<unsigned __int64,8> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-8ed02beb6fa123e2e4b230d4b7fed29e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-8ed02beb6fa123e2e4b230d4b7fed29e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_8ed02beb6fa123e2e4b230d4b7fed29e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_8ed02beb6fa123e2e4b230d4b7fed29e>\n{\n  std::array<unsigned __int64,8> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-4b93ab98a1c1995005831a07db31e259"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-4b93ab98a1c1995005831a07db31e259"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_4b93ab98a1c1995005831a07db31e259>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_4b93ab98a1c1995005831a07db31e259>\n{\n  std::array<unsigned __int64,8> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-a742bfdf2437d491e99310db58d7daf2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-a742bfdf2437d491e99310db58d7daf2"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_a742bfdf2437d491e99310db58d7daf2>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_a742bfdf2437d491e99310db58d7daf2>\n{\n  std::array<unsigned __int64,8> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-cd9c28223f1f7e791d8b4829dc4db1a8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-cd9c28223f1f7e791d8b4829dc4db1a8"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_cd9c28223f1f7e791d8b4829dc4db1a8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_cd9c28223f1f7e791d8b4829dc4db1a8>\n{\n  std::array<unsigned __int64,16> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-82094842f7d520b5264a46a912e7b041"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-82094842f7d520b5264a46a912e7b041"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_82094842f7d520b5264a46a912e7b041>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_82094842f7d520b5264a46a912e7b041>\n{\n  std::array<unsigned __int64,16> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-9a10c8d6d7cc96e7b05d64277e151ddc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-9a10c8d6d7cc96e7b05d64277e151ddc"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_9a10c8d6d7cc96e7b05d64277e151ddc>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_9a10c8d6d7cc96e7b05d64277e151ddc>\n{\n  std::array<unsigned __int64,16> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-9a59a157a43846344d974fc798480d36"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-9a59a157a43846344d974fc798480d36"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_9a59a157a43846344d974fc798480d36>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_9a59a157a43846344d974fc798480d36>\n{\n  std::array<unsigned __int64,16> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-9e1a0dcb27e98dcb2b0dd0c738266d83"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-9e1a0dcb27e98dcb2b0dd0c738266d83"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_9e1a0dcb27e98dcb2b0dd0c738266d83>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_9e1a0dcb27e98dcb2b0dd0c738266d83>\n{\n  std::array<unsigned __int64,16> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-19fb2b0eda159d1884bb0c9ded0eccd8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-19fb2b0eda159d1884bb0c9ded0eccd8"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_19fb2b0eda159d1884bb0c9ded0eccd8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_19fb2b0eda159d1884bb0c9ded0eccd8>\n{\n  std::array<unsigned __int64,16> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-b99f6b3392fe60ef2f5160864d6377b0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-b99f6b3392fe60ef2f5160864d6377b0"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_b99f6b3392fe60ef2f5160864d6377b0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_b99f6b3392fe60ef2f5160864d6377b0>\n{\n  std::array<unsigned __int64,16> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-9d4dc4f6cb6703c61b6dfd39d3a81637"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-9d4dc4f6cb6703c61b6dfd39d3a81637"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_9d4dc4f6cb6703c61b6dfd39d3a81637>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_9d4dc4f6cb6703c61b6dfd39d3a81637>\n{\n  std::array<unsigned __int64,16> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-e8bf3bc4d2c99c57826d07951044b5b5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-e8bf3bc4d2c99c57826d07951044b5b5"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_e8bf3bc4d2c99c57826d07951044b5b5>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_e8bf3bc4d2c99c57826d07951044b5b5>\n{\n  std::array<unsigned __int64,256> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-9c3c32c12509b945041a07efec1f4018"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-9c3c32c12509b945041a07efec1f4018"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_9c3c32c12509b945041a07efec1f4018>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_9c3c32c12509b945041a07efec1f4018>\n{\n  std::array<unsigned __int64,256> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-30ac5ed33c057b47ad3e061255bc9f85"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-30ac5ed33c057b47ad3e061255bc9f85"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_30ac5ed33c057b47ad3e061255bc9f85>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_30ac5ed33c057b47ad3e061255bc9f85>\n{\n  std::array<unsigned __int64,256> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-7a0286341374ba7ace6e9c1673e7fcf0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-7a0286341374ba7ace6e9c1673e7fcf0"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_7a0286341374ba7ace6e9c1673e7fcf0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_7a0286341374ba7ace6e9c1673e7fcf0>\n{\n  std::array<unsigned __int64,256> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-d8c3aa28f4250d79cb1f214ff0524749"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-d8c3aa28f4250d79cb1f214ff0524749"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_d8c3aa28f4250d79cb1f214ff0524749>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_d8c3aa28f4250d79cb1f214ff0524749>\n{\n  std::array<unsigned __int64,256> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-c91dd27f63e11c7332a1b13efc647b2a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-c91dd27f63e11c7332a1b13efc647b2a"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_c91dd27f63e11c7332a1b13efc647b2a>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_c91dd27f63e11c7332a1b13efc647b2a>\n{\n  std::array<unsigned __int64,256> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-7ed2c87cb0677ad293c75ec93c239094"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-7ed2c87cb0677ad293c75ec93c239094"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_7ed2c87cb0677ad293c75ec93c239094>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_7ed2c87cb0677ad293c75ec93c239094>\n{\n  std::array<unsigned __int64,256> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-77cb8d6a030c374aa1dc15ade6754a87"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-77cb8d6a030c374aa1dc15ade6754a87"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_77cb8d6a030c374aa1dc15ade6754a87>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_77cb8d6a030c374aa1dc15ade6754a87>\n{\n  std::array<unsigned __int64,256> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-5c54a6d5e82ef8fe4e108535597a07a5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-5c54a6d5e82ef8fe4e108535597a07a5"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_5c54a6d5e82ef8fe4e108535597a07a5>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_5c54a6d5e82ef8fe4e108535597a07a5>\n{\n  std::array<unsigned __int64,4096> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-d529bd2d858807c48987aaa1084a2b8d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-d529bd2d858807c48987aaa1084a2b8d"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_d529bd2d858807c48987aaa1084a2b8d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_d529bd2d858807c48987aaa1084a2b8d>\n{\n  std::array<unsigned __int64,4096> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-578a91390099f186d7171712656310be"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-578a91390099f186d7171712656310be"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_578a91390099f186d7171712656310be>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_578a91390099f186d7171712656310be>\n{\n  std::array<unsigned __int64,4096> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-1ed035df95b6b5b1bbdacd8771e68b80"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-1ed035df95b6b5b1bbdacd8771e68b80"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_1ed035df95b6b5b1bbdacd8771e68b80>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_1ed035df95b6b5b1bbdacd8771e68b80>\n{\n  std::array<unsigned __int64,4096> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-8470c3d3d53641c5f515fa0a50f7d203"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-8470c3d3d53641c5f515fa0a50f7d203"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_8470c3d3d53641c5f515fa0a50f7d203>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_8470c3d3d53641c5f515fa0a50f7d203>\n{\n  std::array<unsigned __int64,4096> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-e64f1a17e18be658772b1736538eadb6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-e64f1a17e18be658772b1736538eadb6"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_e64f1a17e18be658772b1736538eadb6>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_e64f1a17e18be658772b1736538eadb6>\n{\n  std::array<unsigned __int64,4096> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-00be663ed5f61e98eadb6cdeb28378f4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-00be663ed5f61e98eadb6cdeb28378f4"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_00be663ed5f61e98eadb6cdeb28378f4>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_00be663ed5f61e98eadb6cdeb28378f4>\n{\n  std::array<unsigned __int64,4096> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-c31f78ab0fc73eaf1e1744a301d0ad5f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-c31f78ab0fc73eaf1e1744a301d0ad5f"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_c31f78ab0fc73eaf1e1744a301d0ad5f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_c31f78ab0fc73eaf1e1744a301d0ad5f>\n{\n  std::array<unsigned __int64,4096> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-961742dd9bc1d976bf071baf7b6a837b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-961742dd9bc1d976bf071baf7b6a837b"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_961742dd9bc1d976bf071baf7b6a837b>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_961742dd9bc1d976bf071baf7b6a837b>\n{\n  std::array<unsigned __int64,32> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-835c95f7d954b44a1692ec9f4c720c21"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-835c95f7d954b44a1692ec9f4c720c21"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_835c95f7d954b44a1692ec9f4c720c21>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_835c95f7d954b44a1692ec9f4c720c21>\n{\n  std::array<unsigned __int64,32> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-7a387bd6d2d2ba4bd42bcc8d34cd3cd7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-7a387bd6d2d2ba4bd42bcc8d34cd3cd7"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_7a387bd6d2d2ba4bd42bcc8d34cd3cd7>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_7a387bd6d2d2ba4bd42bcc8d34cd3cd7>\n{\n  std::array<unsigned __int64,32> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-016baf4e196323c8538fd94c98b531d8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-016baf4e196323c8538fd94c98b531d8"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_016baf4e196323c8538fd94c98b531d8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_016baf4e196323c8538fd94c98b531d8>\n{\n  std::array<unsigned __int64,32> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-e1beab7cca7d279280ff45eb3be3974f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-e1beab7cca7d279280ff45eb3be3974f"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_e1beab7cca7d279280ff45eb3be3974f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_e1beab7cca7d279280ff45eb3be3974f>\n{\n  std::array<unsigned __int64,32> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-922346ceb579a190cf9385daa338d6c0"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-922346ceb579a190cf9385daa338d6c0"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_922346ceb579a190cf9385daa338d6c0>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_922346ceb579a190cf9385daa338d6c0>\n{\n  std::array<unsigned __int64,32> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-36b90fddf1b151e4e3615e85857d0647"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-36b90fddf1b151e4e3615e85857d0647"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_36b90fddf1b151e4e3615e85857d0647>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_36b90fddf1b151e4e3615e85857d0647>\n{\n  std::array<unsigned __int64,32> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-8cb60d75dc4e5d8b6cd616474e0a20f3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-8cb60d75dc4e5d8b6cd616474e0a20f3"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_8cb60d75dc4e5d8b6cd616474e0a20f3>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_8cb60d75dc4e5d8b6cd616474e0a20f3>\n{\n  std::array<unsigned __int64,32> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-8fa1d2d0560a314c97ef3959fc62aa6e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-8fa1d2d0560a314c97ef3959fc62aa6e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_8fa1d2d0560a314c97ef3959fc62aa6e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_8fa1d2d0560a314c97ef3959fc62aa6e>\n{\n  std::array<unsigned __int64,64> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-58a2dd194639f141c5dec720842771d5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-58a2dd194639f141c5dec720842771d5"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_58a2dd194639f141c5dec720842771d5>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_58a2dd194639f141c5dec720842771d5>\n{\n  std::array<unsigned __int64,64> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-186f12fb5c9ea95857c941f086043dfd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-186f12fb5c9ea95857c941f086043dfd"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_186f12fb5c9ea95857c941f086043dfd>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_186f12fb5c9ea95857c941f086043dfd>\n{\n  std::array<unsigned __int64,64> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-ffb12327d2445fa1d089d3cd84baf000"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-ffb12327d2445fa1d089d3cd84baf000"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_ffb12327d2445fa1d089d3cd84baf000>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_ffb12327d2445fa1d089d3cd84baf000>\n{\n  std::array<unsigned __int64,64> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-00de30484d20d3df2ccba38bd470dad4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-00de30484d20d3df2ccba38bd470dad4"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_00de30484d20d3df2ccba38bd470dad4>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_00de30484d20d3df2ccba38bd470dad4>\n{\n  std::array<unsigned __int64,64> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-b337c4c891a1361a908e2abb77fa22e4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-b337c4c891a1361a908e2abb77fa22e4"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_b337c4c891a1361a908e2abb77fa22e4>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_b337c4c891a1361a908e2abb77fa22e4>\n{\n  std::array<unsigned __int64,64> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-2ecb361f8582be43669bd1b87db23296"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-2ecb361f8582be43669bd1b87db23296"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_2ecb361f8582be43669bd1b87db23296>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_2ecb361f8582be43669bd1b87db23296>\n{\n  std::array<unsigned __int64,64> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-07f6beca060ecad8ce0a9287d8b20e62"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-07f6beca060ecad8ce0a9287d8b20e62"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_07f6beca060ecad8ce0a9287d8b20e62>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_07f6beca060ecad8ce0a9287d8b20e62>\n{\n  std::array<unsigned __int64,64> *remappingLookup;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-fetchblocksinbox-l2-lambda-05dcea0d077ab08977860bf1536271dc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-fetchblocksinbox-l2-lambda-05dcea0d077ab08977860bf1536271dc"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::fetchBlocksInBox::__l2::<lambda_05dcea0d077ab08977860bf1536271dc>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::fetchBlocksInBox::__l2::<lambda_05dcea0d077ab08977860bf1536271dc>\n{\n  const BoundingBox *box;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-fetchblocksincylinder-l2-lambda-2225f5dd488587be97d5ef16dbb05a4e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-fetchblocksincylinder-l2-lambda-2225f5dd488587be97d5ef16dbb05a4e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::fetchBlocksInCylinder::__l2::<lambda_2225f5dd488587be97d5ef16dbb05a4e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::fetchBlocksInCylinder::__l2::<lambda_2225f5dd488587be97d5ef16dbb05a4e>\n{\n  unsigned int height;\n  unsigned int radius;\n  const BlockPos *pos;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-fetchblocksincylinder-l2-lambda-2f8920f8aed8669ce026a439bb206b81"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-fetchblocksincylinder-l2-lambda-2f8920f8aed8669ce026a439bb206b81"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::fetchBlocksInCylinder::__l2::<lambda_2f8920f8aed8669ce026a439bb206b81>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::fetchBlocksInCylinder::__l2::<lambda_2f8920f8aed8669ce026a439bb206b81>\n{\n  unsigned int height;\n  unsigned int radius;\n  const BlockPos *pos;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-fetchblocksincylinder-l2-lambda-31ae1f2113d30483dfa86a8979a4b0c4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-fetchblocksincylinder-l2-lambda-31ae1f2113d30483dfa86a8979a4b0c4"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::fetchBlocksInCylinder::__l2::<lambda_31ae1f2113d30483dfa86a8979a4b0c4>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::fetchBlocksInCylinder::__l2::<lambda_31ae1f2113d30483dfa86a8979a4b0c4>\n{\n  unsigned int height;\n  unsigned int radius;\n  const BlockPos *pos;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-fetchblocksinbox-l2-lambda-333c91ec917de2d00c7d7b20be94f138"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-fetchblocksinbox-l2-lambda-333c91ec917de2d00c7d7b20be94f138"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::fetchBlocksInBox::__l2::<lambda_333c91ec917de2d00c7d7b20be94f138>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::fetchBlocksInBox::__l2::<lambda_333c91ec917de2d00c7d7b20be94f138>\n{\n  const BoundingBox *box;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-fetchblocksinbox-l2-lambda-3a25f8be0adce3e4613c2792bb15ad32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-fetchblocksinbox-l2-lambda-3a25f8be0adce3e4613c2792bb15ad32"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::fetchBlocksInBox::__l2::<lambda_3a25f8be0adce3e4613c2792bb15ad32>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::fetchBlocksInBox::__l2::<lambda_3a25f8be0adce3e4613c2792bb15ad32>\n{\n  const BoundingBox *box;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-fetchblocksinbox-l2-lambda-6805beeeeb20926306bc087a374beb00"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-fetchblocksinbox-l2-lambda-6805beeeeb20926306bc087a374beb00"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::fetchBlocksInBox::__l2::<lambda_6805beeeeb20926306bc087a374beb00>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::fetchBlocksInBox::__l2::<lambda_6805beeeeb20926306bc087a374beb00>\n{\n  const BoundingBox *box;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-fetchblocksincylinder-l2-lambda-69eb90666f66735dbbd3c93a3c693a3d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-fetchblocksincylinder-l2-lambda-69eb90666f66735dbbd3c93a3c693a3d"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::fetchBlocksInCylinder::__l2::<lambda_69eb90666f66735dbbd3c93a3c693a3d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::fetchBlocksInCylinder::__l2::<lambda_69eb90666f66735dbbd3c93a3c693a3d>\n{\n  unsigned int height;\n  unsigned int radius;\n  const BlockPos *pos;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-fetchblocksincylinder-l2-lambda-6eff12cf755cbc8df5ad19484681e643"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-fetchblocksincylinder-l2-lambda-6eff12cf755cbc8df5ad19484681e643"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::fetchBlocksInCylinder::__l2::<lambda_6eff12cf755cbc8df5ad19484681e643>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::fetchBlocksInCylinder::__l2::<lambda_6eff12cf755cbc8df5ad19484681e643>\n{\n  unsigned int height;\n  unsigned int radius;\n  const BlockPos *pos;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-fetchblocksincylinder-l2-lambda-7ad7ae9e0b04fad7956ba5c2462033f8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-fetchblocksincylinder-l2-lambda-7ad7ae9e0b04fad7956ba5c2462033f8"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::fetchBlocksInCylinder::__l2::<lambda_7ad7ae9e0b04fad7956ba5c2462033f8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::fetchBlocksInCylinder::__l2::<lambda_7ad7ae9e0b04fad7956ba5c2462033f8>\n{\n  unsigned int height;\n  unsigned int radius;\n  const BlockPos *pos;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-fetchblocksinbox-l2-lambda-81f82229aefcc027330dfa10aa9c846d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-fetchblocksinbox-l2-lambda-81f82229aefcc027330dfa10aa9c846d"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::fetchBlocksInBox::__l2::<lambda_81f82229aefcc027330dfa10aa9c846d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::fetchBlocksInBox::__l2::<lambda_81f82229aefcc027330dfa10aa9c846d>\n{\n  const BoundingBox *box;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-fetchblocksincylinder-l2-lambda-8505f348207d8ed882a967b263f00729"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-fetchblocksincylinder-l2-lambda-8505f348207d8ed882a967b263f00729"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::fetchBlocksInCylinder::__l2::<lambda_8505f348207d8ed882a967b263f00729>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::fetchBlocksInCylinder::__l2::<lambda_8505f348207d8ed882a967b263f00729>\n{\n  unsigned int height;\n  unsigned int radius;\n  const BlockPos *pos;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-fetchblocksincylinder-l2-lambda-92f021db926b66e17c3d1841e8d27176"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-fetchblocksincylinder-l2-lambda-92f021db926b66e17c3d1841e8d27176"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::fetchBlocksInCylinder::__l2::<lambda_92f021db926b66e17c3d1841e8d27176>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::fetchBlocksInCylinder::__l2::<lambda_92f021db926b66e17c3d1841e8d27176>\n{\n  unsigned int height;\n  unsigned int radius;\n  const BlockPos *pos;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-fetchblocksinbox-l2-lambda-997cfac59e34b9c498561474fd5a53aa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-fetchblocksinbox-l2-lambda-997cfac59e34b9c498561474fd5a53aa"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::fetchBlocksInBox::__l2::<lambda_997cfac59e34b9c498561474fd5a53aa>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::fetchBlocksInBox::__l2::<lambda_997cfac59e34b9c498561474fd5a53aa>\n{\n  const BoundingBox *box;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-fetchblocksinbox-l2-lambda-edcd7c6147545643dd4f557b53945643"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-fetchblocksinbox-l2-lambda-edcd7c6147545643dd4f557b53945643"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::fetchBlocksInBox::__l2::<lambda_edcd7c6147545643dd4f557b53945643>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::fetchBlocksInBox::__l2::<lambda_edcd7c6147545643dd4f557b53945643>\n{\n  const BoundingBox *box;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-fetchblocksinbox-l2-lambda-f43d19be392b01ec54de03992e19bbb7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-fetchblocksinbox-l2-lambda-f43d19be392b01ec54de03992e19bbb7"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::fetchBlocksInBox::__l2::<lambda_f43d19be392b01ec54de03992e19bbb7>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::fetchBlocksInBox::__l2::<lambda_f43d19be392b01ec54de03992e19bbb7>\n{\n  const BoundingBox *box;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-ctor-l5-lambda-3d3775961188f5d75cc9165de79473f8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-ctor-l5-lambda-3d3775961188f5d75cc9165de79473f8"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_3d3775961188f5d75cc9165de79473f8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::{ctor}::__l5::<lambda_3d3775961188f5d75cc9165de79473f8>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-ctor-l5-lambda-544678e6bb1251d1e1246e2f40073bdf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-ctor-l5-lambda-544678e6bb1251d1e1246e2f40073bdf"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_544678e6bb1251d1e1246e2f40073bdf>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::{ctor}::__l5::<lambda_544678e6bb1251d1e1246e2f40073bdf>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-ctor-l5-lambda-783ffbd839a4ef6bf7f3e7e71a917099"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-ctor-l5-lambda-783ffbd839a4ef6bf7f3e7e71a917099"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_783ffbd839a4ef6bf7f3e7e71a917099>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::{ctor}::__l5::<lambda_783ffbd839a4ef6bf7f3e7e71a917099>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-ctor-l5-lambda-7f372ce8f01d8e7eca85b0df7b158601"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-ctor-l5-lambda-7f372ce8f01d8e7eca85b0df7b158601"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_7f372ce8f01d8e7eca85b0df7b158601>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::{ctor}::__l5::<lambda_7f372ce8f01d8e7eca85b0df7b158601>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-ctor-l5-lambda-9d948e124c24db4d860e66e0195e2b1b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-ctor-l5-lambda-9d948e124c24db4d860e66e0195e2b1b"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_9d948e124c24db4d860e66e0195e2b1b>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::{ctor}::__l5::<lambda_9d948e124c24db4d860e66e0195e2b1b>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-ctor-l5-lambda-b4ac387c3660a6cd85cfd19de4a596e5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-ctor-l5-lambda-b4ac387c3660a6cd85cfd19de4a596e5"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_b4ac387c3660a6cd85cfd19de4a596e5>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::{ctor}::__l5::<lambda_b4ac387c3660a6cd85cfd19de4a596e5>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-ctor-l5-lambda-bb5dbc2c16fccebb88d3f7ca9022c57c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-ctor-l5-lambda-bb5dbc2c16fccebb88d3f7ca9022c57c"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_bb5dbc2c16fccebb88d3f7ca9022c57c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::{ctor}::__l5::<lambda_bb5dbc2c16fccebb88d3f7ca9022c57c>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-ctor-l5-lambda-f1843f9aa6d0f0bab8652ab8fb95c2ac"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-ctor-l5-lambda-f1843f9aa6d0f0bab8652ab8fb95c2ac"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_f1843f9aa6d0f0bab8652ab8fb95c2ac>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::{ctor}::__l5::<lambda_f1843f9aa6d0f0bab8652ab8fb95c2ac>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-zeroindicesgreaterequalthan-l2-lambda-09a7b7eccde96f168aefdcf4510b1048"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-zeroindicesgreaterequalthan-l2-lambda-09a7b7eccde96f168aefdcf4510b1048"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::_zeroIndicesGreaterEqualThan::__l2::<lambda_09a7b7eccde96f168aefdcf4510b1048>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::_zeroIndicesGreaterEqualThan::__l2::<lambda_09a7b7eccde96f168aefdcf4510b1048>\n{\n  unsigned __int16 *max;\n  std::vector<unsigned short> *outOfBoundSlots;\n  unsigned __int64 *idx;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-findusedindices-l2-lambda-17bedaa24e4c7f9ff6efe58e06d20e2c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-findusedindices-l2-lambda-17bedaa24e4c7f9ff6efe58e06d20e2c"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::findUsedIndices::__l2::<lambda_17bedaa24e4c7f9ff6efe58e06d20e2c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::findUsedIndices::__l2::<lambda_17bedaa24e4c7f9ff6efe58e06d20e2c>\n{\n  std::bitset<256> *existing;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-findusedindices-l2-lambda-2ed1e938e204f4521098f089a261134c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-findusedindices-l2-lambda-2ed1e938e204f4521098f089a261134c"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::findUsedIndices::__l2::<lambda_2ed1e938e204f4521098f089a261134c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::findUsedIndices::__l2::<lambda_2ed1e938e204f4521098f089a261134c>\n{\n  std::bitset<4> *existing;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-findusedindices-l2-lambda-42453c35bc07ae9da0d838fd6046c080"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-findusedindices-l2-lambda-42453c35bc07ae9da0d838fd6046c080"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::findUsedIndices::__l2::<lambda_42453c35bc07ae9da0d838fd6046c080>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::findUsedIndices::__l2::<lambda_42453c35bc07ae9da0d838fd6046c080>\n{\n  std::bitset<4096> *existing;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-findusedindices-l2-lambda-4c55d5191fba51a33256aebbbc639402"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-findusedindices-l2-lambda-4c55d5191fba51a33256aebbbc639402"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::findUsedIndices::__l2::<lambda_4c55d5191fba51a33256aebbbc639402>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::findUsedIndices::__l2::<lambda_4c55d5191fba51a33256aebbbc639402>\n{\n  std::bitset<8> *existing;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-findusedindices-l2-lambda-5326846d6b6a4a52eef1e117e9eaadd5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-findusedindices-l2-lambda-5326846d6b6a4a52eef1e117e9eaadd5"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::findUsedIndices::__l2::<lambda_5326846d6b6a4a52eef1e117e9eaadd5>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::findUsedIndices::__l2::<lambda_5326846d6b6a4a52eef1e117e9eaadd5>\n{\n  std::bitset<64> *existing;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-zeroindicesgreaterequalthan-l2-lambda-5b5744cc523e02cf0d9ddc9cfb78437c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-zeroindicesgreaterequalthan-l2-lambda-5b5744cc523e02cf0d9ddc9cfb78437c"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>::_zeroIndicesGreaterEqualThan::__l2::<lambda_5b5744cc523e02cf0d9ddc9cfb78437c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<16,16>::_zeroIndicesGreaterEqualThan::__l2::<lambda_5b5744cc523e02cf0d9ddc9cfb78437c>\n{\n  unsigned __int16 *max;\n  std::vector<unsigned short> *outOfBoundSlots;\n  unsigned __int64 *idx;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-zeroindicesgreaterequalthan-l2-lambda-5c6bcf649dce0f48c2923e314a547cad"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-zeroindicesgreaterequalthan-l2-lambda-5c6bcf649dce0f48c2923e314a547cad"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>::_zeroIndicesGreaterEqualThan::__l2::<lambda_5c6bcf649dce0f48c2923e314a547cad>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<8,8>::_zeroIndicesGreaterEqualThan::__l2::<lambda_5c6bcf649dce0f48c2923e314a547cad>\n{\n  unsigned __int16 *max;\n  std::vector<unsigned short> *outOfBoundSlots;\n  unsigned __int64 *idx;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-zeroindicesgreaterequalthan-l2-lambda-6d55ad4cff0dd4eabb29215fb608913f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-zeroindicesgreaterequalthan-l2-lambda-6d55ad4cff0dd4eabb29215fb608913f"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>::_zeroIndicesGreaterEqualThan::__l2::<lambda_6d55ad4cff0dd4eabb29215fb608913f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<6,6>::_zeroIndicesGreaterEqualThan::__l2::<lambda_6d55ad4cff0dd4eabb29215fb608913f>\n{\n  unsigned __int16 *max;\n  std::vector<unsigned short> *outOfBoundSlots;\n  unsigned __int64 *idx;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-zeroindicesgreaterequalthan-l2-lambda-6e0dba5c30f06b0dff0181aec7e4af94"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-zeroindicesgreaterequalthan-l2-lambda-6e0dba5c30f06b0dff0181aec7e4af94"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::_zeroIndicesGreaterEqualThan::__l2::<lambda_6e0dba5c30f06b0dff0181aec7e4af94>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::_zeroIndicesGreaterEqualThan::__l2::<lambda_6e0dba5c30f06b0dff0181aec7e4af94>\n{\n  unsigned __int16 *max;\n  std::vector<unsigned short> *outOfBoundSlots;\n  unsigned __int64 *idx;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-zeroindicesgreaterequalthan-l2-lambda-77d2db69a28f5aff5902a2cc0216082c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-zeroindicesgreaterequalthan-l2-lambda-77d2db69a28f5aff5902a2cc0216082c"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::_zeroIndicesGreaterEqualThan::__l2::<lambda_77d2db69a28f5aff5902a2cc0216082c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::_zeroIndicesGreaterEqualThan::__l2::<lambda_77d2db69a28f5aff5902a2cc0216082c>\n{\n  unsigned __int16 *max;\n  std::vector<unsigned short> *outOfBoundSlots;\n  unsigned __int64 *idx;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-zeroindicesgreaterequalthan-l2-lambda-a77ad154162e45517fb3e1ee3c08a299"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-zeroindicesgreaterequalthan-l2-lambda-a77ad154162e45517fb3e1ee3c08a299"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>::_zeroIndicesGreaterEqualThan::__l2::<lambda_a77ad154162e45517fb3e1ee3c08a299>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<2,2>::_zeroIndicesGreaterEqualThan::__l2::<lambda_a77ad154162e45517fb3e1ee3c08a299>\n{\n  unsigned __int16 *max;\n  std::vector<unsigned short> *outOfBoundSlots;\n  unsigned __int64 *idx;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-findusedindices-l2-lambda-b3a5c9534f819a154621d0e7553c71e5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-findusedindices-l2-lambda-b3a5c9534f819a154621d0e7553c71e5"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>::findUsedIndices::__l2::<lambda_b3a5c9534f819a154621d0e7553c71e5>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<1,1>::findUsedIndices::__l2::<lambda_b3a5c9534f819a154621d0e7553c71e5>\n{\n  std::bitset<2> *existing;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-findusedindices-l2-lambda-cae54f3a68597e07934177246dc8cb8f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-findusedindices-l2-lambda-cae54f3a68597e07934177246dc8cb8f"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>::findUsedIndices::__l2::<lambda_cae54f3a68597e07934177246dc8cb8f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<4,4>::findUsedIndices::__l2::<lambda_cae54f3a68597e07934177246dc8cb8f>\n{\n  std::bitset<16> *existing;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-findusedindices-l2-lambda-ccd75c963cecbc6c25cfcda0d301d8c1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-findusedindices-l2-lambda-ccd75c963cecbc6c25cfcda0d301d8c1"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>::findUsedIndices::__l2::<lambda_ccd75c963cecbc6c25cfcda0d301d8c1>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<5,5>::findUsedIndices::__l2::<lambda_ccd75c963cecbc6c25cfcda0d301d8c1>\n{\n  std::bitset<32> *existing;\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-zeroindicesgreaterequalthan-l2-lambda-fa644e9c48b0892bfb38e0eb2c45d93d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-zeroindicesgreaterequalthan-l2-lambda-fa644e9c48b0892bfb38e0eb2c45d93d"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>::_zeroIndicesGreaterEqualThan::__l2::<lambda_fa644e9c48b0892bfb38e0eb2c45d93d>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SubChunkBlockStoragePaletted<3,3>::_zeroIndicesGreaterEqualThan::__l2::<lambda_fa644e9c48b0892bfb38e0eb2c45d93d>\n{\n  unsigned __int16 *max;\n  std::vector<unsigned short> *outOfBoundSlots;\n  unsigned __int64 *idx;\n};\n\n")])])]),a("h3",{attrs:{id:"singleblockfeature-mayattach-l2-lambda-2a6fcf79d125f18d56e9ee3d23280c35"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#singleblockfeature-mayattach-l2-lambda-2a6fcf79d125f18d56e9ee3d23280c35"}},[t._v("#")]),t._v(" "),a("code",[t._v("SingleBlockFeature::_mayAttach::__l2::<lambda_2a6fcf79d125f18d56e9ee3d23280c35>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SingleBlockFeature::_mayAttach::__l2::<lambda_2a6fcf79d125f18d56e9ee3d23280c35>\n{\n  const SingleBlockFeature *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"singleblockfeature-mayattach-l2-lambda-e9c20ccf746f09597e99f3b2df791d8a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#singleblockfeature-mayattach-l2-lambda-e9c20ccf746f09597e99f3b2df791d8a"}},[t._v("#")]),t._v(" "),a("code",[t._v("SingleBlockFeature::_mayAttach::__l2::<lambda_e9c20ccf746f09597e99f3b2df791d8a>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SingleBlockFeature::_mayAttach::__l2::<lambda_e9c20ccf746f09597e99f3b2df791d8a>\n{\n  const SingleBlockFeature *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"structurefeature-waitforfeatureblueprints-l2-lambda-ae7082b559214a814fc226cfd7f32516"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#structurefeature-waitforfeatureblueprints-l2-lambda-ae7082b559214a814fc226cfd7f32516"}},[t._v("#")]),t._v(" "),a("code",[t._v("StructureFeature::waitForFeatureBlueprints::__l2::<lambda_ae7082b559214a814fc226cfd7f32516>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StructureFeature::waitForFeatureBlueprints::__l2::<lambda_ae7082b559214a814fc226cfd7f32516>\n{\n  StructureFeature *const __this;\n};\n\n")])])]),a("h3",{attrs:{id:"structuretemplate-fillblockinfo-l2-lambda-76eff4b48ee237c3d94a60cb41446511"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#structuretemplate-fillblockinfo-l2-lambda-76eff4b48ee237c3d94a60cb41446511"}},[t._v("#")]),t._v(" "),a("code",[t._v("StructureTemplate::_fillBlockInfo::__l2::<lambda_76eff4b48ee237c3d94a60cb41446511>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj StructureTemplate::_fillBlockInfo::__l2::<lambda_76eff4b48ee237c3d94a60cb41446511>\n{\n  const Block *voidBlock;\n  std::map<Block const *,int> *blockToIndex;\n  StructureBlockPalette *structureBlockPalette;\n};\n\n")])])]),a("h3",{attrs:{id:"scatterparamsmolangvariableindices-ctor-l2-lambda-3a8b2a6fd80c4ca75449b56bc67f6f83-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatterparamsmolangvariableindices-ctor-l2-lambda-3a8b2a6fd80c4ca75449b56bc67f6f83-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_3a8b2a6fd80c4ca75449b56bc67f6f83>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_3a8b2a6fd80c4ca75449b56bc67f6f83>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatterparamsmolangvariableindices-ctor-l2-lambda-3f045b696bef04d0359231b688e14fa9-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatterparamsmolangvariableindices-ctor-l2-lambda-3f045b696bef04d0359231b688e14fa9-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_3f045b696bef04d0359231b688e14fa9>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_3f045b696bef04d0359231b688e14fa9>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatterparamsmolangvariableindices-ctor-l2-lambda-ed116ff0a398b7fd701b935508d112de-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatterparamsmolangvariableindices-ctor-l2-lambda-ed116ff0a398b7fd701b935508d112de-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_ed116ff0a398b7fd701b935508d112de>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_ed116ff0a398b7fd701b935508d112de>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatterparamsmolangvariableindices-ctor-l2-lambda-2e1116f26d303492bb04bdbca35dcc0c-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatterparamsmolangvariableindices-ctor-l2-lambda-2e1116f26d303492bb04bdbca35dcc0c-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_2e1116f26d303492bb04bdbca35dcc0c>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_2e1116f26d303492bb04bdbca35dcc0c>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatterparamsmolangvariableindices-ctor-l2-lambda-8c3a59de51eb0e6c7f11f2d764ffc7b3-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatterparamsmolangvariableindices-ctor-l2-lambda-8c3a59de51eb0e6c7f11f2d764ffc7b3-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_8c3a59de51eb0e6c7f11f2d764ffc7b3>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_8c3a59de51eb0e6c7f11f2d764ffc7b3>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatterparamsmolangvariableindices-ctor-l2-lambda-f7db91837f2565cf3fd818ae5745584f-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatterparamsmolangvariableindices-ctor-l2-lambda-f7db91837f2565cf3fd818ae5745584f-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_f7db91837f2565cf3fd818ae5745584f>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_f7db91837f2565cf3fd818ae5745584f>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatterparamsmolangvariableindices-ctor-l2-lambda-3f045b696bef04d0359231b688e14fa9"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatterparamsmolangvariableindices-ctor-l2-lambda-3f045b696bef04d0359231b688e14fa9"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_3f045b696bef04d0359231b688e14fa9>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_3f045b696bef04d0359231b688e14fa9>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatterparamsmolangvariableindices-ctor-l2-lambda-ed116ff0a398b7fd701b935508d112de"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatterparamsmolangvariableindices-ctor-l2-lambda-ed116ff0a398b7fd701b935508d112de"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_ed116ff0a398b7fd701b935508d112de>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_ed116ff0a398b7fd701b935508d112de>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatterparamsmolangvariableindices-ctor-l2-lambda-3a8b2a6fd80c4ca75449b56bc67f6f83"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatterparamsmolangvariableindices-ctor-l2-lambda-3a8b2a6fd80c4ca75449b56bc67f6f83"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_3a8b2a6fd80c4ca75449b56bc67f6f83>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_3a8b2a6fd80c4ca75449b56bc67f6f83>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatterparamsmolangvariableindices-ctor-l2-lambda-8c3a59de51eb0e6c7f11f2d764ffc7b3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatterparamsmolangvariableindices-ctor-l2-lambda-8c3a59de51eb0e6c7f11f2d764ffc7b3"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_8c3a59de51eb0e6c7f11f2d764ffc7b3>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_8c3a59de51eb0e6c7f11f2d764ffc7b3>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatterparamsmolangvariableindices-ctor-l2-lambda-f7db91837f2565cf3fd818ae5745584f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatterparamsmolangvariableindices-ctor-l2-lambda-f7db91837f2565cf3fd818ae5745584f"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_f7db91837f2565cf3fd818ae5745584f>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_f7db91837f2565cf3fd818ae5745584f>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"scatterparamsmolangvariableindices-ctor-l2-lambda-2e1116f26d303492bb04bdbca35dcc0c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scatterparamsmolangvariableindices-ctor-l2-lambda-2e1116f26d303492bb04bdbca35dcc0c"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_2e1116f26d303492bb04bdbca35dcc0c>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ScatterParamsMolangVariableIndices::{ctor}::__l2::<lambda_2e1116f26d303492bb04bdbca35dcc0c>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"snapshotenv-createsnapshot-l14-lambda-633e2701bdb30152fc9f78453e74bb9a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#snapshotenv-createsnapshot-l14-lambda-633e2701bdb30152fc9f78453e74bb9a"}},[t._v("#")]),t._v(" "),a("code",[t._v("SnapshotEnv::createSnapshot::__l14::<lambda_633e2701bdb30152fc9f78453e74bb9a>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SnapshotEnv::createSnapshot::__l14::<lambda_633e2701bdb30152fc9f78453e74bb9a>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"serverscoreboard-setdisplayobjective-l8-lambda-0747d8f05afc99c477135c4d36b10fe8"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serverscoreboard-setdisplayobjective-l8-lambda-0747d8f05afc99c477135c4d36b10fe8"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerScoreboard::setDisplayObjective::__l8::<lambda_0747d8f05afc99c477135c4d36b10fe8>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj ServerScoreboard::setDisplayObjective::__l8::<lambda_0747d8f05afc99c477135c4d36b10fe8>\n{\n  const DisplayObjective **displayObjective;\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-c365b97a846660e6b3fccbcc72a4c37e-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-c365b97a846660e6b3fccbcc72a4c37e-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_c365b97a846660e6b3fccbcc72a4c37e>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_c365b97a846660e6b3fccbcc72a4c37e>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-c365b97a846660e6b3fccbcc72a4c37e"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-c365b97a846660e6b3fccbcc72a4c37e"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_c365b97a846660e6b3fccbcc72a4c37e>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_c365b97a846660e6b3fccbcc72a4c37e>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-1cd8d8773a9d60ac3364ae38a475281b-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-1cd8d8773a9d60ac3364ae38a475281b-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_1cd8d8773a9d60ac3364ae38a475281b>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_1cd8d8773a9d60ac3364ae38a475281b>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-1cd8d8773a9d60ac3364ae38a475281b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-1cd8d8773a9d60ac3364ae38a475281b"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_1cd8d8773a9d60ac3364ae38a475281b>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_1cd8d8773a9d60ac3364ae38a475281b>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-4bfd93ca7d63de59fdffead62714b7fa-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-4bfd93ca7d63de59fdffead62714b7fa-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_4bfd93ca7d63de59fdffead62714b7fa>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_4bfd93ca7d63de59fdffead62714b7fa>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-4bfd93ca7d63de59fdffead62714b7fa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-4bfd93ca7d63de59fdffead62714b7fa"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_4bfd93ca7d63de59fdffead62714b7fa>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_4bfd93ca7d63de59fdffead62714b7fa>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-db838ddadf31e2f802fde4f26a617c80-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-db838ddadf31e2f802fde4f26a617c80-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_db838ddadf31e2f802fde4f26a617c80>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_db838ddadf31e2f802fde4f26a617c80>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-db838ddadf31e2f802fde4f26a617c80"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-db838ddadf31e2f802fde4f26a617c80"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_db838ddadf31e2f802fde4f26a617c80>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_db838ddadf31e2f802fde4f26a617c80>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-60b6d1bba4b02c0e8d10fc8be75855af-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-60b6d1bba4b02c0e8d10fc8be75855af-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_60b6d1bba4b02c0e8d10fc8be75855af>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_60b6d1bba4b02c0e8d10fc8be75855af>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreecanopy-buildschema-l2-lambda-60b6d1bba4b02c0e8d10fc8be75855af"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreecanopy-buildschema-l2-lambda-60b6d1bba4b02c0e8d10fc8be75855af"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeCanopy::_buildSchema::__l2::<lambda_60b6d1bba4b02c0e8d10fc8be75855af>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeCanopy::_buildSchema::__l2::<lambda_60b6d1bba4b02c0e8d10fc8be75855af>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreetrunk-buildschema-l2-lambda-defce208a08fa9ea383a3b955bef6273-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreetrunk-buildschema-l2-lambda-defce208a08fa9ea383a3b955bef6273-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeTrunk::_buildSchema::__l2::<lambda_defce208a08fa9ea383a3b955bef6273>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::<lambda_defce208a08fa9ea383a3b955bef6273>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"simpletreetrunk-buildschema-l2-lambda-defce208a08fa9ea383a3b955bef6273"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simpletreetrunk-buildschema-l2-lambda-defce208a08fa9ea383a3b955bef6273"}},[t._v("#")]),t._v(" "),a("code",[t._v("SimpleTreeTrunk::_buildSchema::__l2::<lambda_defce208a08fa9ea383a3b955bef6273>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SimpleTreeTrunk::_buildSchema::__l2::<lambda_defce208a08fa9ea383a3b955bef6273>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-9b631e13b9a6582f77c27a8d4c523d13-l2-literal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-9b631e13b9a6582f77c27a8d4c523d13-l2-literal"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_9b631e13b9a6582f77c27a8d4c523d13>::()::__l2::Literal")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_9b631e13b9a6582f77c27a8d4c523d13>::()::__l2::Literal\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sprucetreecanopy-buildschema-l2-lambda-9b631e13b9a6582f77c27a8d4c523d13"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sprucetreecanopy-buildschema-l2-lambda-9b631e13b9a6582f77c27a8d4c523d13"}},[t._v("#")]),t._v(" "),a("code",[t._v("SpruceTreeCanopy::_buildSchema::__l2::<lambda_9b631e13b9a6582f77c27a8d4c523d13>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SpruceTreeCanopy::_buildSchema::__l2::<lambda_9b631e13b9a6582f77c27a8d4c523d13>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"shportalroom-postprocess-l2-lambda-ad4ab04a3053cfc72944c670238dd6f2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shportalroom-postprocess-l2-lambda-ad4ab04a3053cfc72944c670238dd6f2"}},[t._v("#")]),t._v(" "),a("code",[t._v("SHPortalRoom::postProcess::__l2::<lambda_ad4ab04a3053cfc72944c670238dd6f2>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SHPortalRoom::postProcess::__l2::<lambda_ad4ab04a3053cfc72944c670238dd6f2>\n{\n  const Block **endPortalEye;\n  const Block **endPortalNoEye;\n};\n\n")])])]),a("h3",{attrs:{id:"soundsystemfmod-addtosoundcache-l5-lambda-35441f677013214f2c5df3d329344406"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soundsystemfmod-addtosoundcache-l5-lambda-35441f677013214f2c5df3d329344406"}},[t._v("#")]),t._v(" "),a("code",[t._v("SoundSystemFMOD::_addToSoundCache::__l5::<lambda_35441f677013214f2c5df3d329344406>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SoundSystemFMOD::_addToSoundCache::__l5::<lambda_35441f677013214f2c5df3d329344406>\n{\n  SoundSystemFMOD *const __this;\n  const Core::Path soundName;\n};\n\n")])])]),a("h3",{attrs:{id:"soundsystemfmod-unloadallexcept-l20-lambda-0e65d4d3526df21953afe127ce5ce183"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soundsystemfmod-unloadallexcept-l20-lambda-0e65d4d3526df21953afe127ce5ce183"}},[t._v("#")]),t._v(" "),a("code",[t._v("SoundSystemFMOD::unloadAllExcept::__l20::<lambda_0e65d4d3526df21953afe127ce5ce183>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SoundSystemFMOD::unloadAllExcept::__l20::<lambda_0e65d4d3526df21953afe127ce5ce183>\n{\n  const std::vector<Core::PathBuffer<std::string >> exceptions;\n};\n\n")])])]),a("h3",{attrs:{id:"soundsystemfmod-fadeout-l2-lambda-2b792a64d6c135a6d4a0beb3927c5059"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#soundsystemfmod-fadeout-l2-lambda-2b792a64d6c135a6d4a0beb3927c5059"}},[t._v("#")]),t._v(" "),a("code",[t._v("SoundSystemFMOD::fadeOut::__l2::<lambda_2b792a64d6c135a6d4a0beb3927c5059>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SoundSystemFMOD::fadeOut::__l2::<lambda_2b792a64d6c135a6d4a0beb3927c5059>\n{\n  unsigned __int64 handle;\n};\n\n")])])]),a("h3",{attrs:{id:"serializerenummapping-lookup-l2-lambda-4bef74521c4bc00b8d630ed3c33fba83"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serializerenummapping-lookup-l2-lambda-4bef74521c4bc00b8d630ed3c33fba83"}},[t._v("#")]),t._v(" "),a("code",[t._v("SerializerEnumMapping::lookup::__l2::<lambda_4bef74521c4bc00b8d630ed3c33fba83>")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __cppobj SerializerEnumMapping::lookup::__l2::<lambda_4bef74521c4bc00b8d630ed3c33fba83>\n{\n};\n\n")])])]),a("h3",{attrs:{id:"sequence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sequence"}},[t._v("#")]),t._v(" "),a("code",[t._v("sequence")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct __declspec(align(8)) sequence\n{\n  _object *it;\n  int saw_StopIteration;\n};\n\n")])])]),a("h3",{attrs:{id:"scriptclientinstanceeventlistener-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scriptclientinstanceeventlistener-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ScriptClientInstanceEventListener_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ScriptClientInstanceEventListener_vtbl\n{\n  void (__fastcall *~ClientInstanceEventListener)(ClientInstanceEventListener *this);\n  EventResult (__fastcall *onClientInitializeStart)(ClientInstanceEventListener *this, ClientInstance *);\n  EventResult (__fastcall *onClientInitializeEnd)(ClientInstanceEventListener *this, ClientInstance *);\n  EventResult (__fastcall *onClientMinecraftInitialized)(ClientInstanceEventListener *this, ClientInstance *, Minecraft *);\n  EventResult (__fastcall *onClientCreatedLevel)(ClientInstanceEventListener *this, ClientInstance *, Level *);\n  EventResult (__fastcall *onClientUpdateStart)(ClientInstanceEventListener *this, ClientInstance *);\n  EventResult (__fastcall *onClientUpdateEnd)(ClientInstanceEventListener *this, ClientInstance *);\n  EventResult (__fastcall *onClientSuspend)(ClientInstanceEventListener *this, ClientInstance *);\n  EventResult (__fastcall *onClientEnteredWorld)(ClientInstanceEventListener *this, ClientInstance *);\n  EventResult (__fastcall *onStartLeaveGame)(ClientInstanceEventListener *this, ClientInstance *);\n};\n\n")])])]),a("h3",{attrs:{id:"serverlevel-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serverlevel-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerLevel_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ServerLevel_vtbl\n{\n  void (__fastcall *~BlockSourceListener)(BlockSourceListener *this);\n  void (__fastcall *onSourceCreated)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onSourceDestroyed)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onAreaChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, const BlockPos *);\n  void (__fastcall *onBlockChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, unsigned int, const Block *, const Block *, int, const ActorBlockSyncMessage *);\n  void (__fastcall *onBrightnessChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onBlockEntityChanged)(BlockSourceListener *this, BlockSource *, BlockActor *);\n  void (__fastcall *onBlockEntityAboutToBeRemoved)(BlockSourceListener *this, BlockSource *, std::shared_ptr<BlockActor>);\n  void (__fastcall *onEntityChanged)(BlockSourceListener *this, BlockSource *, Actor *);\n  void (__fastcall *onBlockEvent)(BlockSourceListener *this, BlockSource *, int, int, int, int, int);\n  bool (__fastcall *initialize)(Level *this, const std::string *, const LevelSettings *, LevelData *, const std::string *);\n  bool (__fastcall *postProcessResources)(Level *this);\n  void (__fastcall *startLeaveGame)(Level *this);\n  Actor *(__fastcall *addEntity)(Level *this, BlockSource *, std::unique_ptr<Actor>);\n  Actor *(__fastcall *addGlobalEntity)(Level *this, BlockSource *, std::unique_ptr<Actor>);\n  Actor *(__fastcall *addAutonomousEntity)(Level *this, BlockSource *, std::unique_ptr<Actor>);\n  void (__fastcall *addPlayer)(Level *this, std::unique_ptr<Player>);\n  std::unique_ptr<Actor> *(__fastcall *takeEntity)(Level *this, std::unique_ptr<Actor> *result, ActorUniqueID);\n  std::unique_ptr<Actor> *(__fastcall *borrowEntity)(Level *this, std::unique_ptr<Actor> *result, ActorUniqueID, LevelChunk *);\n  const Tick *(__fastcall *getCurrentServerTick)(Level *this, const Tick *result);\n  Factory<BaseLightTextureImageBuilder,Level &,Scheduler &> *(__fastcall *getLightTextureImageBuilderFactory)(Level *this);\n  const Factory<BaseLightTextureImageBuilder,Level &,Scheduler &> *(__fastcall *getLightTextureImageBuilderFactory)(Level *this);\n  void (__fastcall *onPlayerDeath)(Level *this, Player *, const ActorDamageSource *);\n  void (__fastcall *tick)(Level *this);\n  void (__fastcall *directTickEntities)(Level *this, BlockSource *);\n  void (__fastcall *updateSleepingPlayerList)(Level *this);\n  void (__fastcall *setDifficulty)(Level *this, Difficulty);\n  void (__fastcall *setCommandsEnabled)(Level *this, bool);\n  void (__fastcall *setWorldTemplateOptionsUnlocked)(Level *this);\n  void (__fastcall *saveAdditionalData)(Level *this);\n  LevelEventCoordinator *(__fastcall *getLevelEventCoordinator)(Level *this);\n  void (__fastcall *onChunkLoaded)(Level *this, ChunkSource *, LevelChunk *);\n  void (__fastcall *queueEntityRemoval)(Level *this, std::unique_ptr<Actor> *, bool);\n  void (__fastcall *removeEntityReferences)(Level *this, Actor *, bool);\n  void (__fastcall *loadFunctionManager)(Level *this);\n  ResourcePackManager *(__fastcall *getClientResourcePackManager)(Level *this);\n  ResourcePackManager *(__fastcall *getServerResourcePackManager)(Level *this);\n  TradeTables *(__fastcall *getTradeTables)(Level *this);\n  void (__fastcall *addEntryToTagCache)(Level *this, const std::string *);\n  void (__fastcall *addEntriesToTagCache)(Level *this, const std::vector<std::string>);\n  void (__fastcall *dropEntryFromTagCache)(Level *this, const std::string *);\n  void (__fastcall *clearTagCache)(Level *this);\n  void (__fastcall *decrementTagCache)(Level *this, const std::string *, TagRegistry<IDType<LevelTagIDType>,IDType<LevelTagSetIDType> > *);\n  void (__fastcall *incrementTagCache)(Level *this, const std::string *, TagRegistry<IDType<LevelTagIDType>,IDType<LevelTagSetIDType> > *);\n  void (__fastcall *runCommand)(Level *this, Command *, CommandOrigin *, CommandOriginSystem);\n  void (__fastcall *runCommand)(Level *this, const HashedString *, CommandOrigin *, CommandOriginSystem, const CurrentCmdVersion);\n  TagRegistry<IDType<LevelTagIDType>,IDType<LevelTagSetIDType> > *(__fastcall *getTagRegistry)(Level *this);\n  bool (__fastcall *canUseSkin)(Level *this, const SerializedSkin *, const NetworkIdentifier *, const mce::UUID *, const std::string *);\n  PositionTrackingDB::PositionTrackingDBServer *(__fastcall *getPositionTrackerDBServer)(Level *this);\n  void (__fastcall *setFinishedInitializing)(Level *this);\n};\n\n")])])]),a("h3",{attrs:{id:"serverplayer-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serverplayer-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ServerPlayer_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ServerPlayer_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n  void (__fastcall *prepareRegion)(Player *this, ChunkSource *);\n  void (__fastcall *destroyRegion)(Player *this);\n  void (__fastcall *suspendRegion)(Player *this);\n  void (__fastcall *resendAllChunks)(Player *this);\n  void (__fastcall *_fireWillChangeDimension)(Player *this);\n  void (__fastcall *_fireDimensionChanged)(Player *this);\n  void (__fastcall *changeDimensionWithCredits)(Player *this, AutomaticID<Dimension,int>);\n  int (__fastcall *tickWorld)(Player *this, const Tick *);\n  void (__fastcall *frameUpdate)(Player *this, FrameUpdateContextBase *);\n  const std::vector<ChunkPos> *(__fastcall *getTickingOffsets)(Player *this);\n  void (__fastcall *moveView)(Player *this);\n  void (__fastcall *setName)(Player *this, const std::string *);\n  void (__fastcall *checkMovementStats)(Player *this, const Vec3 *);\n  StructureFeatureType (__fastcall *getCurrentStructureFeature)(Player *this);\n  bool (__fastcall *isAutoJumpEnabled)(Player *this);\n  void (__fastcall *respawn)(Player *this);\n  void (__fastcall *resetRot)(Player *this);\n  void (__fastcall *resetPos)(Player *this, bool);\n  bool (__fastcall *isInTrialMode)(Player *this);\n  bool (__fastcall *hasResource)(Player *this, int);\n  void (__fastcall *completeUsingItem)(Player *this);\n  void (__fastcall *setPermissions)(Player *this, CommandPermissionLevel);\n  void (__fastcall *startDestroying)(Player *this);\n  void (__fastcall *stopDestroying)(Player *this);\n  void (__fastcall *openPortfolio)(Player *this);\n  void (__fastcall *openBook)(Player *this, int, bool, int, BlockActor *);\n  void (__fastcall *openTrading)(Player *this, const ActorUniqueID *, bool);\n  bool (__fastcall *canOpenContainerScreen)(Player *this);\n  void (__fastcall *openChalkboard)(Player *this, ChalkboardBlockActor *, bool);\n  void (__fastcall *openNpcInteractScreen)(Player *this, Actor *);\n  bool (__fastcall *openInventory)(Player *this);\n  void (__fastcall *displayChatMessage)(Player *this, const std::string *, const std::string *);\n  void (__fastcall *displayClientMessage)(Player *this, const std::string *);\n  void (__fastcall *displayTextObjectMessage)(Player *this, const TextObjectRoot *);\n  void (__fastcall *displayTextObjectWhisperMessage)(Player *this, const ResolvedTextObject *, const std::string *, const std::string *);\n  void (__fastcall *displayWhisperMessage)(Player *this, const std::string *, const std::string *, const std::string *, const std::string *);\n  BedSleepingResult (__fastcall *startSleepInBed)(Player *this, const BlockPos *);\n  void (__fastcall *stopSleepInBed)(Player *this, bool, bool);\n  bool (__fastcall *canStartSleepInBed)(Player *this);\n  int (__fastcall *getSleepTimer)(Player *this);\n  int (__fastcall *getPreviousTickSleepTimer)(Player *this);\n  void (__fastcall *openSign)(Player *this, const BlockPos *);\n  void (__fastcall *playEmote)(Player *this, const std::string *);\n  bool (__fastcall *isHostingPlayer)(Player *this);\n  bool (__fastcall *isLoading)(Player *this);\n  bool (__fastcall *isPlayerInitialized)(Player *this);\n  void (__fastcall *stopLoading)(Player *this);\n  void (__fastcall *registerTrackedBoss)(Player *this, ActorUniqueID);\n  void (__fastcall *unRegisterTrackedBoss)(Player *this, ActorUniqueID);\n  void (__fastcall *setPlayerGameType)(Player *this, GameType);\n  void (__fastcall *initHUDContainerManager)(Player *this);\n  void (__fastcall *_crit)(Player *this, Actor *);\n  IMinecraftEventing *(__fastcall *getEventing)(Player *this);\n  unsigned int (__fastcall *getUserId)(Player *this);\n  void (__fastcall *sendEventPacket)(Player *this, EventPacket *);\n  void (__fastcall *addExperience)(Player *this, int);\n  void (__fastcall *addLevels)(Player *this, int);\n  void (__fastcall *setContainerData)(Player *this, IContainerManager *, int, int);\n  void (__fastcall *slotChanged)(Player *this, IContainerManager *, Container *, int, const ItemStack *, const ItemStack *, bool);\n  void (__fastcall *inventoryChanged)(Player *this, Container *, int, const ItemStack *, const ItemStack *, bool);\n  void (__fastcall *refreshContainer)(Player *this, IContainerManager *);\n  void (__fastcall *deleteContainerManager)(Player *this);\n  void (__fastcall *setFieldOfViewModifier)(Player *this, float);\n  bool (__fastcall *is2DPositionRelevant)(Player *this, AutomaticID<Dimension,int>, const BlockPos *);\n  bool (__fastcall *isEntityRelevant)(Player *this, const Actor *);\n  bool (__fastcall *isTeacher)(Player *this);\n  void (__fastcall *onSuspension)(Player *this);\n  void (__fastcall *onLinkedSlotsChanged)(Player *this);\n  void (__fastcall *startCooldown)(Player *this, const Item *);\n  int (__fastcall *getItemCooldownLeft)(Player *this, const std::string *);\n  bool (__fastcall *isItemInCooldown)(Player *this, const std::string *);\n  void (__fastcall *sendInventoryTransaction)(Player *this, const InventoryTransaction *);\n  void (__fastcall *sendComplexInventoryTransaction)(Player *this, std::unique_ptr<ComplexInventoryTransaction>);\n  void (__fastcall *sendNetworkPacket)(Player *this, Packet *);\n  PlayerEventCoordinator *(__fastcall *getPlayerEventCoordinator)(Player *this);\n  MoveInputHandler *(__fastcall *getMoveInputHandler)(Player *this);\n  InputMode (__fastcall *getInputMode)(Player *this);\n  ClientPlayMode (__fastcall *getPlayMode)(Player *this);\n  void (__fastcall *reportMovementTelemetry)(Player *this, const MovementEventType);\n  bool (__fastcall *getCamereDeparted)(Player *this);\n  bool (__fastcall *getThirdPersonPerspective)(Player *this);\n  Vec2 *(__fastcall *getRotationToCamera)(Player *this, Vec2 *result);\n  void (__fastcall *onMovePlayerPacketNormal)(Player *this, const Vec3 *, const Vec2 *, float);\n};\n\n")])])]),a("h3",{attrs:{id:"shulker-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shulker-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("Shulker_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ Shulker_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n};\n\n")])])]),a("h3",{attrs:{id:"silverfish-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#silverfish-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("Silverfish_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ Silverfish_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n  bool (__fastcall *isDarkEnoughToSpawn)(Monster *this);\n};\n\n")])])]),a("h3",{attrs:{id:"skullblockactor-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skullblockactor-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SkullBlockActor_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SkullBlockActor_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n};\n\n")])])]),a("h3",{attrs:{id:"slime-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slime-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("Slime_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ Slime_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n  bool (__fastcall *isDarkEnoughToSpawn)(Monster *this);\n  bool (__fastcall *canDealDamage)(Slime *this);\n  LevelSoundEvent (__fastcall *getSquishSound)(Slime *this);\n  void (__fastcall *setSlimeSize)(Slime *this, int);\n  bool (__fastcall *doPlayJumpSound)(Slime *this);\n  bool (__fastcall *doPlayLandSound)(Slime *this);\n  void (__fastcall *playJumpSound)(Slime *this);\n  void (__fastcall *playLandSound)(Slime *this);\n  void (__fastcall *decreaseSquish)(Slime *this);\n  std::unique_ptr<Slime> *(__fastcall *createChild)(Slime *this, std::unique_ptr<Slime> *result, int);\n};\n\n")])])]),a("h3",{attrs:{id:"spider-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spider-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("Spider_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ Spider_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n  bool (__fastcall *isDarkEnoughToSpawn)(Monster *this);\n  float (__fastcall *getModelScale)(Spider *this);\n  Spider::Type (__fastcall *getSpiderType)(Spider *this);\n};\n\n")])])]),a("h3",{attrs:{id:"squid-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#squid-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("Squid_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ Squid_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-1-1-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-1-1-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<1,1>_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SubChunkBlockStoragePaletted<1,1>_vtbl\n{\n  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);\n  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);\n  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);\n  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);\n  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);\n  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);\n  std::unique_ptr<SubChunkBlockStorage> *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr<SubChunkBlockStorage> *result, SubChunkBlockStorage::PruneType);\n  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);\n  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);\n  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);\n  gsl::span<unsigned int const ,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int const ,-1> *result);\n  gsl::span<unsigned int,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int,-1> *result);\n  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);\n  gsl::span<Block const * const,-1> *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span<Block const * const,-1> *result);\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-16-16-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-16-16-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<16,16>_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SubChunkBlockStoragePaletted<16,16>_vtbl\n{\n  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);\n  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);\n  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);\n  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);\n  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);\n  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);\n  std::unique_ptr<SubChunkBlockStorage> *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr<SubChunkBlockStorage> *result, SubChunkBlockStorage::PruneType);\n  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);\n  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);\n  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);\n  gsl::span<unsigned int const ,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int const ,-1> *result);\n  gsl::span<unsigned int,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int,-1> *result);\n  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);\n  gsl::span<Block const * const,-1> *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span<Block const * const,-1> *result);\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-2-2-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-2-2-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<2,2>_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SubChunkBlockStoragePaletted<2,2>_vtbl\n{\n  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);\n  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);\n  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);\n  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);\n  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);\n  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);\n  std::unique_ptr<SubChunkBlockStorage> *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr<SubChunkBlockStorage> *result, SubChunkBlockStorage::PruneType);\n  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);\n  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);\n  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);\n  gsl::span<unsigned int const ,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int const ,-1> *result);\n  gsl::span<unsigned int,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int,-1> *result);\n  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);\n  gsl::span<Block const * const,-1> *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span<Block const * const,-1> *result);\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-3-3-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-3-3-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<3,3>_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SubChunkBlockStoragePaletted<3,3>_vtbl\n{\n  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);\n  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);\n  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);\n  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);\n  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);\n  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);\n  std::unique_ptr<SubChunkBlockStorage> *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr<SubChunkBlockStorage> *result, SubChunkBlockStorage::PruneType);\n  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);\n  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);\n  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);\n  gsl::span<unsigned int const ,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int const ,-1> *result);\n  gsl::span<unsigned int,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int,-1> *result);\n  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);\n  gsl::span<Block const * const,-1> *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span<Block const * const,-1> *result);\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-4-4-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-4-4-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<4,4>_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SubChunkBlockStoragePaletted<4,4>_vtbl\n{\n  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);\n  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);\n  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);\n  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);\n  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);\n  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);\n  std::unique_ptr<SubChunkBlockStorage> *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr<SubChunkBlockStorage> *result, SubChunkBlockStorage::PruneType);\n  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);\n  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);\n  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);\n  gsl::span<unsigned int const ,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int const ,-1> *result);\n  gsl::span<unsigned int,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int,-1> *result);\n  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);\n  gsl::span<Block const * const,-1> *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span<Block const * const,-1> *result);\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-5-5-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-5-5-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<5,5>_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SubChunkBlockStoragePaletted<5,5>_vtbl\n{\n  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);\n  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);\n  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);\n  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);\n  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);\n  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);\n  std::unique_ptr<SubChunkBlockStorage> *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr<SubChunkBlockStorage> *result, SubChunkBlockStorage::PruneType);\n  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);\n  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);\n  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);\n  gsl::span<unsigned int const ,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int const ,-1> *result);\n  gsl::span<unsigned int,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int,-1> *result);\n  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);\n  gsl::span<Block const * const,-1> *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span<Block const * const,-1> *result);\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-6-6-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-6-6-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<6,6>_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SubChunkBlockStoragePaletted<6,6>_vtbl\n{\n  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);\n  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);\n  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);\n  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);\n  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);\n  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);\n  std::unique_ptr<SubChunkBlockStorage> *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr<SubChunkBlockStorage> *result, SubChunkBlockStorage::PruneType);\n  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);\n  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);\n  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);\n  gsl::span<unsigned int const ,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int const ,-1> *result);\n  gsl::span<unsigned int,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int,-1> *result);\n  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);\n  gsl::span<Block const * const,-1> *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span<Block const * const,-1> *result);\n};\n\n")])])]),a("h3",{attrs:{id:"subchunkblockstoragepaletted-8-8-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#subchunkblockstoragepaletted-8-8-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("SubChunkBlockStoragePaletted<8,8>_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ SubChunkBlockStoragePaletted<8,8>_vtbl\n{\n  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);\n  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);\n  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);\n  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);\n  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);\n  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);\n  std::unique_ptr<SubChunkBlockStorage> *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr<SubChunkBlockStorage> *result, SubChunkBlockStorage::PruneType);\n  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);\n  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);\n  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);\n  gsl::span<unsigned int const ,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int const ,-1> *result);\n  gsl::span<unsigned int,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int,-1> *result);\n  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);\n  gsl::span<Block const * const,-1> *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span<Block const * const,-1> *result);\n};\n\n")])])]),a("h3",{attrs:{id:"salmon-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#salmon-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("Salmon_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ Salmon_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n};\n\n")])])]),a("h3",{attrs:{id:"sheep-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sheep-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("Sheep_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ Sheep_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n};\n\n")])])]),a("h3",{attrs:{id:"shulkerboxblockactor-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shulkerboxblockactor-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ShulkerBoxBlockActor_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ShulkerBoxBlockActor_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n  void (__fastcall *loadItems)(ChestBlockActor *this, const CompoundTag *, Level *);\n  bool (__fastcall *saveItems)(ChestBlockActor *this, CompoundTag *);\n  void (__fastcall *playOpenSound)(ChestBlockActor *this, BlockSource *);\n  void (__fastcall *playCloseSound)(ChestBlockActor *this, BlockSource *);\n  bool (__fastcall *_canOpenThis)(ChestBlockActor *this, BlockSource *);\n  AABB *(__fastcall *getObstructionAABB)(ChestBlockActor *this, AABB *result);\n  bool (__fastcall *_detectEntityObstruction)(ChestBlockActor *this, BlockSource *);\n};\n\n")])])]),a("h3",{attrs:{id:"skeleton-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skeleton-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("Skeleton_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ Skeleton_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n  bool (__fastcall *isDarkEnoughToSpawn)(Monster *this);\n};\n\n")])])]),a("h3",{attrs:{id:"strider-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strider-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("Strider_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ Strider_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n};\n\n")])])])])}),[],!1,null,null,null);a.default=o.exports}}]);