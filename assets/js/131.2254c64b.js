(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{439:function(t,a,e){"use strict";e.r(a);var o=e(27),s=Object(o.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"i-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-2"}},[t._v("#")]),t._v(" I~2")]),t._v(" "),a("h3",{attrs:{id:"isubchunkblockstoragepaletted-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isubchunkblockstoragepaletted-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ISubChunkBlockStoragePaletted_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ISubChunkBlockStoragePaletted_vtbl\n{\n  void (__fastcall *~SubChunkBlockStorage)(SubChunkBlockStorage *this);\n  bool (__fastcall *isUniform)(SubChunkBlockStorage *this, const Block *);\n  const Block *(__fastcall *getBlock)(SubChunkBlockStorage *this, unsigned __int16);\n  bool (__fastcall *setBlock)(SubChunkBlockStorage *this, unsigned __int16, const Block *);\n  unsigned __int64 (__fastcall *getBlockTypeCapacity)(SubChunkBlockStorage *this);\n  SubChunkBlockStorage::Type (__fastcall *getType)(SubChunkBlockStorage *this);\n  std::unique_ptr<SubChunkBlockStorage> *(__fastcall *makePrunedCopy)(SubChunkBlockStorage *this, std::unique_ptr<SubChunkBlockStorage> *result, SubChunkBlockStorage::PruneType);\n  bool (__fastcall *hasModFlag)(SubChunkBlockStorage *this);\n  void (__fastcall *setModFlag)(SubChunkBlockStorage *this, bool);\n  const ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  ISubChunkBlockStoragePaletted *(__fastcall *asPalettedStorage)(SubChunkBlockStorage *this);\n  void (__fastcall *fetchBlocksInCylinder)(SubChunkBlockStorage *this, const BlockPos *, const BlockPos *, unsigned int, unsigned int, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *fetchBlocksInBox)(SubChunkBlockStorage *this, const BlockPos *, const BoundingBox *, const std::function<bool __cdecl(Block const &)> *, std::vector<BlockFetchResult> *);\n  void (__fastcall *_serialize)(SubChunkBlockStorage *this, IDataOutput *, bool);\n  gsl::span<unsigned int const ,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int const ,-1> *result);\n  gsl::span<unsigned int,-1> *(__fastcall *getBlocks)(ISubChunkBlockStoragePaletted *this, gsl::span<unsigned int,-1> *result);\n  unsigned __int64 (__fastcall *getBitsPerBlock)(ISubChunkBlockStoragePaletted *this);\n  gsl::span<Block const * const,-1> *(__fastcall *getPaletteSnapshot)(ISubChunkBlockStoragePaletted *this, gsl::span<Block const * const,-1> *result);\n};\n\n")])])]),a("h3",{attrs:{id:"ixmldomattribute-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ixmldomattribute-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("IXMLDOMAttribute_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ IXMLDOMAttribute_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);\n  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);\n  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);\n  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);\n  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);\n  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);\n  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);\n  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);\n  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);\n  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);\n  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);\n  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);\n  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);\n  HRESULT (__fastcall *get_name)(IXMLDOMAttribute *this, wchar_t **);\n  HRESULT (__fastcall *get_value)(IXMLDOMAttribute *this, tagVARIANT *);\n  HRESULT (__fastcall *put_value)(IXMLDOMAttribute *this, tagVARIANT);\n};\n\n")])])]),a("h3",{attrs:{id:"ixmldomcharacterdata-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ixmldomcharacterdata-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("IXMLDOMCharacterData_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ IXMLDOMCharacterData_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);\n  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);\n  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);\n  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);\n  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);\n  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);\n  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);\n  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);\n  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);\n  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);\n  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);\n  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);\n  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);\n  HRESULT (__fastcall *get_data)(IXMLDOMCharacterData *this, wchar_t **);\n  HRESULT (__fastcall *put_data)(IXMLDOMCharacterData *this, wchar_t *);\n  HRESULT (__fastcall *get_length)(IXMLDOMCharacterData *this, int *);\n  HRESULT (__fastcall *substringData)(IXMLDOMCharacterData *this, int, int, wchar_t **);\n  HRESULT (__fastcall *appendData)(IXMLDOMCharacterData *this, wchar_t *);\n  HRESULT (__fastcall *insertData)(IXMLDOMCharacterData *this, int, wchar_t *);\n  HRESULT (__fastcall *deleteData)(IXMLDOMCharacterData *this, int, int);\n  HRESULT (__fastcall *replaceData)(IXMLDOMCharacterData *this, int, int, wchar_t *);\n};\n\n")])])]),a("h3",{attrs:{id:"ixmldomdocumenttype-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ixmldomdocumenttype-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("IXMLDOMDocumentType_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ IXMLDOMDocumentType_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);\n  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);\n  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);\n  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);\n  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);\n  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);\n  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);\n  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);\n  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);\n  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);\n  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);\n  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);\n  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);\n  HRESULT (__fastcall *get_name)(IXMLDOMDocumentType *this, wchar_t **);\n  HRESULT (__fastcall *get_entities)(IXMLDOMDocumentType *this, IXMLDOMNamedNodeMap **);\n  HRESULT (__fastcall *get_notations)(IXMLDOMDocumentType *this, IXMLDOMNamedNodeMap **);\n};\n\n")])])]),a("h3",{attrs:{id:"ixmldomdocument-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ixmldomdocument-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("IXMLDOMDocument_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ IXMLDOMDocument_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);\n  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);\n  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);\n  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);\n  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);\n  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);\n  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);\n  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);\n  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);\n  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);\n  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);\n  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);\n  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);\n  HRESULT (__fastcall *get_doctype)(IXMLDOMDocument *this, IXMLDOMDocumentType **);\n  HRESULT (__fastcall *get_implementation)(IXMLDOMDocument *this, IXMLDOMImplementation **);\n  HRESULT (__fastcall *get_documentElement)(IXMLDOMDocument *this, IXMLDOMElement **);\n  HRESULT (__fastcall *putref_documentElement)(IXMLDOMDocument *this, IXMLDOMElement *);\n  HRESULT (__fastcall *createElement)(IXMLDOMDocument *this, wchar_t *, IXMLDOMElement **);\n  HRESULT (__fastcall *createDocumentFragment)(IXMLDOMDocument *this, IXMLDOMDocumentFragment **);\n  HRESULT (__fastcall *createTextNode)(IXMLDOMDocument *this, wchar_t *, IXMLDOMText **);\n  HRESULT (__fastcall *createComment)(IXMLDOMDocument *this, wchar_t *, IXMLDOMComment **);\n  HRESULT (__fastcall *createCDATASection)(IXMLDOMDocument *this, wchar_t *, IXMLDOMCDATASection **);\n  HRESULT (__fastcall *createProcessingInstruction)(IXMLDOMDocument *this, wchar_t *, wchar_t *, IXMLDOMProcessingInstruction **);\n  HRESULT (__fastcall *createAttribute)(IXMLDOMDocument *this, wchar_t *, IXMLDOMAttribute **);\n  HRESULT (__fastcall *createEntityReference)(IXMLDOMDocument *this, wchar_t *, IXMLDOMEntityReference **);\n  HRESULT (__fastcall *getElementsByTagName)(IXMLDOMDocument *this, wchar_t *, IXMLDOMNodeList **);\n  HRESULT (__fastcall *createNode)(IXMLDOMDocument *this, tagVARIANT, wchar_t *, wchar_t *, IXMLDOMNode **);\n  HRESULT (__fastcall *nodeFromID)(IXMLDOMDocument *this, wchar_t *, IXMLDOMNode **);\n  HRESULT (__fastcall *load)(IXMLDOMDocument *this, tagVARIANT, __int16 *);\n  HRESULT (__fastcall *get_readyState)(IXMLDOMDocument *this, int *);\n  HRESULT (__fastcall *get_parseError)(IXMLDOMDocument *this, IXMLDOMParseError **);\n  HRESULT (__fastcall *get_url)(IXMLDOMDocument *this, wchar_t **);\n  HRESULT (__fastcall *get_async)(IXMLDOMDocument *this, __int16 *);\n  HRESULT (__fastcall *put_async)(IXMLDOMDocument *this, __int16);\n  HRESULT (__fastcall *abort)(IXMLDOMDocument *this);\n  HRESULT (__fastcall *loadXML)(IXMLDOMDocument *this, wchar_t *, __int16 *);\n  HRESULT (__fastcall *save)(IXMLDOMDocument *this, tagVARIANT);\n  HRESULT (__fastcall *get_validateOnParse)(IXMLDOMDocument *this, __int16 *);\n  HRESULT (__fastcall *put_validateOnParse)(IXMLDOMDocument *this, __int16);\n  HRESULT (__fastcall *get_resolveExternals)(IXMLDOMDocument *this, __int16 *);\n  HRESULT (__fastcall *put_resolveExternals)(IXMLDOMDocument *this, __int16);\n  HRESULT (__fastcall *get_preserveWhiteSpace)(IXMLDOMDocument *this, __int16 *);\n  HRESULT (__fastcall *put_preserveWhiteSpace)(IXMLDOMDocument *this, __int16);\n  HRESULT (__fastcall *put_onreadystatechange)(IXMLDOMDocument *this, tagVARIANT);\n  HRESULT (__fastcall *put_ondataavailable)(IXMLDOMDocument *this, tagVARIANT);\n  HRESULT (__fastcall *put_ontransformnode)(IXMLDOMDocument *this, tagVARIANT);\n};\n\n")])])]),a("h3",{attrs:{id:"ixmldomelement-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ixmldomelement-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("IXMLDOMElement_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ IXMLDOMElement_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);\n  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);\n  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);\n  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);\n  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);\n  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);\n  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);\n  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);\n  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);\n  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);\n  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);\n  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);\n  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);\n  HRESULT (__fastcall *get_tagName)(IXMLDOMElement *this, wchar_t **);\n  HRESULT (__fastcall *getAttribute)(IXMLDOMElement *this, wchar_t *, tagVARIANT *);\n  HRESULT (__fastcall *setAttribute)(IXMLDOMElement *this, wchar_t *, tagVARIANT);\n  HRESULT (__fastcall *removeAttribute)(IXMLDOMElement *this, wchar_t *);\n  HRESULT (__fastcall *getAttributeNode)(IXMLDOMElement *this, wchar_t *, IXMLDOMAttribute **);\n  HRESULT (__fastcall *setAttributeNode)(IXMLDOMElement *this, IXMLDOMAttribute *, IXMLDOMAttribute **);\n  HRESULT (__fastcall *removeAttributeNode)(IXMLDOMElement *this, IXMLDOMAttribute *, IXMLDOMAttribute **);\n  HRESULT (__fastcall *getElementsByTagName)(IXMLDOMElement *this, wchar_t *, IXMLDOMNodeList **);\n  HRESULT (__fastcall *normalize)(IXMLDOMElement *this);\n};\n\n")])])]),a("h3",{attrs:{id:"ixmldomprocessinginstruction-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ixmldomprocessinginstruction-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("IXMLDOMProcessingInstruction_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ IXMLDOMProcessingInstruction_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);\n  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);\n  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);\n  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);\n  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);\n  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);\n  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);\n  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);\n  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);\n  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);\n  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);\n  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);\n  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);\n  HRESULT (__fastcall *get_target)(IXMLDOMProcessingInstruction *this, wchar_t **);\n  HRESULT (__fastcall *get_data)(IXMLDOMProcessingInstruction *this, wchar_t **);\n  HRESULT (__fastcall *put_data)(IXMLDOMProcessingInstruction *this, wchar_t *);\n};\n\n")])])]),a("h3",{attrs:{id:"ixmldomtext-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ixmldomtext-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("IXMLDOMText_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ IXMLDOMText_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);\n  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);\n  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);\n  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);\n  HRESULT (__fastcall *get_nodeName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_nodeValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_nodeType)(IXMLDOMNode *this, tagDOMNodeType *);\n  HRESULT (__fastcall *get_parentNode)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_childNodes)(IXMLDOMNode *this, IXMLDOMNodeList **);\n  HRESULT (__fastcall *get_firstChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_lastChild)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_previousSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nextSibling)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_attributes)(IXMLDOMNode *this, IXMLDOMNamedNodeMap **);\n  HRESULT (__fastcall *insertBefore)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT, IXMLDOMNode **);\n  HRESULT (__fastcall *replaceChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *removeChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *appendChild)(IXMLDOMNode *this, IXMLDOMNode *, IXMLDOMNode **);\n  HRESULT (__fastcall *hasChildNodes)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_ownerDocument)(IXMLDOMNode *this, IXMLDOMDocument **);\n  HRESULT (__fastcall *cloneNode)(IXMLDOMNode *this, __int16, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypeString)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_text)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *put_text)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_specified)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_definition)(IXMLDOMNode *this, IXMLDOMNode **);\n  HRESULT (__fastcall *get_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_nodeTypedValue)(IXMLDOMNode *this, tagVARIANT);\n  HRESULT (__fastcall *get_dataType)(IXMLDOMNode *this, tagVARIANT *);\n  HRESULT (__fastcall *put_dataType)(IXMLDOMNode *this, wchar_t *);\n  HRESULT (__fastcall *get_xml)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNode)(IXMLDOMNode *this, IXMLDOMNode *, wchar_t **);\n  HRESULT (__fastcall *selectNodes)(IXMLDOMNode *this, wchar_t *, IXMLDOMNodeList **);\n  HRESULT (__fastcall *selectSingleNode)(IXMLDOMNode *this, wchar_t *, IXMLDOMNode **);\n  HRESULT (__fastcall *get_parsed)(IXMLDOMNode *this, __int16 *);\n  HRESULT (__fastcall *get_namespaceURI)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_prefix)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *get_baseName)(IXMLDOMNode *this, wchar_t **);\n  HRESULT (__fastcall *transformNodeToObject)(IXMLDOMNode *this, IXMLDOMNode *, tagVARIANT);\n  HRESULT (__fastcall *get_data)(IXMLDOMCharacterData *this, wchar_t **);\n  HRESULT (__fastcall *put_data)(IXMLDOMCharacterData *this, wchar_t *);\n  HRESULT (__fastcall *get_length)(IXMLDOMCharacterData *this, int *);\n  HRESULT (__fastcall *substringData)(IXMLDOMCharacterData *this, int, int, wchar_t **);\n  HRESULT (__fastcall *appendData)(IXMLDOMCharacterData *this, wchar_t *);\n  HRESULT (__fastcall *insertData)(IXMLDOMCharacterData *this, int, wchar_t *);\n  HRESULT (__fastcall *deleteData)(IXMLDOMCharacterData *this, int, int);\n  HRESULT (__fastcall *replaceData)(IXMLDOMCharacterData *this, int, int, wchar_t *);\n  HRESULT (__fastcall *splitText)(IXMLDOMText *this, int, IXMLDOMText **);\n};\n\n")])])]),a("h3",{attrs:{id:"itemactor-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#itemactor-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ItemActor_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ItemActor_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n};\n\n")])])]),a("h3",{attrs:{id:"iteminstance-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iteminstance-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ItemInstance_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ItemInstance_vtbl\n{\n  void (__fastcall *~ItemStackBase)(ItemStackBase *this);\n  void (__fastcall *reinit)(ItemStackBase *this, const gsl::basic_string_span<char const ,-1>, int, int);\n  void (__fastcall *reinit)(ItemStackBase *this, const BlockLegacy *, int);\n  void (__fastcall *reinit)(ItemStackBase *this, const Item *, int, int);\n  void (__fastcall *setNull)(ItemStackBase *this);\n  std::string *(__fastcall *toString)(ItemStackBase *this, std::string *result);\n  std::string *(__fastcall *toDebugString)(ItemStackBase *this, std::string *result);\n  bool (__fastcall *reviewItemDirty)(ItemStackBase *this, SensitiveWordsManager *, const std::string *);\n};\n\n")])])]),a("h3",{attrs:{id:"itemstackrequestactioncraftbase-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#itemstackrequestactioncraftbase-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ItemStackRequestActionCraftBase_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ItemStackRequestActionCraftBase_vtbl\n{\n  void (__fastcall *~ItemStackRequestAction)(ItemStackRequestAction *this);\n  const ItemStackRequestActionCraftBase *(__fastcall *getCraftAction)(ItemStackRequestAction *this);\n  int (__fastcall *getFilteredStringIndex)(ItemStackRequestAction *this);\n  void (__fastcall *_write)(ItemStackRequestAction *this, BinaryStream *);\n  bool (__fastcall *_read)(ItemStackRequestAction *this, ReadOnlyBinaryStream *);\n};\n\n")])])]),a("h3",{attrs:{id:"itemstackrequestactioncraftnonimplemented-deprecatedasktylaing-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#itemstackrequestactioncraftnonimplemented-deprecatedasktylaing-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ItemStackRequestActionCraftNonImplemented_DEPRECATEDASKTYLAING_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ItemStackRequestActionCraftNonImplemented_DEPRECATEDASKTYLAING_vtbl\n{\n  void (__fastcall *~ItemStackRequestAction)(ItemStackRequestAction *this);\n  const ItemStackRequestActionCraftBase *(__fastcall *getCraftAction)(ItemStackRequestAction *this);\n  int (__fastcall *getFilteredStringIndex)(ItemStackRequestAction *this);\n  void (__fastcall *_write)(ItemStackRequestAction *this, BinaryStream *);\n  bool (__fastcall *_read)(ItemStackRequestAction *this, ReadOnlyBinaryStream *);\n};\n\n")])])]),a("h3",{attrs:{id:"itemstackrequestactioncraftrecipeoptional-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#itemstackrequestactioncraftrecipeoptional-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ItemStackRequestActionCraftRecipeOptional_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ItemStackRequestActionCraftRecipeOptional_vtbl\n{\n  void (__fastcall *~ItemStackRequestAction)(ItemStackRequestAction *this);\n  const ItemStackRequestActionCraftBase *(__fastcall *getCraftAction)(ItemStackRequestAction *this);\n  int (__fastcall *getFilteredStringIndex)(ItemStackRequestAction *this);\n  void (__fastcall *_write)(ItemStackRequestAction *this, BinaryStream *);\n  bool (__fastcall *_read)(ItemStackRequestAction *this, ReadOnlyBinaryStream *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11blendstate1-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11blendstate1-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11BlendState1_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11BlendState1_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetDesc)(ID3D11BlendState *this, D3D11_BLEND_DESC *);\n  void (__fastcall *GetDesc1)(ID3D11BlendState1 *this, D3D11_BLEND_DESC1 *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11buffer-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11buffer-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11Buffer_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11Buffer_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetType)(ID3D11Resource *this, D3D11_RESOURCE_DIMENSION *);\n  void (__fastcall *SetEvictionPriority)(ID3D11Resource *this, unsigned int);\n  unsigned int (__fastcall *GetEvictionPriority)(ID3D11Resource *this);\n  void (__fastcall *GetDesc)(ID3D11Buffer *this, D3D11_BUFFER_DESC *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11depthstencilview-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11depthstencilview-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11DepthStencilView_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11DepthStencilView_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);\n  void (__fastcall *GetDesc)(ID3D11DepthStencilView *this, D3D11_DEPTH_STENCIL_VIEW_DESC *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11query1-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11query1-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11Query1_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11Query1_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  unsigned int (__fastcall *GetDataSize)(ID3D11Asynchronous *this);\n  void (__fastcall *GetDesc)(ID3D11Query *this, D3D11_QUERY_DESC *);\n  void (__fastcall *GetDesc1)(ID3D11Query1 *this, D3D11_QUERY_DESC1 *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11rasterizerstate1-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11rasterizerstate1-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11RasterizerState1_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11RasterizerState1_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetDesc)(ID3D11RasterizerState *this, D3D11_RASTERIZER_DESC *);\n  void (__fastcall *GetDesc1)(ID3D11RasterizerState1 *this, D3D11_RASTERIZER_DESC1 *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11rasterizerstate2-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11rasterizerstate2-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11RasterizerState2_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11RasterizerState2_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetDesc)(ID3D11RasterizerState *this, D3D11_RASTERIZER_DESC *);\n  void (__fastcall *GetDesc1)(ID3D11RasterizerState1 *this, D3D11_RASTERIZER_DESC1 *);\n  void (__fastcall *GetDesc2)(ID3D11RasterizerState2 *this, D3D11_RASTERIZER_DESC2 *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11rendertargetview-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11rendertargetview-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11RenderTargetView_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11RenderTargetView_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);\n  void (__fastcall *GetDesc)(ID3D11RenderTargetView *this, D3D11_RENDER_TARGET_VIEW_DESC *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11shaderresourceview-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11shaderresourceview-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11ShaderResourceView_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11ShaderResourceView_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);\n  void (__fastcall *GetDesc)(ID3D11ShaderResourceView *this, D3D11_SHADER_RESOURCE_VIEW_DESC *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11texture2d1-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11texture2d1-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11Texture2D1_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11Texture2D1_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetType)(ID3D11Resource *this, D3D11_RESOURCE_DIMENSION *);\n  void (__fastcall *SetEvictionPriority)(ID3D11Resource *this, unsigned int);\n  unsigned int (__fastcall *GetEvictionPriority)(ID3D11Resource *this);\n  void (__fastcall *GetDesc)(ID3D11Texture2D *this, D3D11_TEXTURE2D_DESC *);\n  void (__fastcall *GetDesc1)(ID3D11Texture2D1 *this, D3D11_TEXTURE2D_DESC1 *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11texture3d1-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11texture3d1-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11Texture3D1_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11Texture3D1_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetType)(ID3D11Resource *this, D3D11_RESOURCE_DIMENSION *);\n  void (__fastcall *SetEvictionPriority)(ID3D11Resource *this, unsigned int);\n  unsigned int (__fastcall *GetEvictionPriority)(ID3D11Resource *this);\n  void (__fastcall *GetDesc)(ID3D11Texture3D *this, D3D11_TEXTURE3D_DESC *);\n  void (__fastcall *GetDesc1)(ID3D11Texture3D1 *this, D3D11_TEXTURE3D_DESC1 *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11unorderedaccessview-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11unorderedaccessview-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11UnorderedAccessView_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11UnorderedAccessView_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);\n  void (__fastcall *GetDesc)(ID3D11UnorderedAccessView *this, D3D11_UNORDERED_ACCESS_VIEW_DESC *);\n};\n\n")])])]),a("h3",{attrs:{id:"illagerbeast-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#illagerbeast-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("IllagerBeast_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ IllagerBeast_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n  bool (__fastcall *isDarkEnoughToSpawn)(Monster *this);\n};\n\n")])])]),a("h3",{attrs:{id:"irongolem-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#irongolem-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("IronGolem_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ IronGolem_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n};\n\n")])])]),a("h3",{attrs:{id:"itemstackrequestactioncraft-typedservernetid-creativeitemnetidtag-unsigned-int-0-12-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#itemstackrequestactioncraft-typedservernetid-creativeitemnetidtag-unsigned-int-0-12-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ItemStackRequestActionCraft<TypedServerNetId<CreativeItemNetIdTag,unsigned int,0>,12>_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ItemStackRequestActionCraft<TypedServerNetId<CreativeItemNetIdTag,unsigned int,0>,12>_vtbl\n{\n  void (__fastcall *~ItemStackRequestAction)(ItemStackRequestAction *this);\n  const ItemStackRequestActionCraftBase *(__fastcall *getCraftAction)(ItemStackRequestAction *this);\n  int (__fastcall *getFilteredStringIndex)(ItemStackRequestAction *this);\n  void (__fastcall *_write)(ItemStackRequestAction *this, BinaryStream *);\n  bool (__fastcall *_read)(ItemStackRequestAction *this, ReadOnlyBinaryStream *);\n};\n\n")])])]),a("h3",{attrs:{id:"itemstackrequestactioncraft-typedservernetid-recipenetidtag-unsigned-int-0-10-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#itemstackrequestactioncraft-typedservernetid-recipenetidtag-unsigned-int-0-10-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ItemStackRequestActionCraft<TypedServerNetId<RecipeNetIdTag,unsigned int,0>,10>_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ItemStackRequestActionCraft<TypedServerNetId<RecipeNetIdTag,unsigned int,0>,10>_vtbl\n{\n  void (__fastcall *~ItemStackRequestAction)(ItemStackRequestAction *this);\n  const ItemStackRequestActionCraftBase *(__fastcall *getCraftAction)(ItemStackRequestAction *this);\n  int (__fastcall *getFilteredStringIndex)(ItemStackRequestAction *this);\n  void (__fastcall *_write)(ItemStackRequestAction *this, BinaryStream *);\n  bool (__fastcall *_read)(ItemStackRequestAction *this, ReadOnlyBinaryStream *);\n};\n\n")])])]),a("h3",{attrs:{id:"itemstackrequestactioncraft-typedservernetid-recipenetidtag-unsigned-int-0-11-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#itemstackrequestactioncraft-typedservernetid-recipenetidtag-unsigned-int-0-11-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ItemStackRequestActionCraft<TypedServerNetId<RecipeNetIdTag,unsigned int,0>,11>_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ItemStackRequestActionCraft<TypedServerNetId<RecipeNetIdTag,unsigned int,0>,11>_vtbl\n{\n  void (__fastcall *~ItemStackRequestAction)(ItemStackRequestAction *this);\n  const ItemStackRequestActionCraftBase *(__fastcall *getCraftAction)(ItemStackRequestAction *this);\n  int (__fastcall *getFilteredStringIndex)(ItemStackRequestAction *this);\n  void (__fastcall *_write)(ItemStackRequestAction *this, BinaryStream *);\n  bool (__fastcall *_read)(ItemStackRequestAction *this, ReadOnlyBinaryStream *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11rendertargetview1-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11rendertargetview1-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11RenderTargetView1_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11RenderTargetView1_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);\n  void (__fastcall *GetDesc)(ID3D11RenderTargetView *this, D3D11_RENDER_TARGET_VIEW_DESC *);\n  void (__fastcall *GetDesc1)(ID3D11RenderTargetView1 *this, D3D11_RENDER_TARGET_VIEW_DESC1 *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11shaderresourceview1-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11shaderresourceview1-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11ShaderResourceView1_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11ShaderResourceView1_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);\n  void (__fastcall *GetDesc)(ID3D11ShaderResourceView *this, D3D11_SHADER_RESOURCE_VIEW_DESC *);\n  void (__fastcall *GetDesc1)(ID3D11ShaderResourceView1 *this, D3D11_SHADER_RESOURCE_VIEW_DESC1 *);\n};\n\n")])])]),a("h3",{attrs:{id:"id3d11unorderedaccessview1-vtbl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#id3d11unorderedaccessview1-vtbl"}},[t._v("#")]),t._v(" "),a("code",[t._v("ID3D11UnorderedAccessView1_vtbl")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("struct /*VFT*/ ID3D11UnorderedAccessView1_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  void (__fastcall *GetDevice)(ID3D11DeviceChild *this, ID3D11Device **);\n  HRESULT (__fastcall *GetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int *, void *);\n  HRESULT (__fastcall *SetPrivateData)(ID3D11DeviceChild *this, const _GUID *, unsigned int, const void *);\n  HRESULT (__fastcall *SetPrivateDataInterface)(ID3D11DeviceChild *this, const _GUID *, const IUnknown *);\n  void (__fastcall *GetResource)(ID3D11View *this, ID3D11Resource **);\n  void (__fastcall *GetDesc)(ID3D11UnorderedAccessView *this, D3D11_UNORDERED_ACCESS_VIEW_DESC *);\n  void (__fastcall *GetDesc1)(ID3D11UnorderedAccessView1 *this, D3D11_UNORDERED_ACCESS_VIEW_DESC1 *);\n};\n\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);