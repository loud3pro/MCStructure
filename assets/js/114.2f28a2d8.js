(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{425:function(e,o,t){"use strict";t.r(o);var a=t(27),r=Object(a.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"d-10"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#d-10"}},[e._v("#")]),e._v(" D~10")]),e._v(" "),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-011d261b81ea80139468d7dde53a60f9"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-011d261b81ea80139468d7dde53a60f9"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_011d261b81ea80139468d7dde53a60f9>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_011d261b81ea80139468d7dde53a60f9>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-01210213e1a6d88cb8f84e9ad0dc5c93"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-01210213e1a6d88cb8f84e9ad0dc5c93"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::view::__l2::<lambda_01210213e1a6d88cb8f84e9ad0dc5c93>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-materialfilter-group-l4-lambda-067ac4231ed025a4c911105f5af25dd4"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-materialfilter-group-l4-lambda-067ac4231ed025a4c911105f5af25dd4"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Group<dragon::frameobject::components::MaterialFilter>::group::__l4::<lambda_067ac4231ed025a4c911105f5af25dd4>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n  dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources> >::_drawCallback::__l7::<lambda_ca139b429f4327e5cb998e5abbaa4a37>::()::__l2::<lambda_b0da65fb9b89d42be49e3e542df4ac45> *comparison;\n  const dragon::frameobject::components::MaterialFilter *c1;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-0ac8f85346da97f63b30f9a6a278e35b"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-0ac8f85346da97f63b30f9a6a278e35b"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_0ac8f85346da97f63b30f9a6a278e35b>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_0ac8f85346da97f63b30f9a6a278e35b>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-0fd9e270895308a01ae1e613852f49d2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-0fd9e270895308a01ae1e613852f49d2"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_0fd9e270895308a01ae1e613852f49d2>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_0fd9e270895308a01ae1e613852f49d2>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallbackui-l7-lambda-a5fea8a9d5020f7e0049faa7bfe84c18-l2-lambda-182f336776644d95299d541134088539-l2-lambda-0920e833afb2c0fbc0b7aee4adcb39df-l2-lambda-1aa4d80aef3b1089f107dd1ff07d6b0e"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallbackui-l7-lambda-a5fea8a9d5020f7e0049faa7bfe84c18-l2-lambda-182f336776644d95299d541134088539-l2-lambda-0920e833afb2c0fbc0b7aee4adcb39df-l2-lambda-1aa4d80aef3b1089f107dd1ff07d6b0e"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources> >::_drawCallbackUI::__l7::<lambda_a5fea8a9d5020f7e0049faa7bfe84c18>::()::__l2::<lambda_182f336776644d95299d541134088539>::()::__l2::<lambda_0920e833afb2c0fbc0b7aee4adcb39df>::()::__l2::<lambda_1aa4d80aef3b1089f107dd1ff07d6b0e>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder:\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-uielement-group-l4-lambda-14bbe9960f65939eb7e1ae7e629a38be"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-uielement-group-l4-lambda-14bbe9960f65939eb7e1ae7e629a38be"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Group<dragon::frameobject::components::UIElement>::group::__l4::<lambda_14bbe9960f65939eb7e1ae7e629a38be>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n  dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources> >::_drawCallbackUI::__l7::<lambda_a5fea8a9d5020f7e0049faa7bfe84c18>::()::__l2::<lambda_182f336776644d95299d541134088539>::()::__l2::<lambda_0920e833afb2c0fbc0b7aee4adcb39df>::()::__l2::<lambda_1aa4d80aef3b1089f107dd1ff07d6b0e> *comparison;\n  const dragon::frameobject::components::PassState *c1;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-19aca6ef23a18b0676523e75dfd40637"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-19aca6ef23a18b0676523e75dfd40637"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_19aca6ef23a18b0676523e75dfd40637>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_19aca6ef23a18b0676523e75dfd40637>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-20246195ccf425554e5473c0109ba376"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-20246195ccf425554e5473c0109ba376"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_20246195ccf425554e5473c0109ba376>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_20246195ccf425554e5473c0109ba376>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-223192e723284b16433e2e750899375a"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-223192e723284b16433e2e750899375a"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_223192e723284b16433e2e750899375a>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_223192e723284b16433e2e750899375a>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-225fd62e92fc2a617edc6d3e31408520"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-225fd62e92fc2a617edc6d3e31408520"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::view::__l2::<lambda_225fd62e92fc2a617edc6d3e31408520>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-23c09d97c9e5cb4c2481f8644a658dd8"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-23c09d97c9e5cb4c2481f8644a658dd8"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_23c09d97c9e5cb4c2481f8644a658dd8>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_23c09d97c9e5cb4c2481f8644a658dd8>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-255567e9971cd30fab359be0218e046a"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-255567e9971cd30fab359be0218e046a"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_255567e9971cd30fab359be0218e046a>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_255567e9971cd30fab359be0218e046a>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-28dfecb4d1191a4f5cc0ec25fa5e415d"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-28dfecb4d1191a4f5cc0ec25fa5e415d"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_28dfecb4d1191a4f5cc0ec25fa5e415d>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_28dfecb4d1191a4f5cc0ec25fa5e415d>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-29ef08c343dc78f0b13d6dffbb913fff"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-29ef08c343dc78f0b13d6dffbb913fff"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_29ef08c343dc78f0b13d6dffbb913fff>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_29ef08c343dc78f0b13d6dffbb913fff>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-3b577f08a96e9448300c1ca4037472a3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-3b577f08a96e9448300c1ca4037472a3"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_3b577f08a96e9448300c1ca4037472a3>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_3b577f08a96e9448300c1ca4037472a3>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-4085188a66e4fc6036e82c6a85ff3d78"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-4085188a66e4fc6036e82c6a85ff3d78"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_4085188a66e4fc6036e82c6a85ff3d78>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_4085188a66e4fc6036e82c6a85ff3d78>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-426fe12bf2360a3aed85fcfbc9a10e27"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-426fe12bf2360a3aed85fcfbc9a10e27"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::view::__l2::<lambda_426fe12bf2360a3aed85fcfbc9a10e27>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-487d2664dfd38fa345d5b9708d956472"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-487d2664dfd38fa345d5b9708d956472"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_487d2664dfd38fa345d5b9708d956472>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_487d2664dfd38fa345d5b9708d956472>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-4a7acafa1f9dd3401088c46ece0ff61a"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-4a7acafa1f9dd3401088c46ece0ff61a"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_4a7acafa1f9dd3401088c46ece0ff61a>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_4a7acafa1f9dd3401088c46ece0ff61a>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparetlas-l2-lambda-4d633182ffcab860b843266e5ce78d6c"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparetlas-l2-lambda-4d633182ffcab860b843266e5ce78d6c"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareTLAS::__l2::<lambda_4d633182ffcab860b843266e5ce78d6c>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareTLAS::__l2::<lambda_4d633182ffcab860b843266e5ce78d6c>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallback-l7-lambda-ca139b429f4327e5cb998e5abbaa4a37-l2-lambda-95e4a1eb5582866c1791e5e2763dfbfb-l2-lambda-c9480de825b69130cab7c61864f34ceb"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallback-l7-lambda-ca139b429f4327e5cb998e5abbaa4a37-l2-lambda-95e4a1eb5582866c1791e5e2763dfbfb-l2-lambda-c9480de825b69130cab7c61864f34ceb"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources> >::_drawCallback::__l7::<lambda_ca139b429f4327e5cb998e5abbaa4a37>::()::__l2::<lambda_95e4a1eb5582866c1791e5e2763dfbfb>::()::__l2::<lambda_c9480de825b69130cab7c61864f34ceb>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder:\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-materialfilter-group-l4-lambda-4f60d6739c3bc6ad5a60201c18fa6de6"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-materialfilter-group-l4-lambda-4f60d6739c3bc6ad5a60201c18fa6de6"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Group<dragon::frameobject::components::MaterialFilter>::group::__l4::<lambda_4f60d6739c3bc6ad5a60201c18fa6de6>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n  dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources> >::_drawCallback::__l7::<lambda_ca139b429f4327e5cb998e5abbaa4a37>::()::__l2::<lambda_95e4a1eb5582866c1791e5e2763dfbfb>::()::__l2::<lambda_c9480de825b69130cab7c61864f34ceb> *comparison;\n  const dragon::frameobject::components::PassState *c1;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-5589ecef86c0f4b69632f742b3ac3a0d"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-5589ecef86c0f4b69632f742b3ac3a0d"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_5589ecef86c0f4b69632f742b3ac3a0d>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_5589ecef86c0f4b69632f742b3ac3a0d>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-578de2b9bfdf354db6b828b9cbe866d9"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-578de2b9bfdf354db6b828b9cbe866d9"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::view::__l2::<lambda_578de2b9bfdf354db6b828b9cbe866d9>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-6102b5c1b114d981ecf4ea937f97c2b5"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-6102b5c1b114d981ecf4ea937f97c2b5"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_6102b5c1b114d981ecf4ea937f97c2b5>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_6102b5c1b114d981ecf4ea937f97c2b5>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-6d3611a0b6f51485fdedf11dba7fe708"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-6d3611a0b6f51485fdedf11dba7fe708"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_6d3611a0b6f51485fdedf11dba7fe708>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_6d3611a0b6f51485fdedf11dba7fe708>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-dragon-rendering-details-materialbind-drawcallbackui-l7-lambda-8a5beed6f3ada6e371d9fda59bc365dc-l2-lambda-9e6ba50f9e397274d4fcfe1e8bf8a443-l2-lambda-ea7b00026c8bd3f7710504cabd5d5774-l2-lambda-1c146cfe43bdd3f2c7005eed871c52b9"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-dragon-rendering-details-materialbind-drawcallbackui-l7-lambda-8a5beed6f3ada6e371d9fda59bc365dc-l2-lambda-9e6ba50f9e397274d4fcfe1e8bf8a443-l2-lambda-ea7b00026c8bd3f7710504cabd5d5774-l2-lambda-1c146cfe43bdd3f2c7005eed871c52b9"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>,dragon::rendering::details::MaterialBind>::_drawCallbackUI::__l7::<lambda_8a5beed6f3ada6e371d9fda59bc365dc>::()::__l2::<lambda_9e6ba50f9e397274d4fcfe1e8bf8a443>::()::__l2::<lambda_ea7b00026c8bd3f7710504cabd5d5774>::()::__l2::<lambda_1c146cfe43bdd3f2c7005eed871c52b9>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder:\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-uielement-group-l4-lambda-7ce4d799e071f39715e5b41c64efa763"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-uielement-group-l4-lambda-7ce4d799e071f39715e5b41c64efa763"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Group<dragon::frameobject::components::UIElement>::group::__l4::<lambda_7ce4d799e071f39715e5b41c64efa763>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n  dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>,dragon::rendering::details::MaterialBind>::_drawCallbackUI::__l7::<lambda_8a5beed6f3ada6e371d9fda59bc365dc>::()::__l2::<lambda_9e6ba50f9e397274d4fcfe1e8bf8a443>::()::__l2::<lambda_ea7b00026c8bd3f7710504cabd5d5774>::()::__l2::<lambda_1c146cfe43bdd3f2c7005eed871c52b9> *comparison;\n  const dragon::frameobject::components::PassState *c1;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-831d6c178b3c3d707190e1aec278b69d"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-831d6c178b3c3d707190e1aec278b69d"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_831d6c178b3c3d707190e1aec278b69d>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_831d6c178b3c3d707190e1aec278b69d>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-materialfilter-group-l4-lambda-8e5940ca6641462b5d111469cdbe5272"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-materialfilter-group-l4-lambda-8e5940ca6641462b5d111469cdbe5272"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Group<dragon::frameobject::components::MaterialFilter>::group::__l4::<lambda_8e5940ca6641462b5d111469cdbe5272>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n  dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>,dragon::rendering::details::MaterialBind>::_drawCallbackUI::__l7::<lambda_8a5beed6f3ada6e371d9fda59bc365dc>::()::__l2::<lambda_9e6ba50f9e397274d4fcfe1e8bf8a443>::()::__l2::<lambda_02d3650b636903028dc7d3d5d6a77e08> *comparison;\n  const dragon::frameobject::components::UIElement *c1;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-90d4c52f1e5a0e274d52fcba75a981e5"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-90d4c52f1e5a0e274d52fcba75a981e5"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_90d4c52f1e5a0e274d52fcba75a981e5>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_90d4c52f1e5a0e274d52fcba75a981e5>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-materialfilter-group-l4-lambda-97a761f8629202a26dc57ee85d88a1bd"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-materialfilter-group-l4-lambda-97a761f8629202a26dc57ee85d88a1bd"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Group<dragon::frameobject::components::MaterialFilter>::group::__l4::<lambda_97a761f8629202a26dc57ee85d88a1bd>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n  dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>,dragon::rendering::details::MaterialBind>::_drawCallbackUI::__l7::<lambda_8a5beed6f3ada6e371d9fda59bc365dc>::()::__l2::<lambda_db97eeed35992b6801a0bb157b1d2233> *comparison;\n  const dragon::frameobject::components::MaterialFilter *c1;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-9babb590a98aa05810048bc6e556a1b9"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-9babb590a98aa05810048bc6e556a1b9"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_9babb590a98aa05810048bc6e556a1b9>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_9babb590a98aa05810048bc6e556a1b9>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-9ca4feb9c47db705b54f656ac566eb9b"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-9ca4feb9c47db705b54f656ac566eb9b"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_9ca4feb9c47db705b54f656ac566eb9b>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_9ca4feb9c47db705b54f656ac566eb9b>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-a15598aa10e8e744a613760c40d66955"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-a15598aa10e8e744a613760c40d66955"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_a15598aa10e8e744a613760c40d66955>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_a15598aa10e8e744a613760c40d66955>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-a4ddf9854c169b4a27003b989fda9fe5"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-a4ddf9854c169b4a27003b989fda9fe5"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_a4ddf9854c169b4a27003b989fda9fe5>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_a4ddf9854c169b4a27003b989fda9fe5>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-a88fc4677e529335cc2761d00f933c6b"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-a88fc4677e529335cc2761d00f933c6b"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::view::__l2::<lambda_a88fc4677e529335cc2761d00f933c6b>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-ab43d46d61765206a88a61f152afae5c"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-ab43d46d61765206a88a61f152afae5c"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_ab43d46d61765206a88a61f152afae5c>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_ab43d46d61765206a88a61f152afae5c>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-b4daf85286c5c49e7df4c88ca634e717"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-b4daf85286c5c49e7df4c88ca634e717"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::view::__l2::<lambda_b4daf85286c5c49e7df4c88ca634e717>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-b6c3d7d5b53043fdf9fd11caedef0761"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-b6c3d7d5b53043fdf9fd11caedef0761"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_b6c3d7d5b53043fdf9fd11caedef0761>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_b6c3d7d5b53043fdf9fd11caedef0761>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-b93570498a91d2985b6ab3e038097e4e"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-b93570498a91d2985b6ab3e038097e4e"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_b93570498a91d2985b6ab3e038097e4e>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_b93570498a91d2985b6ab3e038097e4e>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-materialfilter-group-l4-lambda-bae843462f163c091ff17e7cc5e04ac7"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-materialfilter-group-l4-lambda-bae843462f163c091ff17e7cc5e04ac7"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Group<dragon::frameobject::components::MaterialFilter>::group::__l4::<lambda_bae843462f163c091ff17e7cc5e04ac7>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n  dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources> >::_drawCallbackUI::__l7::<lambda_a5fea8a9d5020f7e0049faa7bfe84c18>::()::__l2::<lambda_182f336776644d95299d541134088539>::()::__l2::<lambda_cb2cdd6a8b025c413531b2abbc80ee90> *comparison;\n  const dragon::frameobject::components::UIElement *c1;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-c95363df79686dc25cf97b40ec0896a6"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-c95363df79686dc25cf97b40ec0896a6"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_c95363df79686dc25cf97b40ec0896a6>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_c95363df79686dc25cf97b40ec0896a6>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-d5d5578cf967e32e64e2eb852a83006f"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-prepareorderdependent-l2-lambda-d5d5578cf967e32e64e2eb852a83006f"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_d5d5578cf967e32e64e2eb852a83006f>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareOrderDependent::__l2::<lambda_d5d5578cf967e32e64e2eb852a83006f>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-e2b17ff67816867c0d894975e1f03b08"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-e2b17ff67816867c0d894975e1f03b08"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_e2b17ff67816867c0d894975e1f03b08>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_e2b17ff67816867c0d894975e1f03b08>\n{\n  const dragon::rendering::ViewSet *sets;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-materialfilter-group-l4-lambda-e996e04d18d3c8f99051a2261ad8808a"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-group-dragon-frameobject-components-materialfilter-group-l4-lambda-e996e04d18d3c8f99051a2261ad8808a"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Group<dragon::frameobject::components::MaterialFilter>::group::__l4::<lambda_e996e04d18d3c8f99051a2261ad8808a>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n  dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources> >::_drawCallbackUI::__l7::<lambda_a5fea8a9d5020f7e0049faa7bfe84c18>::()::__l2::<lambda_aa13437ea3c8acbcb3651512485d1240> *comparison;\n  const dragon::frameobject::components::MaterialFilter *c1;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-faeafc42c38483776345099a56e972d8"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-faeafc42c38483776345099a56e972d8"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_faeafc42c38483776345099a56e972d8>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_faeafc42c38483776345099a56e972d8>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-fbbd31324d3a2f467e6b61b21a8eca22"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-frameobject-scenepreparesystem-preparenontransparent-l2-lambda-fbbd31324d3a2f467e6b61b21a8eca22"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_fbbd31324d3a2f467e6b61b21a8eca22>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::frameobject::ScenePrepareSystem::PrepareNonTransparent::__l2::<lambda_fbbd31324d3a2f467e6b61b21a8eca22>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-dragon-rendering-details-materialbind-createsinglerenderpass-l2-lambda-cd0d70a94b38823da07ba7c1ff79a0eb-l2-lambda-20ebc53e7a3bf69423369fbc9376a683"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-dragon-rendering-details-materialbind-createsinglerenderpass-l2-lambda-cd0d70a94b38823da07ba7c1ff79a0eb-l2-lambda-20ebc53e7a3bf69423369fbc9376a683"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,dragon::rendering::details::MaterialBind &>::_createSingleRenderPass::__l2::<lambda_cd0d70a94b38823da07ba7c1ff79a0eb>::()::__l2::<lambda_20ebc53e7a3bf69423369fbc9376a683>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,dragon::rendering::details::MaterialBind &>::_createSingleRenderPass::__l2::<lambda_cd0d70a94b38823da07ba7c1ff79a0eb>::()::__l2::<lambda_20ebc53e7a3bf69423369fbc9376a683>\n{\n  const std::function<void __cdecl(dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> const &,dragon::rendering::ViewDescription const &,dragon::rendering::details::MaterialBind const &)> *callback;\n  const dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> *ctx;\n  const dragon::rendering::ViewDescription *viewDesc;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-std-shared-ptr-dragon-rendering-details-processingpassimpl-dragon-rendering-modules-raytrace-2-transientdata-createsinglerenderpass-l2-lambda-d9a3e4dea4288f749cc92d5390fbc3bf-l2-lambda-a62530baceeff7653cb02210c2000b80"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-std-shared-ptr-dragon-rendering-details-processingpassimpl-dragon-rendering-modules-raytrace-2-transientdata-createsinglerenderpass-l2-lambda-d9a3e4dea4288f749cc92d5390fbc3bf-l2-lambda-a62530baceeff7653cb02210c2000b80"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,std::shared_ptr<dragon::rendering::details::ProcessingPassImpl<")]),e._v("dragon::rendering::modules::rayTrace'::"),o("code",[e._v("2'::TransientData> > >::_createSingleRenderPass::__l2::<lambda_d9a3e4dea4288f749cc92d5390fbc3bf>::()::__l2::<lambda_a62530baceeff7653cb02210c2000b80>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,std::shared_ptr<dragon::rendering::details::ProcessingPassImpl<`dragon::rendering::modules::rayTrace'::`2'::TransientData> > >::_createSingleRenderPass::__l2::<lambda_d9a3e4dea4288f749cc92d5390fbc3bf>::()::__l2::<lambda_a62530baceeff7653cb02210c2000b80>\n{\n  const std::function<void __cdecl(dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> const &,dragon::rendering::ViewDescription const &,`dragon::rendering::modules::rayTrace'::`2'::TransientData const &)> *callback;\n  const dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> *ctx;\n  const dragon::rendering::ViewDescription *viewDesc;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-std-shared-ptr-dragon-rendering-details-processingpassimpl-std-optional-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-dragon-rendering-drawutils-passname-dragon-materials-materialuniformoverrides-const-std-optional-dragon-rendering-passstateoverride-const-createrenderpassgenerator-l2-lambda-016de925abfe9882b2a4dc411c4e0ae6-l2-lambda-f3d3365a149fb64a35dcbb8fc6388c6a"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-std-shared-ptr-dragon-rendering-details-processingpassimpl-std-optional-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-dragon-rendering-drawutils-passname-dragon-materials-materialuniformoverrides-const-std-optional-dragon-rendering-passstateoverride-const-createrenderpassgenerator-l2-lambda-016de925abfe9882b2a4dc411c4e0ae6-l2-lambda-f3d3365a149fb64a35dcbb8fc6388c6a"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,std::shared_ptr<dragon::rendering::details::ProcessingPassImpl<std::optional<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView> > >,dragon::rendering::drawutils::PassName,dragon::materials::MaterialUniformOverrides const ,std::optional<dragon::rendering::PassStateOverride> const >::createRenderPassGenerator::__l2::<lambda_016de925abfe9882b2a4dc411c4e0ae6>::()::__l2::<lambda_f3d3365a149fb64a35dcbb8fc6388c6a>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,std::shared_ptr<dragon::rendering::details::ProcessingPassImpl<std::optional<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::fra\n{\n  _BYTE gap0[8];\n  dragon::framegraph::Declarator<dragon::rendering::RenderContext> *decl;\n  const std::string *name;\n  const std::tuple<std::shared_ptr<dragon::rendering::details::ProcessingPassImpl<std::optional<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView> > >,dragon::rendering::drawutils::PassName,dragon::materials::MaterialUniformOverrides const ,std::optional<dragon::rendering::PassStateOverride> const > *deps;\n  const dragon::rendering::ViewDescription *viewDesc;\n  const std::optional<dragon::rendering::details::DepthBind> *depth;\n  const std::array<dragon::rendering::details::ColorBind,0> *outputs;\n  std::vector<std::variant<dragon::rendering::details::ColorBind,dragon::rendering::details::DepthBind,dragon::rendering::details::MaterialBind>> *passReferences;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-std-shared-ptr-dragon-rendering-details-processingpassimpl-std-optional-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-dragon-rendering-drawutils-passname-dragon-materials-materialuniformoverrides-const-std-optional-dragon-rendering-passstateoverride-const-createrenderpassgenerator-l2-lambda-17106f471ac3ec6d1f6fbf79c6d24196-l2-lambda-7d5bc65f0f932bd63789ed179fd7a085"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-std-shared-ptr-dragon-rendering-details-processingpassimpl-std-optional-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-dragon-rendering-drawutils-passname-dragon-materials-materialuniformoverrides-const-std-optional-dragon-rendering-passstateoverride-const-createrenderpassgenerator-l2-lambda-17106f471ac3ec6d1f6fbf79c6d24196-l2-lambda-7d5bc65f0f932bd63789ed179fd7a085"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,std::shared_ptr<dragon::rendering::details::ProcessingPassImpl<std::optional<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView> > >,dragon::rendering::drawutils::PassName,dragon::materials::MaterialUniformOverrides const ,std::optional<dragon::rendering::PassStateOverride> const >::createRenderPassGenerator::__l2::<lambda_17106f471ac3ec6d1f6fbf79c6d24196>::()::__l2::<lambda_7d5bc65f0f932bd63789ed179fd7a085>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,std::shared_ptr<dragon::rendering::details::ProcessingPassImpl<std::optional<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::fra\n{\n  _BYTE gap0[8];\n  dragon::framegraph::Declarator<dragon::rendering::RenderContext> *decl;\n  const std::string *name;\n  const std::tuple<std::shared_ptr<dragon::rendering::details::ProcessingPassImpl<std::optional<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView> > >,dragon::rendering::drawutils::PassName,dragon::materials::MaterialUniformOverrides const ,std::optional<dragon::rendering::PassStateOverride> const > *deps;\n  const dragon::rendering::ViewDescription *viewDesc;\n  const std::optional<dragon::rendering::details::DepthBind> *depth;\n  const std::array<dragon::rendering::details::ColorBind,1> *outputs;\n  std::vector<std::variant<dragon::rendering::details::ColorBind,dragon::rendering::details::DepthBind,dragon::rendering::details::MaterialBind>> *passReferences;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-std-shared-ptr-dragon-rendering-details-processingpassimpl-std-optional-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-dragon-rendering-drawutils-passname-dragon-materials-materialuniformoverrides-const-std-optional-dragon-rendering-passstateoverride-const-createsinglerenderpass-l2-lambda-44be5f2f6bf13013df75dd2f38804f82-l2-lambda-4c0e6f99e8800c9ad0c6d9cf2595c50c"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-std-shared-ptr-dragon-rendering-details-processingpassimpl-std-optional-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-dragon-rendering-drawutils-passname-dragon-materials-materialuniformoverrides-const-std-optional-dragon-rendering-passstateoverride-const-createsinglerenderpass-l2-lambda-44be5f2f6bf13013df75dd2f38804f82-l2-lambda-4c0e6f99e8800c9ad0c6d9cf2595c50c"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,std::shared_ptr<dragon::rendering::details::ProcessingPassImpl<std::optional<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView> > >,dragon::rendering::drawutils::PassName,dragon::materials::MaterialUniformOverrides const ,std::optional<dragon::rendering::PassStateOverride> const >::_createSingleRenderPass::__l2::<lambda_44be5f2f6bf13013df75dd2f38804f82>::()::__l2::<lambda_4c0e6f99e8800c9ad0c6d9cf2595c50c>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,std::shared_ptr<dragon::rendering::details::ProcessingPassImpl<std::optional<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::fra\n{\n  const std::function<void __cdecl(dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> const &,dragon::rendering::ViewDescription const &,std::optional<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView> const &,dragon::rendering::drawutils::PassName const &,dragon::materials::MaterialUniformOverrides const &,std::optional<dragon::rendering::PassStateOverride> const &)> *callback;\n  const dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> *ctx;\n  const dragon::rendering::ViewDescription *viewDesc;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-std-shared-ptr-dragon-rendering-details-processingpassimpl-std-optional-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-dragon-rendering-drawutils-passname-dragon-materials-materialuniformoverrides-const-std-optional-dragon-rendering-passstateoverride-const-createsinglerenderpass-l2-lambda-fe397353d52a2e6255b4098c73fba212-l2-lambda-a228c217d29c9661028e6e8abce00925"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-std-shared-ptr-dragon-rendering-details-processingpassimpl-std-optional-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-dragon-rendering-drawutils-passname-dragon-materials-materialuniformoverrides-const-std-optional-dragon-rendering-passstateoverride-const-createsinglerenderpass-l2-lambda-fe397353d52a2e6255b4098c73fba212-l2-lambda-a228c217d29c9661028e6e8abce00925"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,std::shared_ptr<dragon::rendering::details::ProcessingPassImpl<std::optional<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView> > >,dragon::rendering::drawutils::PassName,dragon::materials::MaterialUniformOverrides const ,std::optional<dragon::rendering::PassStateOverride> const >::_createSingleRenderPass::__l2::<lambda_fe397353d52a2e6255b4098c73fba212>::()::__l2::<lambda_a228c217d29c9661028e6e8abce00925>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,std::shared_ptr<dragon::rendering::details::ProcessingPassImpl<std::optional<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::fra\n{\n  const std::function<void __cdecl(dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> const &,dragon::rendering::ViewDescription const &,std::optional<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView> const &,dragon::rendering::drawutils::PassName const &,dragon::materials::MaterialUniformOverrides const &,std::optional<dragon::rendering::PassStateOverride> const &)> *callback;\n  const dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> *ctx;\n  const dragon::rendering::ViewDescription *viewDesc;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallbackui-l7-lambda-a5fea8a9d5020f7e0049faa7bfe84c18-l2-lambda-182f336776644d95299d541134088539"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallbackui-l7-lambda-a5fea8a9d5020f7e0049faa7bfe84c18-l2-lambda-182f336776644d95299d541134088539"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources> >::_drawCallbackUI::__l7::<lambda_a5fea8a9d5020f7e0049faa7bfe84c18>::()::__l2::<lambda_182f336776644d95299d541134088539>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder:\n{\n  dragon::rendering::drawcommands::DrawCommandContext *drawCommandContext;\n  dragon::materials::MaterialUniformOverrides *passOverrides;\n  const std::optional<dragon::rendering::PassStateOverride> *passStateOverride;\n  const dragon::rendering::ViewDescription *viewport;\n  dragon::rendering::CommandContext *commands;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallbackui-l7-lambda-a5fea8a9d5020f7e0049faa7bfe84c18-l2-lambda-182f336776644d95299d541134088539-l2-lambda-0920e833afb2c0fbc0b7aee4adcb39df"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallbackui-l7-lambda-a5fea8a9d5020f7e0049faa7bfe84c18-l2-lambda-182f336776644d95299d541134088539-l2-lambda-0920e833afb2c0fbc0b7aee4adcb39df"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources> >::_drawCallbackUI::__l7::<lambda_a5fea8a9d5020f7e0049faa7bfe84c18>::()::__l2::<lambda_182f336776644d95299d541134088539>::()::__l2::<lambda_0920e833afb2c0fbc0b7aee4adcb39df>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder:\n{\n  dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Group<dragon::frameobject::components::MaterialFilter> *materialFilter;\n  dragon::rendering::drawcommands::DrawCommandContext *drawCommandContext;\n  dragon::materials::MaterialUniformOverrides *passOverrides;\n  const std::optional<dragon::rendering::PassStateOverride> *passStateOverride;\n  const dragon::rendering::ViewDescription *viewport;\n  dragon::rendering::CommandContext *commands;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallback-l7-lambda-ca139b429f4327e5cb998e5abbaa4a37-l2-lambda-95e4a1eb5582866c1791e5e2763dfbfb"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallback-l7-lambda-ca139b429f4327e5cb998e5abbaa4a37-l2-lambda-95e4a1eb5582866c1791e5e2763dfbfb"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources> >::_drawCallback::__l7::<lambda_ca139b429f4327e5cb998e5abbaa4a37>::()::__l2::<lambda_95e4a1eb5582866c1791e5e2763dfbfb>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder:\n{\n  const dragon::rendering::drawutils::PassName *passName;\n  dragon::rendering::drawcommands::DrawCommandContext *drawCommandContext;\n  dragon::materials::MaterialUniformOverrides *passOverrides;\n  const std::optional<dragon::rendering::PassStateOverride> *passStateOverride;\n  const dragon::rendering::ViewDescription *viewport;\n  dragon::rendering::CommandContext *commands;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-dragon-rendering-details-materialbind-drawcallbackui-l7-lambda-8a5beed6f3ada6e371d9fda59bc365dc-l2-lambda-9e6ba50f9e397274d4fcfe1e8bf8a443"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-dragon-rendering-details-materialbind-drawcallbackui-l7-lambda-8a5beed6f3ada6e371d9fda59bc365dc-l2-lambda-9e6ba50f9e397274d4fcfe1e8bf8a443"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>,dragon::rendering::details::MaterialBind>::_drawCallbackUI::__l7::<lambda_8a5beed6f3ada6e371d9fda59bc365dc>::()::__l2::<lambda_9e6ba50f9e397274d4fcfe1e8bf8a443>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder:\n{\n  dragon::rendering::drawcommands::DrawCommandContext *drawCommandContext;\n  dragon::materials::MaterialUniformOverrides *passOverrides;\n  const std::optional<dragon::rendering::PassStateOverride> *passStateOverride;\n  const dragon::rendering::ViewDescription *viewport;\n  dragon::rendering::CommandContext *commands;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-dragon-rendering-details-materialbind-drawcallbackui-l7-lambda-8a5beed6f3ada6e371d9fda59bc365dc-l2-lambda-9e6ba50f9e397274d4fcfe1e8bf8a443-l2-lambda-ea7b00026c8bd3f7710504cabd5d5774"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-dragon-rendering-details-materialbind-drawcallbackui-l7-lambda-8a5beed6f3ada6e371d9fda59bc365dc-l2-lambda-9e6ba50f9e397274d4fcfe1e8bf8a443-l2-lambda-ea7b00026c8bd3f7710504cabd5d5774"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>,dragon::rendering::details::MaterialBind>::_drawCallbackUI::__l7::<lambda_8a5beed6f3ada6e371d9fda59bc365dc>::()::__l2::<lambda_9e6ba50f9e397274d4fcfe1e8bf8a443>::()::__l2::<lambda_ea7b00026c8bd3f7710504cabd5d5774>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder:\n{\n  dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Group<dragon::frameobject::components::MaterialFilter> *materialFilter;\n  dragon::rendering::drawcommands::DrawCommandContext *drawCommandContext;\n  dragon::materials::MaterialUniformOverrides *passOverrides;\n  const std::optional<dragon::rendering::PassStateOverride> *passStateOverride;\n  const dragon::rendering::ViewDescription *viewport;\n  dragon::rendering::CommandContext *commands;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallbackui-l7-lambda-a5fea8a9d5020f7e0049faa7bfe84c18-l2-lambda-182f336776644d95299d541134088539-l2-lambda-0920e833afb2c0fbc0b7aee4adcb39df-l2-lambda-0ff7ef1663298a92dc9df913fe647abf"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallbackui-l7-lambda-a5fea8a9d5020f7e0049faa7bfe84c18-l2-lambda-182f336776644d95299d541134088539-l2-lambda-0920e833afb2c0fbc0b7aee4adcb39df-l2-lambda-0ff7ef1663298a92dc9df913fe647abf"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources> >::_drawCallbackUI::__l7::<lambda_a5fea8a9d5020f7e0049faa7bfe84c18>::()::__l2::<lambda_182f336776644d95299d541134088539>::()::__l2::<lambda_0920e833afb2c0fbc0b7aee4adcb39df>::()::__l2::<lambda_0ff7ef1663298a92dc9df913fe647abf>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder:\n{\n  const std::optional<dragon::rendering::PassStateOverride> *passStateOverride;\n  dragon::rendering::drawcommands::DrawCommandContext *drawCommandContext;\n  const dragon::rendering::ViewDescription *viewport;\n  dragon::rendering::CommandContext *commands;\n  const dragon::materials::Pass **pass;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-dragon-rendering-details-materialbind-drawcallbackui-l7-lambda-8a5beed6f3ada6e371d9fda59bc365dc-l2-lambda-9e6ba50f9e397274d4fcfe1e8bf8a443-l2-lambda-ea7b00026c8bd3f7710504cabd5d5774-l2-lambda-b777504a71f5a83392c0b56ffb10477d"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-dragon-rendering-details-materialbind-drawcallbackui-l7-lambda-8a5beed6f3ada6e371d9fda59bc365dc-l2-lambda-9e6ba50f9e397274d4fcfe1e8bf8a443-l2-lambda-ea7b00026c8bd3f7710504cabd5d5774-l2-lambda-b777504a71f5a83392c0b56ffb10477d"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>,dragon::rendering::details::MaterialBind>::_drawCallbackUI::__l7::<lambda_8a5beed6f3ada6e371d9fda59bc365dc>::()::__l2::<lambda_9e6ba50f9e397274d4fcfe1e8bf8a443>::()::__l2::<lambda_ea7b00026c8bd3f7710504cabd5d5774>::()::__l2::<lambda_b777504a71f5a83392c0b56ffb10477d>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder:\n{\n  const std::optional<dragon::rendering::PassStateOverride> *passStateOverride;\n  dragon::rendering::drawcommands::DrawCommandContext *drawCommandContext;\n  const dragon::rendering::ViewDescription *viewport;\n  dragon::rendering::CommandContext *commands;\n  const dragon::materials::Pass **pass;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallback-l7-lambda-ca139b429f4327e5cb998e5abbaa4a37-l2-lambda-95e4a1eb5582866c1791e5e2763dfbfb-l2-lambda-87b0aac89479c16888cfb1fe3a72271b"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawutils-generic-dragon-frameobject-frame-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-drawcallback-l7-lambda-ca139b429f4327e5cb998e5abbaa4a37-l2-lambda-95e4a1eb5582866c1791e5e2763dfbfb-l2-lambda-87b0aac89479c16888cfb1fe3a72271b"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources> >::_drawCallback::__l7::<lambda_ca139b429f4327e5cb998e5abbaa4a37>::()::__l2::<lambda_95e4a1eb5582866c1791e5e2763dfbfb>::()::__l2::<lambda_87b0aac89479c16888cfb1fe3a72271b>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::drawutils::Generic<dragon::frameobject::Frame<mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder:\n{\n  const std::optional<dragon::rendering::PassStateOverride> *passStateOverride;\n  dragon::rendering::drawcommands::DrawCommandContext *drawCommandContext;\n  const dragon::rendering::ViewDescription *viewport;\n  dragon::rendering::CommandContext *commands;\n  const dragon::materials::Pass *const *pass;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-ismatch-l2-lambda-7be793c0179dafde7345803ea3fe4d3f"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-ismatch-l2-lambda-7be793c0179dafde7345803ea3fe4d3f"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::isMatch::__l2::<lambda_7be793c0179dafde7345803ea3fe4d3f>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n  const std::pair<std::bitset<59>,std::array<unsigned short,59> > *i;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-44cb7e3ac25bca53809aac3fb8e1f11e"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-44cb7e3ac25bca53809aac3fb8e1f11e"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::view::__l2::<lambda_44cb7e3ac25bca53809aac3fb8e1f11e>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-9fde842d86b1d0d393550f9b5be5a54b"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-view-l2-lambda-9fde842d86b1d0d393550f9b5be5a54b"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::view::__l2::<lambda_9fde842d86b1d0d393550f9b5be5a54b>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-reset-l6-lambda-db18ea0c7dcd4ce37aad786ed62a6778"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-reset-l6-lambda-db18ea0c7dcd4ce37aad786ed62a6778"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::reset::__l6::<lambda_db18ea0c7dcd4ce37aad786ed62a6778>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::compone\n{\n};\n\n")])])]),o("h3",{attrs:{id:"debuginfocomponent-ismessagerequested-l2-lambda-8c36475764f05905cf99019b82aae89c"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#debuginfocomponent-ismessagerequested-l2-lambda-8c36475764f05905cf99019b82aae89c"}},[e._v("#")]),e._v(" "),o("code",[e._v("DebugInfoComponent::isMessageRequested::__l2::<lambda_8c36475764f05905cf99019b82aae89c>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DebugInfoComponent::isMessageRequested::__l2::<lambda_8c36475764f05905cf99019b82aae89c>\n{\n  const HashedString *messageType;\n};\n\n")])])]),o("h3",{attrs:{id:"denylist-removeentry-l2-lambda-a6178a7ff914d1533a2ee21aa0cf1b5b"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#denylist-removeentry-l2-lambda-a6178a7ff914d1533a2ee21aa0cf1b5b"}},[e._v("#")]),e._v(" "),o("code",[e._v("DenyList::removeEntry::__l2::<lambda_a6178a7ff914d1533a2ee21aa0cf1b5b>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DenyList::removeEntry::__l2::<lambda_a6178a7ff914d1533a2ee21aa0cf1b5b>\n{\n  const DenyList::Entry *entry;\n};\n\n")])])]),o("h3",{attrs:{id:"denylist-isxuidblocked-l2-lambda-364ab7335415825bd366ae86566ccd88"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#denylist-isxuidblocked-l2-lambda-364ab7335415825bd366ae86566ccd88"}},[e._v("#")]),e._v(" "),o("code",[e._v("DenyList::isXUIDBlocked::__l2::<lambda_364ab7335415825bd366ae86566ccd88>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DenyList::isXUIDBlocked::__l2::<lambda_364ab7335415825bd366ae86566ccd88>\n{\n  const std::string *xuid;\n};\n\n")])])]),o("h3",{attrs:{id:"denylist-isuuidblocked-l2-lambda-73e877a93034399c316bfee0628034be"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#denylist-isuuidblocked-l2-lambda-73e877a93034399c316bfee0628034be"}},[e._v("#")]),e._v(" "),o("code",[e._v("DenyList::isUUIDBlocked::__l2::<lambda_73e877a93034399c316bfee0628034be>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DenyList::isUUIDBlocked::__l2::<lambda_73e877a93034399c316bfee0628034be>\n{\n  const mce::UUID *uuid;\n};\n\n")])])]),o("h3",{attrs:{id:"definitioneventloader-loadevent-l7-lambda-3fd78df155186917ab4b947185935f8e"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#definitioneventloader-loadevent-l7-lambda-3fd78df155186917ab4b947185935f8e"}},[e._v("#")]),e._v(" "),o("code",[e._v("DefinitionEventLoader::loadEvent::__l7::<lambda_3fd78df155186917ab4b947185935f8e>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DefinitionEventLoader::loadEvent::__l7::<lambda_3fd78df155186917ab4b947185935f8e>\n{\n  DefinitionEvent *defEvent;\n};\n\n")])])]),o("h3",{attrs:{id:"definitioneventloader-loadevent-l37-lambda-6193fa7d161d449a29b6e66f7719f41b"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#definitioneventloader-loadevent-l37-lambda-6193fa7d161d449a29b6e66f7719f41b"}},[e._v("#")]),e._v(" "),o("code",[e._v("DefinitionEventLoader::loadEvent::__l37::<lambda_6193fa7d161d449a29b6e66f7719f41b>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DefinitionEventLoader::loadEvent::__l37::<lambda_6193fa7d161d449a29b6e66f7719f41b>\n{\n  DefinitionEvent *defEvent;\n};\n\n")])])]),o("h3",{attrs:{id:"definitioneventloader-loadevent-l37-lambda-8f4dcc3896a1ec2b075543bf4416561b"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#definitioneventloader-loadevent-l37-lambda-8f4dcc3896a1ec2b075543bf4416561b"}},[e._v("#")]),e._v(" "),o("code",[e._v("DefinitionEventLoader::loadEvent::__l37::<lambda_8f4dcc3896a1ec2b075543bf4416561b>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DefinitionEventLoader::loadEvent::__l37::<lambda_8f4dcc3896a1ec2b075543bf4416561b>\n{\n  DefinitionEvent *defEvent;\n};\n\n")])])]),o("h3",{attrs:{id:"definitioneventloader-loadevent-l34-lambda-b3f31dafe5313881488ce88923c318a2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#definitioneventloader-loadevent-l34-lambda-b3f31dafe5313881488ce88923c318a2"}},[e._v("#")]),e._v(" "),o("code",[e._v("DefinitionEventLoader::loadEvent::__l34::<lambda_b3f31dafe5313881488ce88923c318a2>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DefinitionEventLoader::loadEvent::__l34::<lambda_b3f31dafe5313881488ce88923c318a2>\n{\n  DefinitionEvent *defEvent;\n};\n\n")])])]),o("h3",{attrs:{id:"definitioneventloader-loadevent-l2-lambda-ec94dfa9bf6125e20cbd80ef1b7b149f"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#definitioneventloader-loadevent-l2-lambda-ec94dfa9bf6125e20cbd80ef1b7b149f"}},[e._v("#")]),e._v(" "),o("code",[e._v("DefinitionEventLoader::loadEvent::__l2::<lambda_ec94dfa9bf6125e20cbd80ef1b7b149f>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DefinitionEventLoader::loadEvent::__l2::<lambda_ec94dfa9bf6125e20cbd80ef1b7b149f>\n{\n  DefinitionEvent *defEvent;\n};\n\n")])])]),o("h3",{attrs:{id:"definitioneventloader-loadevent-l5-lambda-fe4c3b10b5af625035a34fb44670c3f4"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#definitioneventloader-loadevent-l5-lambda-fe4c3b10b5af625035a34fb44670c3f4"}},[e._v("#")]),e._v(" "),o("code",[e._v("DefinitionEventLoader::loadEvent::__l5::<lambda_fe4c3b10b5af625035a34fb44670c3f4>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DefinitionEventLoader::loadEvent::__l5::<lambda_fe4c3b10b5af625035a34fb44670c3f4>\n{\n  DefinitionEvent *defEvent;\n};\n\n")])])]),o("h3",{attrs:{id:"deprecatedslabblockitem-useon-l2-lambda-f14f45f57af516b5ecbe70e8fbb22f1f"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#deprecatedslabblockitem-useon-l2-lambda-f14f45f57af516b5ecbe70e8fbb22f1f"}},[e._v("#")]),e._v(" "),o("code",[e._v("DeprecatedSlabBlockItem::_useOn::__l2::<lambda_f14f45f57af516b5ecbe70e8fbb22f1f>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DeprecatedSlabBlockItem::_useOn::__l2::<lambda_f14f45f57af516b5ecbe70e8fbb22f1f>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dbstorage-read-l14-lambda-97aa8a3fc303c1eef4d9298c44cdfad2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dbstorage-read-l14-lambda-97aa8a3fc303c1eef4d9298c44cdfad2"}},[e._v("#")]),e._v(" "),o("code",[e._v("DBStorage::_read::__l14::<lambda_97aa8a3fc303c1eef4d9298c44cdfad2>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DBStorage::_read::__l14::<lambda_97aa8a3fc303c1eef4d9298c44cdfad2>\n{\n  gsl::basic_string_span<char const ,-1> *prefix;\n};\n\n")])])]),o("h3",{attrs:{id:"dbstorage-flushwritecachetoleveldb-l42-lambda-ee0c5b877c7637d4aed06d9fa7448077"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dbstorage-flushwritecachetoleveldb-l42-lambda-ee0c5b877c7637d4aed06d9fa7448077"}},[e._v("#")]),e._v(" "),o("code",[e._v("DBStorage::_flushWriteCacheToLevelDB::__l42::<lambda_ee0c5b877c7637d4aed06d9fa7448077>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DBStorage::_flushWriteCacheToLevelDB::__l42::<lambda_ee0c5b877c7637d4aed06d9fa7448077>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dbstorage-read-l2-lambda-002907a5e0d8c60797ea94f386dfde6c"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dbstorage-read-l2-lambda-002907a5e0d8c60797ea94f386dfde6c"}},[e._v("#")]),e._v(" "),o("code",[e._v("DBStorage::_read::__l2::<lambda_002907a5e0d8c60797ea94f386dfde6c>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DBStorage::_read::__l2::<lambda_002907a5e0d8c60797ea94f386dfde6c>\n{\n  gsl::basic_string_span<char const ,-1> *prefix;\n  std::map<std::string,DBStorage::PendingWriteResult> *pendingWrites;\n};\n\n")])])]),o("h3",{attrs:{id:"dbstorage-read-l2-lambda-1d541869c8d87d4fa808ea6f4b4deaa0"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dbstorage-read-l2-lambda-1d541869c8d87d4fa808ea6f4b4deaa0"}},[e._v("#")]),e._v(" "),o("code",[e._v("DBStorage::_read::__l2::<lambda_1d541869c8d87d4fa808ea6f4b4deaa0>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DBStorage::_read::__l2::<lambda_1d541869c8d87d4fa808ea6f4b4deaa0>\n{\n  const std::function<void __cdecl(gsl::basic_string_span<char const ,-1>,gsl::basic_string_span<char const ,-1>)> *callback;\n  gsl::basic_string_span<char const ,-1> *prefix;\n};\n\n")])])]),o("h3",{attrs:{id:"dbstorage-read-l2-lambda-3b218279e4e104533df8256722f7f451"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dbstorage-read-l2-lambda-3b218279e4e104533df8256722f7f451"}},[e._v("#")]),e._v(" "),o("code",[e._v("DBStorage::_read::__l2::<lambda_3b218279e4e104533df8256722f7f451>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DBStorage::_read::__l2::<lambda_3b218279e4e104533df8256722f7f451>\n{\n  gsl::basic_string_span<char const ,-1> *prefix;\n};\n\n")])])]),o("h3",{attrs:{id:"dbstorage-read-l2-lambda-ac05feb562f45fc1115ab42c6ac60ba5"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dbstorage-read-l2-lambda-ac05feb562f45fc1115ab42c6ac60ba5"}},[e._v("#")]),e._v(" "),o("code",[e._v("DBStorage::_read::__l2::<lambda_ac05feb562f45fc1115ab42c6ac60ba5>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj DBStorage::_read::__l2::<lambda_ac05feb562f45fc1115ab42c6ac60ba5>\n{\n  const std::function<void __cdecl(gsl::basic_string_span<char const ,-1>,gsl::basic_string_span<char const ,-1>)> *callback;\n  gsl::basic_string_span<char const ,-1> *prefix;\n};\n\n")])])]),o("h3",{attrs:{id:"detail-getrecipepythoninfo-l2-lambda-5621851c325e99f1a083c3826c1606d9"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#detail-getrecipepythoninfo-l2-lambda-5621851c325e99f1a083c3826c1606d9"}},[e._v("#")]),e._v(" "),o("code",[e._v("detail::getRecipePythonInfo::__l2::<lambda_5621851c325e99f1a083c3826c1606d9>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj detail::getRecipePythonInfo::__l2::<lambda_5621851c325e99f1a083c3826c1606d9>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-materials-materialuniformmap-getparameterid-l2-lambda-38d6789f764842e86a94e3a5ad275b90"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-materials-materialuniformmap-getparameterid-l2-lambda-38d6789f764842e86a94e3a5ad275b90"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::materials::MaterialUniformMap::getParameterId::__l2::<lambda_38d6789f764842e86a94e3a5ad275b90>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::materials::MaterialUniformMap::getParameterId::__l2::<lambda_38d6789f764842e86a94e3a5ad275b90>\n{\n  const dragon::materials::MaterialUniformName *name;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-materials-materialuniformmap-getparameterid-l2-lambda-5d0aa5538bb41a90a479271f89f3e3fd"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-materials-materialuniformmap-getparameterid-l2-lambda-5d0aa5538bb41a90a479271f89f3e3fd"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::materials::MaterialUniformMap::getParameterId::__l2::<lambda_5d0aa5538bb41a90a479271f89f3e3fd>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::materials::MaterialUniformMap::getParameterId::__l2::<lambda_5d0aa5538bb41a90a479271f89f3e3fd>\n{\n  const dragon::materials::MaterialUniformName *name;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-materials-compiledmaterialdefinition-trylocatevariants-l28-lambda-46abb9461667dca6d6568323cd0a43ce"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-materials-compiledmaterialdefinition-trylocatevariants-l28-lambda-46abb9461667dca6d6568323cd0a43ce"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::materials::CompiledMaterialDefinition::_tryLocateVariants::__l28::<lambda_46abb9461667dca6d6568323cd0a43ce>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::materials::CompiledMaterialDefinition::_tryLocateVariants::__l28::<lambda_46abb9461667dca6d6568323cd0a43ce>\n{\n  const dragon::materials::CompiledMaterialDefinition::Variant *variant;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-materials-material-loadmaterial-l63-lambda-1aed1131f7678217ddba79c5d5c0b61a"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-materials-material-loadmaterial-l63-lambda-1aed1131f7678217ddba79c5d5c0b61a"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::materials::Material::_loadMaterial::__l63::<lambda_1aed1131f7678217ddba79c5d5c0b61a>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::materials::Material::_loadMaterial::__l63::<lambda_1aed1131f7678217ddba79c5d5c0b61a>\n{\n  std::reference_wrapper<std::string const > *currentFallback;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-materials-materialuniformhandles-tryget-l2-lambda-de2e91f6f48f288cef12cd8de14559d3"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-materials-materialuniformhandles-tryget-l2-lambda-de2e91f6f48f288cef12cd8de14559d3"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::materials::MaterialUniformHandles::tryGet::__l2::<lambda_de2e91f6f48f288cef12cd8de14559d3>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::materials::MaterialUniformHandles::tryGet::__l2::<lambda_de2e91f6f48f288cef12cd8de14559d3>\n{\n  const std::string *name;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-materials-materialuniformoverrides-clearuniform-l5-lambda-68016c10946caad9162d33d49afbf595"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-materials-materialuniformoverrides-clearuniform-l5-lambda-68016c10946caad9162d33d49afbf595"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::materials::MaterialUniformOverrides::clearUniform::__l5::<lambda_68016c10946caad9162d33d49afbf595>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::materials::MaterialUniformOverrides::clearUniform::__l5::<lambda_68016c10946caad9162d33d49afbf595>\n{\n  const dragon::materials::MaterialUniformName *name;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-materials-materialuniformoverrides-getuniformdata-l2-lambda-057514f2bdab29990f0d8553f5cf45b0"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-materials-materialuniformoverrides-getuniformdata-l2-lambda-057514f2bdab29990f0d8553f5cf45b0"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::materials::MaterialUniformOverrides::getUniformData::__l2::<lambda_057514f2bdab29990f0d8553f5cf45b0>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::materials::MaterialUniformOverrides::getUniformData::__l2::<lambda_057514f2bdab29990f0d8553f5cf45b0>\n{\n  const dragon::materials::MaterialUniformName *name;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-materials-materialuniformoverrides-gettexture-l2-lambda-21a551e14041a6e40a12f7ff93c6424f"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-materials-materialuniformoverrides-gettexture-l2-lambda-21a551e14041a6e40a12f7ff93c6424f"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::materials::MaterialUniformOverrides::getTexture::__l2::<lambda_21a551e14041a6e40a12f7ff93c6424f>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::materials::MaterialUniformOverrides::getTexture::__l2::<lambda_21a551e14041a6e40a12f7ff93c6424f>\n{\n  const dragon::materials::MaterialUniformName *name;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-materials-materialuniformoverrides-hasuniform-l2-lambda-3cf328a6a3a7bd77f42c18c203b16405"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-materials-materialuniformoverrides-hasuniform-l2-lambda-3cf328a6a3a7bd77f42c18c203b16405"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::materials::MaterialUniformOverrides::hasUniform::__l2::<lambda_3cf328a6a3a7bd77f42c18c203b16405>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::materials::MaterialUniformOverrides::hasUniform::__l2::<lambda_3cf328a6a3a7bd77f42c18c203b16405>\n{\n  const dragon::materials::MaterialUniformName *name;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-materials-materialuniformoverrides-getbuffer-l2-lambda-e8173b18800ac4bb5452208a96af6f1f"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-materials-materialuniformoverrides-getbuffer-l2-lambda-e8173b18800ac4bb5452208a96af6f1f"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::materials::MaterialUniformOverrides::getBuffer::__l2::<lambda_e8173b18800ac4bb5452208a96af6f1f>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::materials::MaterialUniformOverrides::getBuffer::__l2::<lambda_e8173b18800ac4bb5452208a96af6f1f>\n{\n  const dragon::materials::MaterialUniformName *name;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-mesh-vertexdeclmanager-impl-getorcreatehandle-l7-lambda-22b87c228ae8dc745e0c4037e862f5fc"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-mesh-vertexdeclmanager-impl-getorcreatehandle-l7-lambda-22b87c228ae8dc745e0c4037e862f5fc"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::mesh::VertexDeclManager::Impl::getOrCreateHandle::__l7::<lambda_22b87c228ae8dc745e0c4037e862f5fc>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::mesh::VertexDeclManager::Impl::getOrCreateHandle::__l7::<lambda_22b87c228ae8dc745e0c4037e862f5fc>\n{\n  bgfx::VertexDeclHandle *handle;\n  const bgfx::VertexDecl *decl;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-bgfxcontext-endframe-l2-lambda-4e6cbd9825661af37b540a2c9a3305a1"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-bgfxcontext-endframe-l2-lambda-4e6cbd9825661af37b540a2c9a3305a1"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::BgfxContext::endFrame::__l2::<lambda_4e6cbd9825661af37b540a2c9a3305a1>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::BgfxContext::endFrame::__l2::<lambda_4e6cbd9825661af37b540a2c9a3305a1>\n{\n  dragon::framegraph::Declarator<dragon::rendering::RenderContext> *decl;\n  dragon::platform::BgfxContext *const __this;\n  Core::CpuRingBufferAllocator<unsigned char,2,0,Core::CheckedRingBuffer<2,0> > *allocator;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-bgfxcontext-updatemsaalevel-l2-lambda-6f6320f424208b5337d9577759f9d310"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-bgfxcontext-updatemsaalevel-l2-lambda-6f6320f424208b5337d9577759f9d310"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::BgfxContext::updateMsaaLevel::__l2::<lambda_6f6320f424208b5337d9577759f9d310>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::BgfxContext::updateMsaaLevel::__l2::<lambda_6f6320f424208b5337d9577759f9d310>\n{\n  const unsigned __int8 *level;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-bgfxcontext-endframe-l2-logginglinkertrace"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-bgfxcontext-endframe-l2-logginglinkertrace"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::BgfxContext::endFrame::__l2::LoggingLinkerTrace")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::BgfxContext::endFrame::__l2::LoggingLinkerTrace\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-bgfxcontext-getstatistics-l2-helper"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-bgfxcontext-getstatistics-l2-helper"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::BgfxContext::getStatistics::__l2::Helper")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::BgfxContext::getStatistics::__l2::Helper\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-platform-getshadercodeplatformsupportedprofiles-l2-helper"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-platform-getshadercodeplatformsupportedprofiles-l2-helper"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::platform::getShaderCodePlatformSupportedProfiles::__l2::Helper")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::platform::getShaderCodePlatformSupportedProfiles::__l2::Helper\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-commandcontext-resolve-l2-lambda-a6c39bf4d7ce69ff456cf0f3d3e4dc36"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-commandcontext-resolve-l2-lambda-a6c39bf4d7ce69ff456cf0f3d3e4dc36"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::CommandContext::resolve::__l2::<lambda_a6c39bf4d7ce69ff456cf0f3d3e4dc36>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::CommandContext::resolve::__l2::<lambda_a6c39bf4d7ce69ff456cf0f3d3e4dc36>\n{\n  const dragon::materials::MaterialUniformName *materialTextureName;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawcommands-submitinstanced-l2-lambda-db6927aaedfecffa3bc8c043fe1726e7"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawcommands-submitinstanced-l2-lambda-db6927aaedfecffa3bc8c043fe1726e7"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawcommands::submitInstanced::__l2::<lambda_db6927aaedfecffa3bc8c043fe1726e7>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::drawcommands::submitInstanced::__l2::<lambda_db6927aaedfecffa3bc8c043fe1726e7>\n{\n  unsigned int *defaultStep;\n  const gsl::span<glm::tmat4x4<float,0> const ,-1> *transforms;\n  bgfx::InstanceDataBuffer *idb;\n  const unsigned __int16 *instanceStride;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-drawcommands-createtoplevelaccelerationstructure-l2-objecttypeinfo"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-drawcommands-createtoplevelaccelerationstructure-l2-objecttypeinfo"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::drawcommands::createTopLevelAccelerationStructure::__l2::ObjectTypeInfo")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct dragon::rendering::drawcommands::createTopLevelAccelerationStructure::__l2::ObjectTypeInfo\n{\n  unsigned int hitGroup;\n  bgfx::RtObjectCategory objectCategory;\n  bgfx::RtMediaType mediaType;\n  unsigned int instanceMask;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-processpendingcputasks-l26-lambda-1145acc368adb7415eebe4e6d09b4585"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-processpendingcputasks-l26-lambda-1145acc368adb7415eebe4e6d09b4585"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::_processPendingCpuTasks::__l26::<lambda_1145acc368adb7415eebe4e6d09b4585>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::_processPendingCpuTasks::__l26::<lambda_1145acc368adb7415eebe4e6d09b4585>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-dragon-rendering-details-colorbind-createsinglerenderpass-l2-lambda-5a780548ce7c2e6f378aed9be3986d64-l2-lambda-81da5460080b087f492541110c9ea6c5"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-dragon-rendering-details-colorbind-createsinglerenderpass-l2-lambda-5a780548ce7c2e6f378aed9be3986d64-l2-lambda-81da5460080b087f492541110c9ea6c5"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,dragon::rendering::details::ColorBind>::_createSingleRenderPass::__l2::<lambda_5a780548ce7c2e6f378aed9be3986d64>::()::__l2::<lambda_81da5460080b087f492541110c9ea6c5>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,dragon::rendering::details::ColorBind>::_createSingleRenderPass::__l2::<lambda_5a780548ce7c2e6f378aed9be3986d64>::()::__l2::<lambda_81da5460080b087f492541110c9ea6c5>\n{\n  const std::function<void __cdecl(dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> const &,dragon::rendering::ViewDescription const &,dragon::rendering::details::ColorBind const &)> *callback;\n  const dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> *ctx;\n  const dragon::rendering::ViewDescription *viewDesc;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-dragon-rendering-details-colorbind-dragon-rendering-details-materialbind-dragon-rendering-details-materialbind-createsinglerenderpass-l2-lambda-86092073bd6acc70fa7dfd51cef7b831-l2-lambda-e4f86f747d8a1820089175b675e4e1a5"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-dragon-rendering-details-colorbind-dragon-rendering-details-materialbind-dragon-rendering-details-materialbind-createsinglerenderpass-l2-lambda-86092073bd6acc70fa7dfd51cef7b831-l2-lambda-e4f86f747d8a1820089175b675e4e1a5"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,dragon::rendering::details::ColorBind,dragon::rendering::details::MaterialBind,dragon::rendering::details::MaterialBind>::_createSingleRenderPass::__l2::<lambda_86092073bd6acc70fa7dfd51cef7b831>::()::__l2::<lambda_e4f86f747d8a1820089175b675e4e1a5>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,dragon::rendering::details::ColorBind,dragon::rendering::details::MaterialBind,dragon::rendering::details::MaterialBind>::_createSingleRenderPass::__l2::<lambda_86092073bd6acc70fa7dfd51cef7b831>::()::__l2::<lambda_e4f86f747d8a1820089175b675e4e1a5>\n{\n  const std::function<void __cdecl(dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> const &,dragon::rendering::ViewDescription const &,dragon::rendering::details::ColorBind const &,dragon::rendering::details::MaterialBind const &,dragon::rendering::details::MaterialBind const &)> *callback;\n  const dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> *ctx;\n  const dragon::rendering::ViewDescription *viewDesc;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-dragon-rendering-details-colorbind-dragon-rendering-details-materialbind-createsinglerenderpass-l2-lambda-ac83b85472f0390318ae584c01eb3d04-l2-lambda-1805233a71a81ef5138a041792f94a6a"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-dragon-rendering-details-colorbind-dragon-rendering-details-materialbind-createsinglerenderpass-l2-lambda-ac83b85472f0390318ae584c01eb3d04-l2-lambda-1805233a71a81ef5138a041792f94a6a"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,dragon::rendering::details::ColorBind,dragon::rendering::details::MaterialBind>::_createSingleRenderPass::__l2::<lambda_ac83b85472f0390318ae584c01eb3d04>::()::__l2::<lambda_1805233a71a81ef5138a041792f94a6a>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,dragon::rendering::details::ColorBind,dragon::rendering::details::MaterialBind>::_createSingleRenderPass::__l2::<lambda_ac83b85472f0390318ae584c01eb3d04>::()::__l2::<lambda_1805233a71a81ef5138a041792f94a6a>\n{\n  const std::function<void __cdecl(dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> const &,dragon::rendering::ViewDescription const &,dragon::rendering::details::ColorBind const &,dragon::rendering::details::MaterialBind const &)> *callback;\n  const dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> *ctx;\n  const dragon::rendering::ViewDescription *viewDesc;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-dragon-rendering-details-colorbind-dragon-rendering-details-materialbind-dragon-rendering-details-materialbind-dragon-rendering-details-materialbind-createsinglerenderpass-l2-lambda-135e935318537d70f077fdc7dfad0424-l2-lambda-d805162b2ceaef3efb2788c98989aa8c"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-details-taskcreator-dragon-rendering-graphicsframe-dragon-rendering-details-colorbind-dragon-rendering-details-materialbind-dragon-rendering-details-materialbind-dragon-rendering-details-materialbind-createsinglerenderpass-l2-lambda-135e935318537d70f077fdc7dfad0424-l2-lambda-d805162b2ceaef3efb2788c98989aa8c"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,dragon::rendering::details::ColorBind,dragon::rendering::details::MaterialBind,dragon::rendering::details::MaterialBind,dragon::rendering::details::MaterialBind>::_createSingleRenderPass::__l2::<lambda_135e935318537d70f077fdc7dfad0424>::()::__l2::<lambda_d805162b2ceaef3efb2788c98989aa8c>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::rendering::details::TaskCreator<dragon::rendering::GraphicsFrame,dragon::rendering::details::ColorBind,dragon::rendering::details::MaterialBind,dragon::rendering::details::MaterialBind,dragon::rendering::details::MaterialBind>::_createSingleRenderPass::__l2::<lambda_135e935318537d70f077fdc7dfad0424>::()::__l2::<lambda_d805162b2ceaef3efb2788c98989aa8c>\n{\n  const std::function<void __cdecl(dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> const &,dragon::rendering::ViewDescription const &,dragon::rendering::details::ColorBind const &,dragon::rendering::details::MaterialBind const &,dragon::rendering::details::MaterialBind const &,dragon::rendering::details::MaterialBind const &)> *callback;\n  const dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> *ctx;\n  const dragon::rendering::ViewDescription *viewDesc;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-rendering-raytracingresources-updateframetick-l31-debugmodeinfo"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-rendering-raytracingresources-updateframetick-l31-debugmodeinfo"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::rendering::RayTracingResources::updateFrameTick::__l31::DebugModeInfo")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj __declspec(align(8)) dragon::rendering::RayTracingResources::updateFrameTick::__l31::DebugModeInfo\n{\n  gsl::basic_string_span<char const ,-1> mModeName;\n  dragon::rendering::RtDebugType mDebugType;\n  unsigned int mResourceIdx;\n  _BYTE mDebugBlitMode[4];\n  bool mEnableDenoising;\n  __declspec(align(4)) _BYTE mBackendRtDebugMode[4];\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-mesh-splitmergebasedspanregistry-dragon-mesh-indexspantype-dragon-memory-buffersource-reserve-l2-lambda-13d7af7ee35f6d38badd42f7fc95bf0b"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-mesh-splitmergebasedspanregistry-dragon-mesh-indexspantype-dragon-memory-buffersource-reserve-l2-lambda-13d7af7ee35f6d38badd42f7fc95bf0b"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::mesh::SplitMergeBasedSpanRegistry<dragon::mesh::IndexSpanType,dragon::memory::BufferSource &&>::reserve::__l2::<lambda_13d7af7ee35f6d38badd42f7fc95bf0b>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::mesh::SplitMergeBasedSpanRegistry<dragon::mesh::IndexSpanType,dragon::memory::BufferSource &&>::reserve::__l2::<lambda_13d7af7ee35f6d38badd42f7fc95bf0b>\n{\n  const unsigned int *blockBytesSize;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-mesh-splitmergebasedspanregistry-dragon-mesh-vertexspantype-dragon-memory-buffersource-reserve-l2-lambda-9a1f248c4b012c5b780403105e461059"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-mesh-splitmergebasedspanregistry-dragon-mesh-vertexspantype-dragon-memory-buffersource-reserve-l2-lambda-9a1f248c4b012c5b780403105e461059"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::mesh::SplitMergeBasedSpanRegistry<dragon::mesh::VertexSpanType,dragon::memory::BufferSource &&>::reserve::__l2::<lambda_9a1f248c4b012c5b780403105e461059>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::mesh::SplitMergeBasedSpanRegistry<dragon::mesh::VertexSpanType,dragon::memory::BufferSource &&>::reserve::__l2::<lambda_9a1f248c4b012c5b780403105e461059>\n{\n  const unsigned int *blockBytesSize;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-res-createtexturetransaction-apply-l11-lambda-695ff95b81810132fab55b775a0cfff6"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-res-createtexturetransaction-apply-l11-lambda-695ff95b81810132fab55b775a0cfff6"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::res::CreateTextureTransaction::apply::__l11::<lambda_695ff95b81810132fab55b775a0cfff6>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::res::CreateTextureTransaction::apply::__l11::<lambda_695ff95b81810132fab55b775a0cfff6>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-res-createreadbacktexturetransaction-apply-l5-lambda-28188959d2bd39474496c6e64c5ff759"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-res-createreadbacktexturetransaction-apply-l5-lambda-28188959d2bd39474496c6e64c5ff759"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::res::CreateReadbackTextureTransaction::apply::__l5::<lambda_28188959d2bd39474496c6e64c5ff759>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::res::CreateReadbackTextureTransaction::apply::__l5::<lambda_28188959d2bd39474496c6e64c5ff759>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-res-createpooltexturetransaction-apply-l5-lambda-33afd816d5861c274d13d25baf4c95c7"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-res-createpooltexturetransaction-apply-l5-lambda-33afd816d5861c274d13d25baf4c95c7"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::res::CreatePoolTextureTransaction::apply::__l5::<lambda_33afd816d5861c274d13d25baf4c95c7>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::res::CreatePoolTextureTransaction::apply::__l5::<lambda_33afd816d5861c274d13d25baf4c95c7>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-res-updatetexturetransaction-apply-l5-lambda-42e8bca6c7b95a84e6052af4526ef8df"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-res-updatetexturetransaction-apply-l5-lambda-42e8bca6c7b95a84e6052af4526ef8df"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::res::UpdateTextureTransaction::apply::__l5::<lambda_42e8bca6c7b95a84e6052af4526ef8df>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::res::UpdateTextureTransaction::apply::__l5::<lambda_42e8bca6c7b95a84e6052af4526ef8df>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-res-createcubemaptransaction-apply-l10-lambda-664553627be8f513ee2782a8c292d183"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-res-createcubemaptransaction-apply-l10-lambda-664553627be8f513ee2782a8c292d183"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::res::CreateCubemapTransaction::apply::__l10::<lambda_664553627be8f513ee2782a8c292d183>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj __declspec(align(4)) dragon::res::CreateCubemapTransaction::apply::__l10::<lambda_664553627be8f513ee2782a8c292d183>\n{\n  gsl::span<dragon::res::ResolvedTextureResource *,-1> componentTextures;\n  glm::tvec3<unsigned short,0> sourceOrigin;\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-res-createtexturetransaction-apply-l5-lambda-9cd0c22663fa2fd9dd5596c1ebbacd34"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-res-createtexturetransaction-apply-l5-lambda-9cd0c22663fa2fd9dd5596c1ebbacd34"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::res::CreateTextureTransaction::apply::__l5::<lambda_9cd0c22663fa2fd9dd5596c1ebbacd34>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::res::CreateTextureTransaction::apply::__l5::<lambda_9cd0c22663fa2fd9dd5596c1ebbacd34>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"dragon-res-createcubemaptransaction-apply-l5-lambda-5bf19f844568798ae5793d7fa1256ca5"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dragon-res-createcubemaptransaction-apply-l5-lambda-5bf19f844568798ae5793d7fa1256ca5"}},[e._v("#")]),e._v(" "),o("code",[e._v("dragon::res::CreateCubemapTransaction::apply::__l5::<lambda_5bf19f844568798ae5793d7fa1256ca5>")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct __cppobj dragon::res::CreateCubemapTransaction::apply::__l5::<lambda_5bf19f844568798ae5793d7fa1256ca5>\n{\n};\n\n")])])]),o("h3",{attrs:{id:"debugutils-legacywindowssetthreadname-l2-tagthreadname-info"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#debugutils-legacywindowssetthreadname-l2-tagthreadname-info"}},[e._v("#")]),e._v(" "),o("code",[e._v("DebugUtils::_legacyWindowsSetThreadName::__l2::tagTHREADNAME_INFO")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct DebugUtils::_legacyWindowsSetThreadName::__l2::tagTHREADNAME_INFO\n{\n  unsigned int dwType;\n  const char *szName;\n  unsigned int dwThreadID;\n  unsigned int dwFlags;\n};\n\n")])])]),o("h3",{attrs:{id:"datadrivenrenderer-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#datadrivenrenderer-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("DataDrivenRenderer_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ DataDrivenRenderer_vtbl\n{\n  void (__fastcall *~ActorShaderManager)(ActorShaderManager *this);\n  mce::Color *(__fastcall *_getOverlayColor)(ActorShaderManager *this, mce::Color *result, Actor *, float);\n  void (__fastcall *render)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderDebug)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderEffects)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderTrading)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *, float);\n  void (__fastcall *renderFlame)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderLeash)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderWaterHole)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *addAdditionalRenderingIfNeeded)(ActorRenderer *this, mce::TextureGroup *);\n  void (__fastcall *renderWeaponEffect)(ActorRenderer *this, BaseActorRenderContext *, Actor *);\n  void (__fastcall *renderBindEffects)(ActorRenderer *this, BaseActorRenderContext *, Actor *);\n  AABB *(__fastcall *getRenderBounds)(ActorRenderer *this, AABB *result, const Actor *);\n  Vec3 *(__fastcall *getLeashOffset)(ActorRenderer *this, Vec3 *result, Actor *, float, float, float, bool, bool);\n  void (__fastcall *setIsOnScreen)(ActorRenderer *this, Actor *, const bool, float);\n  bool (__fastcall *shouldUpdateBonesAndEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);\n  bool (__fastcall *shouldUpdateEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);\n  void (__fastcall *_bindModelEffectRender)(ActorRenderer *this, BaseActorRenderContext *, Mob *);\n  void (__fastcall *_bindPureModelEffectRender)(DataDrivenRenderer *this, BaseActorRenderContext *, Mob *);\n};\n\n")])])]),o("h3",{attrs:{id:"dancecomponentlistener-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dancecomponentlistener-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("DanceComponentListener_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ DanceComponentListener_vtbl\n{\n  void (__fastcall *~BlockSourceListener)(BlockSourceListener *this);\n  void (__fastcall *onSourceCreated)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onSourceDestroyed)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onAreaChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, const BlockPos *);\n  void (__fastcall *onBlockChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, unsigned int, const Block *, const Block *, int, const ActorBlockSyncMessage *);\n  void (__fastcall *onBrightnessChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onBlockEntityChanged)(BlockSourceListener *this, BlockSource *, BlockActor *);\n  void (__fastcall *onBlockEntityAboutToBeRemoved)(BlockSourceListener *this, BlockSource *, std::shared_ptr<BlockActor>);\n  void (__fastcall *onEntityChanged)(BlockSourceListener *this, BlockSource *, Actor *);\n  void (__fastcall *onBlockEvent)(BlockSourceListener *this, BlockSource *, int, int, int, int, int);\n  void (__fastcall *allChanged)(LevelListener *this);\n  Particle *(__fastcall *addParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int, const CompoundTag *, bool);\n  void (__fastcall *sendServerLegacyParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int);\n  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Actor *, const HashedString *, const Vec3 *, const MolangVariableMap *);\n  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Vec3 *, const MolangVariableMap *);\n  void (__fastcall *addTerrainParticleEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);\n  void (__fastcall *addTerrainSlideEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);\n  void (__fastcall *addBreakingItemParticleEffect)(LevelListener *this, const Vec3 *, ParticleType, const TextureUVCoordinateSet *, bool);\n  void (__fastcall *playMusic)(LevelListener *this, const std::string *, const Vec3 *, float, float);\n  void (__fastcall *playStreamingMusic)(LevelListener *this, const std::string *, int, int, int);\n  void (__fastcall *onEntityAdded)(LevelListener *this, Actor *);\n  void (__fastcall *onEntityRemoved)(LevelListener *this, Actor *);\n  void (__fastcall *onChunkLoaded)(LevelListener *this, ChunkSource *, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(LevelListener *this, LevelChunk *);\n  void (__fastcall *onLevelDestruction)(LevelListener *this, const std::string *);\n  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const CompoundTag *);\n  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const Vec3 *, int);\n  void (__fastcall *levelSoundEvent)(LevelListener *this, const std::string *, const Vec3 *, float, float);\n  void (__fastcall *levelSoundEvent)(LevelListener *this, LevelSoundEvent, const Vec3 *, int, const ActorDefinitionIdentifier *, bool, bool);\n  void (__fastcall *stopSoundEvent)(LevelListener *this, const std::string *);\n  void (__fastcall *stopAllSounds)(LevelListener *this);\n  void (__fastcall *takePicture)(LevelListener *this, cg::ImageBuffer *, Actor *, Actor *, ScreenshotOptions *);\n  void (__fastcall *playerListChanged)(LevelListener *this);\n};\n\n")])])]),o("h3",{attrs:{id:"debuginfomob-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#debuginfomob-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("DebugInfoMob_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ DebugInfoMob_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n};\n\n")])])]),o("h3",{attrs:{id:"debuginfoplayer-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#debuginfoplayer-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("DebugInfoPlayer_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ DebugInfoPlayer_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n  void (__fastcall *prepareRegion)(Player *this, ChunkSource *);\n  void (__fastcall *destroyRegion)(Player *this);\n  void (__fastcall *suspendRegion)(Player *this);\n  void (__fastcall *resendAllChunks)(Player *this);\n  void (__fastcall *_fireWillChangeDimension)(Player *this);\n  void (__fastcall *_fireDimensionChanged)(Player *this);\n  void (__fastcall *changeDimensionWithCredits)(Player *this, AutomaticID<Dimension,int>);\n  int (__fastcall *tickWorld)(Player *this, const Tick *);\n  void (__fastcall *frameUpdate)(Player *this, FrameUpdateContextBase *);\n  const std::vector<ChunkPos> *(__fastcall *getTickingOffsets)(Player *this);\n  void (__fastcall *moveView)(Player *this);\n  void (__fastcall *setName)(Player *this, const std::string *);\n  void (__fastcall *checkMovementStats)(Player *this, const Vec3 *);\n  StructureFeatureType (__fastcall *getCurrentStructureFeature)(Player *this);\n  bool (__fastcall *isAutoJumpEnabled)(Player *this);\n  void (__fastcall *respawn)(Player *this);\n  void (__fastcall *resetRot)(Player *this);\n  void (__fastcall *resetPos)(Player *this, bool);\n  bool (__fastcall *isInTrialMode)(Player *this);\n  bool (__fastcall *hasResource)(Player *this, int);\n  void (__fastcall *completeUsingItem)(Player *this);\n  void (__fastcall *setPermissions)(Player *this, CommandPermissionLevel);\n  void (__fastcall *startDestroying)(Player *this);\n  void (__fastcall *stopDestroying)(Player *this);\n  void (__fastcall *openPortfolio)(Player *this);\n  void (__fastcall *openBook)(Player *this, int, bool, int, BlockActor *);\n  void (__fastcall *openTrading)(Player *this, const ActorUniqueID *, bool);\n  bool (__fastcall *canOpenContainerScreen)(Player *this);\n  void (__fastcall *openChalkboard)(Player *this, ChalkboardBlockActor *, bool);\n  void (__fastcall *openNpcInteractScreen)(Player *this, Actor *);\n  bool (__fastcall *openInventory)(Player *this);\n  void (__fastcall *displayChatMessage)(Player *this, const std::string *, const std::string *);\n  void (__fastcall *displayClientMessage)(Player *this, const std::string *);\n  void (__fastcall *displayTextObjectMessage)(Player *this, const TextObjectRoot *);\n  void (__fastcall *displayTextObjectWhisperMessage)(Player *this, const ResolvedTextObject *, const std::string *, const std::string *);\n  void (__fastcall *displayWhisperMessage)(Player *this, const std::string *, const std::string *, const std::string *, const std::string *);\n  BedSleepingResult (__fastcall *startSleepInBed)(Player *this, const BlockPos *);\n  void (__fastcall *stopSleepInBed)(Player *this, bool, bool);\n  bool (__fastcall *canStartSleepInBed)(Player *this);\n  int (__fastcall *getSleepTimer)(Player *this);\n  int (__fastcall *getPreviousTickSleepTimer)(Player *this);\n  void (__fastcall *openSign)(Player *this, const BlockPos *);\n  void (__fastcall *playEmote)(Player *this, const std::string *);\n  bool (__fastcall *isHostingPlayer)(Player *this);\n  bool (__fastcall *isLoading)(Player *this);\n  bool (__fastcall *isPlayerInitialized)(Player *this);\n  void (__fastcall *stopLoading)(Player *this);\n  void (__fastcall *registerTrackedBoss)(Player *this, ActorUniqueID);\n  void (__fastcall *unRegisterTrackedBoss)(Player *this, ActorUniqueID);\n  void (__fastcall *setPlayerGameType)(Player *this, GameType);\n  void (__fastcall *initHUDContainerManager)(Player *this);\n  void (__fastcall *_crit)(Player *this, Actor *);\n  IMinecraftEventing *(__fastcall *getEventing)(Player *this);\n  unsigned int (__fastcall *getUserId)(Player *this);\n  void (__fastcall *sendEventPacket)(Player *this, EventPacket *);\n  void (__fastcall *addExperience)(Player *this, int);\n  void (__fastcall *addLevels)(Player *this, int);\n  void (__fastcall *setContainerData)(Player *this, IContainerManager *, int, int);\n  void (__fastcall *slotChanged)(Player *this, IContainerManager *, Container *, int, const ItemStack *, const ItemStack *, bool);\n  void (__fastcall *inventoryChanged)(Player *this, Container *, int, const ItemStack *, const ItemStack *, bool);\n  void (__fastcall *refreshContainer)(Player *this, IContainerManager *);\n  void (__fastcall *deleteContainerManager)(Player *this);\n  void (__fastcall *setFieldOfViewModifier)(Player *this, float);\n  bool (__fastcall *is2DPositionRelevant)(Player *this, AutomaticID<Dimension,int>, const BlockPos *);\n  bool (__fastcall *isEntityRelevant)(Player *this, const Actor *);\n  bool (__fastcall *isTeacher)(Player *this);\n  void (__fastcall *onSuspension)(Player *this);\n  void (__fastcall *onLinkedSlotsChanged)(Player *this);\n  void (__fastcall *startCooldown)(Player *this, const Item *);\n  int (__fastcall *getItemCooldownLeft)(Player *this, const std::string *);\n  bool (__fastcall *isItemInCooldown)(Player *this, const std::string *);\n  void (__fastcall *sendInventoryTransaction)(Player *this, const InventoryTransaction *);\n  void (__fastcall *sendComplexInventoryTransaction)(Player *this, std::unique_ptr<ComplexInventoryTransaction>);\n  void (__fastcall *sendNetworkPacket)(Player *this, Packet *);\n  PlayerEventCoordinator *(__fastcall *getPlayerEventCoordinator)(Player *this);\n  MoveInputHandler *(__fastcall *getMoveInputHandler)(Player *this);\n  InputMode (__fastcall *getInputMode)(Player *this);\n  ClientPlayMode (__fastcall *getPlayMode)(Player *this);\n  void (__fastcall *reportMovementTelemetry)(Player *this, const MovementEventType);\n  bool (__fastcall *getCamereDeparted)(Player *this);\n  bool (__fastcall *getThirdPersonPerspective)(Player *this);\n  Vec2 *(__fastcall *getRotationToCamera)(Player *this, Vec2 *result);\n  void (__fastcall *onMovePlayerPacketNormal)(Player *this, const Vec3 *, const Vec2 *, float);\n};\n\n")])])]),o("h3",{attrs:{id:"dimension-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dimension-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("Dimension_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ Dimension_vtbl\n{\n  void (__fastcall *~BlockSourceListener)(BlockSourceListener *this);\n  void (__fastcall *onSourceCreated)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onSourceDestroyed)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onAreaChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, const BlockPos *);\n  void (__fastcall *onBlockChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, unsigned int, const Block *, const Block *, int, const ActorBlockSyncMessage *);\n  void (__fastcall *onBrightnessChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onBlockEntityChanged)(BlockSourceListener *this, BlockSource *, BlockActor *);\n  void (__fastcall *onBlockEntityAboutToBeRemoved)(BlockSourceListener *this, BlockSource *, std::shared_ptr<BlockActor>);\n  void (__fastcall *onEntityChanged)(BlockSourceListener *this, BlockSource *, Actor *);\n  void (__fastcall *onBlockEvent)(BlockSourceListener *this, BlockSource *, int, int, int, int, int);\n  void (__fastcall *allChanged)(LevelListener *this);\n  Particle *(__fastcall *addParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int, const CompoundTag *, bool);\n  void (__fastcall *sendServerLegacyParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int);\n  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Actor *, const HashedString *, const Vec3 *, const MolangVariableMap *);\n  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Vec3 *, const MolangVariableMap *);\n  void (__fastcall *addTerrainParticleEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);\n  void (__fastcall *addTerrainSlideEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);\n  void (__fastcall *addBreakingItemParticleEffect)(LevelListener *this, const Vec3 *, ParticleType, const TextureUVCoordinateSet *, bool);\n  void (__fastcall *playMusic)(LevelListener *this, const std::string *, const Vec3 *, float, float);\n  void (__fastcall *playStreamingMusic)(LevelListener *this, const std::string *, int, int, int);\n  void (__fastcall *onEntityAdded)(LevelListener *this, Actor *);\n  void (__fastcall *onEntityRemoved)(LevelListener *this, Actor *);\n  void (__fastcall *onChunkLoaded)(LevelListener *this, ChunkSource *, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(LevelListener *this, LevelChunk *);\n  void (__fastcall *onLevelDestruction)(LevelListener *this, const std::string *);\n  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const CompoundTag *);\n  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const Vec3 *, int);\n  void (__fastcall *levelSoundEvent)(LevelListener *this, const std::string *, const Vec3 *, float, float);\n  void (__fastcall *levelSoundEvent)(LevelListener *this, LevelSoundEvent, const Vec3 *, int, const ActorDefinitionIdentifier *, bool, bool);\n  void (__fastcall *stopSoundEvent)(LevelListener *this, const std::string *);\n  void (__fastcall *stopAllSounds)(LevelListener *this);\n  void (__fastcall *takePicture)(LevelListener *this, cg::ImageBuffer *, Actor *, Actor *, ScreenshotOptions *);\n  void (__fastcall *playerListChanged)(LevelListener *this);\n  void (__fastcall *init)(Dimension *this);\n  void (__fastcall *tick)(Dimension *this);\n  void (__fastcall *tickRedstone)(Dimension *this);\n  std::tuple<std::unique_ptr<ChunkSource>,WorldGenerator *> *(__fastcall *createGenerator)(Dimension *this, std::tuple<std::unique_ptr<ChunkSource>,WorldGenerator *> *result);\n  void (__fastcall *upgradeLevelChunk)(Dimension *this, ChunkSource *, LevelChunk *);\n  void (__fastcall *fixWallChunk)(Dimension *this, ChunkSource *, LevelChunk *);\n  bool (__fastcall *isNaturalDimension)(Dimension *this);\n  bool (__fastcall *isValidSpawn)(Dimension *this, int, int);\n  mce::Color *(__fastcall *getBrightnessDependentFogColor)(Dimension *this, mce::Color *result, const mce::Color *, float);\n  float (__fastcall *getMaxFogEnd)(Dimension *this);\n  float (__fastcall *getMaxFogStart)(Dimension *this);\n  bool (__fastcall *isFoggyAt)(Dimension *this, int, int);\n  __int16 (__fastcall *getCloudHeight)(Dimension *this);\n  int (__fastcall *getDefaultBiome)(Dimension *this);\n  bool (__fastcall *mayRespawnViaBed)(Dimension *this);\n  bool (__fastcall *hasGround)(Dimension *this);\n  BlockPos *(__fastcall *getSpawnPos)(Dimension *this, BlockPos *result);\n  int (__fastcall *getSpawnYPosition)(Dimension *this);\n  bool (__fastcall *hasBedrockFog)(Dimension *this);\n  float (__fastcall *getClearColorScale)(Dimension *this);\n  bool (__fastcall *showSky)(Dimension *this);\n  bool (__fastcall *isDay)(Dimension *this);\n  float (__fastcall *getTimeOfDay)(Dimension *this, int, float);\n  float (__fastcall *getSunIntensity)(Dimension *this, float, const Vec3 *, float);\n  bool (__fastcall *forceCheckAllNeighChunkSavedStat)(Dimension *this);\n  Vec3 *(__fastcall *translatePosAcrossDimension)(Dimension *this, Vec3 *result, const Vec3 *, AutomaticID<Dimension,int>);\n  void (__fastcall *sendBroadcast)(Dimension *this, const Packet *, Player *);\n  bool (__fastcall *is2DPositionRelevantForPlayer)(Dimension *this, const BlockPos *, Player *);\n  bool (__fastcall *isEntityRelevantForPlayer)(Dimension *this, Player *, const Actor *);\n  BaseLightTextureImageBuilder *(__fastcall *getLightTextureImageBuilder)(Dimension *this);\n  const DimensionBrightnessRamp *(__fastcall *getBrightnessRamp)(Dimension *this);\n  void (__fastcall *startLeaveGame)(Dimension *this);\n  std::unique_ptr<ChunkBuildOrderPolicyBase> *(__fastcall *_createChunkBuildOrderPolicy)(Dimension *this, std::unique_ptr<ChunkBuildOrderPolicyBase> *result);\n  void (__fastcall *_upgradeOldLimboEntity)(Dimension *this, CompoundTag *, LimboEntitiesVersion);\n  std::unique_ptr<ChunkSource> *(__fastcall *_wrapStorageForVersionCompatibility)(Dimension *this, std::unique_ptr<ChunkSource> *result, std::unique_ptr<ChunkSource>, StorageVersion);\n};\n\n")])])]),o("h3",{attrs:{id:"directactorproxyimpl-imobmovementproxy-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#directactorproxyimpl-imobmovementproxy-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("DirectActorProxyImpl<IMobMovementProxy>_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ DirectActorProxyImpl<IMobMovementProxy>_vtbl\n{\n  void (__fastcall *~IActorMovementProxy)(IActorMovementProxy *this);\n  float (__fastcall *getGravity)(IActorMovementProxy *this);\n  float (__fastcall *getLevelGravity)(IActorMovementProxy *this);\n  bool (__fastcall *isRiding)(IActorMovementProxy *this);\n  bool (__fastcall *isClientSide)(IActorMovementProxy *this);\n  bool (__fastcall *isCreative)(IActorMovementProxy *this);\n  bool (__fastcall *isInWater)(IActorMovementProxy *this);\n  bool (__fastcall *isInLava)(IActorMovementProxy *this);\n  bool (__fastcall *isInScaffolding)(IActorMovementProxy *this);\n  bool (__fastcall *isOverScaffolding)(IActorMovementProxy *this);\n  bool (__fastcall *isSwimming)(IActorMovementProxy *this);\n  bool (__fastcall *isImmersedInWater)(IActorMovementProxy *this);\n  bool (__fastcall *onClimbableBlock)(IActorMovementProxy *this);\n  bool (__fastcall *onHoverableBlock)(IActorMovementProxy *this);\n  bool (__fastcall *isHeadInWater)(IActorMovementProxy *this);\n  bool (__fastcall *canBeginOrContinueClimbingLadder)(IActorMovementProxy *this);\n  bool (__fastcall *isSwimmer)(IActorMovementProxy *this);\n  bool (__fastcall *isImmobile)(IActorMovementProxy *this);\n  bool (__fastcall *isControlledByLocalInstance)(IActorMovementProxy *this);\n  bool (__fastcall *hasTeleported)(IActorMovementProxy *this);\n  bool (__fastcall *usesOneWayCollision)(IActorMovementProxy *this);\n  bool (__fastcall *isStuckInCollider)(IActorMovementProxy *this);\n  void (__fastcall *setStuckInCollider)(IActorMovementProxy *this, bool);\n  bool (__fastcall *isStuckItem)(IActorMovementProxy *this);\n  const std::vector<AABB> *(__fastcall *getOnewayPhysicsBlocks)(IActorMovementProxy *this);\n  bool (__fastcall *wasPenetratingLastFrame)(IActorMovementProxy *this);\n  void (__fastcall *setWasPenetratingLastFrame)(IActorMovementProxy *this, bool);\n  bool (__fastcall *isPrimaryLocalPlayer)(IActorMovementProxy *this);\n  const std::vector<AABB> *(__fastcall *getSubAABBs)(IActorMovementProxy *this);\n  void (__fastcall *setSubAABBs)(IActorMovementProxy *this, const std::vector<AABB> *);\n  bool (__fastcall *isStackable)(IActorMovementProxy *this);\n  void (__fastcall *testForEntityStacking)(IActorMovementProxy *this, const AABB *, std::vector<AABB> *);\n  bool (__fastcall *getCollidableMobNear)(IActorMovementProxy *this);\n  void (__fastcall *setCollidableMobNear)(IActorMovementProxy *this, bool);\n  void (__fastcall *testForCollidableMobs)(IActorMovementProxy *this, const AABB *, std::vector<AABB> *);\n  float (__fastcall *getWalkDist)(IActorMovementProxy *this);\n  void (__fastcall *setWalkDist)(IActorMovementProxy *this, float);\n  bool (__fastcall *isOnGround)(IActorMovementProxy *this);\n  void (__fastcall *setOnGround)(IActorMovementProxy *this, bool);\n  bool (__fastcall *wasOnGround)(IActorMovementProxy *this);\n  void (__fastcall *setWasOnGround)(IActorMovementProxy *this, bool);\n  int (__fastcall *getHealth)(IActorMovementProxy *this);\n  bool (__fastcall *getHorizontalCollision)(IActorMovementProxy *this);\n  void (__fastcall *setHorizontalCollision)(IActorMovementProxy *this, bool);\n  bool (__fastcall *getVerticalCollision)(IActorMovementProxy *this);\n  void (__fastcall *setVerticalCollision)(IActorMovementProxy *this, bool);\n  bool (__fastcall *getCollision)(IActorMovementProxy *this);\n  void (__fastcall *setCollision)(IActorMovementProxy *this, bool);\n  float (__fastcall *getUserDefineMaxAutoStep)(IActorMovementProxy *this);\n  float (__fastcall *getMaxAutoStep)(IActorMovementProxy *this);\n  bool (__fastcall *isFree)(IActorMovementProxy *this, const Vec3 *);\n  float (__fastcall *getHeightOffset)(IActorMovementProxy *this);\n  Vec2 *(__fastcall *getSlideOffset)(IActorMovementProxy *this, Vec2 *result);\n  void (__fastcall *setSlideOffset)(IActorMovementProxy *this, const Vec2 *);\n  void (__fastcall *setTerrainSurfaceOffset)(IActorMovementProxy *this, float);\n  const Vec3 *(__fastcall *getBlockMovementSlowdownMultiplier)(IActorMovementProxy *this);\n  void (__fastcall *setBlockMovementSlowdownMultiplier)(IActorMovementProxy *this, const Vec3 *);\n  float (__fastcall *getCurrentSwimAmount)(IActorMovementProxy *this);\n  const WaterMovementComponent *(__fastcall *tryGetWaterMovementComponent)(IActorMovementProxy *this);\n  const AttributeInstance *(__fastcall *getAttribute)(IActorMovementProxy *this, const Attribute *);\n  bool (__fastcall *hasEffect)(IActorMovementProxy *this, const MobEffect *);\n  const MobEffectInstance *(__fastcall *getEffect)(IActorMovementProxy *this, const MobEffect *);\n  int (__fastcall *getActiveEffectCount)(IActorMovementProxy *this);\n  const SynchedActorData *(__fastcall *getEntityData)(IActorMovementProxy *this);\n  void (__fastcall *setStatusFlag)(IActorMovementProxy *this, ActorFlags, bool);\n  bool (__fastcall *getStatusFlag)(IActorMovementProxy *this, ActorFlags);\n  bool (__fastcall *hasCategory)(IActorMovementProxy *this, ActorCategory);\n  bool (__fastcall *isType)(IActorMovementProxy *this, ActorType);\n  Vec3 *(__fastcall *getPosition)(IActorMovementProxy *this, Vec3 *result);\n  void (__fastcall *setPosition)(IActorMovementProxy *this, const Vec3 *);\n  Vec2 *(__fastcall *getRotation)(IActorMovementProxy *this, Vec2 *result);\n  void (__fastcall *setRotation)(IActorMovementProxy *this, const Vec2 *);\n  const StateVectorComponent *(__fastcall *getStateVectorComponent)(IActorMovementProxy *this);\n  StateVectorComponent *(__fastcall *getStateVectorComponentNonConst)(IActorMovementProxy *this);\n  const AABBShapeComponent *(__fastcall *getAABBShapeComponent)(IActorMovementProxy *this);\n  AABBShapeComponent *(__fastcall *getAABBShapeComponentNonConst)(IActorMovementProxy *this);\n  void (__fastcall *setFallDistance)(IActorMovementProxy *this, float);\n  bool (__fastcall *isSneaking)(IActorMovementProxy *this);\n  void (__fastcall *setSneaking)(IActorMovementProxy *this, bool);\n  Vec3 *(__fastcall *getHeadLookVector)(IActorMovementProxy *this, Vec3 *result, float);\n  Vec3 *(__fastcall *getViewVector)(IActorMovementProxy *this, Vec3 *result, float);\n  const BlockSource *(__fastcall *getRegion)(IActorMovementProxy *this);\n  BlockSource *(__fastcall *getRegion)(IActorMovementProxy *this);\n  std::vector<AABB> *(__fastcall *fetchCollisionShapes)(IActorMovementProxy *this, const AABB *, float *, bool, IActorMovementProxy *);\n  const std::vector<std::shared_ptr<IActorMovementProxy>> *(__fastcall *fetchEntities)(IActorMovementProxy *this, const IActorMovementProxy *, const AABB *);\n  bool (__fastcall *hasRegion)(IActorMovementProxy *this);\n  IActorMovementProxy *(__fastcall *getRide)(IActorMovementProxy *this);\n  bool (__fastcall *isWASDControlled)(IActorMovementProxy *this);\n  int (__fastcall *getControllingSeat)(IActorMovementProxy *this);\n  int (__fastcall *getRiderIndex)(IActorMovementProxy *this, const IActorMovementProxy *);\n  IBoatMovementProxy *(__fastcall *tryAsBoat)(IActorMovementProxy *this);\n  IMobMovementProxy *(__fastcall *tryAsMob)(IActorMovementProxy *this);\n  IPlayerMovementProxy *(__fastcall *tryAsPlayer)(IActorMovementProxy *this);\n  const std::vector<ActorUniqueID> *(__fastcall *getRiderIDs)(IActorMovementProxy *this);\n  const ActorUniqueID *(__fastcall *getUniqueID)(IActorMovementProxy *this);\n  ActorRuntimeID *(__fastcall *getRuntimeID)(IActorMovementProxy *this, ActorRuntimeID *result);\n  AABB *(__fastcall *getHandleWaterAABB)(IActorMovementProxy *this, AABB *result);\n  BlockPos *(__fastcall *getBlockPosCurrentlyStandingOn)(IActorMovementProxy *this, BlockPos *result, IActorMovementProxy *);\n  void (__fastcall *blockOnStandOn)(IActorMovementProxy *this, const Block *, const BlockPos *);\n  bool (__fastcall *_containsSneakCollisionShapes)(IActorMovementProxy *this, const AABB *);\n  void (__fastcall *move)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *moveBBs)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *checkFallDamage)(IActorMovementProxy *this, float, bool);\n  void (__fastcall *onBounceStarted)(IActorMovementProxy *this, const BlockPos *, const Block *);\n  void (__fastcall *updatePrevPosRot)(IActorMovementProxy *this);\n  void (__fastcall *sendActorMove)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *_teleportTo)(IActorMovementProxy *this, const Vec3 *, bool, int, int);\n  Actor *(__fastcall *_getActor)(IActorMovementProxy *this);\n  const Actor *(__fastcall *_getRawActor)(IActorMovementProxy *this);\n  Actor *(__fastcall *_getRawActor)(IActorMovementProxy *this);\n  SynchedActorData *(__fastcall *_getEntityData)(IActorMovementProxy *this);\n  const Vec2 *(__fastcall *_getRotPrev)(IActorMovementProxy *this);\n  void (__fastcall *_setRotPrev)(IActorMovementProxy *this, const Vec2 *);\n  void (__fastcall *_setPreviousPosRot)(IActorMovementProxy *this, const Vec3 *, const Vec2 *);\n  void (__fastcall *_setHasTeleported)(IActorMovementProxy *this, bool);\n  gsl::not_null<BaseAttributeMap *> *(__fastcall *_getAttributes)(IActorMovementProxy *this, gsl::not_null<BaseAttributeMap *> *result);\n  void (__fastcall *_applySnapshot)(IActorMovementProxy *this, const PlayerSnapshot *);\n  std::unique_ptr<PlayerSnapshot> *(__fastcall *_createSnapshot)(IActorMovementProxy *this, std::unique_ptr<PlayerSnapshot> *result);\n  AdvanceFrameResult (__fastcall *_advanceLiveFrame)(IActorMovementProxy *this, const IReplayableActorInput *);\n  bool (__fastcall *isSetWaterSpeed)(IMobMovementProxy *this);\n  float (__fastcall *getWaterSpeed)(IMobMovementProxy *this);\n  bool (__fastcall *isDisableGravityInLiquid)(IMobMovementProxy *this);\n  int (__fastcall *getNoJumpDelay)(IMobMovementProxy *this);\n  void (__fastcall *setNoJumpDelay)(IMobMovementProxy *this, int);\n  bool (__fastcall *isJumping)(IMobMovementProxy *this);\n  void (__fastcall *setJumping)(IMobMovementProxy *this, bool);\n  bool (__fastcall *getJumpVelRedux)(IMobMovementProxy *this);\n  void (__fastcall *setJumpVelRedux)(IMobMovementProxy *this, bool);\n  Vec3 *(__fastcall *getJumpStartPos)(IMobMovementProxy *this, Vec3 *result);\n  void (__fastcall *setJumpStartPos)(IMobMovementProxy *this, const Vec3 *);\n  float (__fastcall *getJumpPower)(IMobMovementProxy *this);\n  int (__fastcall *getJumpTicks)(IMobMovementProxy *this);\n  void (__fastcall *setJumpTicks)(IMobMovementProxy *this, int);\n  void (__fastcall *_endJump)(IMobMovementProxy *this);\n  void (__fastcall *onPlayerJump)(IMobMovementProxy *this, int);\n  float (__fastcall *getSpeed)(IMobMovementProxy *this);\n  void (__fastcall *setSpeed)(IMobMovementProxy *this, float);\n  bool (__fastcall *isSprinting)(IMobMovementProxy *this);\n  void (__fastcall *setSprinting)(IMobMovementProxy *this, bool);\n  bool (__fastcall *discardFriction)(IMobMovementProxy *this);\n  const NavigationComponent *(__fastcall *tryGetNavigationComponent)(IMobMovementProxy *this);\n  float (__fastcall *getTilt)(IMobMovementProxy *this);\n  void (__fastcall *setTilt)(IMobMovementProxy *this, float);\n  bool (__fastcall *_allowAscendingScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *ascendScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *descendScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *ascendLadder)(IMobMovementProxy *this);\n  void (__fastcall *jumpFromGround)(IMobMovementProxy *this);\n  bool (__fastcall *isGliding)(IMobMovementProxy *this);\n  Vec3 *(__fastcall *getLocalMoveVelocity)(IMobMovementProxy *this, Vec3 *result);\n  void (__fastcall *setLocalMoveVelocity)(IMobMovementProxy *this, const Vec3 *);\n  float (__fastcall *getYRotA)(IMobMovementProxy *this);\n  void (__fastcall *setYRotA)(IMobMovementProxy *this, float);\n  bool (__fastcall *useNewAi)(IMobMovementProxy *this);\n  void (__fastcall *newServerAiStep)(IMobMovementProxy *this);\n  void (__fastcall *updateAi)(IMobMovementProxy *this);\n  void (__fastcall *aiStep)(IMobMovementProxy *this);\n  void (__fastcall *updateAttackAnim)(IMobMovementProxy *this);\n  int (__fastcall *getNoActionTime)(IMobMovementProxy *this);\n  void (__fastcall *setNoActionTime)(IMobMovementProxy *this, int);\n  float (__fastcall *getYHeadRot)(IMobMovementProxy *this);\n  void (__fastcall *setYHeadRot)(IMobMovementProxy *this, float);\n  float (__fastcall *getSwimSpeedMultiplier)(IMobMovementProxy *this);\n  void (__fastcall *setSwimSpeedMultiplier)(IMobMovementProxy *this, float);\n  void (__fastcall *pushActors)(IMobMovementProxy *this);\n  void (__fastcall *updateGliding)(IMobMovementProxy *this);\n  void (__fastcall *travel)(IMobMovementProxy *this, float, float, float);\n  void (__fastcall *playJumpSound)(IMobMovementProxy *this);\n  void (__fastcall *emitJumpPreventedEvent)(IMobMovementProxy *this, const BlockPos *);\n  float (__fastcall *getWaterWalkerEnchant)(IMobMovementProxy *this);\n  float (__fastcall *calcGroundFriction)(IMobMovementProxy *this, const Block *, const BlockPos *);\n  float (__fastcall *getFlyingSpeed)(IMobMovementProxy *this);\n  void (__fastcall *setFlyingSpeed)(IMobMovementProxy *this, float);\n  void (__fastcall *applyFinalFriction)(IMobMovementProxy *this, float, bool);\n  bool (__fastcall *shouldApplyWaterGravity)(IMobMovementProxy *this);\n  float (__fastcall *getFrictionModifier)(IMobMovementProxy *this);\n  void (__fastcall *setFrictionModifier)(IMobMovementProxy *this, float);\n  Mob *(__fastcall *_getMob)(IMobMovementProxy *this);\n  float (__fastcall *_getYHeadRotOld)(IMobMovementProxy *this);\n  void (__fastcall *_setYHeadRotOld)(IMobMovementProxy *this, float);\n  MovementInterpolator *(__fastcall *_getInterpolation)(IMobMovementProxy *this);\n};\n\n")])])]),o("h3",{attrs:{id:"directactorproxyimpl-iplayermovementproxy-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#directactorproxyimpl-iplayermovementproxy-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("DirectActorProxyImpl<IPlayerMovementProxy>_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ DirectActorProxyImpl<IPlayerMovementProxy>_vtbl\n{\n  void (__fastcall *~IActorMovementProxy)(IActorMovementProxy *this);\n  float (__fastcall *getGravity)(IActorMovementProxy *this);\n  float (__fastcall *getLevelGravity)(IActorMovementProxy *this);\n  bool (__fastcall *isRiding)(IActorMovementProxy *this);\n  bool (__fastcall *isClientSide)(IActorMovementProxy *this);\n  bool (__fastcall *isCreative)(IActorMovementProxy *this);\n  bool (__fastcall *isInWater)(IActorMovementProxy *this);\n  bool (__fastcall *isInLava)(IActorMovementProxy *this);\n  bool (__fastcall *isInScaffolding)(IActorMovementProxy *this);\n  bool (__fastcall *isOverScaffolding)(IActorMovementProxy *this);\n  bool (__fastcall *isSwimming)(IActorMovementProxy *this);\n  bool (__fastcall *isImmersedInWater)(IActorMovementProxy *this);\n  bool (__fastcall *onClimbableBlock)(IActorMovementProxy *this);\n  bool (__fastcall *onHoverableBlock)(IActorMovementProxy *this);\n  bool (__fastcall *isHeadInWater)(IActorMovementProxy *this);\n  bool (__fastcall *canBeginOrContinueClimbingLadder)(IActorMovementProxy *this);\n  bool (__fastcall *isSwimmer)(IActorMovementProxy *this);\n  bool (__fastcall *isImmobile)(IActorMovementProxy *this);\n  bool (__fastcall *isControlledByLocalInstance)(IActorMovementProxy *this);\n  bool (__fastcall *hasTeleported)(IActorMovementProxy *this);\n  bool (__fastcall *usesOneWayCollision)(IActorMovementProxy *this);\n  bool (__fastcall *isStuckInCollider)(IActorMovementProxy *this);\n  void (__fastcall *setStuckInCollider)(IActorMovementProxy *this, bool);\n  bool (__fastcall *isStuckItem)(IActorMovementProxy *this);\n  const std::vector<AABB> *(__fastcall *getOnewayPhysicsBlocks)(IActorMovementProxy *this);\n  bool (__fastcall *wasPenetratingLastFrame)(IActorMovementProxy *this);\n  void (__fastcall *setWasPenetratingLastFrame)(IActorMovementProxy *this, bool);\n  bool (__fastcall *isPrimaryLocalPlayer)(IActorMovementProxy *this);\n  const std::vector<AABB> *(__fastcall *getSubAABBs)(IActorMovementProxy *this);\n  void (__fastcall *setSubAABBs)(IActorMovementProxy *this, const std::vector<AABB> *);\n  bool (__fastcall *isStackable)(IActorMovementProxy *this);\n  void (__fastcall *testForEntityStacking)(IActorMovementProxy *this, const AABB *, std::vector<AABB> *);\n  bool (__fastcall *getCollidableMobNear)(IActorMovementProxy *this);\n  void (__fastcall *setCollidableMobNear)(IActorMovementProxy *this, bool);\n  void (__fastcall *testForCollidableMobs)(IActorMovementProxy *this, const AABB *, std::vector<AABB> *);\n  float (__fastcall *getWalkDist)(IActorMovementProxy *this);\n  void (__fastcall *setWalkDist)(IActorMovementProxy *this, float);\n  bool (__fastcall *isOnGround)(IActorMovementProxy *this);\n  void (__fastcall *setOnGround)(IActorMovementProxy *this, bool);\n  bool (__fastcall *wasOnGround)(IActorMovementProxy *this);\n  void (__fastcall *setWasOnGround)(IActorMovementProxy *this, bool);\n  int (__fastcall *getHealth)(IActorMovementProxy *this);\n  bool (__fastcall *getHorizontalCollision)(IActorMovementProxy *this);\n  void (__fastcall *setHorizontalCollision)(IActorMovementProxy *this, bool);\n  bool (__fastcall *getVerticalCollision)(IActorMovementProxy *this);\n  void (__fastcall *setVerticalCollision)(IActorMovementProxy *this, bool);\n  bool (__fastcall *getCollision)(IActorMovementProxy *this);\n  void (__fastcall *setCollision)(IActorMovementProxy *this, bool);\n  float (__fastcall *getUserDefineMaxAutoStep)(IActorMovementProxy *this);\n  float (__fastcall *getMaxAutoStep)(IActorMovementProxy *this);\n  bool (__fastcall *isFree)(IActorMovementProxy *this, const Vec3 *);\n  float (__fastcall *getHeightOffset)(IActorMovementProxy *this);\n  Vec2 *(__fastcall *getSlideOffset)(IActorMovementProxy *this, Vec2 *result);\n  void (__fastcall *setSlideOffset)(IActorMovementProxy *this, const Vec2 *);\n  void (__fastcall *setTerrainSurfaceOffset)(IActorMovementProxy *this, float);\n  const Vec3 *(__fastcall *getBlockMovementSlowdownMultiplier)(IActorMovementProxy *this);\n  void (__fastcall *setBlockMovementSlowdownMultiplier)(IActorMovementProxy *this, const Vec3 *);\n  float (__fastcall *getCurrentSwimAmount)(IActorMovementProxy *this);\n  const WaterMovementComponent *(__fastcall *tryGetWaterMovementComponent)(IActorMovementProxy *this);\n  const AttributeInstance *(__fastcall *getAttribute)(IActorMovementProxy *this, const Attribute *);\n  bool (__fastcall *hasEffect)(IActorMovementProxy *this, const MobEffect *);\n  const MobEffectInstance *(__fastcall *getEffect)(IActorMovementProxy *this, const MobEffect *);\n  int (__fastcall *getActiveEffectCount)(IActorMovementProxy *this);\n  const SynchedActorData *(__fastcall *getEntityData)(IActorMovementProxy *this);\n  void (__fastcall *setStatusFlag)(IActorMovementProxy *this, ActorFlags, bool);\n  bool (__fastcall *getStatusFlag)(IActorMovementProxy *this, ActorFlags);\n  bool (__fastcall *hasCategory)(IActorMovementProxy *this, ActorCategory);\n  bool (__fastcall *isType)(IActorMovementProxy *this, ActorType);\n  Vec3 *(__fastcall *getPosition)(IActorMovementProxy *this, Vec3 *result);\n  void (__fastcall *setPosition)(IActorMovementProxy *this, const Vec3 *);\n  Vec2 *(__fastcall *getRotation)(IActorMovementProxy *this, Vec2 *result);\n  void (__fastcall *setRotation)(IActorMovementProxy *this, const Vec2 *);\n  const StateVectorComponent *(__fastcall *getStateVectorComponent)(IActorMovementProxy *this);\n  StateVectorComponent *(__fastcall *getStateVectorComponentNonConst)(IActorMovementProxy *this);\n  const AABBShapeComponent *(__fastcall *getAABBShapeComponent)(IActorMovementProxy *this);\n  AABBShapeComponent *(__fastcall *getAABBShapeComponentNonConst)(IActorMovementProxy *this);\n  void (__fastcall *setFallDistance)(IActorMovementProxy *this, float);\n  bool (__fastcall *isSneaking)(IActorMovementProxy *this);\n  void (__fastcall *setSneaking)(IActorMovementProxy *this, bool);\n  Vec3 *(__fastcall *getHeadLookVector)(IActorMovementProxy *this, Vec3 *result, float);\n  Vec3 *(__fastcall *getViewVector)(IActorMovementProxy *this, Vec3 *result, float);\n  const BlockSource *(__fastcall *getRegion)(IActorMovementProxy *this);\n  BlockSource *(__fastcall *getRegion)(IActorMovementProxy *this);\n  std::vector<AABB> *(__fastcall *fetchCollisionShapes)(IActorMovementProxy *this, const AABB *, float *, bool, IActorMovementProxy *);\n  const std::vector<std::shared_ptr<IActorMovementProxy>> *(__fastcall *fetchEntities)(IActorMovementProxy *this, const IActorMovementProxy *, const AABB *);\n  bool (__fastcall *hasRegion)(IActorMovementProxy *this);\n  IActorMovementProxy *(__fastcall *getRide)(IActorMovementProxy *this);\n  bool (__fastcall *isWASDControlled)(IActorMovementProxy *this);\n  int (__fastcall *getControllingSeat)(IActorMovementProxy *this);\n  int (__fastcall *getRiderIndex)(IActorMovementProxy *this, const IActorMovementProxy *);\n  IBoatMovementProxy *(__fastcall *tryAsBoat)(IActorMovementProxy *this);\n  IMobMovementProxy *(__fastcall *tryAsMob)(IActorMovementProxy *this);\n  IPlayerMovementProxy *(__fastcall *tryAsPlayer)(IActorMovementProxy *this);\n  const std::vector<ActorUniqueID> *(__fastcall *getRiderIDs)(IActorMovementProxy *this);\n  const ActorUniqueID *(__fastcall *getUniqueID)(IActorMovementProxy *this);\n  ActorRuntimeID *(__fastcall *getRuntimeID)(IActorMovementProxy *this, ActorRuntimeID *result);\n  AABB *(__fastcall *getHandleWaterAABB)(IActorMovementProxy *this, AABB *result);\n  BlockPos *(__fastcall *getBlockPosCurrentlyStandingOn)(IActorMovementProxy *this, BlockPos *result, IActorMovementProxy *);\n  void (__fastcall *blockOnStandOn)(IActorMovementProxy *this, const Block *, const BlockPos *);\n  bool (__fastcall *_containsSneakCollisionShapes)(IActorMovementProxy *this, const AABB *);\n  void (__fastcall *move)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *moveBBs)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *checkFallDamage)(IActorMovementProxy *this, float, bool);\n  void (__fastcall *onBounceStarted)(IActorMovementProxy *this, const BlockPos *, const Block *);\n  void (__fastcall *updatePrevPosRot)(IActorMovementProxy *this);\n  void (__fastcall *sendActorMove)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *_teleportTo)(IActorMovementProxy *this, const Vec3 *, bool, int, int);\n  Actor *(__fastcall *_getActor)(IActorMovementProxy *this);\n  const Actor *(__fastcall *_getRawActor)(IActorMovementProxy *this);\n  Actor *(__fastcall *_getRawActor)(IActorMovementProxy *this);\n  SynchedActorData *(__fastcall *_getEntityData)(IActorMovementProxy *this);\n  const Vec2 *(__fastcall *_getRotPrev)(IActorMovementProxy *this);\n  void (__fastcall *_setRotPrev)(IActorMovementProxy *this, const Vec2 *);\n  void (__fastcall *_setPreviousPosRot)(IActorMovementProxy *this, const Vec3 *, const Vec2 *);\n  void (__fastcall *_setHasTeleported)(IActorMovementProxy *this, bool);\n  gsl::not_null<BaseAttributeMap *> *(__fastcall *_getAttributes)(IActorMovementProxy *this, gsl::not_null<BaseAttributeMap *> *result);\n  void (__fastcall *_applySnapshot)(IActorMovementProxy *this, const PlayerSnapshot *);\n  std::unique_ptr<PlayerSnapshot> *(__fastcall *_createSnapshot)(IActorMovementProxy *this, std::unique_ptr<PlayerSnapshot> *result);\n  AdvanceFrameResult (__fastcall *_advanceLiveFrame)(IActorMovementProxy *this, const IReplayableActorInput *);\n  bool (__fastcall *isSetWaterSpeed)(IMobMovementProxy *this);\n  float (__fastcall *getWaterSpeed)(IMobMovementProxy *this);\n  bool (__fastcall *isDisableGravityInLiquid)(IMobMovementProxy *this);\n  int (__fastcall *getNoJumpDelay)(IMobMovementProxy *this);\n  void (__fastcall *setNoJumpDelay)(IMobMovementProxy *this, int);\n  bool (__fastcall *isJumping)(IMobMovementProxy *this);\n  void (__fastcall *setJumping)(IMobMovementProxy *this, bool);\n  bool (__fastcall *getJumpVelRedux)(IMobMovementProxy *this);\n  void (__fastcall *setJumpVelRedux)(IMobMovementProxy *this, bool);\n  Vec3 *(__fastcall *getJumpStartPos)(IMobMovementProxy *this, Vec3 *result);\n  void (__fastcall *setJumpStartPos)(IMobMovementProxy *this, const Vec3 *);\n  float (__fastcall *getJumpPower)(IMobMovementProxy *this);\n  int (__fastcall *getJumpTicks)(IMobMovementProxy *this);\n  void (__fastcall *setJumpTicks)(IMobMovementProxy *this, int);\n  void (__fastcall *_endJump)(IMobMovementProxy *this);\n  void (__fastcall *onPlayerJump)(IMobMovementProxy *this, int);\n  float (__fastcall *getSpeed)(IMobMovementProxy *this);\n  void (__fastcall *setSpeed)(IMobMovementProxy *this, float);\n  bool (__fastcall *isSprinting)(IMobMovementProxy *this);\n  void (__fastcall *setSprinting)(IMobMovementProxy *this, bool);\n  bool (__fastcall *discardFriction)(IMobMovementProxy *this);\n  const NavigationComponent *(__fastcall *tryGetNavigationComponent)(IMobMovementProxy *this);\n  float (__fastcall *getTilt)(IMobMovementProxy *this);\n  void (__fastcall *setTilt)(IMobMovementProxy *this, float);\n  bool (__fastcall *_allowAscendingScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *ascendScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *descendScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *ascendLadder)(IMobMovementProxy *this);\n  void (__fastcall *jumpFromGround)(IMobMovementProxy *this);\n  bool (__fastcall *isGliding)(IMobMovementProxy *this);\n  Vec3 *(__fastcall *getLocalMoveVelocity)(IMobMovementProxy *this, Vec3 *result);\n  void (__fastcall *setLocalMoveVelocity)(IMobMovementProxy *this, const Vec3 *);\n  float (__fastcall *getYRotA)(IMobMovementProxy *this);\n  void (__fastcall *setYRotA)(IMobMovementProxy *this, float);\n  bool (__fastcall *useNewAi)(IMobMovementProxy *this);\n  void (__fastcall *newServerAiStep)(IMobMovementProxy *this);\n  void (__fastcall *updateAi)(IMobMovementProxy *this);\n  void (__fastcall *aiStep)(IMobMovementProxy *this);\n  void (__fastcall *updateAttackAnim)(IMobMovementProxy *this);\n  int (__fastcall *getNoActionTime)(IMobMovementProxy *this);\n  void (__fastcall *setNoActionTime)(IMobMovementProxy *this, int);\n  float (__fastcall *getYHeadRot)(IMobMovementProxy *this);\n  void (__fastcall *setYHeadRot)(IMobMovementProxy *this, float);\n  float (__fastcall *getSwimSpeedMultiplier)(IMobMovementProxy *this);\n  void (__fastcall *setSwimSpeedMultiplier)(IMobMovementProxy *this, float);\n  void (__fastcall *pushActors)(IMobMovementProxy *this);\n  void (__fastcall *updateGliding)(IMobMovementProxy *this);\n  void (__fastcall *travel)(IMobMovementProxy *this, float, float, float);\n  void (__fastcall *playJumpSound)(IMobMovementProxy *this);\n  void (__fastcall *emitJumpPreventedEvent)(IMobMovementProxy *this, const BlockPos *);\n  float (__fastcall *getWaterWalkerEnchant)(IMobMovementProxy *this);\n  float (__fastcall *calcGroundFriction)(IMobMovementProxy *this, const Block *, const BlockPos *);\n  float (__fastcall *getFlyingSpeed)(IMobMovementProxy *this);\n  void (__fastcall *setFlyingSpeed)(IMobMovementProxy *this, float);\n  void (__fastcall *applyFinalFriction)(IMobMovementProxy *this, float, bool);\n  bool (__fastcall *shouldApplyWaterGravity)(IMobMovementProxy *this);\n  float (__fastcall *getFrictionModifier)(IMobMovementProxy *this);\n  void (__fastcall *setFrictionModifier)(IMobMovementProxy *this, float);\n  Mob *(__fastcall *_getMob)(IMobMovementProxy *this);\n  float (__fastcall *_getYHeadRotOld)(IMobMovementProxy *this);\n  void (__fastcall *_setYHeadRotOld)(IMobMovementProxy *this, float);\n  MovementInterpolator *(__fastcall *_getInterpolation)(IMobMovementProxy *this);\n  bool (__fastcall *canJump)(IPlayerMovementProxy *this);\n  std::optional<AABB> *(__fastcall *getHead)(IPlayerMovementProxy *this, std::optional<AABB> *result);\n  void (__fastcall *setHead)(IPlayerMovementProxy *this, std::optional<AABB>);\n  std::optional<AABB> *(__fastcall *getOther)(IPlayerMovementProxy *this, std::optional<AABB> *result);\n  void (__fastcall *setOther)(IPlayerMovementProxy *this, std::optional<AABB>);\n  bool (__fastcall *getCamereDeparted)(IPlayerMovementProxy *this);\n  bool (__fastcall *getThirdPersonPerspective)(IPlayerMovementProxy *this);\n  Vec2 *(__fastcall *getRotationToCamera)(IPlayerMovementProxy *this, Vec2 *result);\n  bool (__fastcall *canMove)(IPlayerMovementProxy *this);\n  bool (__fastcall *canButtonJump)(IPlayerMovementProxy *this);\n  bool (__fastcall *canButtonInAir)(IPlayerMovementProxy *this);\n  bool (__fastcall *isSlowedByItemUse)(IPlayerMovementProxy *this);\n  void (__fastcall *startGliding)(IPlayerMovementProxy *this);\n  void (__fastcall *stopGliding)(IPlayerMovementProxy *this);\n  bool (__fastcall *isFlying)(IPlayerMovementProxy *this);\n  bool (__fastcall *isUsingItem)(IPlayerMovementProxy *this);\n  bool (__fastcall *isSleeping)(IPlayerMovementProxy *this);\n  bool (__fastcall *isServerAuthoritativeMovement)(IPlayerMovementProxy *this);\n  bool (__fastcall *isAutoJumping)(IPlayerMovementProxy *this);\n  void (__fastcall *setAutoJumping)(IPlayerMovementProxy *this, bool);\n  bool (__fastcall *isAutoJumpEnabled)(IPlayerMovementProxy *this);\n  bool (__fastcall *wasAutoJumping)(IPlayerMovementProxy *this);\n  void (__fastcall *setWasAutoJumping)(IPlayerMovementProxy *this, bool);\n  bool (__fastcall *isAdventureSettingsAutoJump)(IPlayerMovementProxy *this);\n  void (__fastcall *setHasMoveInput)(IPlayerMovementProxy *this, bool);\n  bool (__fastcall *hasMoveInput)(IPlayerMovementProxy *this);\n  bool (__fastcall *isLocalPlayer)(IPlayerMovementProxy *this);\n  float (__fastcall *getBob)(IPlayerMovementProxy *this);\n  void (__fastcall *setBob)(IPlayerMovementProxy *this, float);\n  float (__fastcall *getLastBob)(IPlayerMovementProxy *this);\n  void (__fastcall *setLastBob)(IPlayerMovementProxy *this, float);\n  void (__fastcall *setLastLookBob)(IPlayerMovementProxy *this, const Vec2 *);\n  Vec2 *(__fastcall *getLookBob)(IPlayerMovementProxy *this, Vec2 *result);\n  void (__fastcall *setLookBob)(IPlayerMovementProxy *this, const Vec2 *);\n  ReplayStateComponent *(__fastcall *tryGetReplayComponent)(IPlayerMovementProxy *this);\n  PlayerActionComponent *(__fastcall *tryGetPlayerActionComponent)(IPlayerMovementProxy *this);\n  const Tick *(__fastcall *getCurrentTick)(IPlayerMovementProxy *this);\n  const IClientInstanceProxy *(__fastcall *getClientInstance)(IPlayerMovementProxy *this);\n  IClientInstanceProxy *(__fastcall *getClientInstance)(IPlayerMovementProxy *this);\n  MoveInputHandler *(__fastcall *getMoveInputHandler)(IPlayerMovementProxy *this);\n  int (__fastcall *getGlidingTicks)(IPlayerMovementProxy *this);\n  InputMode (__fastcall *getInputMode)(IPlayerMovementProxy *this);\n  ClientPlayMode (__fastcall *getPlayMode)(IPlayerMovementProxy *this);\n  float (__fastcall *getVRMoveAdjustAngle)(IPlayerMovementProxy *this);\n  float (__fastcall *getPlayerPaddleForce)(IPlayerMovementProxy *this, Side);\n  void (__fastcall *setPlayerPaddleForce)(IPlayerMovementProxy *this, Side, float);\n  bool (__fastcall *isPaddling)(IPlayerMovementProxy *this, Side);\n  bool (__fastcall *areHandsBusy)(IPlayerMovementProxy *this);\n  void (__fastcall *setHandsBusy)(IPlayerMovementProxy *this, bool);\n  bool (__fastcall *getAbilityBool)(IPlayerMovementProxy *this, AbilitiesIndex);\n  void (__fastcall *setAbilityBool)(IPlayerMovementProxy *this, AbilitiesIndex, bool);\n  float (__fastcall *getAbilityFloat)(IPlayerMovementProxy *this, AbilitiesIndex);\n  void (__fastcall *setAbilityFloat)(IPlayerMovementProxy *this, AbilitiesIndex, float);\n  void (__fastcall *updateClientPlayerInputState)(IPlayerMovementProxy *this);\n  bool (__fastcall *isEmoting)(IPlayerMovementProxy *this);\n  void (__fastcall *setEmotingStatus)(IPlayerMovementProxy *this, bool);\n  void (__fastcall *setEmotePlayedEndedEarly)(IPlayerMovementProxy *this, bool);\n  void (__fastcall *fireEventPersonaEmotePlayed)(IPlayerMovementProxy *this);\n  void (__fastcall *sendPacket)(IPlayerMovementProxy *this, RiderJumpPacket *);\n  void (__fastcall *sendPacket)(IPlayerMovementProxy *this, PlayerActionPacket *);\n  void (__fastcall *sendAdventureSettingsPacket)(IPlayerMovementProxy *this);\n  bool (__fastcall *isArmorFlyEnabled)(IPlayerMovementProxy *this);\n  void (__fastcall *setJumpRidingScale)(IPlayerMovementProxy *this, float);\n  float (__fastcall *getJumpRidingScale)(IPlayerMovementProxy *this);\n  void (__fastcall *registerFramewiseActionOrStop)(IPlayerMovementProxy *this);\n  LoadingState (__fastcall *getLoadingState)(IPlayerMovementProxy *this);\n  void (__fastcall *setCurrentLocalMoveVelocity)(IPlayerMovementProxy *this, const Vec2 *);\n  void (__fastcall *setLastPos)(IPlayerMovementProxy *this, const Vec3 *);\n  Vec3 *(__fastcall *getLastPos)(IPlayerMovementProxy *this, Vec3 *result);\n  void (__fastcall *setLastDelta)(IPlayerMovementProxy *this, const Vec3 *);\n  Vec3 *(__fastcall *getLastDelta)(IPlayerMovementProxy *this, Vec3 *result);\n  void (__fastcall *sendPlayerInput)(IPlayerMovementProxy *this);\n  void (__fastcall *sendInput)(IPlayerMovementProxy *this);\n  void (__fastcall *sendClientAuthInput)(IPlayerMovementProxy *this);\n  bool (__fastcall *shouldSendPosition)(IPlayerMovementProxy *this);\n  void (__fastcall *sendPosition)(IPlayerMovementProxy *this);\n  void (__fastcall *checkMovementStats)(IPlayerMovementProxy *this, const Vec3 *);\n  void (__fastcall *sendPlayerMove)(IPlayerMovementProxy *this);\n  bool (__fastcall *checkMaterial)(IPlayerMovementProxy *this, const AABB *, MaterialType);\n  bool (__fastcall *checkNeedAutoJump)(IPlayerMovementProxy *this, float, float);\n  Player *(__fastcall *_getPlayer)(IPlayerMovementProxy *this);\n  void (__fastcall *_setPositionMode)(IPlayerMovementProxy *this, int);\n  void (__fastcall *_onMovePlayerPacketNormal)(IPlayerMovementProxy *this, const Vec3 *, const Vec2 *, float);\n  void (__fastcall *_resetPos)(IPlayerMovementProxy *this, bool);\n  const std::vector<MobEffectInstance> *(__fastcall *_getAllEffects)(IPlayerMovementProxy *this);\n  Vec2 *(__fastcall *_getCurrentLocalMoveVelocity)(IPlayerMovementProxy *this, Vec2 *result);\n  const Abilities *(__fastcall *_getAbilities)(IPlayerMovementProxy *this);\n  const AdventureSettings *(__fastcall *_getAdventureSettings)(IPlayerMovementProxy *this);\n};\n\n")])])]),o("h3",{attrs:{id:"directmobmovementproxyimpl-imobmovementproxy-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#directmobmovementproxyimpl-imobmovementproxy-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("DirectMobMovementProxyImpl<IMobMovementProxy>_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ DirectMobMovementProxyImpl<IMobMovementProxy>_vtbl\n{\n  void (__fastcall *~IActorMovementProxy)(IActorMovementProxy *this);\n  float (__fastcall *getGravity)(IActorMovementProxy *this);\n  float (__fastcall *getLevelGravity)(IActorMovementProxy *this);\n  bool (__fastcall *isRiding)(IActorMovementProxy *this);\n  bool (__fastcall *isClientSide)(IActorMovementProxy *this);\n  bool (__fastcall *isCreative)(IActorMovementProxy *this);\n  bool (__fastcall *isInWater)(IActorMovementProxy *this);\n  bool (__fastcall *isInLava)(IActorMovementProxy *this);\n  bool (__fastcall *isInScaffolding)(IActorMovementProxy *this);\n  bool (__fastcall *isOverScaffolding)(IActorMovementProxy *this);\n  bool (__fastcall *isSwimming)(IActorMovementProxy *this);\n  bool (__fastcall *isImmersedInWater)(IActorMovementProxy *this);\n  bool (__fastcall *onClimbableBlock)(IActorMovementProxy *this);\n  bool (__fastcall *onHoverableBlock)(IActorMovementProxy *this);\n  bool (__fastcall *isHeadInWater)(IActorMovementProxy *this);\n  bool (__fastcall *canBeginOrContinueClimbingLadder)(IActorMovementProxy *this);\n  bool (__fastcall *isSwimmer)(IActorMovementProxy *this);\n  bool (__fastcall *isImmobile)(IActorMovementProxy *this);\n  bool (__fastcall *isControlledByLocalInstance)(IActorMovementProxy *this);\n  bool (__fastcall *hasTeleported)(IActorMovementProxy *this);\n  bool (__fastcall *usesOneWayCollision)(IActorMovementProxy *this);\n  bool (__fastcall *isStuckInCollider)(IActorMovementProxy *this);\n  void (__fastcall *setStuckInCollider)(IActorMovementProxy *this, bool);\n  bool (__fastcall *isStuckItem)(IActorMovementProxy *this);\n  const std::vector<AABB> *(__fastcall *getOnewayPhysicsBlocks)(IActorMovementProxy *this);\n  bool (__fastcall *wasPenetratingLastFrame)(IActorMovementProxy *this);\n  void (__fastcall *setWasPenetratingLastFrame)(IActorMovementProxy *this, bool);\n  bool (__fastcall *isPrimaryLocalPlayer)(IActorMovementProxy *this);\n  const std::vector<AABB> *(__fastcall *getSubAABBs)(IActorMovementProxy *this);\n  void (__fastcall *setSubAABBs)(IActorMovementProxy *this, const std::vector<AABB> *);\n  bool (__fastcall *isStackable)(IActorMovementProxy *this);\n  void (__fastcall *testForEntityStacking)(IActorMovementProxy *this, const AABB *, std::vector<AABB> *);\n  bool (__fastcall *getCollidableMobNear)(IActorMovementProxy *this);\n  void (__fastcall *setCollidableMobNear)(IActorMovementProxy *this, bool);\n  void (__fastcall *testForCollidableMobs)(IActorMovementProxy *this, const AABB *, std::vector<AABB> *);\n  float (__fastcall *getWalkDist)(IActorMovementProxy *this);\n  void (__fastcall *setWalkDist)(IActorMovementProxy *this, float);\n  bool (__fastcall *isOnGround)(IActorMovementProxy *this);\n  void (__fastcall *setOnGround)(IActorMovementProxy *this, bool);\n  bool (__fastcall *wasOnGround)(IActorMovementProxy *this);\n  void (__fastcall *setWasOnGround)(IActorMovementProxy *this, bool);\n  int (__fastcall *getHealth)(IActorMovementProxy *this);\n  bool (__fastcall *getHorizontalCollision)(IActorMovementProxy *this);\n  void (__fastcall *setHorizontalCollision)(IActorMovementProxy *this, bool);\n  bool (__fastcall *getVerticalCollision)(IActorMovementProxy *this);\n  void (__fastcall *setVerticalCollision)(IActorMovementProxy *this, bool);\n  bool (__fastcall *getCollision)(IActorMovementProxy *this);\n  void (__fastcall *setCollision)(IActorMovementProxy *this, bool);\n  float (__fastcall *getUserDefineMaxAutoStep)(IActorMovementProxy *this);\n  float (__fastcall *getMaxAutoStep)(IActorMovementProxy *this);\n  bool (__fastcall *isFree)(IActorMovementProxy *this, const Vec3 *);\n  float (__fastcall *getHeightOffset)(IActorMovementProxy *this);\n  Vec2 *(__fastcall *getSlideOffset)(IActorMovementProxy *this, Vec2 *result);\n  void (__fastcall *setSlideOffset)(IActorMovementProxy *this, const Vec2 *);\n  void (__fastcall *setTerrainSurfaceOffset)(IActorMovementProxy *this, float);\n  const Vec3 *(__fastcall *getBlockMovementSlowdownMultiplier)(IActorMovementProxy *this);\n  void (__fastcall *setBlockMovementSlowdownMultiplier)(IActorMovementProxy *this, const Vec3 *);\n  float (__fastcall *getCurrentSwimAmount)(IActorMovementProxy *this);\n  const WaterMovementComponent *(__fastcall *tryGetWaterMovementComponent)(IActorMovementProxy *this);\n  const AttributeInstance *(__fastcall *getAttribute)(IActorMovementProxy *this, const Attribute *);\n  bool (__fastcall *hasEffect)(IActorMovementProxy *this, const MobEffect *);\n  const MobEffectInstance *(__fastcall *getEffect)(IActorMovementProxy *this, const MobEffect *);\n  int (__fastcall *getActiveEffectCount)(IActorMovementProxy *this);\n  const SynchedActorData *(__fastcall *getEntityData)(IActorMovementProxy *this);\n  void (__fastcall *setStatusFlag)(IActorMovementProxy *this, ActorFlags, bool);\n  bool (__fastcall *getStatusFlag)(IActorMovementProxy *this, ActorFlags);\n  bool (__fastcall *hasCategory)(IActorMovementProxy *this, ActorCategory);\n  bool (__fastcall *isType)(IActorMovementProxy *this, ActorType);\n  Vec3 *(__fastcall *getPosition)(IActorMovementProxy *this, Vec3 *result);\n  void (__fastcall *setPosition)(IActorMovementProxy *this, const Vec3 *);\n  Vec2 *(__fastcall *getRotation)(IActorMovementProxy *this, Vec2 *result);\n  void (__fastcall *setRotation)(IActorMovementProxy *this, const Vec2 *);\n  const StateVectorComponent *(__fastcall *getStateVectorComponent)(IActorMovementProxy *this);\n  StateVectorComponent *(__fastcall *getStateVectorComponentNonConst)(IActorMovementProxy *this);\n  const AABBShapeComponent *(__fastcall *getAABBShapeComponent)(IActorMovementProxy *this);\n  AABBShapeComponent *(__fastcall *getAABBShapeComponentNonConst)(IActorMovementProxy *this);\n  void (__fastcall *setFallDistance)(IActorMovementProxy *this, float);\n  bool (__fastcall *isSneaking)(IActorMovementProxy *this);\n  void (__fastcall *setSneaking)(IActorMovementProxy *this, bool);\n  Vec3 *(__fastcall *getHeadLookVector)(IActorMovementProxy *this, Vec3 *result, float);\n  Vec3 *(__fastcall *getViewVector)(IActorMovementProxy *this, Vec3 *result, float);\n  const BlockSource *(__fastcall *getRegion)(IActorMovementProxy *this);\n  BlockSource *(__fastcall *getRegion)(IActorMovementProxy *this);\n  std::vector<AABB> *(__fastcall *fetchCollisionShapes)(IActorMovementProxy *this, const AABB *, float *, bool, IActorMovementProxy *);\n  const std::vector<std::shared_ptr<IActorMovementProxy>> *(__fastcall *fetchEntities)(IActorMovementProxy *this, const IActorMovementProxy *, const AABB *);\n  bool (__fastcall *hasRegion)(IActorMovementProxy *this);\n  IActorMovementProxy *(__fastcall *getRide)(IActorMovementProxy *this);\n  bool (__fastcall *isWASDControlled)(IActorMovementProxy *this);\n  int (__fastcall *getControllingSeat)(IActorMovementProxy *this);\n  int (__fastcall *getRiderIndex)(IActorMovementProxy *this, const IActorMovementProxy *);\n  IBoatMovementProxy *(__fastcall *tryAsBoat)(IActorMovementProxy *this);\n  IMobMovementProxy *(__fastcall *tryAsMob)(IActorMovementProxy *this);\n  IPlayerMovementProxy *(__fastcall *tryAsPlayer)(IActorMovementProxy *this);\n  const std::vector<ActorUniqueID> *(__fastcall *getRiderIDs)(IActorMovementProxy *this);\n  const ActorUniqueID *(__fastcall *getUniqueID)(IActorMovementProxy *this);\n  ActorRuntimeID *(__fastcall *getRuntimeID)(IActorMovementProxy *this, ActorRuntimeID *result);\n  AABB *(__fastcall *getHandleWaterAABB)(IActorMovementProxy *this, AABB *result);\n  BlockPos *(__fastcall *getBlockPosCurrentlyStandingOn)(IActorMovementProxy *this, BlockPos *result, IActorMovementProxy *);\n  void (__fastcall *blockOnStandOn)(IActorMovementProxy *this, const Block *, const BlockPos *);\n  bool (__fastcall *_containsSneakCollisionShapes)(IActorMovementProxy *this, const AABB *);\n  void (__fastcall *move)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *moveBBs)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *checkFallDamage)(IActorMovementProxy *this, float, bool);\n  void (__fastcall *onBounceStarted)(IActorMovementProxy *this, const BlockPos *, const Block *);\n  void (__fastcall *updatePrevPosRot)(IActorMovementProxy *this);\n  void (__fastcall *sendActorMove)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *_teleportTo)(IActorMovementProxy *this, const Vec3 *, bool, int, int);\n  Actor *(__fastcall *_getActor)(IActorMovementProxy *this);\n  const Actor *(__fastcall *_getRawActor)(IActorMovementProxy *this);\n  Actor *(__fastcall *_getRawActor)(IActorMovementProxy *this);\n  SynchedActorData *(__fastcall *_getEntityData)(IActorMovementProxy *this);\n  const Vec2 *(__fastcall *_getRotPrev)(IActorMovementProxy *this);\n  void (__fastcall *_setRotPrev)(IActorMovementProxy *this, const Vec2 *);\n  void (__fastcall *_setPreviousPosRot)(IActorMovementProxy *this, const Vec3 *, const Vec2 *);\n  void (__fastcall *_setHasTeleported)(IActorMovementProxy *this, bool);\n  gsl::not_null<BaseAttributeMap *> *(__fastcall *_getAttributes)(IActorMovementProxy *this, gsl::not_null<BaseAttributeMap *> *result);\n  void (__fastcall *_applySnapshot)(IActorMovementProxy *this, const PlayerSnapshot *);\n  std::unique_ptr<PlayerSnapshot> *(__fastcall *_createSnapshot)(IActorMovementProxy *this, std::unique_ptr<PlayerSnapshot> *result);\n  AdvanceFrameResult (__fastcall *_advanceLiveFrame)(IActorMovementProxy *this, const IReplayableActorInput *);\n  bool (__fastcall *isSetWaterSpeed)(IMobMovementProxy *this);\n  float (__fastcall *getWaterSpeed)(IMobMovementProxy *this);\n  bool (__fastcall *isDisableGravityInLiquid)(IMobMovementProxy *this);\n  int (__fastcall *getNoJumpDelay)(IMobMovementProxy *this);\n  void (__fastcall *setNoJumpDelay)(IMobMovementProxy *this, int);\n  bool (__fastcall *isJumping)(IMobMovementProxy *this);\n  void (__fastcall *setJumping)(IMobMovementProxy *this, bool);\n  bool (__fastcall *getJumpVelRedux)(IMobMovementProxy *this);\n  void (__fastcall *setJumpVelRedux)(IMobMovementProxy *this, bool);\n  Vec3 *(__fastcall *getJumpStartPos)(IMobMovementProxy *this, Vec3 *result);\n  void (__fastcall *setJumpStartPos)(IMobMovementProxy *this, const Vec3 *);\n  float (__fastcall *getJumpPower)(IMobMovementProxy *this);\n  int (__fastcall *getJumpTicks)(IMobMovementProxy *this);\n  void (__fastcall *setJumpTicks)(IMobMovementProxy *this, int);\n  void (__fastcall *_endJump)(IMobMovementProxy *this);\n  void (__fastcall *onPlayerJump)(IMobMovementProxy *this, int);\n  float (__fastcall *getSpeed)(IMobMovementProxy *this);\n  void (__fastcall *setSpeed)(IMobMovementProxy *this, float);\n  bool (__fastcall *isSprinting)(IMobMovementProxy *this);\n  void (__fastcall *setSprinting)(IMobMovementProxy *this, bool);\n  bool (__fastcall *discardFriction)(IMobMovementProxy *this);\n  const NavigationComponent *(__fastcall *tryGetNavigationComponent)(IMobMovementProxy *this);\n  float (__fastcall *getTilt)(IMobMovementProxy *this);\n  void (__fastcall *setTilt)(IMobMovementProxy *this, float);\n  bool (__fastcall *_allowAscendingScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *ascendScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *descendScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *ascendLadder)(IMobMovementProxy *this);\n  void (__fastcall *jumpFromGround)(IMobMovementProxy *this);\n  bool (__fastcall *isGliding)(IMobMovementProxy *this);\n  Vec3 *(__fastcall *getLocalMoveVelocity)(IMobMovementProxy *this, Vec3 *result);\n  void (__fastcall *setLocalMoveVelocity)(IMobMovementProxy *this, const Vec3 *);\n  float (__fastcall *getYRotA)(IMobMovementProxy *this);\n  void (__fastcall *setYRotA)(IMobMovementProxy *this, float);\n  bool (__fastcall *useNewAi)(IMobMovementProxy *this);\n  void (__fastcall *newServerAiStep)(IMobMovementProxy *this);\n  void (__fastcall *updateAi)(IMobMovementProxy *this);\n  void (__fastcall *aiStep)(IMobMovementProxy *this);\n  void (__fastcall *updateAttackAnim)(IMobMovementProxy *this);\n  int (__fastcall *getNoActionTime)(IMobMovementProxy *this);\n  void (__fastcall *setNoActionTime)(IMobMovementProxy *this, int);\n  float (__fastcall *getYHeadRot)(IMobMovementProxy *this);\n  void (__fastcall *setYHeadRot)(IMobMovementProxy *this, float);\n  float (__fastcall *getSwimSpeedMultiplier)(IMobMovementProxy *this);\n  void (__fastcall *setSwimSpeedMultiplier)(IMobMovementProxy *this, float);\n  void (__fastcall *pushActors)(IMobMovementProxy *this);\n  void (__fastcall *updateGliding)(IMobMovementProxy *this);\n  void (__fastcall *travel)(IMobMovementProxy *this, float, float, float);\n  void (__fastcall *playJumpSound)(IMobMovementProxy *this);\n  void (__fastcall *emitJumpPreventedEvent)(IMobMovementProxy *this, const BlockPos *);\n  float (__fastcall *getWaterWalkerEnchant)(IMobMovementProxy *this);\n  float (__fastcall *calcGroundFriction)(IMobMovementProxy *this, const Block *, const BlockPos *);\n  float (__fastcall *getFlyingSpeed)(IMobMovementProxy *this);\n  void (__fastcall *setFlyingSpeed)(IMobMovementProxy *this, float);\n  void (__fastcall *applyFinalFriction)(IMobMovementProxy *this, float, bool);\n  bool (__fastcall *shouldApplyWaterGravity)(IMobMovementProxy *this);\n  float (__fastcall *getFrictionModifier)(IMobMovementProxy *this);\n  void (__fastcall *setFrictionModifier)(IMobMovementProxy *this, float);\n  Mob *(__fastcall *_getMob)(IMobMovementProxy *this);\n  float (__fastcall *_getYHeadRotOld)(IMobMovementProxy *this);\n  void (__fastcall *_setYHeadRotOld)(IMobMovementProxy *this, float);\n  MovementInterpolator *(__fastcall *_getInterpolation)(IMobMovementProxy *this);\n};\n\n")])])]),o("h3",{attrs:{id:"directmobmovementproxyimpl-iplayermovementproxy-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#directmobmovementproxyimpl-iplayermovementproxy-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("DirectMobMovementProxyImpl<IPlayerMovementProxy>_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ DirectMobMovementProxyImpl<IPlayerMovementProxy>_vtbl\n{\n  void (__fastcall *~IActorMovementProxy)(IActorMovementProxy *this);\n  float (__fastcall *getGravity)(IActorMovementProxy *this);\n  float (__fastcall *getLevelGravity)(IActorMovementProxy *this);\n  bool (__fastcall *isRiding)(IActorMovementProxy *this);\n  bool (__fastcall *isClientSide)(IActorMovementProxy *this);\n  bool (__fastcall *isCreative)(IActorMovementProxy *this);\n  bool (__fastcall *isInWater)(IActorMovementProxy *this);\n  bool (__fastcall *isInLava)(IActorMovementProxy *this);\n  bool (__fastcall *isInScaffolding)(IActorMovementProxy *this);\n  bool (__fastcall *isOverScaffolding)(IActorMovementProxy *this);\n  bool (__fastcall *isSwimming)(IActorMovementProxy *this);\n  bool (__fastcall *isImmersedInWater)(IActorMovementProxy *this);\n  bool (__fastcall *onClimbableBlock)(IActorMovementProxy *this);\n  bool (__fastcall *onHoverableBlock)(IActorMovementProxy *this);\n  bool (__fastcall *isHeadInWater)(IActorMovementProxy *this);\n  bool (__fastcall *canBeginOrContinueClimbingLadder)(IActorMovementProxy *this);\n  bool (__fastcall *isSwimmer)(IActorMovementProxy *this);\n  bool (__fastcall *isImmobile)(IActorMovementProxy *this);\n  bool (__fastcall *isControlledByLocalInstance)(IActorMovementProxy *this);\n  bool (__fastcall *hasTeleported)(IActorMovementProxy *this);\n  bool (__fastcall *usesOneWayCollision)(IActorMovementProxy *this);\n  bool (__fastcall *isStuckInCollider)(IActorMovementProxy *this);\n  void (__fastcall *setStuckInCollider)(IActorMovementProxy *this, bool);\n  bool (__fastcall *isStuckItem)(IActorMovementProxy *this);\n  const std::vector<AABB> *(__fastcall *getOnewayPhysicsBlocks)(IActorMovementProxy *this);\n  bool (__fastcall *wasPenetratingLastFrame)(IActorMovementProxy *this);\n  void (__fastcall *setWasPenetratingLastFrame)(IActorMovementProxy *this, bool);\n  bool (__fastcall *isPrimaryLocalPlayer)(IActorMovementProxy *this);\n  const std::vector<AABB> *(__fastcall *getSubAABBs)(IActorMovementProxy *this);\n  void (__fastcall *setSubAABBs)(IActorMovementProxy *this, const std::vector<AABB> *);\n  bool (__fastcall *isStackable)(IActorMovementProxy *this);\n  void (__fastcall *testForEntityStacking)(IActorMovementProxy *this, const AABB *, std::vector<AABB> *);\n  bool (__fastcall *getCollidableMobNear)(IActorMovementProxy *this);\n  void (__fastcall *setCollidableMobNear)(IActorMovementProxy *this, bool);\n  void (__fastcall *testForCollidableMobs)(IActorMovementProxy *this, const AABB *, std::vector<AABB> *);\n  float (__fastcall *getWalkDist)(IActorMovementProxy *this);\n  void (__fastcall *setWalkDist)(IActorMovementProxy *this, float);\n  bool (__fastcall *isOnGround)(IActorMovementProxy *this);\n  void (__fastcall *setOnGround)(IActorMovementProxy *this, bool);\n  bool (__fastcall *wasOnGround)(IActorMovementProxy *this);\n  void (__fastcall *setWasOnGround)(IActorMovementProxy *this, bool);\n  int (__fastcall *getHealth)(IActorMovementProxy *this);\n  bool (__fastcall *getHorizontalCollision)(IActorMovementProxy *this);\n  void (__fastcall *setHorizontalCollision)(IActorMovementProxy *this, bool);\n  bool (__fastcall *getVerticalCollision)(IActorMovementProxy *this);\n  void (__fastcall *setVerticalCollision)(IActorMovementProxy *this, bool);\n  bool (__fastcall *getCollision)(IActorMovementProxy *this);\n  void (__fastcall *setCollision)(IActorMovementProxy *this, bool);\n  float (__fastcall *getUserDefineMaxAutoStep)(IActorMovementProxy *this);\n  float (__fastcall *getMaxAutoStep)(IActorMovementProxy *this);\n  bool (__fastcall *isFree)(IActorMovementProxy *this, const Vec3 *);\n  float (__fastcall *getHeightOffset)(IActorMovementProxy *this);\n  Vec2 *(__fastcall *getSlideOffset)(IActorMovementProxy *this, Vec2 *result);\n  void (__fastcall *setSlideOffset)(IActorMovementProxy *this, const Vec2 *);\n  void (__fastcall *setTerrainSurfaceOffset)(IActorMovementProxy *this, float);\n  const Vec3 *(__fastcall *getBlockMovementSlowdownMultiplier)(IActorMovementProxy *this);\n  void (__fastcall *setBlockMovementSlowdownMultiplier)(IActorMovementProxy *this, const Vec3 *);\n  float (__fastcall *getCurrentSwimAmount)(IActorMovementProxy *this);\n  const WaterMovementComponent *(__fastcall *tryGetWaterMovementComponent)(IActorMovementProxy *this);\n  const AttributeInstance *(__fastcall *getAttribute)(IActorMovementProxy *this, const Attribute *);\n  bool (__fastcall *hasEffect)(IActorMovementProxy *this, const MobEffect *);\n  const MobEffectInstance *(__fastcall *getEffect)(IActorMovementProxy *this, const MobEffect *);\n  int (__fastcall *getActiveEffectCount)(IActorMovementProxy *this);\n  const SynchedActorData *(__fastcall *getEntityData)(IActorMovementProxy *this);\n  void (__fastcall *setStatusFlag)(IActorMovementProxy *this, ActorFlags, bool);\n  bool (__fastcall *getStatusFlag)(IActorMovementProxy *this, ActorFlags);\n  bool (__fastcall *hasCategory)(IActorMovementProxy *this, ActorCategory);\n  bool (__fastcall *isType)(IActorMovementProxy *this, ActorType);\n  Vec3 *(__fastcall *getPosition)(IActorMovementProxy *this, Vec3 *result);\n  void (__fastcall *setPosition)(IActorMovementProxy *this, const Vec3 *);\n  Vec2 *(__fastcall *getRotation)(IActorMovementProxy *this, Vec2 *result);\n  void (__fastcall *setRotation)(IActorMovementProxy *this, const Vec2 *);\n  const StateVectorComponent *(__fastcall *getStateVectorComponent)(IActorMovementProxy *this);\n  StateVectorComponent *(__fastcall *getStateVectorComponentNonConst)(IActorMovementProxy *this);\n  const AABBShapeComponent *(__fastcall *getAABBShapeComponent)(IActorMovementProxy *this);\n  AABBShapeComponent *(__fastcall *getAABBShapeComponentNonConst)(IActorMovementProxy *this);\n  void (__fastcall *setFallDistance)(IActorMovementProxy *this, float);\n  bool (__fastcall *isSneaking)(IActorMovementProxy *this);\n  void (__fastcall *setSneaking)(IActorMovementProxy *this, bool);\n  Vec3 *(__fastcall *getHeadLookVector)(IActorMovementProxy *this, Vec3 *result, float);\n  Vec3 *(__fastcall *getViewVector)(IActorMovementProxy *this, Vec3 *result, float);\n  const BlockSource *(__fastcall *getRegion)(IActorMovementProxy *this);\n  BlockSource *(__fastcall *getRegion)(IActorMovementProxy *this);\n  std::vector<AABB> *(__fastcall *fetchCollisionShapes)(IActorMovementProxy *this, const AABB *, float *, bool, IActorMovementProxy *);\n  const std::vector<std::shared_ptr<IActorMovementProxy>> *(__fastcall *fetchEntities)(IActorMovementProxy *this, const IActorMovementProxy *, const AABB *);\n  bool (__fastcall *hasRegion)(IActorMovementProxy *this);\n  IActorMovementProxy *(__fastcall *getRide)(IActorMovementProxy *this);\n  bool (__fastcall *isWASDControlled)(IActorMovementProxy *this);\n  int (__fastcall *getControllingSeat)(IActorMovementProxy *this);\n  int (__fastcall *getRiderIndex)(IActorMovementProxy *this, const IActorMovementProxy *);\n  IBoatMovementProxy *(__fastcall *tryAsBoat)(IActorMovementProxy *this);\n  IMobMovementProxy *(__fastcall *tryAsMob)(IActorMovementProxy *this);\n  IPlayerMovementProxy *(__fastcall *tryAsPlayer)(IActorMovementProxy *this);\n  const std::vector<ActorUniqueID> *(__fastcall *getRiderIDs)(IActorMovementProxy *this);\n  const ActorUniqueID *(__fastcall *getUniqueID)(IActorMovementProxy *this);\n  ActorRuntimeID *(__fastcall *getRuntimeID)(IActorMovementProxy *this, ActorRuntimeID *result);\n  AABB *(__fastcall *getHandleWaterAABB)(IActorMovementProxy *this, AABB *result);\n  BlockPos *(__fastcall *getBlockPosCurrentlyStandingOn)(IActorMovementProxy *this, BlockPos *result, IActorMovementProxy *);\n  void (__fastcall *blockOnStandOn)(IActorMovementProxy *this, const Block *, const BlockPos *);\n  bool (__fastcall *_containsSneakCollisionShapes)(IActorMovementProxy *this, const AABB *);\n  void (__fastcall *move)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *moveBBs)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *checkFallDamage)(IActorMovementProxy *this, float, bool);\n  void (__fastcall *onBounceStarted)(IActorMovementProxy *this, const BlockPos *, const Block *);\n  void (__fastcall *updatePrevPosRot)(IActorMovementProxy *this);\n  void (__fastcall *sendActorMove)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *_teleportTo)(IActorMovementProxy *this, const Vec3 *, bool, int, int);\n  Actor *(__fastcall *_getActor)(IActorMovementProxy *this);\n  const Actor *(__fastcall *_getRawActor)(IActorMovementProxy *this);\n  Actor *(__fastcall *_getRawActor)(IActorMovementProxy *this);\n  SynchedActorData *(__fastcall *_getEntityData)(IActorMovementProxy *this);\n  const Vec2 *(__fastcall *_getRotPrev)(IActorMovementProxy *this);\n  void (__fastcall *_setRotPrev)(IActorMovementProxy *this, const Vec2 *);\n  void (__fastcall *_setPreviousPosRot)(IActorMovementProxy *this, const Vec3 *, const Vec2 *);\n  void (__fastcall *_setHasTeleported)(IActorMovementProxy *this, bool);\n  gsl::not_null<BaseAttributeMap *> *(__fastcall *_getAttributes)(IActorMovementProxy *this, gsl::not_null<BaseAttributeMap *> *result);\n  void (__fastcall *_applySnapshot)(IActorMovementProxy *this, const PlayerSnapshot *);\n  std::unique_ptr<PlayerSnapshot> *(__fastcall *_createSnapshot)(IActorMovementProxy *this, std::unique_ptr<PlayerSnapshot> *result);\n  AdvanceFrameResult (__fastcall *_advanceLiveFrame)(IActorMovementProxy *this, const IReplayableActorInput *);\n  bool (__fastcall *isSetWaterSpeed)(IMobMovementProxy *this);\n  float (__fastcall *getWaterSpeed)(IMobMovementProxy *this);\n  bool (__fastcall *isDisableGravityInLiquid)(IMobMovementProxy *this);\n  int (__fastcall *getNoJumpDelay)(IMobMovementProxy *this);\n  void (__fastcall *setNoJumpDelay)(IMobMovementProxy *this, int);\n  bool (__fastcall *isJumping)(IMobMovementProxy *this);\n  void (__fastcall *setJumping)(IMobMovementProxy *this, bool);\n  bool (__fastcall *getJumpVelRedux)(IMobMovementProxy *this);\n  void (__fastcall *setJumpVelRedux)(IMobMovementProxy *this, bool);\n  Vec3 *(__fastcall *getJumpStartPos)(IMobMovementProxy *this, Vec3 *result);\n  void (__fastcall *setJumpStartPos)(IMobMovementProxy *this, const Vec3 *);\n  float (__fastcall *getJumpPower)(IMobMovementProxy *this);\n  int (__fastcall *getJumpTicks)(IMobMovementProxy *this);\n  void (__fastcall *setJumpTicks)(IMobMovementProxy *this, int);\n  void (__fastcall *_endJump)(IMobMovementProxy *this);\n  void (__fastcall *onPlayerJump)(IMobMovementProxy *this, int);\n  float (__fastcall *getSpeed)(IMobMovementProxy *this);\n  void (__fastcall *setSpeed)(IMobMovementProxy *this, float);\n  bool (__fastcall *isSprinting)(IMobMovementProxy *this);\n  void (__fastcall *setSprinting)(IMobMovementProxy *this, bool);\n  bool (__fastcall *discardFriction)(IMobMovementProxy *this);\n  const NavigationComponent *(__fastcall *tryGetNavigationComponent)(IMobMovementProxy *this);\n  float (__fastcall *getTilt)(IMobMovementProxy *this);\n  void (__fastcall *setTilt)(IMobMovementProxy *this, float);\n  bool (__fastcall *_allowAscendingScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *ascendScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *descendScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *ascendLadder)(IMobMovementProxy *this);\n  void (__fastcall *jumpFromGround)(IMobMovementProxy *this);\n  bool (__fastcall *isGliding)(IMobMovementProxy *this);\n  Vec3 *(__fastcall *getLocalMoveVelocity)(IMobMovementProxy *this, Vec3 *result);\n  void (__fastcall *setLocalMoveVelocity)(IMobMovementProxy *this, const Vec3 *);\n  float (__fastcall *getYRotA)(IMobMovementProxy *this);\n  void (__fastcall *setYRotA)(IMobMovementProxy *this, float);\n  bool (__fastcall *useNewAi)(IMobMovementProxy *this);\n  void (__fastcall *newServerAiStep)(IMobMovementProxy *this);\n  void (__fastcall *updateAi)(IMobMovementProxy *this);\n  void (__fastcall *aiStep)(IMobMovementProxy *this);\n  void (__fastcall *updateAttackAnim)(IMobMovementProxy *this);\n  int (__fastcall *getNoActionTime)(IMobMovementProxy *this);\n  void (__fastcall *setNoActionTime)(IMobMovementProxy *this, int);\n  float (__fastcall *getYHeadRot)(IMobMovementProxy *this);\n  void (__fastcall *setYHeadRot)(IMobMovementProxy *this, float);\n  float (__fastcall *getSwimSpeedMultiplier)(IMobMovementProxy *this);\n  void (__fastcall *setSwimSpeedMultiplier)(IMobMovementProxy *this, float);\n  void (__fastcall *pushActors)(IMobMovementProxy *this);\n  void (__fastcall *updateGliding)(IMobMovementProxy *this);\n  void (__fastcall *travel)(IMobMovementProxy *this, float, float, float);\n  void (__fastcall *playJumpSound)(IMobMovementProxy *this);\n  void (__fastcall *emitJumpPreventedEvent)(IMobMovementProxy *this, const BlockPos *);\n  float (__fastcall *getWaterWalkerEnchant)(IMobMovementProxy *this);\n  float (__fastcall *calcGroundFriction)(IMobMovementProxy *this, const Block *, const BlockPos *);\n  float (__fastcall *getFlyingSpeed)(IMobMovementProxy *this);\n  void (__fastcall *setFlyingSpeed)(IMobMovementProxy *this, float);\n  void (__fastcall *applyFinalFriction)(IMobMovementProxy *this, float, bool);\n  bool (__fastcall *shouldApplyWaterGravity)(IMobMovementProxy *this);\n  float (__fastcall *getFrictionModifier)(IMobMovementProxy *this);\n  void (__fastcall *setFrictionModifier)(IMobMovementProxy *this, float);\n  Mob *(__fastcall *_getMob)(IMobMovementProxy *this);\n  float (__fastcall *_getYHeadRotOld)(IMobMovementProxy *this);\n  void (__fastcall *_setYHeadRotOld)(IMobMovementProxy *this, float);\n  MovementInterpolator *(__fastcall *_getInterpolation)(IMobMovementProxy *this);\n  bool (__fastcall *canJump)(IPlayerMovementProxy *this);\n  std::optional<AABB> *(__fastcall *getHead)(IPlayerMovementProxy *this, std::optional<AABB> *result);\n  void (__fastcall *setHead)(IPlayerMovementProxy *this, std::optional<AABB>);\n  std::optional<AABB> *(__fastcall *getOther)(IPlayerMovementProxy *this, std::optional<AABB> *result);\n  void (__fastcall *setOther)(IPlayerMovementProxy *this, std::optional<AABB>);\n  bool (__fastcall *getCamereDeparted)(IPlayerMovementProxy *this);\n  bool (__fastcall *getThirdPersonPerspective)(IPlayerMovementProxy *this);\n  Vec2 *(__fastcall *getRotationToCamera)(IPlayerMovementProxy *this, Vec2 *result);\n  bool (__fastcall *canMove)(IPlayerMovementProxy *this);\n  bool (__fastcall *canButtonJump)(IPlayerMovementProxy *this);\n  bool (__fastcall *canButtonInAir)(IPlayerMovementProxy *this);\n  bool (__fastcall *isSlowedByItemUse)(IPlayerMovementProxy *this);\n  void (__fastcall *startGliding)(IPlayerMovementProxy *this);\n  void (__fastcall *stopGliding)(IPlayerMovementProxy *this);\n  bool (__fastcall *isFlying)(IPlayerMovementProxy *this);\n  bool (__fastcall *isUsingItem)(IPlayerMovementProxy *this);\n  bool (__fastcall *isSleeping)(IPlayerMovementProxy *this);\n  bool (__fastcall *isServerAuthoritativeMovement)(IPlayerMovementProxy *this);\n  bool (__fastcall *isAutoJumping)(IPlayerMovementProxy *this);\n  void (__fastcall *setAutoJumping)(IPlayerMovementProxy *this, bool);\n  bool (__fastcall *isAutoJumpEnabled)(IPlayerMovementProxy *this);\n  bool (__fastcall *wasAutoJumping)(IPlayerMovementProxy *this);\n  void (__fastcall *setWasAutoJumping)(IPlayerMovementProxy *this, bool);\n  bool (__fastcall *isAdventureSettingsAutoJump)(IPlayerMovementProxy *this);\n  void (__fastcall *setHasMoveInput)(IPlayerMovementProxy *this, bool);\n  bool (__fastcall *hasMoveInput)(IPlayerMovementProxy *this);\n  bool (__fastcall *isLocalPlayer)(IPlayerMovementProxy *this);\n  float (__fastcall *getBob)(IPlayerMovementProxy *this);\n  void (__fastcall *setBob)(IPlayerMovementProxy *this, float);\n  float (__fastcall *getLastBob)(IPlayerMovementProxy *this);\n  void (__fastcall *setLastBob)(IPlayerMovementProxy *this, float);\n  void (__fastcall *setLastLookBob)(IPlayerMovementProxy *this, const Vec2 *);\n  Vec2 *(__fastcall *getLookBob)(IPlayerMovementProxy *this, Vec2 *result);\n  void (__fastcall *setLookBob)(IPlayerMovementProxy *this, const Vec2 *);\n  ReplayStateComponent *(__fastcall *tryGetReplayComponent)(IPlayerMovementProxy *this);\n  PlayerActionComponent *(__fastcall *tryGetPlayerActionComponent)(IPlayerMovementProxy *this);\n  const Tick *(__fastcall *getCurrentTick)(IPlayerMovementProxy *this);\n  const IClientInstanceProxy *(__fastcall *getClientInstance)(IPlayerMovementProxy *this);\n  IClientInstanceProxy *(__fastcall *getClientInstance)(IPlayerMovementProxy *this);\n  MoveInputHandler *(__fastcall *getMoveInputHandler)(IPlayerMovementProxy *this);\n  int (__fastcall *getGlidingTicks)(IPlayerMovementProxy *this);\n  InputMode (__fastcall *getInputMode)(IPlayerMovementProxy *this);\n  ClientPlayMode (__fastcall *getPlayMode)(IPlayerMovementProxy *this);\n  float (__fastcall *getVRMoveAdjustAngle)(IPlayerMovementProxy *this);\n  float (__fastcall *getPlayerPaddleForce)(IPlayerMovementProxy *this, Side);\n  void (__fastcall *setPlayerPaddleForce)(IPlayerMovementProxy *this, Side, float);\n  bool (__fastcall *isPaddling)(IPlayerMovementProxy *this, Side);\n  bool (__fastcall *areHandsBusy)(IPlayerMovementProxy *this);\n  void (__fastcall *setHandsBusy)(IPlayerMovementProxy *this, bool);\n  bool (__fastcall *getAbilityBool)(IPlayerMovementProxy *this, AbilitiesIndex);\n  void (__fastcall *setAbilityBool)(IPlayerMovementProxy *this, AbilitiesIndex, bool);\n  float (__fastcall *getAbilityFloat)(IPlayerMovementProxy *this, AbilitiesIndex);\n  void (__fastcall *setAbilityFloat)(IPlayerMovementProxy *this, AbilitiesIndex, float);\n  void (__fastcall *updateClientPlayerInputState)(IPlayerMovementProxy *this);\n  bool (__fastcall *isEmoting)(IPlayerMovementProxy *this);\n  void (__fastcall *setEmotingStatus)(IPlayerMovementProxy *this, bool);\n  void (__fastcall *setEmotePlayedEndedEarly)(IPlayerMovementProxy *this, bool);\n  void (__fastcall *fireEventPersonaEmotePlayed)(IPlayerMovementProxy *this);\n  void (__fastcall *sendPacket)(IPlayerMovementProxy *this, RiderJumpPacket *);\n  void (__fastcall *sendPacket)(IPlayerMovementProxy *this, PlayerActionPacket *);\n  void (__fastcall *sendAdventureSettingsPacket)(IPlayerMovementProxy *this);\n  bool (__fastcall *isArmorFlyEnabled)(IPlayerMovementProxy *this);\n  void (__fastcall *setJumpRidingScale)(IPlayerMovementProxy *this, float);\n  float (__fastcall *getJumpRidingScale)(IPlayerMovementProxy *this);\n  void (__fastcall *registerFramewiseActionOrStop)(IPlayerMovementProxy *this);\n  LoadingState (__fastcall *getLoadingState)(IPlayerMovementProxy *this);\n  void (__fastcall *setCurrentLocalMoveVelocity)(IPlayerMovementProxy *this, const Vec2 *);\n  void (__fastcall *setLastPos)(IPlayerMovementProxy *this, const Vec3 *);\n  Vec3 *(__fastcall *getLastPos)(IPlayerMovementProxy *this, Vec3 *result);\n  void (__fastcall *setLastDelta)(IPlayerMovementProxy *this, const Vec3 *);\n  Vec3 *(__fastcall *getLastDelta)(IPlayerMovementProxy *this, Vec3 *result);\n  void (__fastcall *sendPlayerInput)(IPlayerMovementProxy *this);\n  void (__fastcall *sendInput)(IPlayerMovementProxy *this);\n  void (__fastcall *sendClientAuthInput)(IPlayerMovementProxy *this);\n  bool (__fastcall *shouldSendPosition)(IPlayerMovementProxy *this);\n  void (__fastcall *sendPosition)(IPlayerMovementProxy *this);\n  void (__fastcall *checkMovementStats)(IPlayerMovementProxy *this, const Vec3 *);\n  void (__fastcall *sendPlayerMove)(IPlayerMovementProxy *this);\n  bool (__fastcall *checkMaterial)(IPlayerMovementProxy *this, const AABB *, MaterialType);\n  bool (__fastcall *checkNeedAutoJump)(IPlayerMovementProxy *this, float, float);\n  Player *(__fastcall *_getPlayer)(IPlayerMovementProxy *this);\n  void (__fastcall *_setPositionMode)(IPlayerMovementProxy *this, int);\n  void (__fastcall *_onMovePlayerPacketNormal)(IPlayerMovementProxy *this, const Vec3 *, const Vec2 *, float);\n  void (__fastcall *_resetPos)(IPlayerMovementProxy *this, bool);\n  const std::vector<MobEffectInstance> *(__fastcall *_getAllEffects)(IPlayerMovementProxy *this);\n  Vec2 *(__fastcall *_getCurrentLocalMoveVelocity)(IPlayerMovementProxy *this, Vec2 *result);\n  const Abilities *(__fastcall *_getAbilities)(IPlayerMovementProxy *this);\n  const AdventureSettings *(__fastcall *_getAdventureSettings)(IPlayerMovementProxy *this);\n};\n\n")])])]),o("h3",{attrs:{id:"directmobmovementproxy-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#directmobmovementproxy-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("DirectMobMovementProxy_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ DirectMobMovementProxy_vtbl\n{\n  void (__fastcall *~IActorMovementProxy)(IActorMovementProxy *this);\n  float (__fastcall *getGravity)(IActorMovementProxy *this);\n  float (__fastcall *getLevelGravity)(IActorMovementProxy *this);\n  bool (__fastcall *isRiding)(IActorMovementProxy *this);\n  bool (__fastcall *isClientSide)(IActorMovementProxy *this);\n  bool (__fastcall *isCreative)(IActorMovementProxy *this);\n  bool (__fastcall *isInWater)(IActorMovementProxy *this);\n  bool (__fastcall *isInLava)(IActorMovementProxy *this);\n  bool (__fastcall *isInScaffolding)(IActorMovementProxy *this);\n  bool (__fastcall *isOverScaffolding)(IActorMovementProxy *this);\n  bool (__fastcall *isSwimming)(IActorMovementProxy *this);\n  bool (__fastcall *isImmersedInWater)(IActorMovementProxy *this);\n  bool (__fastcall *onClimbableBlock)(IActorMovementProxy *this);\n  bool (__fastcall *onHoverableBlock)(IActorMovementProxy *this);\n  bool (__fastcall *isHeadInWater)(IActorMovementProxy *this);\n  bool (__fastcall *canBeginOrContinueClimbingLadder)(IActorMovementProxy *this);\n  bool (__fastcall *isSwimmer)(IActorMovementProxy *this);\n  bool (__fastcall *isImmobile)(IActorMovementProxy *this);\n  bool (__fastcall *isControlledByLocalInstance)(IActorMovementProxy *this);\n  bool (__fastcall *hasTeleported)(IActorMovementProxy *this);\n  bool (__fastcall *usesOneWayCollision)(IActorMovementProxy *this);\n  bool (__fastcall *isStuckInCollider)(IActorMovementProxy *this);\n  void (__fastcall *setStuckInCollider)(IActorMovementProxy *this, bool);\n  bool (__fastcall *isStuckItem)(IActorMovementProxy *this);\n  const std::vector<AABB> *(__fastcall *getOnewayPhysicsBlocks)(IActorMovementProxy *this);\n  bool (__fastcall *wasPenetratingLastFrame)(IActorMovementProxy *this);\n  void (__fastcall *setWasPenetratingLastFrame)(IActorMovementProxy *this, bool);\n  bool (__fastcall *isPrimaryLocalPlayer)(IActorMovementProxy *this);\n  const std::vector<AABB> *(__fastcall *getSubAABBs)(IActorMovementProxy *this);\n  void (__fastcall *setSubAABBs)(IActorMovementProxy *this, const std::vector<AABB> *);\n  bool (__fastcall *isStackable)(IActorMovementProxy *this);\n  void (__fastcall *testForEntityStacking)(IActorMovementProxy *this, const AABB *, std::vector<AABB> *);\n  bool (__fastcall *getCollidableMobNear)(IActorMovementProxy *this);\n  void (__fastcall *setCollidableMobNear)(IActorMovementProxy *this, bool);\n  void (__fastcall *testForCollidableMobs)(IActorMovementProxy *this, const AABB *, std::vector<AABB> *);\n  float (__fastcall *getWalkDist)(IActorMovementProxy *this);\n  void (__fastcall *setWalkDist)(IActorMovementProxy *this, float);\n  bool (__fastcall *isOnGround)(IActorMovementProxy *this);\n  void (__fastcall *setOnGround)(IActorMovementProxy *this, bool);\n  bool (__fastcall *wasOnGround)(IActorMovementProxy *this);\n  void (__fastcall *setWasOnGround)(IActorMovementProxy *this, bool);\n  int (__fastcall *getHealth)(IActorMovementProxy *this);\n  bool (__fastcall *getHorizontalCollision)(IActorMovementProxy *this);\n  void (__fastcall *setHorizontalCollision)(IActorMovementProxy *this, bool);\n  bool (__fastcall *getVerticalCollision)(IActorMovementProxy *this);\n  void (__fastcall *setVerticalCollision)(IActorMovementProxy *this, bool);\n  bool (__fastcall *getCollision)(IActorMovementProxy *this);\n  void (__fastcall *setCollision)(IActorMovementProxy *this, bool);\n  float (__fastcall *getUserDefineMaxAutoStep)(IActorMovementProxy *this);\n  float (__fastcall *getMaxAutoStep)(IActorMovementProxy *this);\n  bool (__fastcall *isFree)(IActorMovementProxy *this, const Vec3 *);\n  float (__fastcall *getHeightOffset)(IActorMovementProxy *this);\n  Vec2 *(__fastcall *getSlideOffset)(IActorMovementProxy *this, Vec2 *result);\n  void (__fastcall *setSlideOffset)(IActorMovementProxy *this, const Vec2 *);\n  void (__fastcall *setTerrainSurfaceOffset)(IActorMovementProxy *this, float);\n  const Vec3 *(__fastcall *getBlockMovementSlowdownMultiplier)(IActorMovementProxy *this);\n  void (__fastcall *setBlockMovementSlowdownMultiplier)(IActorMovementProxy *this, const Vec3 *);\n  float (__fastcall *getCurrentSwimAmount)(IActorMovementProxy *this);\n  const WaterMovementComponent *(__fastcall *tryGetWaterMovementComponent)(IActorMovementProxy *this);\n  const AttributeInstance *(__fastcall *getAttribute)(IActorMovementProxy *this, const Attribute *);\n  bool (__fastcall *hasEffect)(IActorMovementProxy *this, const MobEffect *);\n  const MobEffectInstance *(__fastcall *getEffect)(IActorMovementProxy *this, const MobEffect *);\n  int (__fastcall *getActiveEffectCount)(IActorMovementProxy *this);\n  const SynchedActorData *(__fastcall *getEntityData)(IActorMovementProxy *this);\n  void (__fastcall *setStatusFlag)(IActorMovementProxy *this, ActorFlags, bool);\n  bool (__fastcall *getStatusFlag)(IActorMovementProxy *this, ActorFlags);\n  bool (__fastcall *hasCategory)(IActorMovementProxy *this, ActorCategory);\n  bool (__fastcall *isType)(IActorMovementProxy *this, ActorType);\n  Vec3 *(__fastcall *getPosition)(IActorMovementProxy *this, Vec3 *result);\n  void (__fastcall *setPosition)(IActorMovementProxy *this, const Vec3 *);\n  Vec2 *(__fastcall *getRotation)(IActorMovementProxy *this, Vec2 *result);\n  void (__fastcall *setRotation)(IActorMovementProxy *this, const Vec2 *);\n  const StateVectorComponent *(__fastcall *getStateVectorComponent)(IActorMovementProxy *this);\n  StateVectorComponent *(__fastcall *getStateVectorComponentNonConst)(IActorMovementProxy *this);\n  const AABBShapeComponent *(__fastcall *getAABBShapeComponent)(IActorMovementProxy *this);\n  AABBShapeComponent *(__fastcall *getAABBShapeComponentNonConst)(IActorMovementProxy *this);\n  void (__fastcall *setFallDistance)(IActorMovementProxy *this, float);\n  bool (__fastcall *isSneaking)(IActorMovementProxy *this);\n  void (__fastcall *setSneaking)(IActorMovementProxy *this, bool);\n  Vec3 *(__fastcall *getHeadLookVector)(IActorMovementProxy *this, Vec3 *result, float);\n  Vec3 *(__fastcall *getViewVector)(IActorMovementProxy *this, Vec3 *result, float);\n  const BlockSource *(__fastcall *getRegion)(IActorMovementProxy *this);\n  BlockSource *(__fastcall *getRegion)(IActorMovementProxy *this);\n  std::vector<AABB> *(__fastcall *fetchCollisionShapes)(IActorMovementProxy *this, const AABB *, float *, bool, IActorMovementProxy *);\n  const std::vector<std::shared_ptr<IActorMovementProxy>> *(__fastcall *fetchEntities)(IActorMovementProxy *this, const IActorMovementProxy *, const AABB *);\n  bool (__fastcall *hasRegion)(IActorMovementProxy *this);\n  IActorMovementProxy *(__fastcall *getRide)(IActorMovementProxy *this);\n  bool (__fastcall *isWASDControlled)(IActorMovementProxy *this);\n  int (__fastcall *getControllingSeat)(IActorMovementProxy *this);\n  int (__fastcall *getRiderIndex)(IActorMovementProxy *this, const IActorMovementProxy *);\n  IBoatMovementProxy *(__fastcall *tryAsBoat)(IActorMovementProxy *this);\n  IMobMovementProxy *(__fastcall *tryAsMob)(IActorMovementProxy *this);\n  IPlayerMovementProxy *(__fastcall *tryAsPlayer)(IActorMovementProxy *this);\n  const std::vector<ActorUniqueID> *(__fastcall *getRiderIDs)(IActorMovementProxy *this);\n  const ActorUniqueID *(__fastcall *getUniqueID)(IActorMovementProxy *this);\n  ActorRuntimeID *(__fastcall *getRuntimeID)(IActorMovementProxy *this, ActorRuntimeID *result);\n  AABB *(__fastcall *getHandleWaterAABB)(IActorMovementProxy *this, AABB *result);\n  BlockPos *(__fastcall *getBlockPosCurrentlyStandingOn)(IActorMovementProxy *this, BlockPos *result, IActorMovementProxy *);\n  void (__fastcall *blockOnStandOn)(IActorMovementProxy *this, const Block *, const BlockPos *);\n  bool (__fastcall *_containsSneakCollisionShapes)(IActorMovementProxy *this, const AABB *);\n  void (__fastcall *move)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *moveBBs)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *checkFallDamage)(IActorMovementProxy *this, float, bool);\n  void (__fastcall *onBounceStarted)(IActorMovementProxy *this, const BlockPos *, const Block *);\n  void (__fastcall *updatePrevPosRot)(IActorMovementProxy *this);\n  void (__fastcall *sendActorMove)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *_teleportTo)(IActorMovementProxy *this, const Vec3 *, bool, int, int);\n  Actor *(__fastcall *_getActor)(IActorMovementProxy *this);\n  const Actor *(__fastcall *_getRawActor)(IActorMovementProxy *this);\n  Actor *(__fastcall *_getRawActor)(IActorMovementProxy *this);\n  SynchedActorData *(__fastcall *_getEntityData)(IActorMovementProxy *this);\n  const Vec2 *(__fastcall *_getRotPrev)(IActorMovementProxy *this);\n  void (__fastcall *_setRotPrev)(IActorMovementProxy *this, const Vec2 *);\n  void (__fastcall *_setPreviousPosRot)(IActorMovementProxy *this, const Vec3 *, const Vec2 *);\n  void (__fastcall *_setHasTeleported)(IActorMovementProxy *this, bool);\n  gsl::not_null<BaseAttributeMap *> *(__fastcall *_getAttributes)(IActorMovementProxy *this, gsl::not_null<BaseAttributeMap *> *result);\n  void (__fastcall *_applySnapshot)(IActorMovementProxy *this, const PlayerSnapshot *);\n  std::unique_ptr<PlayerSnapshot> *(__fastcall *_createSnapshot)(IActorMovementProxy *this, std::unique_ptr<PlayerSnapshot> *result);\n  AdvanceFrameResult (__fastcall *_advanceLiveFrame)(IActorMovementProxy *this, const IReplayableActorInput *);\n  bool (__fastcall *isSetWaterSpeed)(IMobMovementProxy *this);\n  float (__fastcall *getWaterSpeed)(IMobMovementProxy *this);\n  bool (__fastcall *isDisableGravityInLiquid)(IMobMovementProxy *this);\n  int (__fastcall *getNoJumpDelay)(IMobMovementProxy *this);\n  void (__fastcall *setNoJumpDelay)(IMobMovementProxy *this, int);\n  bool (__fastcall *isJumping)(IMobMovementProxy *this);\n  void (__fastcall *setJumping)(IMobMovementProxy *this, bool);\n  bool (__fastcall *getJumpVelRedux)(IMobMovementProxy *this);\n  void (__fastcall *setJumpVelRedux)(IMobMovementProxy *this, bool);\n  Vec3 *(__fastcall *getJumpStartPos)(IMobMovementProxy *this, Vec3 *result);\n  void (__fastcall *setJumpStartPos)(IMobMovementProxy *this, const Vec3 *);\n  float (__fastcall *getJumpPower)(IMobMovementProxy *this);\n  int (__fastcall *getJumpTicks)(IMobMovementProxy *this);\n  void (__fastcall *setJumpTicks)(IMobMovementProxy *this, int);\n  void (__fastcall *_endJump)(IMobMovementProxy *this);\n  void (__fastcall *onPlayerJump)(IMobMovementProxy *this, int);\n  float (__fastcall *getSpeed)(IMobMovementProxy *this);\n  void (__fastcall *setSpeed)(IMobMovementProxy *this, float);\n  bool (__fastcall *isSprinting)(IMobMovementProxy *this);\n  void (__fastcall *setSprinting)(IMobMovementProxy *this, bool);\n  bool (__fastcall *discardFriction)(IMobMovementProxy *this);\n  const NavigationComponent *(__fastcall *tryGetNavigationComponent)(IMobMovementProxy *this);\n  float (__fastcall *getTilt)(IMobMovementProxy *this);\n  void (__fastcall *setTilt)(IMobMovementProxy *this, float);\n  bool (__fastcall *_allowAscendingScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *ascendScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *descendScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *ascendLadder)(IMobMovementProxy *this);\n  void (__fastcall *jumpFromGround)(IMobMovementProxy *this);\n  bool (__fastcall *isGliding)(IMobMovementProxy *this);\n  Vec3 *(__fastcall *getLocalMoveVelocity)(IMobMovementProxy *this, Vec3 *result);\n  void (__fastcall *setLocalMoveVelocity)(IMobMovementProxy *this, const Vec3 *);\n  float (__fastcall *getYRotA)(IMobMovementProxy *this);\n  void (__fastcall *setYRotA)(IMobMovementProxy *this, float);\n  bool (__fastcall *useNewAi)(IMobMovementProxy *this);\n  void (__fastcall *newServerAiStep)(IMobMovementProxy *this);\n  void (__fastcall *updateAi)(IMobMovementProxy *this);\n  void (__fastcall *aiStep)(IMobMovementProxy *this);\n  void (__fastcall *updateAttackAnim)(IMobMovementProxy *this);\n  int (__fastcall *getNoActionTime)(IMobMovementProxy *this);\n  void (__fastcall *setNoActionTime)(IMobMovementProxy *this, int);\n  float (__fastcall *getYHeadRot)(IMobMovementProxy *this);\n  void (__fastcall *setYHeadRot)(IMobMovementProxy *this, float);\n  float (__fastcall *getSwimSpeedMultiplier)(IMobMovementProxy *this);\n  void (__fastcall *setSwimSpeedMultiplier)(IMobMovementProxy *this, float);\n  void (__fastcall *pushActors)(IMobMovementProxy *this);\n  void (__fastcall *updateGliding)(IMobMovementProxy *this);\n  void (__fastcall *travel)(IMobMovementProxy *this, float, float, float);\n  void (__fastcall *playJumpSound)(IMobMovementProxy *this);\n  void (__fastcall *emitJumpPreventedEvent)(IMobMovementProxy *this, const BlockPos *);\n  float (__fastcall *getWaterWalkerEnchant)(IMobMovementProxy *this);\n  float (__fastcall *calcGroundFriction)(IMobMovementProxy *this, const Block *, const BlockPos *);\n  float (__fastcall *getFlyingSpeed)(IMobMovementProxy *this);\n  void (__fastcall *setFlyingSpeed)(IMobMovementProxy *this, float);\n  void (__fastcall *applyFinalFriction)(IMobMovementProxy *this, float, bool);\n  bool (__fastcall *shouldApplyWaterGravity)(IMobMovementProxy *this);\n  float (__fastcall *getFrictionModifier)(IMobMovementProxy *this);\n  void (__fastcall *setFrictionModifier)(IMobMovementProxy *this, float);\n  Mob *(__fastcall *_getMob)(IMobMovementProxy *this);\n  float (__fastcall *_getYHeadRotOld)(IMobMovementProxy *this);\n  void (__fastcall *_setYHeadRotOld)(IMobMovementProxy *this, float);\n  MovementInterpolator *(__fastcall *_getInterpolation)(IMobMovementProxy *this);\n};\n\n")])])]),o("h3",{attrs:{id:"directplayermovementproxy-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#directplayermovementproxy-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("DirectPlayerMovementProxy_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ DirectPlayerMovementProxy_vtbl\n{\n  void (__fastcall *~IActorMovementProxy)(IActorMovementProxy *this);\n  float (__fastcall *getGravity)(IActorMovementProxy *this);\n  float (__fastcall *getLevelGravity)(IActorMovementProxy *this);\n  bool (__fastcall *isRiding)(IActorMovementProxy *this);\n  bool (__fastcall *isClientSide)(IActorMovementProxy *this);\n  bool (__fastcall *isCreative)(IActorMovementProxy *this);\n  bool (__fastcall *isInWater)(IActorMovementProxy *this);\n  bool (__fastcall *isInLava)(IActorMovementProxy *this);\n  bool (__fastcall *isInScaffolding)(IActorMovementProxy *this);\n  bool (__fastcall *isOverScaffolding)(IActorMovementProxy *this);\n  bool (__fastcall *isSwimming)(IActorMovementProxy *this);\n  bool (__fastcall *isImmersedInWater)(IActorMovementProxy *this);\n  bool (__fastcall *onClimbableBlock)(IActorMovementProxy *this);\n  bool (__fastcall *onHoverableBlock)(IActorMovementProxy *this);\n  bool (__fastcall *isHeadInWater)(IActorMovementProxy *this);\n  bool (__fastcall *canBeginOrContinueClimbingLadder)(IActorMovementProxy *this);\n  bool (__fastcall *isSwimmer)(IActorMovementProxy *this);\n  bool (__fastcall *isImmobile)(IActorMovementProxy *this);\n  bool (__fastcall *isControlledByLocalInstance)(IActorMovementProxy *this);\n  bool (__fastcall *hasTeleported)(IActorMovementProxy *this);\n  bool (__fastcall *usesOneWayCollision)(IActorMovementProxy *this);\n  bool (__fastcall *isStuckInCollider)(IActorMovementProxy *this);\n  void (__fastcall *setStuckInCollider)(IActorMovementProxy *this, bool);\n  bool (__fastcall *isStuckItem)(IActorMovementProxy *this);\n  const std::vector<AABB> *(__fastcall *getOnewayPhysicsBlocks)(IActorMovementProxy *this);\n  bool (__fastcall *wasPenetratingLastFrame)(IActorMovementProxy *this);\n  void (__fastcall *setWasPenetratingLastFrame)(IActorMovementProxy *this, bool);\n  bool (__fastcall *isPrimaryLocalPlayer)(IActorMovementProxy *this);\n  const std::vector<AABB> *(__fastcall *getSubAABBs)(IActorMovementProxy *this);\n  void (__fastcall *setSubAABBs)(IActorMovementProxy *this, const std::vector<AABB> *);\n  bool (__fastcall *isStackable)(IActorMovementProxy *this);\n  void (__fastcall *testForEntityStacking)(IActorMovementProxy *this, const AABB *, std::vector<AABB> *);\n  bool (__fastcall *getCollidableMobNear)(IActorMovementProxy *this);\n  void (__fastcall *setCollidableMobNear)(IActorMovementProxy *this, bool);\n  void (__fastcall *testForCollidableMobs)(IActorMovementProxy *this, const AABB *, std::vector<AABB> *);\n  float (__fastcall *getWalkDist)(IActorMovementProxy *this);\n  void (__fastcall *setWalkDist)(IActorMovementProxy *this, float);\n  bool (__fastcall *isOnGround)(IActorMovementProxy *this);\n  void (__fastcall *setOnGround)(IActorMovementProxy *this, bool);\n  bool (__fastcall *wasOnGround)(IActorMovementProxy *this);\n  void (__fastcall *setWasOnGround)(IActorMovementProxy *this, bool);\n  int (__fastcall *getHealth)(IActorMovementProxy *this);\n  bool (__fastcall *getHorizontalCollision)(IActorMovementProxy *this);\n  void (__fastcall *setHorizontalCollision)(IActorMovementProxy *this, bool);\n  bool (__fastcall *getVerticalCollision)(IActorMovementProxy *this);\n  void (__fastcall *setVerticalCollision)(IActorMovementProxy *this, bool);\n  bool (__fastcall *getCollision)(IActorMovementProxy *this);\n  void (__fastcall *setCollision)(IActorMovementProxy *this, bool);\n  float (__fastcall *getUserDefineMaxAutoStep)(IActorMovementProxy *this);\n  float (__fastcall *getMaxAutoStep)(IActorMovementProxy *this);\n  bool (__fastcall *isFree)(IActorMovementProxy *this, const Vec3 *);\n  float (__fastcall *getHeightOffset)(IActorMovementProxy *this);\n  Vec2 *(__fastcall *getSlideOffset)(IActorMovementProxy *this, Vec2 *result);\n  void (__fastcall *setSlideOffset)(IActorMovementProxy *this, const Vec2 *);\n  void (__fastcall *setTerrainSurfaceOffset)(IActorMovementProxy *this, float);\n  const Vec3 *(__fastcall *getBlockMovementSlowdownMultiplier)(IActorMovementProxy *this);\n  void (__fastcall *setBlockMovementSlowdownMultiplier)(IActorMovementProxy *this, const Vec3 *);\n  float (__fastcall *getCurrentSwimAmount)(IActorMovementProxy *this);\n  const WaterMovementComponent *(__fastcall *tryGetWaterMovementComponent)(IActorMovementProxy *this);\n  const AttributeInstance *(__fastcall *getAttribute)(IActorMovementProxy *this, const Attribute *);\n  bool (__fastcall *hasEffect)(IActorMovementProxy *this, const MobEffect *);\n  const MobEffectInstance *(__fastcall *getEffect)(IActorMovementProxy *this, const MobEffect *);\n  int (__fastcall *getActiveEffectCount)(IActorMovementProxy *this);\n  const SynchedActorData *(__fastcall *getEntityData)(IActorMovementProxy *this);\n  void (__fastcall *setStatusFlag)(IActorMovementProxy *this, ActorFlags, bool);\n  bool (__fastcall *getStatusFlag)(IActorMovementProxy *this, ActorFlags);\n  bool (__fastcall *hasCategory)(IActorMovementProxy *this, ActorCategory);\n  bool (__fastcall *isType)(IActorMovementProxy *this, ActorType);\n  Vec3 *(__fastcall *getPosition)(IActorMovementProxy *this, Vec3 *result);\n  void (__fastcall *setPosition)(IActorMovementProxy *this, const Vec3 *);\n  Vec2 *(__fastcall *getRotation)(IActorMovementProxy *this, Vec2 *result);\n  void (__fastcall *setRotation)(IActorMovementProxy *this, const Vec2 *);\n  const StateVectorComponent *(__fastcall *getStateVectorComponent)(IActorMovementProxy *this);\n  StateVectorComponent *(__fastcall *getStateVectorComponentNonConst)(IActorMovementProxy *this);\n  const AABBShapeComponent *(__fastcall *getAABBShapeComponent)(IActorMovementProxy *this);\n  AABBShapeComponent *(__fastcall *getAABBShapeComponentNonConst)(IActorMovementProxy *this);\n  void (__fastcall *setFallDistance)(IActorMovementProxy *this, float);\n  bool (__fastcall *isSneaking)(IActorMovementProxy *this);\n  void (__fastcall *setSneaking)(IActorMovementProxy *this, bool);\n  Vec3 *(__fastcall *getHeadLookVector)(IActorMovementProxy *this, Vec3 *result, float);\n  Vec3 *(__fastcall *getViewVector)(IActorMovementProxy *this, Vec3 *result, float);\n  const BlockSource *(__fastcall *getRegion)(IActorMovementProxy *this);\n  BlockSource *(__fastcall *getRegion)(IActorMovementProxy *this);\n  std::vector<AABB> *(__fastcall *fetchCollisionShapes)(IActorMovementProxy *this, const AABB *, float *, bool, IActorMovementProxy *);\n  const std::vector<std::shared_ptr<IActorMovementProxy>> *(__fastcall *fetchEntities)(IActorMovementProxy *this, const IActorMovementProxy *, const AABB *);\n  bool (__fastcall *hasRegion)(IActorMovementProxy *this);\n  IActorMovementProxy *(__fastcall *getRide)(IActorMovementProxy *this);\n  bool (__fastcall *isWASDControlled)(IActorMovementProxy *this);\n  int (__fastcall *getControllingSeat)(IActorMovementProxy *this);\n  int (__fastcall *getRiderIndex)(IActorMovementProxy *this, const IActorMovementProxy *);\n  IBoatMovementProxy *(__fastcall *tryAsBoat)(IActorMovementProxy *this);\n  IMobMovementProxy *(__fastcall *tryAsMob)(IActorMovementProxy *this);\n  IPlayerMovementProxy *(__fastcall *tryAsPlayer)(IActorMovementProxy *this);\n  const std::vector<ActorUniqueID> *(__fastcall *getRiderIDs)(IActorMovementProxy *this);\n  const ActorUniqueID *(__fastcall *getUniqueID)(IActorMovementProxy *this);\n  ActorRuntimeID *(__fastcall *getRuntimeID)(IActorMovementProxy *this, ActorRuntimeID *result);\n  AABB *(__fastcall *getHandleWaterAABB)(IActorMovementProxy *this, AABB *result);\n  BlockPos *(__fastcall *getBlockPosCurrentlyStandingOn)(IActorMovementProxy *this, BlockPos *result, IActorMovementProxy *);\n  void (__fastcall *blockOnStandOn)(IActorMovementProxy *this, const Block *, const BlockPos *);\n  bool (__fastcall *_containsSneakCollisionShapes)(IActorMovementProxy *this, const AABB *);\n  void (__fastcall *move)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *moveBBs)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *checkFallDamage)(IActorMovementProxy *this, float, bool);\n  void (__fastcall *onBounceStarted)(IActorMovementProxy *this, const BlockPos *, const Block *);\n  void (__fastcall *updatePrevPosRot)(IActorMovementProxy *this);\n  void (__fastcall *sendActorMove)(IActorMovementProxy *this, const Vec3 *);\n  void (__fastcall *_teleportTo)(IActorMovementProxy *this, const Vec3 *, bool, int, int);\n  Actor *(__fastcall *_getActor)(IActorMovementProxy *this);\n  const Actor *(__fastcall *_getRawActor)(IActorMovementProxy *this);\n  Actor *(__fastcall *_getRawActor)(IActorMovementProxy *this);\n  SynchedActorData *(__fastcall *_getEntityData)(IActorMovementProxy *this);\n  const Vec2 *(__fastcall *_getRotPrev)(IActorMovementProxy *this);\n  void (__fastcall *_setRotPrev)(IActorMovementProxy *this, const Vec2 *);\n  void (__fastcall *_setPreviousPosRot)(IActorMovementProxy *this, const Vec3 *, const Vec2 *);\n  void (__fastcall *_setHasTeleported)(IActorMovementProxy *this, bool);\n  gsl::not_null<BaseAttributeMap *> *(__fastcall *_getAttributes)(IActorMovementProxy *this, gsl::not_null<BaseAttributeMap *> *result);\n  void (__fastcall *_applySnapshot)(IActorMovementProxy *this, const PlayerSnapshot *);\n  std::unique_ptr<PlayerSnapshot> *(__fastcall *_createSnapshot)(IActorMovementProxy *this, std::unique_ptr<PlayerSnapshot> *result);\n  AdvanceFrameResult (__fastcall *_advanceLiveFrame)(IActorMovementProxy *this, const IReplayableActorInput *);\n  bool (__fastcall *isSetWaterSpeed)(IMobMovementProxy *this);\n  float (__fastcall *getWaterSpeed)(IMobMovementProxy *this);\n  bool (__fastcall *isDisableGravityInLiquid)(IMobMovementProxy *this);\n  int (__fastcall *getNoJumpDelay)(IMobMovementProxy *this);\n  void (__fastcall *setNoJumpDelay)(IMobMovementProxy *this, int);\n  bool (__fastcall *isJumping)(IMobMovementProxy *this);\n  void (__fastcall *setJumping)(IMobMovementProxy *this, bool);\n  bool (__fastcall *getJumpVelRedux)(IMobMovementProxy *this);\n  void (__fastcall *setJumpVelRedux)(IMobMovementProxy *this, bool);\n  Vec3 *(__fastcall *getJumpStartPos)(IMobMovementProxy *this, Vec3 *result);\n  void (__fastcall *setJumpStartPos)(IMobMovementProxy *this, const Vec3 *);\n  float (__fastcall *getJumpPower)(IMobMovementProxy *this);\n  int (__fastcall *getJumpTicks)(IMobMovementProxy *this);\n  void (__fastcall *setJumpTicks)(IMobMovementProxy *this, int);\n  void (__fastcall *_endJump)(IMobMovementProxy *this);\n  void (__fastcall *onPlayerJump)(IMobMovementProxy *this, int);\n  float (__fastcall *getSpeed)(IMobMovementProxy *this);\n  void (__fastcall *setSpeed)(IMobMovementProxy *this, float);\n  bool (__fastcall *isSprinting)(IMobMovementProxy *this);\n  void (__fastcall *setSprinting)(IMobMovementProxy *this, bool);\n  bool (__fastcall *discardFriction)(IMobMovementProxy *this);\n  const NavigationComponent *(__fastcall *tryGetNavigationComponent)(IMobMovementProxy *this);\n  float (__fastcall *getTilt)(IMobMovementProxy *this);\n  void (__fastcall *setTilt)(IMobMovementProxy *this, float);\n  bool (__fastcall *_allowAscendingScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *ascendScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *descendScaffolding)(IMobMovementProxy *this);\n  void (__fastcall *ascendLadder)(IMobMovementProxy *this);\n  void (__fastcall *jumpFromGround)(IMobMovementProxy *this);\n  bool (__fastcall *isGliding)(IMobMovementProxy *this);\n  Vec3 *(__fastcall *getLocalMoveVelocity)(IMobMovementProxy *this, Vec3 *result);\n  void (__fastcall *setLocalMoveVelocity)(IMobMovementProxy *this, const Vec3 *);\n  float (__fastcall *getYRotA)(IMobMovementProxy *this);\n  void (__fastcall *setYRotA)(IMobMovementProxy *this, float);\n  bool (__fastcall *useNewAi)(IMobMovementProxy *this);\n  void (__fastcall *newServerAiStep)(IMobMovementProxy *this);\n  void (__fastcall *updateAi)(IMobMovementProxy *this);\n  void (__fastcall *aiStep)(IMobMovementProxy *this);\n  void (__fastcall *updateAttackAnim)(IMobMovementProxy *this);\n  int (__fastcall *getNoActionTime)(IMobMovementProxy *this);\n  void (__fastcall *setNoActionTime)(IMobMovementProxy *this, int);\n  float (__fastcall *getYHeadRot)(IMobMovementProxy *this);\n  void (__fastcall *setYHeadRot)(IMobMovementProxy *this, float);\n  float (__fastcall *getSwimSpeedMultiplier)(IMobMovementProxy *this);\n  void (__fastcall *setSwimSpeedMultiplier)(IMobMovementProxy *this, float);\n  void (__fastcall *pushActors)(IMobMovementProxy *this);\n  void (__fastcall *updateGliding)(IMobMovementProxy *this);\n  void (__fastcall *travel)(IMobMovementProxy *this, float, float, float);\n  void (__fastcall *playJumpSound)(IMobMovementProxy *this);\n  void (__fastcall *emitJumpPreventedEvent)(IMobMovementProxy *this, const BlockPos *);\n  float (__fastcall *getWaterWalkerEnchant)(IMobMovementProxy *this);\n  float (__fastcall *calcGroundFriction)(IMobMovementProxy *this, const Block *, const BlockPos *);\n  float (__fastcall *getFlyingSpeed)(IMobMovementProxy *this);\n  void (__fastcall *setFlyingSpeed)(IMobMovementProxy *this, float);\n  void (__fastcall *applyFinalFriction)(IMobMovementProxy *this, float, bool);\n  bool (__fastcall *shouldApplyWaterGravity)(IMobMovementProxy *this);\n  float (__fastcall *getFrictionModifier)(IMobMovementProxy *this);\n  void (__fastcall *setFrictionModifier)(IMobMovementProxy *this, float);\n  Mob *(__fastcall *_getMob)(IMobMovementProxy *this);\n  float (__fastcall *_getYHeadRotOld)(IMobMovementProxy *this);\n  void (__fastcall *_setYHeadRotOld)(IMobMovementProxy *this, float);\n  MovementInterpolator *(__fastcall *_getInterpolation)(IMobMovementProxy *this);\n  bool (__fastcall *canJump)(IPlayerMovementProxy *this);\n  std::optional<AABB> *(__fastcall *getHead)(IPlayerMovementProxy *this, std::optional<AABB> *result);\n  void (__fastcall *setHead)(IPlayerMovementProxy *this, std::optional<AABB>);\n  std::optional<AABB> *(__fastcall *getOther)(IPlayerMovementProxy *this, std::optional<AABB> *result);\n  void (__fastcall *setOther)(IPlayerMovementProxy *this, std::optional<AABB>);\n  bool (__fastcall *getCamereDeparted)(IPlayerMovementProxy *this);\n  bool (__fastcall *getThirdPersonPerspective)(IPlayerMovementProxy *this);\n  Vec2 *(__fastcall *getRotationToCamera)(IPlayerMovementProxy *this, Vec2 *result);\n  bool (__fastcall *canMove)(IPlayerMovementProxy *this);\n  bool (__fastcall *canButtonJump)(IPlayerMovementProxy *this);\n  bool (__fastcall *canButtonInAir)(IPlayerMovementProxy *this);\n  bool (__fastcall *isSlowedByItemUse)(IPlayerMovementProxy *this);\n  void (__fastcall *startGliding)(IPlayerMovementProxy *this);\n  void (__fastcall *stopGliding)(IPlayerMovementProxy *this);\n  bool (__fastcall *isFlying)(IPlayerMovementProxy *this);\n  bool (__fastcall *isUsingItem)(IPlayerMovementProxy *this);\n  bool (__fastcall *isSleeping)(IPlayerMovementProxy *this);\n  bool (__fastcall *isServerAuthoritativeMovement)(IPlayerMovementProxy *this);\n  bool (__fastcall *isAutoJumping)(IPlayerMovementProxy *this);\n  void (__fastcall *setAutoJumping)(IPlayerMovementProxy *this, bool);\n  bool (__fastcall *isAutoJumpEnabled)(IPlayerMovementProxy *this);\n  bool (__fastcall *wasAutoJumping)(IPlayerMovementProxy *this);\n  void (__fastcall *setWasAutoJumping)(IPlayerMovementProxy *this, bool);\n  bool (__fastcall *isAdventureSettingsAutoJump)(IPlayerMovementProxy *this);\n  void (__fastcall *setHasMoveInput)(IPlayerMovementProxy *this, bool);\n  bool (__fastcall *hasMoveInput)(IPlayerMovementProxy *this);\n  bool (__fastcall *isLocalPlayer)(IPlayerMovementProxy *this);\n  float (__fastcall *getBob)(IPlayerMovementProxy *this);\n  void (__fastcall *setBob)(IPlayerMovementProxy *this, float);\n  float (__fastcall *getLastBob)(IPlayerMovementProxy *this);\n  void (__fastcall *setLastBob)(IPlayerMovementProxy *this, float);\n  void (__fastcall *setLastLookBob)(IPlayerMovementProxy *this, const Vec2 *);\n  Vec2 *(__fastcall *getLookBob)(IPlayerMovementProxy *this, Vec2 *result);\n  void (__fastcall *setLookBob)(IPlayerMovementProxy *this, const Vec2 *);\n  ReplayStateComponent *(__fastcall *tryGetReplayComponent)(IPlayerMovementProxy *this);\n  PlayerActionComponent *(__fastcall *tryGetPlayerActionComponent)(IPlayerMovementProxy *this);\n  const Tick *(__fastcall *getCurrentTick)(IPlayerMovementProxy *this);\n  const IClientInstanceProxy *(__fastcall *getClientInstance)(IPlayerMovementProxy *this);\n  IClientInstanceProxy *(__fastcall *getClientInstance)(IPlayerMovementProxy *this);\n  MoveInputHandler *(__fastcall *getMoveInputHandler)(IPlayerMovementProxy *this);\n  int (__fastcall *getGlidingTicks)(IPlayerMovementProxy *this);\n  InputMode (__fastcall *getInputMode)(IPlayerMovementProxy *this);\n  ClientPlayMode (__fastcall *getPlayMode)(IPlayerMovementProxy *this);\n  float (__fastcall *getVRMoveAdjustAngle)(IPlayerMovementProxy *this);\n  float (__fastcall *getPlayerPaddleForce)(IPlayerMovementProxy *this, Side);\n  void (__fastcall *setPlayerPaddleForce)(IPlayerMovementProxy *this, Side, float);\n  bool (__fastcall *isPaddling)(IPlayerMovementProxy *this, Side);\n  bool (__fastcall *areHandsBusy)(IPlayerMovementProxy *this);\n  void (__fastcall *setHandsBusy)(IPlayerMovementProxy *this, bool);\n  bool (__fastcall *getAbilityBool)(IPlayerMovementProxy *this, AbilitiesIndex);\n  void (__fastcall *setAbilityBool)(IPlayerMovementProxy *this, AbilitiesIndex, bool);\n  float (__fastcall *getAbilityFloat)(IPlayerMovementProxy *this, AbilitiesIndex);\n  void (__fastcall *setAbilityFloat)(IPlayerMovementProxy *this, AbilitiesIndex, float);\n  void (__fastcall *updateClientPlayerInputState)(IPlayerMovementProxy *this);\n  bool (__fastcall *isEmoting)(IPlayerMovementProxy *this);\n  void (__fastcall *setEmotingStatus)(IPlayerMovementProxy *this, bool);\n  void (__fastcall *setEmotePlayedEndedEarly)(IPlayerMovementProxy *this, bool);\n  void (__fastcall *fireEventPersonaEmotePlayed)(IPlayerMovementProxy *this);\n  void (__fastcall *sendPacket)(IPlayerMovementProxy *this, RiderJumpPacket *);\n  void (__fastcall *sendPacket)(IPlayerMovementProxy *this, PlayerActionPacket *);\n  void (__fastcall *sendAdventureSettingsPacket)(IPlayerMovementProxy *this);\n  bool (__fastcall *isArmorFlyEnabled)(IPlayerMovementProxy *this);\n  void (__fastcall *setJumpRidingScale)(IPlayerMovementProxy *this, float);\n  float (__fastcall *getJumpRidingScale)(IPlayerMovementProxy *this);\n  void (__fastcall *registerFramewiseActionOrStop)(IPlayerMovementProxy *this);\n  LoadingState (__fastcall *getLoadingState)(IPlayerMovementProxy *this);\n  void (__fastcall *setCurrentLocalMoveVelocity)(IPlayerMovementProxy *this, const Vec2 *);\n  void (__fastcall *setLastPos)(IPlayerMovementProxy *this, const Vec3 *);\n  Vec3 *(__fastcall *getLastPos)(IPlayerMovementProxy *this, Vec3 *result);\n  void (__fastcall *setLastDelta)(IPlayerMovementProxy *this, const Vec3 *);\n  Vec3 *(__fastcall *getLastDelta)(IPlayerMovementProxy *this, Vec3 *result);\n  void (__fastcall *sendPlayerInput)(IPlayerMovementProxy *this);\n  void (__fastcall *sendInput)(IPlayerMovementProxy *this);\n  void (__fastcall *sendClientAuthInput)(IPlayerMovementProxy *this);\n  bool (__fastcall *shouldSendPosition)(IPlayerMovementProxy *this);\n  void (__fastcall *sendPosition)(IPlayerMovementProxy *this);\n  void (__fastcall *checkMovementStats)(IPlayerMovementProxy *this, const Vec3 *);\n  void (__fastcall *sendPlayerMove)(IPlayerMovementProxy *this);\n  bool (__fastcall *checkMaterial)(IPlayerMovementProxy *this, const AABB *, MaterialType);\n  bool (__fastcall *checkNeedAutoJump)(IPlayerMovementProxy *this, float, float);\n  Player *(__fastcall *_getPlayer)(IPlayerMovementProxy *this);\n  void (__fastcall *_setPositionMode)(IPlayerMovementProxy *this, int);\n  void (__fastcall *_onMovePlayerPacketNormal)(IPlayerMovementProxy *this, const Vec3 *, const Vec2 *, float);\n  void (__fastcall *_resetPos)(IPlayerMovementProxy *this, bool);\n  const std::vector<MobEffectInstance> *(__fastcall *_getAllEffects)(IPlayerMovementProxy *this);\n  Vec2 *(__fastcall *_getCurrentLocalMoveVelocity)(IPlayerMovementProxy *this, Vec2 *result);\n  const Abilities *(__fastcall *_getAbilities)(IPlayerMovementProxy *this);\n  const AdventureSettings *(__fastcall *_getAdventureSettings)(IPlayerMovementProxy *this);\n};\n\n")])])]),o("h3",{attrs:{id:"dispenserblockactor-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dispenserblockactor-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("DispenserBlockActor_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ DispenserBlockActor_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n  int (__fastcall *getRandomSlot)(DispenserBlockActor *this);\n};\n\n")])])]),o("h3",{attrs:{id:"dolphin-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dolphin-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("Dolphin_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ Dolphin_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n};\n\n")])])]),o("h3",{attrs:{id:"dropperblockactor-vtbl"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#dropperblockactor-vtbl"}},[e._v("#")]),e._v(" "),o("code",[e._v("DropperBlockActor_vtbl")])]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("struct /*VFT*/ DropperBlockActor_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n  int (__fastcall *getRandomSlot)(DispenserBlockActor *this);\n};\n\n")])])])])}),[],!1,null,null,null);o.default=r.exports}}]);