(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{470:function(e,t,r){"use strict";r.r(t);var n=r(27),l=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"x"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#x"}},[e._v("#")]),e._v(" X")]),e._v(" "),t("h3",{attrs:{id:"xtime"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xtime"}},[e._v("#")]),e._v(" "),t("code",[e._v("xtime")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Offset")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Name")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("0")]),e._v(" "),t("td",[e._v("(8) "),t("code",[e._v("__int64")])]),e._v(" "),t("td",[e._v("sec")])]),e._v(" "),t("tr",[t("td",[e._v("8")]),e._v(" "),t("td",[e._v("(4) "),t("code",[e._v("int")])]),e._v(" "),t("td",[e._v("nsec")])])])]),e._v(" "),t("h3",{attrs:{id:"xforgegameversion"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xforgegameversion"}},[e._v("#")]),e._v(" "),t("code",[e._v("XforgeGameVersion")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Offset")]),e._v(" "),t("th",[e._v("Type")]),e._v(" "),t("th",[e._v("Name")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("0")]),e._v(" "),t("td",[e._v("(20) "),t("code",[e._v("unsigned int[5]")])]),e._v(" "),t("td",[e._v("mDigit")])]),e._v(" "),t("tr",[t("td",[e._v("24")]),e._v(" "),t("td",[e._v("(32) "),t("code",[e._v("std::string")])]),e._v(" "),t("td",[e._v("mString")])])])]),e._v(" "),t("h3",{attrs:{id:"xmldomdocumentevents-vtbl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xmldomdocumentevents-vtbl"}},[e._v("#")]),e._v(" "),t("code",[e._v("XMLDOMDocumentEvents_vtbl")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct /*VFT*/ XMLDOMDocumentEvents_vtbl\n{\n  HRESULT (__fastcall *QueryInterface)(IUnknown *this, const _GUID *, void **);\n  unsigned int (__fastcall *AddRef)(IUnknown *this);\n  unsigned int (__fastcall *Release)(IUnknown *this);\n  HRESULT (__fastcall *GetTypeInfoCount)(IDispatch *this, unsigned int *);\n  HRESULT (__fastcall *GetTypeInfo)(IDispatch *this, unsigned int, unsigned int, ITypeInfo **);\n  HRESULT (__fastcall *GetIDsOfNames)(IDispatch *this, const _GUID *, wchar_t **, unsigned int, unsigned int, int *);\n  HRESULT (__fastcall *Invoke)(IDispatch *this, int, const _GUID *, unsigned int, unsigned __int16, tagDISPPARAMS *, tagVARIANT *, tagEXCEPINFO *, unsigned int *);\n};\n\n")])])]),t("h3",{attrs:{id:"xmldomdocumentevents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xmldomdocumentevents"}},[e._v("#")]),e._v(" "),t("code",[e._v("XMLDOMDocumentEvents")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XMLDOMDocumentEvents : IDispatch\n{\n};\n\n")])])]),t("h3",{attrs:{id:"xblconsolesigninscreencontroller"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblconsolesigninscreencontroller"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblConsoleSignInScreenController")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj __declspec(align(8)) XblConsoleSignInScreenController : MinecraftScreenController\n{\n  const std::string mCode;\n  const std::string mUrl;\n  bool mDirty;\n  const bool mLanguageCanBeSmooth;\n};\n\n")])])]),t("h3",{attrs:{id:"xblconsolesigninscreencontroller-vtbl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblconsolesigninscreencontroller-vtbl"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblConsoleSignInScreenController_vtbl")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct /*VFT*/ XblConsoleSignInScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),t("h3",{attrs:{id:"xblconsolesigninsucceededscreencontroller"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblconsolesigninsucceededscreencontroller"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblConsoleSignInSucceededScreenController")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblConsoleSignInSucceededScreenController : MinecraftScreenController\n{\n  Social::UserPicturePath mGamerPicPath;\n  bool mDirty;\n  bool mIsNewAccount;\n  bool mDisplayedPicture;\n  __declspec(align(2)) _BYTE mSignInResult[4];\n  std::function<void __cdecl(enum Social::SignInResult)> mOnLetsPlayCallback;\n};\n\n")])])]),t("h3",{attrs:{id:"xblconsolesigninsucceededscreencontroller-vtbl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblconsolesigninsucceededscreencontroller-vtbl"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblConsoleSignInSucceededScreenController_vtbl")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct /*VFT*/ XblConsoleSignInSucceededScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),t("h3",{attrs:{id:"xblconsolesigninscreencontroller-registerbindings-l2-lambda-2f4a09ef9243b7a441b7ffa6a4522b13"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblconsolesigninscreencontroller-registerbindings-l2-lambda-2f4a09ef9243b7a441b7ffa6a4522b13"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblConsoleSignInScreenController::_registerBindings::__l2::<lambda_2f4a09ef9243b7a441b7ffa6a4522b13>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblConsoleSignInScreenController::_registerBindings::__l2::<lambda_2f4a09ef9243b7a441b7ffa6a4522b13>\n{\n  XblConsoleSignInScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblconsolesigninscreencontroller-registerbindings-l2-lambda-a4660731f1f893bdfcafb3c37f3c74c1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblconsolesigninscreencontroller-registerbindings-l2-lambda-a4660731f1f893bdfcafb3c37f3c74c1"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblConsoleSignInScreenController::_registerBindings::__l2::<lambda_a4660731f1f893bdfcafb3c37f3c74c1>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblConsoleSignInScreenController::_registerBindings::__l2::<lambda_a4660731f1f893bdfcafb3c37f3c74c1>\n{\n  XblConsoleSignInScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblconsolesigninscreencontroller-registerbindings-l2-lambda-faa4ecdd94945fc14413b33f4d36fe2a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblconsolesigninscreencontroller-registerbindings-l2-lambda-faa4ecdd94945fc14413b33f4d36fe2a"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblConsoleSignInScreenController::_registerBindings::__l2::<lambda_faa4ecdd94945fc14413b33f4d36fe2a>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblConsoleSignInScreenController::_registerBindings::__l2::<lambda_faa4ecdd94945fc14413b33f4d36fe2a>\n{\n  XblConsoleSignInScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblconsolesigninscreencontroller-registereventhandlers-l2-lambda-4bd8b8df77ee6e64cdcd96600abfc7a1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblconsolesigninscreencontroller-registereventhandlers-l2-lambda-4bd8b8df77ee6e64cdcd96600abfc7a1"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblConsoleSignInScreenController::_registerEventHandlers::__l2::<lambda_4bd8b8df77ee6e64cdcd96600abfc7a1>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblConsoleSignInScreenController::_registerEventHandlers::__l2::<lambda_4bd8b8df77ee6e64cdcd96600abfc7a1>\n{\n};\n\n")])])]),t("h3",{attrs:{id:"xblfriendfinderscreencontroller"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblfriendfinderscreencontroller"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblFriendFinderScreenController")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj __declspec(align(8)) XblFriendFinderScreenController : MinecraftScreenController\n{\n  std::string mGamertag;\n  bool mSearchingForGamertag;\n  bool mGamertagNotFound;\n  bool mShowPlatformAccounts;\n  bool mDirty;\n};\n\n")])])]),t("h3",{attrs:{id:"xblfriendfinderscreencontroller-vtbl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblfriendfinderscreencontroller-vtbl"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblFriendFinderScreenController_vtbl")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct /*VFT*/ XblFriendFinderScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj __declspec(align(4)) XblReportUserScreenController : MinecraftScreenController\n{\n  const std::string mGamertag;\n  const std::string mXuid;\n  std::string mReportAdditionalText;\n  _BYTE mReportReason[4];\n  bool mReportReasonDropDownActive;\n  bool mReasonSelected;\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-vtbl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-vtbl"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController_vtbl")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct /*VFT*/ XblReportUserScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-registerreportreasondropdown-l6-lambda-88bcef1d7c9e57c41a90343c9670718a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-registerreportreasondropdown-l6-lambda-88bcef1d7c9e57c41a90343c9670718a"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController::_registerReportReasonDropdown::__l6::<lambda_88bcef1d7c9e57c41a90343c9670718a>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblReportUserScreenController::_registerReportReasonDropdown::__l6::<lambda_88bcef1d7c9e57c41a90343c9670718a>\n{\n  std::pair<std::string const ,enum Social::ReportReason> blockTypePair;\n  XblReportUserScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-registerreportreasondropdown-l6-lambda-e4888b90ce259c243405cc142b6a0274"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-registerreportreasondropdown-l6-lambda-e4888b90ce259c243405cc142b6a0274"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController::_registerReportReasonDropdown::__l6::<lambda_e4888b90ce259c243405cc142b6a0274>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblReportUserScreenController::_registerReportReasonDropdown::__l6::<lambda_e4888b90ce259c243405cc142b6a0274>\n{\n  std::pair<std::string const ,enum Social::ReportReason> blockTypePair;\n  XblReportUserScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-registerreportreasondropdown-l2-lambda-b4b1334bb14fefc5f38cc3b84ad43f4a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-registerreportreasondropdown-l2-lambda-b4b1334bb14fefc5f38cc3b84ad43f4a"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController::_registerReportReasonDropdown::__l2::<lambda_b4b1334bb14fefc5f38cc3b84ad43f4a>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblReportUserScreenController::_registerReportReasonDropdown::__l2::<lambda_b4b1334bb14fefc5f38cc3b84ad43f4a>\n{\n  std::vector<std::string> reportReasonLabels;\n  XblReportUserScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-registerreportreasondropdown-l2-lambda-e8c7814febe457a2b6aaf115b255ed1b"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-registerreportreasondropdown-l2-lambda-e8c7814febe457a2b6aaf115b255ed1b"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController::_registerReportReasonDropdown::__l2::<lambda_e8c7814febe457a2b6aaf115b255ed1b>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblReportUserScreenController::_registerReportReasonDropdown::__l2::<lambda_e8c7814febe457a2b6aaf115b255ed1b>\n{\n  XblReportUserScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-registerreportreasondropdown-l2-lambda-f70f0bf90b49a54b217fa4fbac44b339"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-registerreportreasondropdown-l2-lambda-f70f0bf90b49a54b217fa4fbac44b339"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController::_registerReportReasonDropdown::__l2::<lambda_f70f0bf90b49a54b217fa4fbac44b339>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblReportUserScreenController::_registerReportReasonDropdown::__l2::<lambda_f70f0bf90b49a54b217fa4fbac44b339>\n{\n  XblReportUserScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-registerreportreasondropdown-l2-lambda-fd371238e2ca7481dafd38b7db268828"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-registerreportreasondropdown-l2-lambda-fd371238e2ca7481dafd38b7db268828"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController::_registerReportReasonDropdown::__l2::<lambda_fd371238e2ca7481dafd38b7db268828>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblReportUserScreenController::_registerReportReasonDropdown::__l2::<lambda_fd371238e2ca7481dafd38b7db268828>\n{\n  XblReportUserScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-registerreportreasondropdown-l2-lambda-10dbbaa422c82c7b0aaa698b196c8860"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-registerreportreasondropdown-l2-lambda-10dbbaa422c82c7b0aaa698b196c8860"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController::_registerReportReasonDropdown::__l2::<lambda_10dbbaa422c82c7b0aaa698b196c8860>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblReportUserScreenController::_registerReportReasonDropdown::__l2::<lambda_10dbbaa422c82c7b0aaa698b196c8860>\n{\n  const std::string dropdownName;\n  XblReportUserScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-registerbindings-l2-lambda-a0334f7b4aebbfa53ba98b2353bc46a0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-registerbindings-l2-lambda-a0334f7b4aebbfa53ba98b2353bc46a0"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController::_registerBindings::__l2::<lambda_a0334f7b4aebbfa53ba98b2353bc46a0>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblReportUserScreenController::_registerBindings::__l2::<lambda_a0334f7b4aebbfa53ba98b2353bc46a0>\n{\n  XblReportUserScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-registerbindings-l2-lambda-fd0f9d83b563f9139c951c7bab4be1ad"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-registerbindings-l2-lambda-fd0f9d83b563f9139c951c7bab4be1ad"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController::_registerBindings::__l2::<lambda_fd0f9d83b563f9139c951c7bab4be1ad>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblReportUserScreenController::_registerBindings::__l2::<lambda_fd0f9d83b563f9139c951c7bab4be1ad>\n{\n  XblReportUserScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-registereventhandlers-l2-lambda-ae05fab552e586cbc7d5fdc3c1c86c91"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-registereventhandlers-l2-lambda-ae05fab552e586cbc7d5fdc3c1c86c91"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController::_registerEventHandlers::__l2::<lambda_ae05fab552e586cbc7d5fdc3c1c86c91>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblReportUserScreenController::_registerEventHandlers::__l2::<lambda_ae05fab552e586cbc7d5fdc3c1c86c91>\n{\n  XblReportUserScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-registereventhandlers-l2-lambda-d06a57ef78bf8fcf5bf1ef99580152bb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-registereventhandlers-l2-lambda-d06a57ef78bf8fcf5bf1ef99580152bb"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController::_registerEventHandlers::__l2::<lambda_d06a57ef78bf8fcf5bf1ef99580152bb>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblReportUserScreenController::_registerEventHandlers::__l2::<lambda_d06a57ef78bf8fcf5bf1ef99580152bb>\n{\n  XblReportUserScreenController *const __this;\n};\n\n")])])]),t("h3",{attrs:{id:"xblreportuserscreencontroller-registereventhandlers-l2-lambda-d06a57ef78bf8fcf5bf1ef99580152bb-l2-lambda-ca803275f04f4837cd092ef34211a85d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblreportuserscreencontroller-registereventhandlers-l2-lambda-d06a57ef78bf8fcf5bf1ef99580152bb-l2-lambda-ca803275f04f4837cd092ef34211a85d"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblReportUserScreenController::_registerEventHandlers::__l2::<lambda_d06a57ef78bf8fcf5bf1ef99580152bb>::()::__l2::<lambda_ca803275f04f4837cd092ef34211a85d>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblReportUserScreenController::_registerEventHandlers::__l2::<lambda_d06a57ef78bf8fcf5bf1ef99580152bb>::()::__l2::<lambda_ca803275f04f4837cd092ef34211a85d>\n{\n  std::shared_ptr<MinecraftScreenModel> sharedMinecraftScreenModel;\n  std::string gamertag;\n};\n\n")])])]),t("h3",{attrs:{id:"xblfriendfinderscreencontroller-checklinkedprofiles-l2-lambda-b9ae3cfd4bb0a767f638b0615f147218"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblfriendfinderscreencontroller-checklinkedprofiles-l2-lambda-b9ae3cfd4bb0a767f638b0615f147218"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblFriendFinderScreenController::_checkLinkedProfiles::__l2::<lambda_b9ae3cfd4bb0a767f638b0615f147218>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblFriendFinderScreenController::_checkLinkedProfiles::__l2::<lambda_b9ae3cfd4bb0a767f638b0615f147218>\n{\n  std::weak_ptr<XblFriendFinderScreenController> weakThis;\n  const Social::XboxLiveUserProfileData xboxProfile;\n};\n\n")])])]),t("h3",{attrs:{id:"xblfriendfinderscreencontroller-checklinkedprofiles-l2-lambda-b9ae3cfd4bb0a767f638b0615f147218-l8-lambda-bb5c55fccfae49aaefc2ba322ac9d152"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblfriendfinderscreencontroller-checklinkedprofiles-l2-lambda-b9ae3cfd4bb0a767f638b0615f147218-l8-lambda-bb5c55fccfae49aaefc2ba322ac9d152"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblFriendFinderScreenController::_checkLinkedProfiles::__l2::<lambda_b9ae3cfd4bb0a767f638b0615f147218>::()::__l8::<lambda_bb5c55fccfae49aaefc2ba322ac9d152>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblFriendFinderScreenController::_checkLinkedProfiles::__l2::<lambda_b9ae3cfd4bb0a767f638b0615f147218>::()::__l8::<lambda_bb5c55fccfae49aaefc2ba322ac9d152>\n{\n  std::weak_ptr<XblFriendFinderScreenController> weakThis;\n  std::string xuid;\n  std::string uuid;\n};\n\n")])])]),t("h3",{attrs:{id:"xblfriendfinderscreencontroller-registereventhandlers-l2-lambda-de17937c2e542e02b685f02b95117836-l5-lambda-c0feb565d82aad36c0ce654825cdf3b0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xblfriendfinderscreencontroller-registereventhandlers-l2-lambda-de17937c2e542e02b685f02b95117836-l5-lambda-c0feb565d82aad36c0ce654825cdf3b0"}},[e._v("#")]),e._v(" "),t("code",[e._v("XblFriendFinderScreenController::_registerEventHandlers::__l2::<lambda_de17937c2e542e02b685f02b95117836>::()::__l5::<lambda_c0feb565d82aad36c0ce654825cdf3b0>")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XblFriendFinderScreenController::_registerEventHandlers::__l2::<lambda_de17937c2e542e02b685f02b95117836>::()::__l5::<lambda_c0feb565d82aad36c0ce654825cdf3b0>\n{\n  std::weak_ptr<XblFriendFinderScreenController> weakThis;\n};\n\n")])])]),t("h3",{attrs:{id:"xpcommand"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xpcommand"}},[e._v("#")]),e._v(" "),t("code",[e._v("XPCommand")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct __cppobj XPCommand : Command\n{\n  CommandSelector<Player> mTargets;\n  int mXP;\n  int mLevels;\n};\n\n")])])]),t("h3",{attrs:{id:"xpcommand-vtbl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xpcommand-vtbl"}},[e._v("#")]),e._v(" "),t("code",[e._v("XPCommand_vtbl")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct /*VFT*/ XPCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),t("h3",{attrs:{id:"x509-algor-st"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#x509-algor-st"}},[e._v("#")]),e._v(" "),t("code",[e._v("X509_algor_st")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct X509_algor_st\n{\n  asn1_object_st *algorithm;\n  asn1_type_st *parameter;\n};\n\n")])])]),t("h3",{attrs:{id:"x509-info-st"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#x509-info-st"}},[e._v("#")]),e._v(" "),t("code",[e._v("X509_info_st")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct X509_info_st\n{\n  struct x509_st *x509;\n  struct X509_crl_st *crl;\n  private_key_st *x_pkey;\n  evp_cipher_info_st enc_cipher;\n  int enc_len;\n  char *enc_data;\n};\n\n")])])]),t("h3",{attrs:{id:"x509-trust-st"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#x509-trust-st"}},[e._v("#")]),e._v(" "),t("code",[e._v("x509_trust_st")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("struct x509_trust_st\n{\n  int trust;\n  int flags;\n  int (__fastcall *check_trust)(x509_trust_st *, struct x509_st *, int);\n  char *name;\n  int arg1;\n  void *arg2;\n};\n\n")])])])])}),[],!1,null,null,null);t.default=l.exports}}]);