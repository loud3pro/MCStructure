(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{436:function(t,e,a){"use strict";a.r(e);var o=a(27),c=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f"}},[t._v("#")]),t._v(" F")]),t._v(" "),e("h3",{attrs:{id:"featuretoggles-setupdependencies-l2-lambda-1633bc3e3e0c6c838cb408cbbb547288"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featuretoggles-setupdependencies-l2-lambda-1633bc3e3e0c6c838cb408cbbb547288"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureToggles::_setupDependencies::__l2::<lambda_1633bc3e3e0c6c838cb408cbbb547288>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"findtargetnode-findtarget-l2-lambda-97f0b4bbc84cd3d862b3eb5dbefdcf18"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findtargetnode-findtarget-l2-lambda-97f0b4bbc84cd3d862b3eb5dbefdcf18"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindTargetNode::_findTarget::__l2::<lambda_97f0b4bbc84cd3d862b3eb5dbefdcf18>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"frame-t"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frame-t"}},[t._v("#")]),t._v(" "),e("code",[t._v("frame_t")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("_object *")])]),t._v(" "),e("td",[t._v("filename")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("lineno")])])])]),t._v(" "),e("h3",{attrs:{id:"floatrange"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floatrange"}},[t._v("#")]),t._v(" "),e("code",[t._v("FloatRange")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("rangeMin")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("rangeMax")])])])]),t._v(" "),e("h3",{attrs:{id:"fsm-struct"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fsm-struct"}},[t._v("#")]),t._v(" "),e("code",[t._v("fsm_struct")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("__int16")])]),t._v(" "),e("td",[t._v("vocab_size")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("__int16")])]),t._v(" "),e("td",[t._v("num_transitions")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int16 *")])]),t._v(" "),e("td",[t._v("transitions")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-propertiesrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-propertiesrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_PropertiesRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_ModuleRec_ *, const char *, const void *, unsigned __int8)")])]),t._v(" "),e("td",[t._v("set_property")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_ModuleRec_ *, const char *, void *)")])]),t._v(" "),e("td",[t._v("get_property")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-servicedescrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-servicedescrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_ServiceDescRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *")])]),t._v(" "),e("td",[t._v("serv_id")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const void *")])]),t._v(" "),e("td",[t._v("serv_data")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-raccess-guess-rec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-raccess-guess-rec"}},[t._v("#")]),t._v(" "),e("code",[t._v("ft_raccess_guess_rec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_LibraryRec_ *, FT_StreamRec_ *, char *, char **, int *)")])]),t._v(" "),e("td",[t._v("func")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FT_RFork_Rule_")])]),t._v(" "),e("td",[t._v("type")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-palette-data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-palette-data"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Palette_Data_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("unsigned __int16")])]),t._v(" "),e("td",[t._v("num_palettes")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int16 *")])]),t._v(" "),e("td",[t._v("palette_name_ids")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int16 *")])]),t._v(" "),e("td",[t._v("palette_flags")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("unsigned __int16")])]),t._v(" "),e("td",[t._v("num_palette_entries")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int16 *")])]),t._v(" "),e("td",[t._v("palette_entry_name_ids")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-outline"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-outline"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Outline_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("__int16")])]),t._v(" "),e("td",[t._v("n_contours")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("__int16")])]),t._v(" "),e("td",[t._v("n_points")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_Vector_ *")])]),t._v(" "),e("td",[t._v("points")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char *")])]),t._v(" "),e("td",[t._v("tags")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int16 *")])]),t._v(" "),e("td",[t._v("contours")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("flags")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-outline-funcs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-outline-funcs"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Outline_Funcs_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(const FT_Vector_ *, void *)")])]),t._v(" "),e("td",[t._v("move_to")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(const FT_Vector_ *, void *)")])]),t._v(" "),e("td",[t._v("line_to")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(const FT_Vector_ *, const FT_Vector_ *, void *)")])]),t._v(" "),e("td",[t._v("conic_to")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(const FT_Vector_ *, const FT_Vector_ *, const FT_Vector_ *, void *)")])]),t._v(" "),e("td",[t._v("cubic_to")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("shift")])]),t._v(" "),e("tr",[e("td",[t._v("36")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("delta")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-bitmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-bitmap"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Bitmap_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("rows")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("width")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("pitch")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int8 *")])]),t._v(" "),e("td",[t._v("buffer")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("unsigned __int16")])]),t._v(" "),e("td",[t._v("num_grays")])]),t._v(" "),e("tr",[e("td",[t._v("26")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("unsigned __int8")])]),t._v(" "),e("td",[t._v("pixel_mode")])]),t._v(" "),e("tr",[e("td",[t._v("27")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("unsigned __int8")])]),t._v(" "),e("td",[t._v("palette_mode")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void *")])]),t._v(" "),e("td",[t._v("palette")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-color"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-color"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Color_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("unsigned __int8")])]),t._v(" "),e("td",[t._v("blue")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("unsigned __int8")])]),t._v(" "),e("td",[t._v("green")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("unsigned __int8")])]),t._v(" "),e("td",[t._v("red")])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("unsigned __int8")])]),t._v(" "),e("td",[t._v("alpha")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-bdfrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-bdfrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_BDFRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, const char **, const char **)")])]),t._v(" "),e("td",[t._v("get_charset_id")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, const char *, BDF_PropertyRec_ *)")])]),t._v(" "),e("td",[t._v("get_property")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-cmap-classrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-cmap-classrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_CMap_ClassRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("size")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_CMapRec_ *, void *)")])]),t._v(" "),e("td",[t._v("init")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_CMapRec_ *)")])]),t._v(" "),e("td",[t._v("done")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned int (__fastcall *)(FT_CMapRec_ *, unsigned int)")])]),t._v(" "),e("td",[t._v("char_index")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned int (__fastcall *)(FT_CMapRec_ *, unsigned int *)")])]),t._v(" "),e("td",[t._v("char_next")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned int (__fastcall *)(FT_CMapRec_ *, FT_CMapRec_ *, unsigned int, unsigned int)")])]),t._v(" "),e("td",[t._v("char_var_index")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_CMapRec_ *, unsigned int, unsigned int)")])]),t._v(" "),e("td",[t._v("char_var_default")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned int *(__fastcall *)(FT_CMapRec_ *, FT_MemoryRec_ *)")])]),t._v(" "),e("td",[t._v("variant_list")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned int *(__fastcall *)(FT_CMapRec_ *, FT_MemoryRec_ *, unsigned int)")])]),t._v(" "),e("td",[t._v("charvariant_list")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned int *(__fastcall *)(FT_CMapRec_ *, FT_MemoryRec_ *, unsigned int)")])]),t._v(" "),e("td",[t._v("variantchar_list")])])])]),t._v(" "),e("h3",{attrs:{id:"ftc-mrulistclassrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ftc-mrulistclassrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FTC_MruListClassRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("node_size")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int8 (__fastcall *)(FTC_MruNodeRec_ *, void *)")])]),t._v(" "),e("td",[t._v("node_compare")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FTC_MruNodeRec_ *, void *, void *)")])]),t._v(" "),e("td",[t._v("node_init")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FTC_MruNodeRec_ *, void *, void *)")])]),t._v(" "),e("td",[t._v("node_reset")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FTC_MruNodeRec_ *, void *)")])]),t._v(" "),e("td",[t._v("node_done")])])])]),t._v(" "),e("h3",{attrs:{id:"ftc-sfamilyclassrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ftc-sfamilyclassrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FTC_SFamilyClassRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("FTC_MruListClassRec_")])]),t._v(" "),e("td",[t._v("clazz")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned int (__fastcall *)(FTC_FamilyRec_ *, FTC_ManagerRec_ *)")])]),t._v(" "),e("td",[t._v("family_get_count")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FTC_FamilyRec_ *, unsigned int, FTC_ManagerRec_ *, FT_FaceRec_ **)")])]),t._v(" "),e("td",[t._v("family_load_glyph")])])])]),t._v(" "),e("h3",{attrs:{id:"ftc-gcacheclassrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ftc-gcacheclassrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FTC_GCacheClassRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("FTC_CacheClassRec_")])]),t._v(" "),e("td",[t._v("clazz")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const FTC_MruListClassRec_ *")])]),t._v(" "),e("td",[t._v("family_class")])])])]),t._v(" "),e("h3",{attrs:{id:"ftc-cacheclassrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ftc-cacheclassrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FTC_CacheClassRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FTC_NodeRec_ **, void *, FTC_CacheRec_ *)")])]),t._v(" "),e("td",[t._v("node_new")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64 (__fastcall *)(FTC_NodeRec_ *, FTC_CacheRec_ *)")])]),t._v(" "),e("td",[t._v("node_weight")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int8 (__fastcall *)(FTC_NodeRec_ *, void *, FTC_CacheRec_ *, unsigned __int8 *)")])]),t._v(" "),e("td",[t._v("node_compare")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int8 (__fastcall *)(FTC_NodeRec_ *, void *, FTC_CacheRec_ *, unsigned __int8 *)")])]),t._v(" "),e("td",[t._v("node_remove_faceid")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FTC_NodeRec_ *, FTC_CacheRec_ *)")])]),t._v(" "),e("td",[t._v("node_free")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("cache_size")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FTC_CacheRec_ *)")])]),t._v(" "),e("td",[t._v("cache_init")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FTC_CacheRec_ *)")])]),t._v(" "),e("td",[t._v("cache_done")])])])]),t._v(" "),e("h3",{attrs:{id:"ftc-ifamilyclassrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ftc-ifamilyclassrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FTC_IFamilyClassRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("FTC_MruListClassRec_")])]),t._v(" "),e("td",[t._v("clazz")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FTC_FamilyRec_ *, unsigned int, FTC_CacheRec_ *, FT_GlyphRec_ **)")])]),t._v(" "),e("td",[t._v("family_load_glyph")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-glyphdictrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-glyphdictrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_GlyphDictRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, void *, unsigned int)")])]),t._v(" "),e("td",[t._v("get_name")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned int (__fastcall *)(FT_FaceRec_ *, const char *)")])]),t._v(" "),e("td",[t._v("name_index")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-cidrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-cidrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_CIDRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, const char **, const char **, int *)")])]),t._v(" "),e("td",[t._v("get_ros")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned __int8 *)")])]),t._v(" "),e("td",[t._v("get_is_cid")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, unsigned int *)")])]),t._v(" "),e("td",[t._v("get_cid_from_glyph_index")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-psfontnamerec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-psfontnamerec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_PsFontNameRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *(__fastcall *)(FT_FaceRec_ *)")])]),t._v(" "),e("td",[t._v("get_ps_font_name")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-cffloadrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-cffloadrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_CFFLoadRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int16 (__fastcall *)(unsigned int)")])]),t._v(" "),e("td",[t._v("get_standard_encoding")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(CFF_FontRec_ *, CFF_SubFontRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("load_private_dict")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int8 (__fastcall *)(CFF_FDSelectRec_ *, unsigned int)")])]),t._v(" "),e("td",[t._v("fd_select_get")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int8 (__fastcall *)(CFF_BlendRec_ *, unsigned int, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("blend_check_vector")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(CFF_BlendRec_ *, unsigned int, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("blend_build_vector")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-ttcmapsrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-ttcmapsrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_TTCMapsRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_CharMapRec_ *, TT_CMapInfo_ *)")])]),t._v(" "),e("td",[t._v("get_cmap_info")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-metricsvariationsrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-metricsvariationsrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_MetricsVariationsRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("hadvance_adjust")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("lsb_adjust")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("rsb_adjust")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("vadvance_adjust")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("tsb_adjust")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("bsb_adjust")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("vorg_adjust")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_FaceRec_ *)")])]),t._v(" "),e("td",[t._v("metrics_adjust")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-multimastersrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-multimastersrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_MultiMastersRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, FT_Multi_Master_ *)")])]),t._v(" "),e("td",[t._v("get_mm")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("set_mm_design")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("set_mm_blend")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("get_mm_blend")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, FT_MM_Var_ **)")])]),t._v(" "),e("td",[t._v("get_mm_var")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("set_var_design")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("get_var_design")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int)")])]),t._v(" "),e("td",[t._v("set_instance")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("set_mm_weightvector")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int *, int *)")])]),t._v(" "),e("td",[t._v("get_mm_weightvector")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int *, int **, int **, FT_MM_Var_ **)")])]),t._v(" "),e("td",[t._v("get_var_blend")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_FaceRec_ *)")])]),t._v(" "),e("td",[t._v("done_blend")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-psinforec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-psinforec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_PsInfoRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, PS_FontInfoRec_ *)")])]),t._v(" "),e("td",[t._v("ps_get_font_info")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, PS_FontExtraRec_ *)")])]),t._v(" "),e("td",[t._v("ps_get_font_extra")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *)")])]),t._v(" "),e("td",[t._v("ps_has_glyph_names")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, PS_PrivateRec_ *)")])]),t._v(" "),e("td",[t._v("ps_get_font_private")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, PS_Dict_Keys_, unsigned int, void *, int)")])]),t._v(" "),e("td",[t._v("ps_get_font_value")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-frame-field"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-frame-field"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Frame_Field_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("unsigned __int8")])]),t._v(" "),e("td",[t._v("value")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("unsigned __int8")])]),t._v(" "),e("td",[t._v("size")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("unsigned __int16")])]),t._v(" "),e("td",[t._v("offset")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-pfrmetricsrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-pfrmetricsrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_PfrMetricsRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int *, unsigned int *, int *, int *)")])]),t._v(" "),e("td",[t._v("get_metrics")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, unsigned int, FT_Vector_ *)")])]),t._v(" "),e("td",[t._v("get_kerning")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int *)")])]),t._v(" "),e("td",[t._v("get_advance")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-pscmapsrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-pscmapsrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_PsCMapsRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned int (__fastcall *)(const char *)")])]),t._v(" "),e("td",[t._v("unicode_value")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_MemoryRec_ *, PS_UnicodesRec_ *, unsigned int, const char *(__fastcall *)(void *, unsigned int), void (__fastcall *)(void *, const char *), void *)")])]),t._v(" "),e("td",[t._v("unicodes_init")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned int (__fastcall *)(PS_UnicodesRec_ *, unsigned int)")])]),t._v(" "),e("td",[t._v("unicodes_char_index")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned int (__fastcall *)(PS_UnicodesRec_ *, unsigned int *)")])]),t._v(" "),e("td",[t._v("unicodes_char_next")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *(__fastcall *)(unsigned int)")])]),t._v(" "),e("td",[t._v("macintosh_name")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *(__fastcall *)(unsigned int)")])]),t._v(" "),e("td",[t._v("adobe_std_strings")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int16 *")])]),t._v(" "),e("td",[t._v("adobe_std_encoding")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int16 *")])]),t._v(" "),e("td",[t._v("adobe_expert_encoding")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-sfnt-tablerec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-sfnt-tablerec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_SFNT_TableRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, int, unsigned __int8 *, unsigned int *)")])]),t._v(" "),e("td",[t._v("load_table")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void *(__fastcall *)(FT_FaceRec_ *, FT_Sfnt_Tag_)")])]),t._v(" "),e("td",[t._v("get_table")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, unsigned int *, unsigned int *, unsigned int *)")])]),t._v(" "),e("td",[t._v("table_info")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-ttglyfrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-ttglyfrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_TTGlyfRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned int (__fastcall *)(FT_FaceRec_ *, unsigned int, unsigned int *)")])]),t._v(" "),e("td",[t._v("get_location")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-truetypeenginerec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-truetypeenginerec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_TrueTypeEngineRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FT_TrueTypeEngineType_")])]),t._v(" "),e("td",[t._v("engine_type")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-kerningrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-kerningrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_KerningRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, int, int, int *)")])]),t._v(" "),e("td",[t._v("get_track")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-service-winfntrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-service-winfntrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Service_WinFntRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, FT_WinFNT_HeaderRec_ *)")])]),t._v(" "),e("td",[t._v("get_header")])])])]),t._v(" "),e("h3",{attrs:{id:"filedescr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedescr"}},[t._v("#")]),t._v(" "),e("code",[t._v("filedescr")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char *")])]),t._v(" "),e("td",[t._v("suffix")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char *")])]),t._v(" "),e("td",[t._v("mode")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("filetype")])]),t._v(" "),e("td",[t._v("type")])])])]),t._v(" "),e("h3",{attrs:{id:"fogdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(48) "),e("code",[t._v("HashedString")])]),t._v(" "),e("td",[t._v("mIdentifier")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::optional<FogDistanceSetting>")])]),t._v(" "),e("td",[t._v("mDistanceAirSetting")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::optional<FogDistanceSetting>")])]),t._v(" "),e("td",[t._v("mDistanceWeatherSetting")])]),t._v(" "),e("tr",[e("td",[t._v("112")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::optional<FogDistanceSetting>")])]),t._v(" "),e("td",[t._v("mDistanceWaterSetting")])]),t._v(" "),e("tr",[e("td",[t._v("144")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::optional<FogDistanceSetting>")])]),t._v(" "),e("td",[t._v("mDistanceLavaSetting")])]),t._v(" "),e("tr",[e("td",[t._v("176")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::optional<FogDistanceSetting>")])]),t._v(" "),e("td",[t._v("mDistanceLavaResistanceSetting")])]),t._v(" "),e("tr",[e("td",[t._v("208")]),t._v(" "),e("td",[t._v("(20) "),e("code",[t._v("std::optional<FogVolumetricDensitySetting>")])]),t._v(" "),e("td",[t._v("mVolumeDensityAirSetting")])]),t._v(" "),e("tr",[e("td",[t._v("228")]),t._v(" "),e("td",[t._v("(20) "),e("code",[t._v("std::optional<FogVolumetricDensitySetting>")])]),t._v(" "),e("td",[t._v("mVolumeDensityWeatherSetting")])]),t._v(" "),e("tr",[e("td",[t._v("248")]),t._v(" "),e("td",[t._v("(20) "),e("code",[t._v("std::optional<FogVolumetricDensitySetting>")])]),t._v(" "),e("td",[t._v("mVolumeDensityWaterSetting")])]),t._v(" "),e("tr",[e("td",[t._v("268")]),t._v(" "),e("td",[t._v("(20) "),e("code",[t._v("std::optional<FogVolumetricDensitySetting>")])]),t._v(" "),e("td",[t._v("mVolumeDensityLavaSetting")])]),t._v(" "),e("tr",[e("td",[t._v("288")]),t._v(" "),e("td",[t._v("(20) "),e("code",[t._v("std::optional<FogVolumetricDensitySetting>")])]),t._v(" "),e("td",[t._v("mVolumeDensityLavaResistanceSetting")])]),t._v(" "),e("tr",[e("td",[t._v("308")]),t._v(" "),e("td",[t._v("(36) "),e("code",[t._v("std::optional<FogVolumetricCoefficientSetting>")])]),t._v(" "),e("td",[t._v("mVolumeCoefficientAirSetting")])]),t._v(" "),e("tr",[e("td",[t._v("344")]),t._v(" "),e("td",[t._v("(36) "),e("code",[t._v("std::optional<FogVolumetricCoefficientSetting>")])]),t._v(" "),e("td",[t._v("mVolumeCoefficientWaterSetting")])]),t._v(" "),e("tr",[e("td",[t._v("380")]),t._v(" "),e("td",[t._v("(36) "),e("code",[t._v("std::optional<FogVolumetricCoefficientSetting>")])]),t._v(" "),e("td",[t._v("mVolumeCoefficientCloudSetting")])])])]),t._v(" "),e("h3",{attrs:{id:"fogdistancesetting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdistancesetting"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDistanceSetting")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("mce::Color")])]),t._v(" "),e("td",[t._v("mColor")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mStart")])]),t._v(" "),e("tr",[e("td",[t._v("20")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mEnd")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("_BYTE[4]")])]),t._v(" "),e("td",[t._v("mType")])])])]),t._v(" "),e("h3",{attrs:{id:"fogvolumetricdensitysetting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogvolumetricdensitysetting"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogVolumetricDensitySetting")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mMaxDensity")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mMaxDensityHeight")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mZeroDensityHeight")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mUniform")])])])]),t._v(" "),e("h3",{attrs:{id:"fogvolumetriccoefficientsetting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogvolumetriccoefficientsetting"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogVolumetricCoefficientSetting")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("mce::Color")])]),t._v(" "),e("td",[t._v("mScattering")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("mce::Color")])]),t._v(" "),e("td",[t._v("mAbsorption")])])])]),t._v(" "),e("h3",{attrs:{id:"filterparamdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterparamdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterParamDefinition")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FilterParamType")])]),t._v(" "),e("td",[t._v("mType")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FilterParamRequirement")])]),t._v(" "),e("td",[t._v("mRequirement")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mDescription")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(48) "),e("code",[t._v("FilterInput")])]),t._v(" "),e("td",[t._v("mDefault")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("FilterStringMap")])]),t._v(" "),e("td",[t._v("mStringMap")])]),t._v(" "),e("tr",[e("td",[t._v("152")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("FilterParamOption")])]),t._v(" "),e("td",[t._v("mParamOption")])])])]),t._v(" "),e("h3",{attrs:{id:"filterinput"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterinput"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterInput")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FilterParamType")])]),t._v(" "),e("td",[t._v("mType")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mString")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mIValue")])]),t._v(" "),e("tr",[e("td",[t._v("44")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mFValue")])])])]),t._v(" "),e("h3",{attrs:{id:"filterstringmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterstringmap"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterStringMap")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<std::string,FilterInputDefinition>")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-unitvector"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-unitvector"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_UnitVector_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("__int16")])]),t._v(" "),e("td",[t._v("x")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("__int16")])]),t._v(" "),e("td",[t._v("y")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-driver-classrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-driver-classrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Driver_ClassRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(56) "),e("code",[t._v("FT_Module_Class_")])]),t._v(" "),e("td",[t._v("root")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("face_object_size")])]),t._v(" "),e("tr",[e("td",[t._v("60")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("size_object_size")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("slot_object_size")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_StreamRec_ *, FT_FaceRec_ *, int, int, FT_Parameter_ *)")])]),t._v(" "),e("td",[t._v("init_face")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_FaceRec_ *)")])]),t._v(" "),e("td",[t._v("done_face")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_SizeRec_ *)")])]),t._v(" "),e("td",[t._v("init_size")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_SizeRec_ *)")])]),t._v(" "),e("td",[t._v("done_size")])]),t._v(" "),e("tr",[e("td",[t._v("104")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_GlyphSlotRec_ *)")])]),t._v(" "),e("td",[t._v("init_slot")])]),t._v(" "),e("tr",[e("td",[t._v("112")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_GlyphSlotRec_ *)")])]),t._v(" "),e("td",[t._v("done_slot")])]),t._v(" "),e("tr",[e("td",[t._v("120")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_GlyphSlotRec_ *, FT_SizeRec_ *, unsigned int, int)")])]),t._v(" "),e("td",[t._v("load_glyph")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, unsigned int, FT_Vector_ *)")])]),t._v(" "),e("td",[t._v("get_kerning")])]),t._v(" "),e("tr",[e("td",[t._v("136")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, FT_StreamRec_ *)")])]),t._v(" "),e("td",[t._v("attach_file")])]),t._v(" "),e("tr",[e("td",[t._v("144")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_FaceRec_ *, unsigned int, unsigned int, int, int *)")])]),t._v(" "),e("td",[t._v("get_advances")])]),t._v(" "),e("tr",[e("td",[t._v("152")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_SizeRec_ *, FT_Size_RequestRec_ *)")])]),t._v(" "),e("td",[t._v("request_size")])]),t._v(" "),e("tr",[e("td",[t._v("160")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_SizeRec_ *, unsigned int)")])]),t._v(" "),e("td",[t._v("select_size")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-module-class"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-module-class"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Module_Class_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("module_flags")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("module_size")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *")])]),t._v(" "),e("td",[t._v("module_name")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("module_version")])]),t._v(" "),e("tr",[e("td",[t._v("20")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("module_requires")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const void *")])]),t._v(" "),e("td",[t._v("module_interface")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_ModuleRec_ *)")])]),t._v(" "),e("td",[t._v("module_init")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_ModuleRec_ *)")])]),t._v(" "),e("td",[t._v("module_done")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void *(__fastcall *)(FT_ModuleRec_ *, const char *)")])]),t._v(" "),e("td",[t._v("get_interface")])])])]),t._v(" "),e("h3",{attrs:{id:"flameodds"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flameodds"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlameOdds")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mChance")])])])]),t._v(" "),e("h3",{attrs:{id:"fonthandle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fonthandle"}},[t._v("#")]),t._v(" "),e("code",[t._v("FontHandle")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<FontRepository>")])]),t._v(" "),e("td",[t._v("mFontRepository")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<Font>")])]),t._v(" "),e("td",[t._v("mDefaultFont")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("mFontId")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsDummyHandle")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-renderer-class"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-renderer-class"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Renderer_Class_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(56) "),e("code",[t._v("FT_Module_Class_")])]),t._v(" "),e("td",[t._v("root")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FT_Glyph_Format_")])]),t._v(" "),e("td",[t._v("glyph_format")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_RendererRec_ *, FT_GlyphSlotRec_ *, FT_Render_Mode_, const FT_Vector_ *)")])]),t._v(" "),e("td",[t._v("render_glyph")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_RendererRec_ *, FT_GlyphSlotRec_ *, const FT_Matrix_ *, const FT_Vector_ *)")])]),t._v(" "),e("td",[t._v("transform_glyph")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_RendererRec_ *, FT_GlyphSlotRec_ *, FT_BBox_ *)")])]),t._v(" "),e("td",[t._v("get_glyph_cbox")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_RendererRec_ *, unsigned int, void *)")])]),t._v(" "),e("td",[t._v("set_mode")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_Raster_Funcs_ *")])]),t._v(" "),e("td",[t._v("raster_class")])])])]),t._v(" "),e("h3",{attrs:{id:"fileaccesstransforms"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileaccesstransforms"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileAccessTransforms")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FileAccessTransforms_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])])])]),t._v(" "),e("h3",{attrs:{id:"frustum"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frustum"}},[t._v("#")]),t._v(" "),e("code",[t._v("Frustum")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(96) "),e("code",[t._v("glm::tvec4<float,0>[6]")])]),t._v(" "),e("td",[t._v("mFrustumPlanes")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(48) "),e("code",[t._v("FrustumEdges")])]),t._v(" "),e("td",[t._v("mNearClippingPlaneEdges")])]),t._v(" "),e("tr",[e("td",[t._v("144")]),t._v(" "),e("td",[t._v("(48) "),e("code",[t._v("FrustumEdges")])]),t._v(" "),e("td",[t._v("mFarClippingPlaneEdges")])])])]),t._v(" "),e("h3",{attrs:{id:"frustumedges"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frustumedges"}},[t._v("#")]),t._v(" "),e("code",[t._v("FrustumEdges")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("glm::tvec3<float,0>")])]),t._v(" "),e("td",[t._v("topLeft")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("glm::tvec3<float,0>")])]),t._v(" "),e("td",[t._v("topRight")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("glm::tvec3<float,0>")])]),t._v(" "),e("td",[t._v("bottomLeft")])]),t._v(" "),e("tr",[e("td",[t._v("36")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("glm::tvec3<float,0>")])]),t._v(" "),e("td",[t._v("bottomRight")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-raster-funcs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-raster-funcs"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Raster_Funcs_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FT_Glyph_Format_")])]),t._v(" "),e("td",[t._v("glyph_format")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(void *, struct FT_RasterRec_ **)")])]),t._v(" "),e("td",[t._v("raster_new")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(struct FT_RasterRec_ *, unsigned __int8 *, unsigned int)")])]),t._v(" "),e("td",[t._v("raster_reset")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(struct FT_RasterRec_ *, unsigned int, void *)")])]),t._v(" "),e("td",[t._v("raster_set_mode")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(struct FT_RasterRec_ *, const FT_Raster_Params_ *)")])]),t._v(" "),e("td",[t._v("raster_render")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(struct FT_RasterRec_ *)")])]),t._v(" "),e("td",[t._v("raster_done")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-glyph-class"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-glyph-class"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Glyph_Class_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("glyph_size")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FT_Glyph_Format_")])]),t._v(" "),e("td",[t._v("glyph_format")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_GlyphRec_ *, FT_GlyphSlotRec_ *)")])]),t._v(" "),e("td",[t._v("glyph_init")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_GlyphRec_ *)")])]),t._v(" "),e("td",[t._v("glyph_done")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_GlyphRec_ *, FT_GlyphRec_ *)")])]),t._v(" "),e("td",[t._v("glyph_copy")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_GlyphRec_ *, const FT_Matrix_ *, const FT_Vector_ *)")])]),t._v(" "),e("td",[t._v("glyph_transform")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_GlyphRec_ *, FT_BBox_ *)")])]),t._v(" "),e("td",[t._v("glyph_bbox")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_GlyphRec_ *, FT_GlyphSlotRec_ *)")])]),t._v(" "),e("td",[t._v("glyph_prepare")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-autohinter-interfacerec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-autohinter-interfacerec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_AutoHinter_InterfaceRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_AutoHinterRec_ *, FT_FaceRec_ *)")])]),t._v(" "),e("td",[t._v("reset_face")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_AutoHinterRec_ *, FT_FaceRec_ *, void **, int *)")])]),t._v(" "),e("td",[t._v("get_global_hints")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(FT_AutoHinterRec_ *, void *)")])]),t._v(" "),e("td",[t._v("done_global_hints")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(FT_AutoHinterRec_ *, FT_GlyphSlotRec_ *, FT_SizeRec_ *, unsigned int, int)")])]),t._v(" "),e("td",[t._v("load_glyph")])])])]),t._v(" "),e("h3",{attrs:{id:"funcinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#funcinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("FuncInfo")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) ``")]),t._v(" "),e("td",[t._v("magicNumber")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) ``")]),t._v(" "),e("td",[t._v("maxState")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) ``")]),t._v(" "),e("td",[t._v("pUnwindMap")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(4) ``")]),t._v(" "),e("td",[t._v("nTryBlocks")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) ``")]),t._v(" "),e("td",[t._v("pTryBlockMap")])]),t._v(" "),e("tr",[e("td",[t._v("20")]),t._v(" "),e("td",[t._v("(4) ``")]),t._v(" "),e("td",[t._v("nIPMapEntries")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(4) ``")]),t._v(" "),e("td",[t._v("pIPtoStateMap")])]),t._v(" "),e("tr",[e("td",[t._v("28")]),t._v(" "),e("td",[t._v("(4) ``")]),t._v(" "),e("td",[t._v("dispUnwindHelp")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(4) ``")]),t._v(" "),e("td",[t._v("pESTypeList")])]),t._v(" "),e("tr",[e("td",[t._v("36")]),t._v(" "),e("td",[t._v("(4) ``")]),t._v(" "),e("td",[t._v("EHFlags")])])])]),t._v(" "),e("h3",{attrs:{id:"filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-b7919b453013e6c018d3eb2079af3ac9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-b7919b453013e6c018d3eb2079af3ac9"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadManager::downloadFile::__l13::<lambda_0e52f60533a747952835c01f8836253e>::()::__l8::<lambda_b7919b453013e6c018d3eb2079af3ac9>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<FileDownloadManager>")])]),t._v(" "),e("td",[t._v("weak_this")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(Core::Path const &,enum DownloaderResult)>")])]),t._v(" "),e("td",[t._v("onCompleteCallback")])])])]),t._v(" "),e("h3",{attrs:{id:"frameupdatecontext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frameupdatecontext"}},[t._v("#")]),t._v(" "),e("code",[t._v("FrameUpdateContext")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("mce::RenderContext *")])]),t._v(" "),e("td",[t._v("renderContext")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("MinecraftGameplayGraphicsResources *")])]),t._v(" "),e("td",[t._v("minecraftGameplayGraphicsResources")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("mce::TextureGroup *")])]),t._v(" "),e("td",[t._v("textureGroup")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Tessellator *")])]),t._v(" "),e("td",[t._v("tessellator")])])])]),t._v(" "),e("h3",{attrs:{id:"focusmovescreeneventdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focusmovescreeneventdata"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusMoveScreenEventData")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("float[2]")])]),t._v(" "),e("td",[t._v("position")])])])]),t._v(" "),e("h3",{attrs:{id:"font-sheetid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#font-sheetid"}},[t._v("#")]),t._v(" "),e("code",[t._v("Font::SheetId")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const void *")])]),t._v(" "),e("td",[t._v("rawFontPtr")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("index")])])])]),t._v(" "),e("h3",{attrs:{id:"font-textobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#font-textobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("Font::TextObject")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<Font::TextObject::Page>")])]),t._v(" "),e("td",[t._v("mPages")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("mce::Color")])]),t._v(" "),e("td",[t._v("mColor")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mContainsUnicode")])]),t._v(" "),e("tr",[e("td",[t._v("41")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mShadow")])]),t._v(" "),e("tr",[e("td",[t._v("44")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("mce::Color")])]),t._v(" "),e("td",[t._v("mShadowColor")])]),t._v(" "),e("tr",[e("td",[t._v("60")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("glm::tvec2<float,0>")])]),t._v(" "),e("td",[t._v("mShadowOffset")])])])]),t._v(" "),e("h3",{attrs:{id:"fontalias-referencedata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fontalias-referencedata"}},[t._v("#")]),t._v(" "),e("code",[t._v("FontAlias::ReferenceData")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(48) "),e("code",[t._v("FontHandle")])]),t._v(" "),e("td",[t._v("mFontHandle")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mLanguageCode")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::pair<int,int>>")])]),t._v(" "),e("td",[t._v("mIncludedUnicodeRanges")])])])]),t._v(" "),e("h3",{attrs:{id:"fontrepository-loaddefaultfonts-l2-lambda-4f422798d8e19b20911552d15f97b207-l2-lambda-9f7ee64e5f52351a246105fa89b76599"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fontrepository-loaddefaultfonts-l2-lambda-4f422798d8e19b20911552d15f97b207-l2-lambda-9f7ee64e5f52351a246105fa89b76599"}},[t._v("#")]),t._v(" "),e("code",[t._v("FontRepository::loadDefaultFonts::__l2::<lambda_4f422798d8e19b20911552d15f97b207>::()::__l2::<lambda_9f7ee64e5f52351a246105fa89b76599>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FontRepository *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("const std::string")])]),t._v(" "),e("td",[t._v("alias")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<std::shared_ptr<BitmapFont> >")])]),t._v(" "),e("td",[t._v("loadedFont")])])])]),t._v(" "),e("h3",{attrs:{id:"fontrepository-loaddefaultfonts-l2-lambda-7fe000d9f42c358f49b7b7b1aeed026a-l2-lambda-fb53307a4bf33dc8a2da341738d6f3d3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fontrepository-loaddefaultfonts-l2-lambda-7fe000d9f42c358f49b7b7b1aeed026a-l2-lambda-fb53307a4bf33dc8a2da341738d6f3d3"}},[t._v("#")]),t._v(" "),e("code",[t._v("FontRepository::loadDefaultFonts::__l2::<lambda_7fe000d9f42c358f49b7b7b1aeed026a>::()::__l2::<lambda_fb53307a4bf33dc8a2da341738d6f3d3>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FontRepository *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("const std::string")])]),t._v(" "),e("td",[t._v("alias")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<std::shared_ptr<MSDFFont> >")])]),t._v(" "),e("td",[t._v("loadedFont")])])])]),t._v(" "),e("h3",{attrs:{id:"font-glyphquad"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#font-glyphquad"}},[t._v("#")]),t._v(" "),e("code",[t._v("Font::GlyphQuad")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("x")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("y")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("width")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("height")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("ix")])]),t._v(" "),e("tr",[e("td",[t._v("20")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("iy")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("ixb")])]),t._v(" "),e("tr",[e("td",[t._v("28")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("iyb")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("shear")])]),t._v(" "),e("tr",[e("td",[t._v("36")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("mce::Color")])]),t._v(" "),e("td",[t._v("color")])])])]),t._v(" "),e("h3",{attrs:{id:"filechunkinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filechunkinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileChunkInfo")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("chunkID")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("startByte")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("endByte")])])])]),t._v(" "),e("h3",{attrs:{id:"fogcommandsettings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogcommandsettings"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogCommandSettings")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mFogIdentifier")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mUserProvidedId")])])])]),t._v(" "),e("h3",{attrs:{id:"framebuilderinsertterraincommandsforchunks-l2-lambda-c1fa93ce778fd992669707126a079fcb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#framebuilderinsertterraincommandsforchunks-l2-lambda-c1fa93ce778fd992669707126a079fcb"}},[t._v("#")]),t._v(" "),e("code",[t._v("framebuilderInsertTerrainCommandsForChunks::__l2::<lambda_c1fa93ce778fd992669707126a079fcb>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("CommandListQueue *")])]),t._v(" "),e("td",[t._v("commandListQueue")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("const dragon::frameobject::components::ViewSetId")])]),t._v(" "),e("td",[t._v("viewSetId")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const ViewRenderData *")])]),t._v(" "),e("td",[t._v("viewData")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const ChunkRenderObjectCollection *")])]),t._v(" "),e("td",[t._v("chunkState")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<unsigned char,mce::AlignmentHelper::AlignmentAllocator<unsigned char,16> >")])]),t._v(" "),e("td",[t._v("perFrameConstantsMemory")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("const bool")])]),t._v(" "),e("td",[t._v("shouldRenderBarrierBlocks")])]),t._v(" "),e("tr",[e("td",[t._v("57")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("const bool")])]),t._v(" "),e("td",[t._v("shouldRenderStructureVoidBlocks")])])])]),t._v(" "),e("h3",{attrs:{id:"fogmanager-layer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogmanager-layer"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogManager::Layer")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FogManager::LayerType")])]),t._v(" "),e("td",[t._v("mType")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<WeakRefT<SharePtrRefTraits<FogDefinition const > >>")])]),t._v(" "),e("td",[t._v("mDefinitions")])])])]),t._v(" "),e("h3",{attrs:{id:"flipbooktexturedescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flipbooktexturedescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlipbookTextureDescription")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(56) "),e("code",[t._v("ResourceLocation")])]),t._v(" "),e("td",[t._v("resourceLocation")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<int>")])]),t._v(" "),e("td",[t._v("frames")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("replicate")])]),t._v(" "),e("tr",[e("td",[t._v("84")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("ticksPerFrame")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("blend")])]),t._v(" "),e("tr",[e("td",[t._v("92")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("blockVariant")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("tileName")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("tickOnlyOnce")])]),t._v(" "),e("tr",[e("td",[t._v("132")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::optional<int>")])]),t._v(" "),e("td",[t._v("textureVariant")])])])]),t._v(" "),e("h3",{attrs:{id:"flightingservice-fetch-l2-lambda-03023acb2b69c9a5fef635df5c64a11f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingservice-fetch-l2-lambda-03023acb2b69c9a5fef635df5c64a11f"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingService::_fetch::__l2::<lambda_03023acb2b69c9a5fef635df5c64a11f>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<FlightingService>")])]),t._v(" "),e("td",[t._v("weakThis")])])])]),t._v(" "),e("h3",{attrs:{id:"filepickersettings-filedescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filepickersettings-filedescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilePickerSettings::FileDescription")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("Extension")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("Name")])])])]),t._v(" "),e("h3",{attrs:{id:"filterformattedstringcontructor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterformattedstringcontructor"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterFormattedStringContructor")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mFormattedStr")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("const unsigned int")])]),t._v(" "),e("td",[t._v("mTotalSelected")])]),t._v(" "),e("tr",[e("td",[t._v("36")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("mFiltersAddedCount")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("mFilterStringsAdded")])])])]),t._v(" "),e("h3",{attrs:{id:"filearchiver-result"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver-result"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver::Result")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FileArchiver::Outcome")])]),t._v(" "),e("td",[t._v("outcome")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("Core::PathBuffer<std::string >")])]),t._v(" "),e("td",[t._v("fileName")])])])]),t._v(" "),e("h3",{attrs:{id:"fencedringbuffer-core-cpuringbufferallocation-buffer-0-scopedallocation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fencedringbuffer-core-cpuringbufferallocation-buffer-0-scopedallocation"}},[t._v("#")]),t._v(" "),e("code",[t._v("FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::ScopedAllocation")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<Core::CpuRingBufferAllocation_Buffer::Buffer>")])]),t._v(" "),e("td",[t._v("mBuffer")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int64")])]),t._v(" "),e("td",[t._v("mOffset")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int64")])]),t._v(" "),e("td",[t._v("mSize")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int64")])]),t._v(" "),e("td",[t._v("mAlignmentPrefixSize")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int64")])]),t._v(" "),e("td",[t._v("mFenceValue")])])])]),t._v(" "),e("h3",{attrs:{id:"filtergroup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtergroup"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterGroup")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FilterGroup_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FilterGroup::CollectionType")])]),t._v(" "),e("td",[t._v("mCollectionType")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::shared_ptr<FilterGroup>>")])]),t._v(" "),e("td",[t._v("mChildren")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::shared_ptr<FilterTest>>")])]),t._v(" "),e("td",[t._v("mMembers")])])])]),t._v(" "),e("h3",{attrs:{id:"flockingcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flockingcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlockingComponent")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<ActorUniqueID>")])]),t._v(" "),e("td",[t._v("mNeighborhood")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mCenterOfMass")])]),t._v(" "),e("tr",[e("td",[t._v("36")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mGroupVelocity")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mGoalHeading")])]),t._v(" "),e("tr",[e("td",[t._v("60")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mCurrentHeading")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mInWater")])]),t._v(" "),e("tr",[e("td",[t._v("73")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mMatchVariant")])]),t._v(" "),e("tr",[e("td",[t._v("74")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mUseCenterOfMass")])]),t._v(" "),e("tr",[e("td",[t._v("75")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsLeader")])]),t._v(" "),e("tr",[e("td",[t._v("76")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mInFlock")])]),t._v(" "),e("tr",[e("td",[t._v("77")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsEnabled")])]),t._v(" "),e("tr",[e("td",[t._v("78")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasTargetGoal")])]),t._v(" "),e("tr",[e("td",[t._v("79")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mUsingDirection")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mFlockLimit")])]),t._v(" "),e("tr",[e("td",[t._v("84")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mLonerChance")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mGoalWeight")])]),t._v(" "),e("tr",[e("td",[t._v("92")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mInfluenceRadius")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mBreachInfluence")])]),t._v(" "),e("tr",[e("td",[t._v("100")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mSeparationWeight")])]),t._v(" "),e("tr",[e("td",[t._v("104")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mSeparationThreshold")])]),t._v(" "),e("tr",[e("td",[t._v("108")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mCohesionWeight")])]),t._v(" "),e("tr",[e("td",[t._v("112")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mCohesionThreshold")])]),t._v(" "),e("tr",[e("td",[t._v("116")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mInnerCohesionThreshold")])]),t._v(" "),e("tr",[e("td",[t._v("120")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mMinHeight")])]),t._v(" "),e("tr",[e("td",[t._v("124")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mMaxHeight")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mBlockDist")])]),t._v(" "),e("tr",[e("td",[t._v("132")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mBlockWeight")])]),t._v(" "),e("tr",[e("td",[t._v("136")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mOverspeedRequired")])])])]),t._v(" "),e("h3",{attrs:{id:"floattag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floattag"}},[t._v("#")]),t._v(" "),e("code",[t._v("FloatTag")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Tag")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("data")])])])]),t._v(" "),e("h3",{attrs:{id:"featuretoggles-featuretoggle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featuretoggles-featuretoggle"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureToggles::FeatureToggle")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("_BYTE[4]")])]),t._v(" "),e("td",[t._v("featureID")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("_BYTE[4]")])]),t._v(" "),e("td",[t._v("dependencyFeatureID")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<Option>")])]),t._v(" "),e("td",[t._v("option")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(Option &)>")])]),t._v(" "),e("td",[t._v("setup")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(bool &)>")])]),t._v(" "),e("td",[t._v("lock")])])])]),t._v(" "),e("h3",{attrs:{id:"functionmanager-originmapping"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functionmanager-originmapping"}},[t._v("#")]),t._v(" "),e("code",[t._v("FunctionManager::OriginMapping")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<CommandOrigin>")])]),t._v(" "),e("td",[t._v("mOrigin")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("mRefCount")])])])]),t._v(" "),e("h3",{attrs:{id:"fullplayerinventorywrapper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fullplayerinventorywrapper"}},[t._v("#")]),t._v(" "),e("code",[t._v("FullPlayerInventoryWrapper")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("PlayerInventory *")])]),t._v(" "),e("td",[t._v("mPlayerInventory")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("SimpleContainer *")])]),t._v(" "),e("td",[t._v("mArmorInventory")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("SimpleContainer *")])]),t._v(" "),e("td",[t._v("mHandInventory")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("InventoryTransactionManager *")])]),t._v(" "),e("td",[t._v("mTransactionManager")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Player *")])]),t._v(" "),e("td",[t._v("mPlayer")])])])]),t._v(" "),e("h3",{attrs:{id:"filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadManager::downloadFile::__l13::<lambda_0e52f60533a747952835c01f8836253e>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<FileDownloadManager>")])]),t._v(" "),e("td",[t._v("weak_this")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(Core::Path const &,enum DownloaderResult)>")])]),t._v(" "),e("td",[t._v("onCompleteCallback")])])])]),t._v(" "),e("h3",{attrs:{id:"filedownloadmanager-writedata-l2-lambda-6f81f195f94e9beac581973bed159d3c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadmanager-writedata-l2-lambda-6f81f195f94e9beac581973bed159d3c"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadManager::_writeData::__l2::<lambda_6f81f195f94e9beac581973bed159d3c>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<FileDownloadManager>")])]),t._v(" "),e("td",[t._v("weak_this")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("progress")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(unsigned __int64,bool)>")])]),t._v(" "),e("td",[t._v("writeComplete")])])])]),t._v(" "),e("h3",{attrs:{id:"filedownloadmanager-writedata-l2-lambda-e1119d03447226ec2640e6a1b57aad89"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadmanager-writedata-l2-lambda-e1119d03447226ec2640e6a1b57aad89"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadManager::_writeData::__l2::<lambda_e1119d03447226ec2640e6a1b57aad89>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<FileDownloadManager>")])]),t._v(" "),e("td",[t._v("weak_this")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<unsigned char>")])]),t._v(" "),e("td",[t._v("data")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("writeBytes")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("offset")])])])]),t._v(" "),e("h3",{attrs:{id:"fileuploadmanager-uploadfile-l13-lambda-74760951e5721fb9dafc828e7e1ca7c9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager-uploadfile-l13-lambda-74760951e5721fb9dafc828e7e1ca7c9"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager::uploadFile::__l13::<lambda_74760951e5721fb9dafc828e7e1ca7c9>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<FileUploadManager>")])]),t._v(" "),e("td",[t._v("weak_this")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("const std::string")])]),t._v(" "),e("td",[t._v("uploadId")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("autoStartUpload")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("const Json::Value")])]),t._v(" "),e("td",[t._v("uploadOptions")])])])]),t._v(" "),e("h3",{attrs:{id:"fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49-l5-lambda-b942687c99a128d38d4a3acdf5208e9b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49-l5-lambda-b942687c99a128d38d4a3acdf5208e9b"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager::_uploadChunk::__l13::<lambda_beec154458228c4f1efa54daecb2bd49>::()::__l5::<lambda_b942687c99a128d38d4a3acdf5208e9b>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<FileUploadManager>")])]),t._v(" "),e("td",[t._v("weak_this")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("const FileChunkInfo")])]),t._v(" "),e("td",[t._v("chunk")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<unsigned char>")])]),t._v(" "),e("td",[t._v("buffer")])])])]),t._v(" "),e("h3",{attrs:{id:"fileuploadmanager-uploadstream-l2-lambda-704199bdd8ef4b5e4b61022e06e9c849-l5-lambda-159c837b6a142bd3dc90b4a04b18c5b4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager-uploadstream-l2-lambda-704199bdd8ef4b5e4b61022e06e9c849-l5-lambda-159c837b6a142bd3dc90b4a04b18c5b4"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager::_uploadStream::__l2::<lambda_704199bdd8ef4b5e4b61022e06e9c849>::()::__l5::<lambda_159c837b6a142bd3dc90b4a04b18c5b4>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<FileUploadManager>")])]),t._v(" "),e("td",[t._v("weak_this")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("FileUploadManager::_uploadStream::__l2::<lambda_7c32c70c440907d77e4081b7aef620a1>")])]),t._v(" "),e("td",[t._v("fetchStreamDataCallback")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("FileUploadManager::_uploadStream::__l2::<lambda_ab8d111204de64d325c648c9d712e8ea>")])]),t._v(" "),e("td",[t._v("onStreamFinishedCallback")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("boundary")])])])]),t._v(" "),e("h3",{attrs:{id:"fileuploadmanager-uploadstream-l2-lambda-7c32c70c440907d77e4081b7aef620a1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager-uploadstream-l2-lambda-7c32c70c440907d77e4081b7aef620a1"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager::_uploadStream::__l2::<lambda_7c32c70c440907d77e4081b7aef620a1>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<FileUploadManager>")])]),t._v(" "),e("td",[t._v("weak_this")])])])]),t._v(" "),e("h3",{attrs:{id:"fileuploadmanager-uploadstream-l2-lambda-ab8d111204de64d325c648c9d712e8ea"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager-uploadstream-l2-lambda-ab8d111204de64d325c648c9d712e8ea"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager::_uploadStream::__l2::<lambda_ab8d111204de64d325c648c9d712e8ea>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<FileUploadManager>")])]),t._v(" "),e("td",[t._v("weak_this")])])])]),t._v(" "),e("h3",{attrs:{id:"filechunk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filechunk"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileChunk")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<unsigned char>")])]),t._v(" "),e("td",[t._v("data")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("FileChunkInfo")])]),t._v(" "),e("td",[t._v("info")])])])]),t._v(" "),e("h3",{attrs:{id:"fileinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileInfo")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("Core::PathBuffer<std::string >")])]),t._v(" "),e("td",[t._v("filePath")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("fileSize")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("fileHash")])])])]),t._v(" "),e("h3",{attrs:{id:"filtercontext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtercontext"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterContext")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const Actor *")])]),t._v(" "),e("td",[t._v("mHost")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const Actor *")])]),t._v(" "),e("td",[t._v("mSubject")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const VariantParameterList *")])]),t._v(" "),e("td",[t._v("mParams")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const BlockSource *")])]),t._v(" "),e("td",[t._v("mRegion")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const Dimension *")])]),t._v(" "),e("td",[t._v("mDimension")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const Level *")])]),t._v(" "),e("td",[t._v("mLevel")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const Biome *")])]),t._v(" "),e("td",[t._v("mBiome")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("BlockPos")])]),t._v(" "),e("td",[t._v("mPos")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const Block *")])]),t._v(" "),e("td",[t._v("mBlock")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const TagRegistry<IDType<BiomeTagIDType>,IDType<BiomeTagSetIDType> > *")])]),t._v(" "),e("td",[t._v("mTagRegistry")])])])]),t._v(" "),e("h3",{attrs:{id:"filterinputdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterinputdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterInputDefinition")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(48) "),e("code",[t._v("FilterInput")])]),t._v(" "),e("td",[t._v("mInput")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mDescription")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertestdaytime"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestdaytime"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestDaytime")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SimpleBoolFilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertest"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTest")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FilterTest_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("_BYTE[2]")])]),t._v(" "),e("td",[t._v("mSubject")])]),t._v(" "),e("tr",[e("td",[t._v("10")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("FilterOperator")])]),t._v(" "),e("td",[t._v("mOperator")])])])]),t._v(" "),e("h3",{attrs:{id:"filterinputs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterinputs"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterInputs")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("_BYTE[2]")])]),t._v(" "),e("td",[t._v("mSubject")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(48) "),e("code",[t._v("FilterInput")])]),t._v(" "),e("td",[t._v("mDomain")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("FilterOperator")])]),t._v(" "),e("td",[t._v("mOperator")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(48) "),e("code",[t._v("FilterInput")])]),t._v(" "),e("td",[t._v("mValue")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertestdifficulty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestdifficulty"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestDifficulty")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SimpleIntFilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertestgamerule"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestgamerule"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestGameRule")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("FilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mGameRule")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mValue")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertesthourlyclock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertesthourlyclock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestHourlyClock")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SimpleIntFilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mValue")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertestbiome"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestbiome"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestBiome")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SimpleIntFilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertestbiomehastag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestbiomehastag"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestBiomeHasTag")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(80) "),e("code",[t._v("SimpleTagIDFilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertestbiomesnowcovered"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestbiomesnowcovered"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestBiomeSnowCovered")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SimpleBoolFilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertestbiomehumid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestbiomehumid"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestBiomeHumid")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SimpleBoolFilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertesttemperaturetype"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertesttemperaturetype"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestTemperatureType")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SimpleIntFilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertesttemperaturevalue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertesttemperaturevalue"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestTemperatureValue")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SimpleFloatFilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertestbrightness"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestbrightness"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestBrightness")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SimpleFloatFilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertestaltitude"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestaltitude"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestAltitude")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SimpleIntFilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"filtertesthastradesupply"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertesthastradesupply"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestHasTradeSupply")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SimpleBoolFilterTest")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"filteredtransformationattributes-postshoreedgetransformation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filteredtransformationattributes-postshoreedgetransformation"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilteredTransformationAttributes<PostShoreEdgeTransformation>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<PosibleTransformation>")])]),t._v(" "),e("td",[t._v("mTransformations")])])])]),t._v(" "),e("h3",{attrs:{id:"feature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feature"}},[t._v("#")]),t._v(" "),e("code",[t._v("Feature")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("IFeature")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Actor *")])]),t._v(" "),e("td",[t._v("mPlacer")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("WorldChangeTransaction *")])]),t._v(" "),e("td",[t._v("mTransaction")])])])]),t._v(" "),e("h3",{attrs:{id:"filearchiver-archivepack-l2-lambda-e4861c6342045bae76278851b5db2c79"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver-archivepack-l2-lambda-e4861c6342045bae76278851b5db2c79"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver::archivePack::__l2::<lambda_e4861c6342045bae76278851b5db2c79>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FileArchiver *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(FileArchiver::Result &)>")])]),t._v(" "),e("td",[t._v("exportCallback")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("const Core::Path")])]),t._v(" "),e("td",[t._v("path")])]),t._v(" "),e("tr",[e("td",[t._v("104")]),t._v(" "),e("td",[t._v("(1040) "),e("code",[t._v("Core::PathBuffer<Core::StackString<char,1024> >")])]),t._v(" "),e("td",[t._v("outputName")])])])]),t._v(" "),e("h3",{attrs:{id:"filearchiver-archivelevel-l2-lambda-ef06c283a4b2b877a6778581d3ec778e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver-archivelevel-l2-lambda-ef06c283a4b2b877a6778581d3ec778e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver::archiveLevel::__l2::<lambda_ef06c283a4b2b877a6778581d3ec778e>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FileArchiver *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(FileArchiver::Result &)>")])]),t._v(" "),e("td",[t._v("exportCallback")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(1040) "),e("code",[t._v("Core::PathBuffer<Core::StackString<char,1024> >")])]),t._v(" "),e("td",[t._v("outputName")])]),t._v(" "),e("tr",[e("td",[t._v("1112")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("const std::string")])]),t._v(" "),e("td",[t._v("worldId")])]),t._v(" "),e("tr",[e("td",[t._v("1144")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("isBundle")])]),t._v(" "),e("tr",[e("td",[t._v("1152")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("numFiles")])])])]),t._v(" "),e("h3",{attrs:{id:"filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver::archiveLevel::__l2::<lambda_ac943e513845c7fd6e6317395fc32783>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Level *")])]),t._v(" "),e("td",[t._v("level")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FileArchiver *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(1040) "),e("code",[t._v("Core::PathBuffer<Core::StackString<char,1024> >")])]),t._v(" "),e("td",[t._v("outputName")])]),t._v(" "),e("tr",[e("td",[t._v("1056")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("isBundle")])]),t._v(" "),e("tr",[e("td",[t._v("1064")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(FileArchiver::Result &)>")])]),t._v(" "),e("td",[t._v("exportCallback")])]),t._v(" "),e("tr",[e("td",[t._v("1128")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<FileArchiver::Result>")])]),t._v(" "),e("td",[t._v("exportResult")])])])]),t._v(" "),e("h3",{attrs:{id:"filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783-l2-lambda-f3dbac58284b04dc57297a0858a258fd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783-l2-lambda-f3dbac58284b04dc57297a0858a258fd"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver::archiveLevel::__l2::<lambda_ac943e513845c7fd6e6317395fc32783>::()::__l2::<lambda_f3dbac58284b04dc57297a0858a258fd>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FileArchiver *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Level *")])]),t._v(" "),e("td",[t._v("level")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(FileArchiver::Result &)>")])]),t._v(" "),e("td",[t._v("exportCallback")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<FileArchiver::Result>")])]),t._v(" "),e("td",[t._v("exportResult")])])])]),t._v(" "),e("h3",{attrs:{id:"filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783-l2-lambda-70145daf2eda0b02012b6d6f8f2ca40e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver-archivelevel-l2-lambda-ac943e513845c7fd6e6317395fc32783-l2-lambda-70145daf2eda0b02012b6d6f8f2ca40e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver::archiveLevel::__l2::<lambda_ac943e513845c7fd6e6317395fc32783>::()::__l2::<lambda_70145daf2eda0b02012b6d6f8f2ca40e>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Level *")])]),t._v(" "),e("td",[t._v("level")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("numFiles")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FileArchiver *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(1040) "),e("code",[t._v("Core::PathBuffer<Core::StackString<char,1024> >")])]),t._v(" "),e("td",[t._v("outputName")])]),t._v(" "),e("tr",[e("td",[t._v("1064")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("isBundle")])]),t._v(" "),e("tr",[e("td",[t._v("1072")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<FileArchiver::Result>")])]),t._v(" "),e("td",[t._v("exportResult")])])])]),t._v(" "),e("h3",{attrs:{id:"filearchiver-importvanillalevel-l2-lambda-982a8571ec925d774f47b3ea87936fc0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver-importvanillalevel-l2-lambda-982a8571ec925d774f47b3ea87936fc0"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver::_importVanillaLevel::__l2::<lambda_982a8571ec925d774f47b3ea87936fc0>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<FileArchiver>")])]),t._v(" "),e("td",[t._v("weak_this")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<FileArchiver::Result>")])]),t._v(" "),e("td",[t._v("currentResult")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(FileArchiver::Result &)>")])]),t._v(" "),e("td",[t._v("importCallback")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<std::promise<FileArchiver::Result> >")])]),t._v(" "),e("td",[t._v("currentPromise")])])])]),t._v(" "),e("h3",{attrs:{id:"filearchiver-importvanillalevel-l2-lambda-17892f377568356bdd0cc70fc9fbd172"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver-importvanillalevel-l2-lambda-17892f377568356bdd0cc70fc9fbd172"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver::_importVanillaLevel::__l2::<lambda_17892f377568356bdd0cc70fc9fbd172>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<FileArchiver>")])]),t._v(" "),e("td",[t._v("weak_this")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<FileArchiver::Result>")])]),t._v(" "),e("td",[t._v("currentResult")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(1040) "),e("code",[t._v("Core::PathBuffer<Core::StackString<char,1024> >")])]),t._v(" "),e("td",[t._v("archivedWorldFile")])])])]),t._v(" "),e("h3",{attrs:{id:"fancytreetrunk-foliagecoords"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fancytreetrunk-foliagecoords"}},[t._v("#")]),t._v(" "),e("code",[t._v("FancyTreeTrunk::FoliageCoords")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("BlockPos")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mBranchBase")])])])]),t._v(" "),e("h3",{attrs:{id:"flatworldgeneratoroptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flatworldgeneratoroptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlatWorldGeneratorOptions")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mEncodingVersion")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<BlockLayer>")])]),t._v(" "),e("td",[t._v("mBlockLayers")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mBiomeId")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("Json::Value")])]),t._v(" "),e("td",[t._v("mStructureOptions")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mTotalLayers")])])])]),t._v(" "),e("h3",{attrs:{id:"fixedbiomesource"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fixedbiomesource"}},[t._v("#")]),t._v(" "),e("code",[t._v("FixedBiomeSource")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("BiomeSource")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const Biome *")])]),t._v(" "),e("td",[t._v("mFixedBiome")])])])]),t._v(" "),e("h3",{attrs:{id:"foldmeuscreencontroller-setupcallbacksforbooleanoption-l2-lambda-d700cb1b2a11b77f5ca7cb09e25db2b8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-setupcallbacksforbooleanoption-l2-lambda-d700cb1b2a11b77f5ca7cb09e25db2b8"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::setUpCallbacksForBooleanOption::__l2::<lambda_d700cb1b2a11b77f5ca7cb09e25db2b8>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<bool __cdecl(void)>")])]),t._v(" "),e("td",[t._v("getValue")])])])]),t._v(" "),e("h3",{attrs:{id:"fd-set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fd-set"}},[t._v("#")]),t._v(" "),e("code",[t._v("fd_set")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("fd_count")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(512) "),e("code",[t._v("unsigned __int64[64]")])]),t._v(" "),e("td",[t._v("fd_array")])])])]),t._v(" "),e("h3",{attrs:{id:"furnacescreencontrollerproxycallbacks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnacescreencontrollerproxycallbacks"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceScreenControllerProxyCallbacks")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<ContainerController * __cdecl(std::string const &)>")])]),t._v(" "),e("td",[t._v("mGetContainerController")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<int __cdecl(void)>")])]),t._v(" "),e("td",[t._v("mGetBurnProgress")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<int __cdecl(void)>")])]),t._v(" "),e("td",[t._v("mGetLitProgress")])]),t._v(" "),e("tr",[e("td",[t._v("192")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<bool __cdecl(std::string &,int &,int &)>")])]),t._v(" "),e("td",[t._v("mIsFinished")])])])]),t._v(" "),e("h3",{attrs:{id:"flowerfeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flowerfeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlowerFeature")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("Feature")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const Block *")])]),t._v(" "),e("td",[t._v("mBlock")])])])]),t._v(" "),e("h3",{attrs:{id:"fmod-sound"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fmod-sound"}},[t._v("#")]),t._v(" "),e("code",[t._v("FMOD::Sound")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"ft-matrix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-matrix"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Matrix_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("xx")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("xy")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("yx")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("yy")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-vector"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-vector"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Vector_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("x")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("y")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-bbox"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-bbox"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_BBox_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("xMin")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("yMin")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("xMax")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("yMax")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-open-args"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-open-args"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Open_Args_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("flags")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int8 *")])]),t._v(" "),e("td",[t._v("memory_base")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("memory_size")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char *")])]),t._v(" "),e("td",[t._v("pathname")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_StreamRec_ *")])]),t._v(" "),e("td",[t._v("stream")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_ModuleRec_ *")])]),t._v(" "),e("td",[t._v("driver")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("num_params")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_Parameter_ *")])]),t._v(" "),e("td",[t._v("params")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-size-requestrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-size-requestrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Size_RequestRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FT_Size_Request_Type_")])]),t._v(" "),e("td",[t._v("type")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("width")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("height")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("horiResolution")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("vertResolution")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-raster-params"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-raster-params"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Raster_Params_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const FT_Bitmap_ *")])]),t._v(" "),e("td",[t._v("target")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const void *")])]),t._v(" "),e("td",[t._v("source")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("flags")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(int, int, const FT_Span_ *, void *)")])]),t._v(" "),e("td",[t._v("gray_spans")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(int, int, const FT_Span_ *, void *)")])]),t._v(" "),e("td",[t._v("black_spans")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("int (__fastcall *)(int, int, void *)")])]),t._v(" "),e("td",[t._v("bit_test")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(int, int, void *)")])]),t._v(" "),e("td",[t._v("bit_set")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void *")])]),t._v(" "),e("td",[t._v("user")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("FT_BBox_")])]),t._v(" "),e("td",[t._v("clip_box")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-glyphslotrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-glyphslotrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_GlyphSlotRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_LibraryRec_ *")])]),t._v(" "),e("td",[t._v("library")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_FaceRec_ *")])]),t._v(" "),e("td",[t._v("face")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_GlyphSlotRec_ *")])]),t._v(" "),e("td",[t._v("next")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("glyph_index")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("FT_Generic_")])]),t._v(" "),e("td",[t._v("generic")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("FT_Glyph_Metrics_")])]),t._v(" "),e("td",[t._v("metrics")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("linearHoriAdvance")])]),t._v(" "),e("tr",[e("td",[t._v("84")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("linearVertAdvance")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_Vector_")])]),t._v(" "),e("td",[t._v("advance")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FT_Glyph_Format_")])]),t._v(" "),e("td",[t._v("format")])]),t._v(" "),e("tr",[e("td",[t._v("104")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("FT_Bitmap_")])]),t._v(" "),e("td",[t._v("bitmap")])]),t._v(" "),e("tr",[e("td",[t._v("144")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("bitmap_left")])]),t._v(" "),e("tr",[e("td",[t._v("148")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("bitmap_top")])]),t._v(" "),e("tr",[e("td",[t._v("152")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("FT_Outline_")])]),t._v(" "),e("td",[t._v("outline")])]),t._v(" "),e("tr",[e("td",[t._v("192")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("num_subglyphs")])]),t._v(" "),e("tr",[e("td",[t._v("200")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_SubGlyphRec_ *")])]),t._v(" "),e("td",[t._v("subglyphs")])]),t._v(" "),e("tr",[e("td",[t._v("208")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void *")])]),t._v(" "),e("td",[t._v("control_data")])]),t._v(" "),e("tr",[e("td",[t._v("216")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("control_len")])]),t._v(" "),e("tr",[e("td",[t._v("220")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("lsb_delta")])]),t._v(" "),e("tr",[e("td",[t._v("224")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("rsb_delta")])]),t._v(" "),e("tr",[e("td",[t._v("232")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void *")])]),t._v(" "),e("td",[t._v("other")])]),t._v(" "),e("tr",[e("td",[t._v("240")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_Slot_InternalRec_ *")])]),t._v(" "),e("td",[t._v("internal")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-generic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-generic"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Generic_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void *")])]),t._v(" "),e("td",[t._v("data")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void (__fastcall *)(void *)")])]),t._v(" "),e("td",[t._v("finalizer")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-glyph-metrics"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-glyph-metrics"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Glyph_Metrics_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("width")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("height")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("horiBearingX")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("horiBearingY")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("horiAdvance")])]),t._v(" "),e("tr",[e("td",[t._v("20")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("vertBearingX")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("vertBearingY")])]),t._v(" "),e("tr",[e("td",[t._v("28")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("vertAdvance")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-hashkey"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-hashkey"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Hashkey_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("num")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const char *")])]),t._v(" "),e("td",[t._v("str")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-charmaprec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-charmaprec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_CharMapRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_FaceRec_ *")])]),t._v(" "),e("td",[t._v("face")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("FT_Encoding_")])]),t._v(" "),e("td",[t._v("encoding")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("unsigned __int16")])]),t._v(" "),e("td",[t._v("platform_id")])]),t._v(" "),e("tr",[e("td",[t._v("14")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("unsigned __int16")])]),t._v(" "),e("td",[t._v("encoding_id")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-span"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-span"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Span_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("__int16")])]),t._v(" "),e("td",[t._v("x")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("unsigned __int16")])]),t._v(" "),e("td",[t._v("len")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("unsigned __int8")])]),t._v(" "),e("td",[t._v("coverage")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-listrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-listrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_ListRec_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_ListNodeRec_ *")])]),t._v(" "),e("td",[t._v("head")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("FT_ListNodeRec_ *")])]),t._v(" "),e("td",[t._v("tail")])])])]),t._v(" "),e("h3",{attrs:{id:"ft-data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-data"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Data_")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const unsigned __int8 *")])]),t._v(" "),e("td",[t._v("pointer")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("length")])])])]),t._v(" "),e("h3",{attrs:{id:"fieldnameiterator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fieldnameiterator"}},[t._v("#")]),t._v(" "),e("code",[t._v("FieldNameIterator")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("SubString")])]),t._v(" "),e("td",[t._v("str")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("wchar_t *")])]),t._v(" "),e("td",[t._v("ptr")])])])]),t._v(" "),e("h3",{attrs:{id:"floattag-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floattag-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FloatTag_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FloatTag_vtbl\n{\n  void (__fastcall *~Tag)(Tag *this);\n  void (__fastcall *deleteChildren)(Tag *this);\n  void (__fastcall *write)(Tag *this, IDataOutput *);\n  void (__fastcall *load)(Tag *this, IDataInput *);\n  void (__fastcall *writeScriptData)(Tag *this, IDataOutput *);\n  void (__fastcall *loadScriptData)(Tag *this, IDataInput *);\n  std::string *(__fastcall *toString)(Tag *this, std::string *result);\n  Tag::Type (__fastcall *getId)(Tag *this);\n  bool (__fastcall *equals)(Tag *this, const Tag *);\n  void (__fastcall *print)(Tag *this, const std::string *, PrintStream *);\n  void (__fastcall *print)(Tag *this, PrintStream *);\n  std::unique_ptr<Tag> *(__fastcall *copy)(Tag *this, std::unique_ptr<Tag> *result);\n  unsigned __int64 (__fastcall *hash)(Tag *this);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertextpacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertextpacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTextPacket")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj __declspec(align(8)) FilterTextPacket : Packet\n{\n  std::string mText;\n  bool mFromServer;\n};\n\n")])])]),e("h3",{attrs:{id:"filtertextpacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertextpacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTextPacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTextPacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"filechunkmanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filechunkmanager"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileChunkManager")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileChunkManager\n{\n  unsigned __int64 mTotalSize;\n  unsigned int mChunkSize;\n  unsigned __int64 mTotalNbChunks;\n  unsigned __int64 mRequestedChunks;\n  unsigned __int64 mReceivedChunks;\n  unsigned __int64 mWrittenChunks;\n  std::vector<FileChunkInfo> mChunkInfo;\n  MovePriorityQueue<FileChunk,std::less<FileChunk> > mChunkQueue;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadmanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadManager : std::enable_shared_from_this<FileUploadManager>\n{\n  FileUploadManager_vtbl *__vftable /*VFT*/;\n  FileInfo mFile;\n  FileUploadManager::MultiPartStreamHelper mMultiPartHelper;\n  UploadState mState;\n  _BYTE mUploadError[4];\n  std::shared_ptr<IFilePicker> mFilePicker;\n  std::shared_ptr<IFileChunkUploader> mFileUploader;\n  TaskGroup *mIOTaskGroup;\n  std::weak_ptr<FileArchiver> mFileArchiver;\n  bool mUploadAllAtOnce;\n  bool mContinueOnReception;\n  bool mUseStream;\n  MPMCQueue<std::function<void __cdecl(void)> > mCallbackQueue;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadmanager-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileUploadManager_vtbl\n{\n  void (__fastcall *~FileUploadManager)(FileUploadManager *this);\n  float (__fastcall *getUploadProgress)(FileUploadManager *this);\n  void (__fastcall *uploadFileToRealmStorage)(FileUploadManager *this, const std::string *, const Core::Path *, const std::string *);\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadmanager-multipartstreamhelper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager-multipartstreamhelper"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager::MultiPartStreamHelper")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadManager::MultiPartStreamHelper\n{\n  bool needHeader;\n  bool needTrailer;\n  std::string header;\n  std::string trailer;\n  unsigned __int64 currentFileByte;\n  unsigned __int64 totalFileByte;\n  unsigned __int64 totalStreamSize;\n};\n\n")])])]),e("h3",{attrs:{id:"font"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#font"}},[t._v("#")]),t._v(" "),e("code",[t._v("Font")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Font\n{\n  Font_vtbl *__vftable /*VFT*/;\n  int mFontTexture;\n  bool mAutoResetFormat;\n  bool mUseCache;\n  bool mRenderUnicodeSmooth;\n  bool mAlwaysUnicode;\n  mce::Color mCurrentColor;\n  mce::Color mCaretColor;\n  bool mItalic;\n  bool mBold;\n  bool mStrikethrough;\n  bool mUnderlined;\n  bool mObfuscated;\n  mce::MaterialPtr mFontMat;\n  mce::Color mColors[32];\n  mce::TextureGroup *mTextures;\n  std::map<std::tuple<std::string,mce::Color,float>,std::vector<Font::TextObject>,std::less<std::tuple<std::string,mce::Color,float> >,std::allocator<std::pair<std::tuple<std::string,mce::Color,float> const ,std::vector<Font::TextObject> > > > mStringCache;\n  int mObfuscatedIndex;\n  float mObfuscatedTextTime;\n  Vec2 mCaretRenderPosition;\n  Vec2 mCaretRenderSize;\n};\n\n")])])]),e("h3",{attrs:{id:"font-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#font-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Font_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Font_vtbl\n{\n  void (__fastcall *~Font)(Font *this);\n  float (__fastcall *getCharWidth)(Font *this, int);\n  void (__fastcall *switchFontsource)(Font *this, const Core::Path *, const Core::Path *);\n  std::pair<Core::PathBuffer<std::string > const &,Core::PathBuffer<std::string > const &> *(__fastcall *getFontSources)(Font *this, std::pair<Core::PathBuffer<std::string > const &,Core::PathBuffer<std::string > const &> *result);\n  void (__fastcall *fetchPage)(Font *this, int);\n  Font::SheetId *(__fastcall *getSheet)(Font *this, Font::SheetId *result, int, int *, bool);\n  bool (__fastcall *supportsChar)(Font *this, const int *);\n  bool (__fastcall *_supportsShadowInSingleDraw)(Font *this);\n  int (__fastcall *getLineLength)(Font *this, const std::string *, float, bool);\n  float (__fastcall *getWrapHeight)(Font *this);\n  float (__fastcall *getScaleFactor)(Font *this);\n  Vec2 *(__fastcall *getTranslationFactor)(Font *this, Vec2 *result);\n  bool (__fastcall *isScreenPixelAligned)(Font *this);\n  bool (__fastcall *materialCanBeOverridden)(Font *this);\n  void (__fastcall *uploadTextureToGPU)(Font *this);\n  void (__fastcall *setTextConstantsInScreenContext)(Font *this, ScreenContext *, const Font::SheetId *, float, const mce::Color *, bool);\n  float (__fastcall *_getCharWidth)(Font *this, int, bool);\n  bool (__fastcall *_isIconPage)(Font *this, const Font::SheetId *);\n  mce::Font::Type (__fastcall *getType)(Font *this, const Font::SheetId *);\n  std::optional<mce::Font::RenderingParameters> *(__fastcall *tryGetRenderingParameters)(Font *this, std::optional<mce::Font::RenderingParameters> *result, const ScreenContext *, const Font::SheetId *, float, const mce::Color *, bool, const mce::Color *, const glm::tvec2<float,0> *);\n  void (__fastcall *drawCached)(Font *this, ScreenContext *, const std::string *, float, float, const mce::Color *, const mce::Color *, const glm::tvec2<float,0> *, bool, bool, mce::MaterialPtr *, int, bool, float, const mce::Color *);\n  void (__fastcall *onAppSuspended)(Font *this);\n  void (__fastcall *onDeviceLost)(Font *this);\n  void (__fastcall *reloadFontTextures)(Font *this, ResourceLoadManager *, bool);\n  bool (__fastcall *isReloadingTextures)(Font *this);\n  void (__fastcall *unloadTextures)(Font *this);\n  void (__fastcall *_scanUnicodeCharacterSize)(Font *this, int, const Font::SheetId *, bool);\n  bool (__fastcall *isSheetMatch)(Font *this, const Font::SheetId *);\n  bool (__fastcall *_containsWideChar)(Font *this, const std::string *);\n  float (__fastcall *_buildChar)(Font *this, std::vector<Font::GlyphQuad> *, int, const mce::Color *, bool, float, float, bool);\n  ResourceLocation *(__fastcall *_getFontSheetLocation)(Font *this, ResourceLocation *result, const Font::SheetId *, bool);\n  const mce::MaterialPtr *(__fastcall *getMaterial)(Font *this, const Font::SheetId *, bool);\n  void (__fastcall *flushQueuedImageUploads)(Font *this);\n  void (__fastcall *onLanguageChanged)(Font *this, const std::string *);\n  void (__fastcall *loadFontData)(Font *this, bool);\n  int (__fastcall *_getReplacementCharacter)(Font *this);\n};\n\n")])])]),e("h3",{attrs:{id:"font-textobject-page"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#font-textobject-page"}},[t._v("#")]),t._v(" "),e("code",[t._v("Font::TextObject::Page")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Font::TextObject::Page\n{\n  mce::Mesh mMesh;\n  mce::TexturePtr mTexture;\n  bool mRenderSmooth;\n  Font::SheetId mSheet;\n};\n\n")])])]),e("h3",{attrs:{id:"fontrepository"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fontrepository"}},[t._v("#")]),t._v(" "),e("code",[t._v("FontRepository")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FontRepository : AppPlatformListener, std::enable_shared_from_this<FontRepository>\n{\n  bool mIsInitialized;\n  std::vector<std::shared_ptr<Font>> mLoadedFonts;\n  std::unordered_map<std::string,unsigned __int64> mFontNameToIdentifier;\n  unsigned __int64 mDefaultFontId;\n  unsigned __int64 mRuneFontId;\n  unsigned __int64 mUnicodeFontId;\n  unsigned __int64 mSmoothFontLatinFontId;\n  unsigned __int64 mUIFontId;\n  unsigned __int64 mSmoothSmallFontID;\n  std::unordered_map<unsigned __int64,std::shared_ptr<Font>> mOriginalMinecraftFonts;\n  std::unordered_map<unsigned __int64,std::shared_ptr<Font>> mOverriddenFonts;\n  std::vector<std::shared_ptr<Bedrock::Threading::IAsyncResult<void> >> mFontLoadingTaskTrackers;\n  std::string mLanguageCode;\n  std::vector<std::shared_ptr<Font>> mDelayedFontDelete;\n};\n\n")])])]),e("h3",{attrs:{id:"fontrepository-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fontrepository-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FontRepository_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FontRepository_vtbl\n{\n  void (__fastcall *~AppPlatformListener)(AppPlatformListener *this);\n  void (__fastcall *onLowMemory)(AppPlatformListener *this);\n  void (__fastcall *onAppPaused)(AppPlatformListener *this);\n  void (__fastcall *onAppUnpaused)(AppPlatformListener *this);\n  void (__fastcall *onAppPreSuspended)(AppPlatformListener *this);\n  void (__fastcall *onAppSuspended)(AppPlatformListener *this);\n  void (__fastcall *onAppResumed)(AppPlatformListener *this);\n  void (__fastcall *onAppFocusLost)(AppPlatformListener *this);\n  void (__fastcall *onAppFocusGained)(AppPlatformListener *this);\n  void (__fastcall *onAppTerminated)(AppPlatformListener *this);\n  void (__fastcall *onOperationModeChanged)(AppPlatformListener *this, const OperationMode);\n  void (__fastcall *onPerformanceModeChanged)(AppPlatformListener *this, const bool);\n  void (__fastcall *onPushNotificationReceived)(AppPlatformListener *this, const PushNotificationMessage *);\n  void (__fastcall *onResizeBegin)(AppPlatformListener *this);\n  void (__fastcall *onResizeEnd)(AppPlatformListener *this);\n  void (__fastcall *onDeviceLost)(AppPlatformListener *this);\n};\n\n")])])]),e("h3",{attrs:{id:"filewatcherupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filewatcherupdate"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileWatcherUpdate")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileWatcherUpdate\n{\n  std::optional<std::weak_ptr<mce::Image> > newSkin;\n};\n\n")])])]),e("h3",{attrs:{id:"flipbooktexture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flipbooktexture"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlipbookTexture")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(4)) FlipbookTexture\n{\n  std::vector<int> mFrames;\n  TextureUVCoordinateSet mTexUVCoordSet;\n  int mReplicate;\n  mce::TexturePtr mTexturePtr;\n  mce::MaterialPtr m2DBlitMaterial;\n  std::unique_ptr<Tessellator> mTessellator;\n  mce::Mesh mMesh;\n  const ResourceLocation mResourceLocation;\n  float mCurrFrame;\n  int mNumFrames;\n  int mFrameSequenceLength;\n  int mTicksPerFrame;\n  int mWidth;\n  int mHeight;\n  int mPadSize;\n  bool mBlendFrames;\n  bool mTickOnlyOnce;\n};\n\n")])])]),e("h3",{attrs:{id:"frameupdatecontextbase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frameupdatecontextbase"}},[t._v("#")]),t._v(" "),e("code",[t._v("FrameUpdateContextBase")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FrameUpdateContextBase\n{\n};\n\n")])])]),e("h3",{attrs:{id:"framerenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#framerenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("FrameRenderObject")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj FrameRenderObject\n{\n  std::vector<ViewRenderObject,LinearAllocator<ViewRenderObject> > mViews;\n};\n\n")])])]),e("h3",{attrs:{id:"focusmanagerproxycallbacks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focusmanagerproxycallbacks"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusManagerProxyCallbacks")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj FocusManagerProxyCallbacks\n{\n  std::function<bool __cdecl(std::string const &)> mSetFocusControl;\n};\n\n")])])]),e("h3",{attrs:{id:"focusmanagerproxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focusmanagerproxy"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusManagerProxy")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FocusManagerProxy\n{\n  const FocusManagerProxyCallbacks mCallbacks;\n};\n\n")])])]),e("h3",{attrs:{id:"flyingitemcommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flyingitemcommand"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyingItemCommand")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FlyingItemCommand\n{\n  std::string mFromContainer;\n  int mFromIndex;\n  std::string mToContainer;\n  int mToIndex;\n  int mFlyingItemIdAux;\n  int mColor;\n  std::string mBannerPatterns;\n  std::string mBannerColors;\n  int mModId;\n  std::string mModExtendValue;\n  int mBannerType;\n};\n\n")])])]),e("h3",{attrs:{id:"focusmanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focusmanager"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusManager")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FocusManager\n{\n  glm::tvec2<float,0> mSize;\n  std::vector<std::shared_ptr<UIControl>> mFocusControls;\n  __int8 mFocusActive : 1;\n  __int8 mFocusResetFlag : 1;\n  __int8 mFindClosestControl : 1;\n  __int8 mFocusPositionCaptured : 1;\n  __int8 mNeedsDefaultFocusUpdate : 1;\n  __int8 mIncludeMagnetControls : 1;\n  int mFocusedControlIndex;\n  std::weak_ptr<UIControl> mFocusedControl;\n  std::weak_ptr<UIControl> mLostFocusControl;\n  std::weak_ptr<UIControl> mCurrentModalRoot;\n  std::weak_ptr<UIControl> mCurrentFocusContainer;\n  RecentFocusVector mRecentFocusList;\n  std::unique_ptr<FocusManagerProxy> mProxy;\n  std::string mPendingFocusControlID;\n  int mPendingFocusControlIndex;\n  bool mHasPendingFocusControl;\n  std::string mPendingFocusCollectionIndexName;\n};\n\n")])])]),e("h3",{attrs:{id:"flightingservice"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingservice"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingService")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(2)) FlightingService : ServiceClient, std::enable_shared_from_this<FlightingService>\n{\n  std::shared_ptr<FlightingToggles> mFlightingToggles;\n  IMinecraftEventing *mEventing;\n  const Core::PathBuffer<std::string > mCacheLocation;\n  const std::string mHostUrl;\n  const std::string mClientId;\n  std::string mCurrentLanguage;\n  std::atomic<enum FlightingService::FetchState> mFetchState;\n  std::vector<std::string> mCurrentTreatments;\n  std::vector<std::string> mCurrentProgressions;\n  std::vector<std::string> mOverrideTreatments;\n  std::vector<std::string> mOverrideProgressions;\n  std::mutex mQueuedCallbacksMutex;\n  std::vector<std::function<void __cdecl(std::vector<std::string> const &)>> mQueuedCallbacks;\n  std::mutex mTreatmentsMonitorCallbacksMutex;\n  std::vector<FlightingService::TreatmentsMonitor> mTreatmentsMonitorCallbacks;\n  std::atomic<unsigned int> mNextTreatmentsMonitorHandle;\n  std::mutex mProgressionsMonitorCallbacksMutex;\n  std::vector<FlightingService::ProgressionsMonitor> mProgressionsMonitorCallbacks;\n  std::atomic<unsigned int> mNextProgressionsMonitorHandle;\n  bool mTreatmentsOverriden;\n  bool mProgressionsOverriden;\n  bool mIsNetworkAllowed;\n};\n\n")])])]),e("h3",{attrs:{id:"flightingtoggles-flightingtoggle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingtoggles-flightingtoggle"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingToggles::FlightingToggle")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlightingToggles::FlightingToggle\n{\n  FlightingToggleId toggleId;\n  std::unique_ptr<Option> option;\n  std::string progressionId;\n};\n\n")])])]),e("h3",{attrs:{id:"flightingtoggles"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingtoggles"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingToggles")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlightingToggles : IFlightingToggles\n{\n  std::vector<FlightingToggles::FlightingToggle> mToggles;\n  FlightingService *mFlightingService;\n  bool mFlightServiceIsAvailable;\n  unsigned int mMonitorHandle;\n  const Core::PathBuffer<std::string > mStorageLocation;\n};\n\n")])])]),e("h3",{attrs:{id:"flightingtoggles-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingtoggles-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingToggles_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlightingToggles_vtbl\n{\n  void (__fastcall *~IFlightingToggles)(IFlightingToggles *this);\n  bool (__fastcall *isEnabled)(IFlightingToggles *this, FlightingToggleId);\n  void (__fastcall *registerOptionObserverCallback)(IFlightingToggles *this, Bedrock::PubSub::ScopedSubscription *, FlightingToggleId, std::function<void __cdecl(Option const &)>);\n};\n\n")])])]),e("h3",{attrs:{id:"flightingservice-treatmentsmonitor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingservice-treatmentsmonitor"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingService::TreatmentsMonitor")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlightingService::TreatmentsMonitor\n{\n  unsigned int handle;\n  std::function<void __cdecl(std::vector<std::string> const &)> callback;\n};\n\n")])])]),e("h3",{attrs:{id:"flightingservice-progressionsmonitor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingservice-progressionsmonitor"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingService::ProgressionsMonitor")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlightingService::ProgressionsMonitor\n{\n  unsigned int handle;\n  std::function<void __cdecl(std::vector<std::string> const &)> callback;\n};\n\n")])])]),e("h3",{attrs:{id:"flightingservice-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingservice-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingService_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlightingService_vtbl\n{\n  void (__fastcall *~ServiceClient)(ServiceClient *this);\n  void (__fastcall *update)(ServiceClient *this);\n  void (__fastcall *_submitRequest)(ServiceClient *this, std::shared_ptr<RequestHandler>);\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadmanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadmanager"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadManager")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FileDownloadManager : std::enable_shared_from_this<FileDownloadManager>\n{\n  FileDownloadManager_vtbl *__vftable /*VFT*/;\n  FileInfo mFile;\n  DownloadState mState;\n  _BYTE mDownloadError[4];\n  std::shared_ptr<IFilePicker> mFilePicker;\n  std::shared_ptr<IFileChunkDownloader> mFileDownloader;\n  std::shared_ptr<TaskGroup> mIOTaskGroup;\n  bool mOwnsTaskGroup;\n  MPMCQueue<std::function<void __cdecl(void)> > mCallbackQueue;\n  std::vector<unsigned char> mDataBuffer;\n  unsigned __int64 mCurrentBufferSize;\n  unsigned __int64 mCurrentBufferOffset;\n  bool mHasWriteError;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadmanager-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadmanager-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadManager_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileDownloadManager_vtbl\n{\n  void (__fastcall *~FileDownloadManager)(FileDownloadManager *this);\n  void (__fastcall *update)(FileDownloadManager *this);\n  void (__fastcall *cancelDownload)(FileDownloadManager *this);\n  float (__fastcall *getDownloadProgress)(FileDownloadManager *this);\n};\n\n")])])]),e("h3",{attrs:{id:"frustumculler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frustumculler"}},[t._v("#")]),t._v(" "),e("code",[t._v("FrustumCuller")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FrustumCuller\n{\n  Frustum mFrustumData;\n  Vec3 mOff;\n};\n\n")])])]),e("h3",{attrs:{id:"fencedringbuffer-core-cpuringbufferallocation-buffer-0-linearrange"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fencedringbuffer-core-cpuringbufferallocation-buffer-0-linearrange"}},[t._v("#")]),t._v(" "),e("code",[t._v("FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::LinearRange")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::LinearRange\n{\n  unsigned __int64 mOffset;\n  unsigned __int64 mSize;\n  std::atomic<unsigned __int64> mCurrentOffset;\n};\n\n")])])]),e("h3",{attrs:{id:"fencedringbuffer-core-cpuringbufferallocation-buffer-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fencedringbuffer-core-cpuringbufferallocation-buffer-0"}},[t._v("#")]),t._v(" "),e("code",[t._v("FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>\n{\n  std::shared_ptr<Core::CpuRingBufferAllocation_Buffer::Buffer> mBuffer;\n  const unsigned __int64 mSize;\n  std::queue<FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::ScopedAllocation,std::deque<FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::ScopedAllocation,std::allocator<FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::ScopedAllocation> > > mAllocations;\n  std::atomic<unsigned __int64> mCurrentAllocationScopeSize;\n  FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::LinearRange mHeadRange;\n  FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::LinearRange mTailRange;\n  std::atomic<unsigned __int64> mUsedSize;\n  std::atomic<unsigned short> mCurrentAllocationId;\n  unsigned __int64 mCurrentFence;\n  std::optional<unsigned __int64> mLastFenceWithAllocation;\n};\n\n")])])]),e("h3",{attrs:{id:"fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0"}},[t._v("#")]),t._v(" "),e("code",[t._v("FencedDynamicRingBuffer<Core::CpuRingBufferAllocation_Buffer,2,0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FencedDynamicRingBuffer<Core::CpuRingBufferAllocation_Buffer,2,0>\n{\n  std::atomic<FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0> *> mLastPageAllocatedFrom;\n  std::atomic<unsigned __int64> mAllocationScopeCheck;\n  const unsigned __int64 mInitialSize;\n  std::atomic<unsigned __int64> mUsedSize;\n  std::atomic<unsigned __int64> mAllocationSize;\n  boost::container::flat_map<unsigned __int64,std::shared_ptr<FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0> >,std::less<unsigned __int64>,boost::container::new_allocator<std::pair<unsigned __int64,std::shared_ptr<FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0> > > > > mRings;\n  unsigned __int16 mRingLifetimeWithNoAllocation;\n  unsigned __int64 mCurrentFence;\n  std::optional<unsigned __int64> mLastCompletedFenceValue;\n  std::shared_ptr<Core::CpuRingBufferAllocation_Buffer> mBufferImpl;\n  std::shared_mutex mAccessLock;\n};\n\n")])])]),e("h3",{attrs:{id:"fmod-channelcontrol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fmod-channelcontrol"}},[t._v("#")]),t._v(" "),e("code",[t._v("FMOD::ChannelControl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FMOD::ChannelControl\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fmod-channelgroup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fmod-channelgroup"}},[t._v("#")]),t._v(" "),e("code",[t._v("FMOD::ChannelGroup")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FMOD::ChannelGroup : FMOD::ChannelControl\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fmod-channel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fmod-channel"}},[t._v("#")]),t._v(" "),e("code",[t._v("FMOD::Channel")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FMOD::Channel : FMOD::ChannelControl\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fmod-system"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fmod-system"}},[t._v("#")]),t._v(" "),e("code",[t._v("FMOD::System")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FMOD::System\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filesystemfmod"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filesystemfmod"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileSystemFMOD")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileSystemFMOD\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fillingcontainer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fillingcontainer"}},[t._v("#")]),t._v(" "),e("code",[t._v("FillingContainer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FillingContainer : Container\n{\n  std::vector<ItemStack> mItems;\n  Player *mPlayer;\n};\n\n")])])]),e("h3",{attrs:{id:"fillingcontainer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fillingcontainer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FillingContainer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FillingContainer_vtbl\n{\n  void (__fastcall *~Container)(Container *this);\n  void (__fastcall *init)(Container *this);\n  void (__fastcall *serverInitItemStackIds)(Container *this, int, int, std::function<void __cdecl(int,ItemStack const &)>);\n  void (__fastcall *addContentChangeListener)(Container *this, ContainerContentChangeListener *);\n  void (__fastcall *removeContentChangeListener)(Container *this, ContainerContentChangeListener *);\n  const ItemStack *(__fastcall *getItem)(Container *this, int);\n  bool (__fastcall *hasRoomForItem)(Container *this, const ItemStack *);\n  void (__fastcall *addItem)(Container *this, ItemStack *);\n  bool (__fastcall *addItemToFirstEmptySlot)(Container *this, ItemStack *);\n  void (__fastcall *setItem)(Container *this, int, const ItemStack *);\n  void (__fastcall *setItemWithForceBalance)(Container *this, int, const ItemStack *, bool);\n  void (__fastcall *removeItem)(Container *this, int, int);\n  void (__fastcall *removeAllItems)(Container *this);\n  void (__fastcall *dropContents)(Container *this, BlockSource *, const Vec3 *, bool);\n  int (__fastcall *getContainerSize)(Container *this);\n  int (__fastcall *getMaxStackSize)(Container *this);\n  void (__fastcall *startOpen)(Container *this, Player *);\n  void (__fastcall *stopOpen)(Container *this, Player *);\n  std::vector<ItemStack> *(__fastcall *getSlotCopies)(Container *this, std::vector<ItemStack> *result);\n  const std::vector<ItemStack const *> *(__fastcall *getSlots)(Container *this, const std::vector<ItemStack const *> *result);\n  int (__fastcall *getItemCount)(Container *this, const ItemStack *);\n  int (__fastcall *findFirstSlotForItem)(Container *this, const ItemStack *);\n  bool (__fastcall *canPushInItem)(Container *this, BlockSource *, int, int, const ItemInstance *);\n  bool (__fastcall *canPullOutItem)(Container *this, BlockSource *, int, int, const ItemInstance *);\n  void (__fastcall *setContainerChanged)(Container *this, int);\n  void (__fastcall *setContainerMoved)(Container *this);\n  void (__fastcall *setCustomName)(Container *this, const std::string *);\n  bool (__fastcall *hasCustomName)(Container *this);\n  void (__fastcall *readAdditionalSaveData)(Container *this, const CompoundTag *);\n  void (__fastcall *addAdditionalSaveData)(Container *this, CompoundTag *);\n  void (__fastcall *createTransactionContext)(Container *this, std::function<void __cdecl(Container &,int,ItemStack const &,ItemStack const &)>, std::function<void __cdecl(void)>);\n  void (__fastcall *initializeContainerContents)(Container *this, BlockSource *);\n  bool (__fastcall *reviewItems)(Container *this, Level *);\n  bool (__fastcall *add)(FillingContainer *this, ItemStack *);\n  bool (__fastcall *canAdd)(FillingContainer *this, const ItemStack *);\n  void (__fastcall *clearSlot)(FillingContainer *this, int);\n  int (__fastcall *clearInventory)(FillingContainer *this, int);\n  void (__fastcall *load)(FillingContainer *this, const ListTag *, const SemVersion *, Level *);\n  int (__fastcall *getEmptySlotsCount)(FillingContainer *this);\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinitionregistry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinitionregistry"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinitionRegistry")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinitionRegistry : Bedrock::EnableNonOwnerReferences\n{\n  WeakRefT<SharePtrRefTraits<FogDefinition const > > mDefaultFogDefinition;\n  std::unordered_map<HashedString,OwnerPtrT<SharePtrRefTraits<FogDefinition const > >> mFogDefinitionMap;\n  std::unordered_map<HashedString,OwnerPtrT<SharePtrRefTraits<FogDefinition const > >> mBackCompatFogDefinitionMap;\n};\n\n")])])]),e("h3",{attrs:{id:"fogmanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogmanager"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogManager")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogManager : Bedrock::EnableNonOwnerReferences\n{\n  std::vector<FogManager::Layer> mFogLayers;\n};\n\n")])])]),e("h3",{attrs:{id:"flushableenv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flushableenv"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlushableEnv")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlushableEnv : leveldb::EnvWrapper\n{\n};\n\n")])])]),e("h3",{attrs:{id:"flushableenv-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flushableenv-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlushableEnv_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlushableEnv_vtbl\n{\n  void (__fastcall *~Env)(leveldb::Env *this);\n  leveldb::Status *(__fastcall *NewSequentialFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::SequentialFile **);\n  leveldb::Status *(__fastcall *NewRandomAccessFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::RandomAccessFile **);\n  leveldb::Status *(__fastcall *NewWritableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);\n  leveldb::Status *(__fastcall *NewAppendableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);\n  bool (__fastcall *FileExists)(leveldb::Env *this, const std::string *);\n  leveldb::Status *(__fastcall *GetChildren)(leveldb::Env *this, leveldb::Status *result, const std::string *, std::vector<std::string> *);\n  leveldb::Status *(__fastcall *DeleteFileA)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *CreateDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *DeleteDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *GetFileSize)(leveldb::Env *this, leveldb::Status *result, const std::string *, unsigned __int64 *);\n  leveldb::Status *(__fastcall *RenameFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, const std::string *);\n  leveldb::Status *(__fastcall *LockFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::FileLock **);\n  leveldb::Status *(__fastcall *UnlockFile)(leveldb::Env *this, leveldb::Status *result, leveldb::FileLock *);\n  void (__fastcall *Schedule)(leveldb::Env *this, void (__fastcall *)(void *), void *);\n  void (__fastcall *StartThread)(leveldb::Env *this, void (__fastcall *)(void *), void *);\n  leveldb::Status *(__fastcall *GetTestDirectory)(leveldb::Env *this, leveldb::Status *result, std::string *);\n  leveldb::Status *(__fastcall *NewLogger)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::Logger **);\n  unsigned __int64 (__fastcall *NowMicros)(leveldb::Env *this);\n  void (__fastcall *SleepForMicroseconds)(leveldb::Env *this, int);\n  void (__fastcall *flushToPermanentStorage)(FlushableEnv *this);\n};\n\n")])])]),e("h3",{attrs:{id:"functionmanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functionmanager"}},[t._v("#")]),t._v(" "),e("code",[t._v("FunctionManager")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FunctionManager\n{\n  FunctionManager_vtbl *__vftable /*VFT*/;\n  const GameRule *mGameRule;\n  bool mIsProcessingStack;\n  std::vector<FunctionManager::QueuedCommand> mCommandList;\n  std::unordered_map<CommandOrigin const *,FunctionManager::OriginMapping> mOriginMap;\n  std::unique_ptr<ICommandDispatcher> mCommandDispatcher;\n  std::unique_ptr<CommandOrigin> mTickOrigin;\n  std::unordered_map<std::string,std::unique_ptr<FunctionEntry>> mFunctions;\n  std::vector<gsl::not_null<FunctionEntry *>> mTickFunctions;\n};\n\n")])])]),e("h3",{attrs:{id:"functionmanager-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functionmanager-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FunctionManager_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FunctionManager_vtbl\n{\n  void (__fastcall *~FunctionManager)(FunctionManager *this);\n};\n\n")])])]),e("h3",{attrs:{id:"functionmanager-queuedcommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functionmanager-queuedcommand"}},[t._v("#")]),t._v(" "),e("code",[t._v("FunctionManager::QueuedCommand")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FunctionManager::QueuedCommand\n{\n  IFunctionEntry *mFunction;\n  const CommandOrigin *mOrigin;\n};\n\n")])])]),e("h3",{attrs:{id:"functionentry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functionentry"}},[t._v("#")]),t._v(" "),e("code",[t._v("FunctionEntry")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FunctionEntry : IFunctionEntry\n{\n  std::vector<std::unique_ptr<IFunctionEntry>> mCommandList;\n  _BYTE mState[1];\n};\n\n")])])]),e("h3",{attrs:{id:"functionentry-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functionentry-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FunctionEntry_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FunctionEntry_vtbl\n{\n  void (__fastcall *~IFunctionEntry)(IFunctionEntry *this);\n  void (__fastcall *execute)(IFunctionEntry *this, FunctionManager *, const CommandOrigin *);\n};\n\n")])])]),e("h3",{attrs:{id:"filearchiver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileArchiver : Bedrock::EnableNonOwnerReferences, std::enable_shared_from_this<FileArchiver>\n{\n  Core::ZipUtils::ZipProgress mProgress;\n  std::promise<FileArchiver::Result> mLastResult;\n  FileArchiver::State mCurrentState;\n  Core::FilePathManager *mFilePathManager;\n  std::function<void __cdecl(std::string const &)> mDisplayMessageCallback;\n  ResourcePackRepository *mResourcePackRepository;\n  std::unique_ptr<TaskGroup> mIOTaskGroup;\n};\n\n")])])]),e("h3",{attrs:{id:"filedataresponse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedataresponse"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDataResponse")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDataResponse\n{\n  Core::PathBuffer<std::string > mFullPath;\n};\n\n")])])]),e("h3",{attrs:{id:"filedatarequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedatarequest"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDataRequest")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDataRequest : RequestHandler\n{\n  const std::string mContentUrl;\n  std::function<void __cdecl(Core::Path const &)> mCallback;\n  Core::PathBuffer<std::string > mFileCacheLocation;\n  std::vector<std::basic_regex<char,std::regex_traits<char> >> mRequiredContentTypes;\n  std::shared_ptr<FileDataResponse> mFileDataResponse;\n};\n\n")])])]),e("h3",{attrs:{id:"filedatarequest-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedatarequest-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDataRequest_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileDataRequest_vtbl\n{\n  void (__fastcall *~RequestHandler)(RequestHandler *this);\n  void (__fastcall *send)(RequestHandler *this);\n  void (__fastcall *sendCachedRequest)(RequestHandler *this);\n  bool (__fastcall *update)(RequestHandler *this);\n  bool (__fastcall *isDone)(RequestHandler *this);\n  void (__fastcall *onComplete)(RequestHandler *this);\n  bool (__fastcall *canSendRequest)(RequestHandler *this);\n  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);\n};\n\n")])])]),e("h3",{attrs:{id:"featureregistry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureregistry"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureRegistry")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureRegistry\n{\n  std::vector<std::unique_ptr<IFeature>> mFeatureRegistry;\n  std::vector<OwnerPtrT<FeatureRefTraits>> mFeatureSlots;\n  std::unordered_map<HashedString,unsigned __int64> mFeatureLookupMap;\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-abstractfeatureholder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-abstractfeatureholder"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::AbstractFeatureHolder")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::AbstractFeatureHolder\n{\n  FeatureLoading::AbstractFeatureHolder_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-abstractfeatureholder-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-abstractfeatureholder-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::AbstractFeatureHolder_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FeatureLoading::AbstractFeatureHolder_vtbl\n{\n  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-featurerootparsecontext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-featurerootparsecontext"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::FeatureRootParseContext")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::FeatureRootParseContext\n{\n  std::reference_wrapper<std::string > mFeatureName;\n  std::reference_wrapper<IWorldRegistriesProvider> mRegistryProvider;\n  std::reference_wrapper<ResourcePackManager const > mPackManager;\n  std::unique_ptr<FeatureLoading::AbstractFeatureHolder> mFeatureHolder;\n};\n\n")])])]),e("h3",{attrs:{id:"featuretypefactory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featuretypefactory"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureTypeFactory")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureTypeFactory\n{\n  std::unordered_map<std::string,std::function<IFeature * __cdecl(FeatureRegistry &,std::string const &)>> mFeatureGenerators;\n  std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,FeatureLoading::FeatureRootParseContext> > mSchema;\n  std::vector<std::function<void __cdecl(Documentation::Node &)>> mDocumentationGenerators;\n  std::unique_ptr<JsonDefinitionUpgrader::IJsonDefinitionUpgrader> mFeatureDefinitionUpgrader;\n};\n\n")])])]),e("h3",{attrs:{id:"factory-dimension-level-scheduler-automaticid-dimension-int"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#factory-dimension-level-scheduler-automaticid-dimension-int"}},[t._v("#")]),t._v(" "),e("code",[t._v("Factory<Dimension,Level &,Scheduler &,AutomaticID<Dimension,int> &>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Factory<Dimension,Level &,Scheduler &,AutomaticID<Dimension,int> &>\n{\n  std::unordered_map<std::string,std::function<std::unique_ptr<Dimension> __cdecl(Level &,Scheduler &,AutomaticID<Dimension,int> &)>> mFactoryMap;\n};\n\n")])])]),e("h3",{attrs:{id:"feature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Feature_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Feature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertest-definition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertest-definition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTest::Definition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj FilterTest::Definition\n{\n  std::string mName;\n  std::string mDescription;\n  const FilterParamDefinition *mSubjectDefinition;\n  const FilterParamDefinition *mDomainDefinition;\n  const FilterParamDefinition *mOperatorDefinition;\n  const FilterParamDefinition *mValueDefinition;\n  std::function<std::shared_ptr<FilterTest> __cdecl(void)> mFactory;\n};\n\n")])])]),e("h3",{attrs:{id:"filtertest-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertest-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTest_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTest_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"factory-eventresponse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#factory-eventresponse"}},[t._v("#")]),t._v(" "),e("code",[t._v("Factory<EventResponse>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj Factory<EventResponse>\n{\n  std::unordered_map<std::string,std::function<std::unique_ptr<EventResponse> __cdecl(void)>> mFactoryMap;\n};\n\n")])])]),e("h3",{attrs:{id:"fuelitemcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fuelitemcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("FuelItemComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj __declspec(align(8)) FuelItemComponent : ItemComponent\n{\n  float mFuelDuration;\n};\n\n")])])]),e("h3",{attrs:{id:"fuelitemcomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fuelitemcomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FuelItemComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FuelItemComponent_vtbl\n{\n  void (__fastcall *~ItemComponent)(ItemComponent *this);\n  bool (__fastcall *checkComponentDataForContentErrors)(ItemComponent *this);\n  void (__fastcall *writeSettings)(ItemComponent *this);\n  bool (__fastcall *useOn)(ItemComponent *this, ItemStack *, Actor *, const BlockPos *, unsigned __int8, const Vec3 *);\n  bool (__fastcall *isNetworkComponent)(ItemComponent *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(ItemComponent *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(ItemComponent *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"fooditemcomponentlegacy-effect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fooditemcomponentlegacy-effect"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoodItemComponentLegacy::Effect")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FoodItemComponentLegacy::Effect\n{\n  const char *descriptionId;\n  int id;\n  int duration;\n  int amplifier;\n  float chance;\n};\n\n")])])]),e("h3",{attrs:{id:"fooditemcomponentlegacy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fooditemcomponentlegacy"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoodItemComponentLegacy")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoodItemComponentLegacy : IFoodItemComponent\n{\n  const Item *mOwner;\n  int mNutrition;\n  float mSaturationModifier;\n  std::string mUsingConvertsTo;\n  _BYTE mOnUseAction[4];\n  Vec3 mOnUseRange;\n  std::string mCoolDownType;\n  int mCooldownTime;\n  bool mCanAlwaysEat;\n  std::vector<FoodItemComponentLegacy::Effect> mEffects;\n  std::vector<unsigned int> mRemoveEffects;\n};\n\n")])])]),e("h3",{attrs:{id:"fooditemcomponentlegacy-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fooditemcomponentlegacy-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoodItemComponentLegacy_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FoodItemComponentLegacy_vtbl\n{\n  void (__fastcall *~IFoodItemComponent)(IFoodItemComponent *this);\n  int (__fastcall *getNutrition)(IFoodItemComponent *this);\n  float (__fastcall *getSaturationModifier)(IFoodItemComponent *this);\n  const Item *(__fastcall *eatItem)(IFoodItemComponent *this, ItemStack *, Actor *, Level *);\n  bool (__fastcall *use)(IFoodItemComponent *this, ItemStack *, Player *);\n  const Item *(__fastcall *useTimeDepleted)(IFoodItemComponent *this, ItemStack *, Player *, Level *);\n};\n\n")])])]),e("h3",{attrs:{id:"factory-baselighttextureimagebuilder-level-scheduler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#factory-baselighttextureimagebuilder-level-scheduler"}},[t._v("#")]),t._v(" "),e("code",[t._v("Factory<BaseLightTextureImageBuilder,Level &,Scheduler &>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Factory<BaseLightTextureImageBuilder,Level &,Scheduler &>\n{\n  std::unordered_map<std::string,std::function<std::unique_ptr<BaseLightTextureImageBuilder> __cdecl(Level &,Scheduler &)>> mFactoryMap;\n};\n\n")])])]),e("h3",{attrs:{id:"factory-blockcomponentdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#factory-blockcomponentdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("Factory<BlockComponentDescription>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Factory<BlockComponentDescription>\n{\n  std::unordered_map<std::string,std::function<std::unique_ptr<BlockComponentDescription> __cdecl(void)>> mFactoryMap;\n};\n\n")])])]),e("h3",{attrs:{id:"fishinghook"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fishinghook"}},[t._v("#")]),t._v(" "),e("code",[t._v("FishingHook")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FishingHook : Actor\n{\n  const float SHOOT_SPEED;\n  const float SHOOT_POWER;\n  const int NUM_PERCENTAGE_STEPS;\n  bool mInGround;\n  BlockPos mBlockPos;\n  float mFishAngle;\n  int mLife;\n  int mFlightTime;\n  int mTimeUntilHooked;\n  int mTimeUntilLured;\n  int mTimeUntilNibble;\n  int mFishingSpeed;\n  int mLerpSteps;\n  Vec3 mLerpPos;\n  float mLerpRotX;\n  float mLerpRotY;\n  float mBobTimer;\n  Vec3 mTargetPos;\n};\n\n")])])]),e("h3",{attrs:{id:"fishinghook-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fishinghook-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FishingHook_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FishingHook_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n};\n\n")])])]),e("h3",{attrs:{id:"filepickersettings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filepickersettings"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilePickerSettings")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilePickerSettings\n{\n  std::function<void __cdecl(std::shared_ptr<FilePickerSettings>)> onCancel;\n  std::function<void __cdecl(bool)> onOperationComplete;\n  std::function<void __cdecl(std::shared_ptr<FilePickerSettings>,Core::Path const &)> onPick;\n  std::vector<FilePickerSettings::FileDescription> mFileDescriptions;\n  unsigned __int64 mDefaultFileExtensionIndex;\n  FilePickerSettings::PickerType mPickerType;\n  std::string mDefaultFileName;\n  std::string mDefaultAlbumName;\n  std::string mFilePickerTitle;\n};\n\n")])])]),e("h3",{attrs:{id:"featuretoggles"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featuretoggles"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureToggles")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureToggles : Bedrock::EnableNonOwnerReferences\n{\n  std::vector<FeatureToggles::FeatureToggle> mFeatures;\n  std::vector<Bedrock::PubSub::ScopedSubscription> mOptionLockSubscriptions;\n  Core::PathBuffer<std::string > mFilePath;\n};\n\n")])])]),e("h3",{attrs:{id:"facing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#facing"}},[t._v("#")]),t._v(" "),e("code",[t._v("Facing")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Facing\n{\n};\n\n")])])]),e("h3",{attrs:{id:"facing-plane"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#facing-plane"}},[t._v("#")]),t._v(" "),e("code",[t._v("Facing::Plane")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Facing::Plane\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fmod-asyncreadinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fmod-asyncreadinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("FMOD_ASYNCREADINFO")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FMOD_ASYNCREADINFO\n{\n  void *handle;\n  unsigned int offset;\n  unsigned int sizebytes;\n  int priority;\n  void *userdata;\n  void *buffer;\n  unsigned int bytesread;\n  void (__fastcall *done)(FMOD_ASYNCREADINFO *, FMOD_RESULT);\n};\n\n")])])]),e("h3",{attrs:{id:"fmod-guid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fmod-guid"}},[t._v("#")]),t._v(" "),e("code",[t._v("FMOD_GUID")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FMOD_GUID\n{\n  unsigned int Data1;\n  unsigned __int16 Data2;\n  unsigned __int16 Data3;\n  unsigned __int8 Data4[8];\n};\n\n")])])]),e("h3",{attrs:{id:"fmod-createsoundexinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fmod-createsoundexinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("FMOD_CREATESOUNDEXINFO")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FMOD_CREATESOUNDEXINFO\n{\n  int cbsize;\n  unsigned int length;\n  unsigned int fileoffset;\n  int numchannels;\n  int defaultfrequency;\n  FMOD_SOUND_FORMAT format;\n  unsigned int decodebuffersize;\n  int initialsubsound;\n  int numsubsounds;\n  int *inclusionlist;\n  int inclusionlistnum;\n  FMOD_RESULT (__fastcall *pcmreadcallback)(struct FMOD_SOUND *, void *, unsigned int);\n  FMOD_RESULT (__fastcall *pcmsetposcallback)(struct FMOD_SOUND *, int, unsigned int, unsigned int);\n  FMOD_RESULT (__fastcall *nonblockcallback)(struct FMOD_SOUND *, FMOD_RESULT);\n  const char *dlsname;\n  const char *encryptionkey;\n  int maxpolyphony;\n  void *userdata;\n  FMOD_SOUND_TYPE suggestedsoundtype;\n  FMOD_RESULT (__fastcall *fileuseropen)(const char *, unsigned int *, void **, void *);\n  FMOD_RESULT (__fastcall *fileuserclose)(void *, void *);\n  FMOD_RESULT (__fastcall *fileuserread)(void *, void *, unsigned int, unsigned int *, void *);\n  FMOD_RESULT (__fastcall *fileuserseek)(void *, unsigned int, void *);\n  FMOD_RESULT (__fastcall *fileuserasyncread)(FMOD_ASYNCREADINFO *, void *);\n  FMOD_RESULT (__fastcall *fileuserasynccancel)(FMOD_ASYNCREADINFO *, void *);\n  void *fileuserdata;\n  int filebuffersize;\n  FMOD_CHANNELORDER channelorder;\n  unsigned int channelmask;\n  struct FMOD_SOUNDGROUP *initialsoundgroup;\n  unsigned int initialseekposition;\n  unsigned int initialseekpostype;\n  int ignoresetfilesystem;\n  unsigned int audioqueuepolicy;\n  unsigned int minmidigranularity;\n  int nonblockthreadid;\n  FMOD_GUID *fsbguid;\n};\n\n")])])]),e("h3",{attrs:{id:"fmodfiledescriptor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fmodfiledescriptor"}},[t._v("#")]),t._v(" "),e("code",[t._v("FMODFileDescriptor")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FMODFileDescriptor\n{\n  unsigned __int64 mFileSize;\n  std::string mFileName;\n  std::mutex mFileMutex;\n};\n\n")])])]),e("h3",{attrs:{id:"fmodfiletracker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fmodfiletracker"}},[t._v("#")]),t._v(" "),e("code",[t._v("FMODFileTracker")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FMODFileTracker\n{\n  std::unordered_map<void *,std::shared_ptr<FMODFileDescriptor>> mFileDescriptorsMap;\n  std::mutex mMutex;\n};\n\n")])])]),e("h3",{attrs:{id:"fetchimageparams"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetchimageparams"}},[t._v("#")]),t._v(" "),e("code",[t._v("FetchImageParams")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FetchImageParams\n{\n  std::string mContentUrl;\n};\n\n")])])]),e("h3",{attrs:{id:"focuscomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focuscomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FocusComponent : UIComponent\n{\n  FocusManager *mFocusManager;\n  int mDefaultFocusPrecedence;\n  glm::tvec2<float,0> mCapturedFocusPoint;\n  std::string mFocusIdentifier;\n  std::unordered_map<enum ui::CardinalDirection,std::string> mDirectionalFocusOverrides;\n  std::unordered_map<std::string,std::unordered_map<enum ui::CardinalDirection,std::string>> mNamedMappingLookupData;\n  __int8 mFocusEnabled : 1;\n  __int8 mFocusWrapEnabled : 1;\n  __int8 mFocusPointCaptured : 1;\n  __int8 mFocusMagnetEnabled : 1;\n  __int8 mResetOnFocusLost : 1;\n};\n\n")])])]),e("h3",{attrs:{id:"focuscomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focuscomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FocusComponent_vtbl\n{\n  void (__fastcall *~UIComponent)(UIComponent *this);\n  void (__fastcall *OnScreenPop)(UIComponent *this);\n  std::unique_ptr<UIComponent> *(__fastcall *clone)(UIComponent *this, std::unique_ptr<UIComponent> *result, UIControl *);\n  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, const ScreenEvent *);\n  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, VisualTree *, ScreenInputContext *, UIAnimationController *, const ScreenEvent *);\n  void (__fastcall *onNotifyChildAdded)(UIComponent *this);\n  void (__fastcall *onNotifyChildRemoved)(UIComponent *this);\n  void (__fastcall *onRemoved)(UIComponent *this);\n  void (__fastcall *onAdded)(UIComponent *this);\n  void (__fastcall *onVisibilityChanged)(UIComponent *this, bool);\n  void (__fastcall *onEnabledChanged)(UIComponent *this, bool);\n  bool (__fastcall *isRenderableComponent)(UIComponent *this);\n  bool (__fastcall *onLayoutChange)(UIComponent *this);\n  void (__fastcall *reset)(UIComponent *this);\n  void (__fastcall *reload)(UIComponent *this, const UIComponent *);\n  const std::string *(__fastcall *getTextToSpeechComponentValue)(UIComponent *this);\n};\n\n")])])]),e("h3",{attrs:{id:"formattedachievementdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#formattedachievementdata"}},[t._v("#")]),t._v(" "),e("code",[t._v("FormattedAchievementData")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FormattedAchievementData\n{\n  std::string mAchievementId;\n  std::string mDisplayNames;\n  std::string mDisplayDescription;\n  Core::PathBuffer<std::string > mTexturePath;\n  std::string mTextureLocationType;\n  bool mVisibleWorldIcon;\n  bool mIsLocked;\n  std::string mAchievementGamerScore;\n  std::string mAchievementWorldScore;\n  float mProgressBar;\n  const StoreCatalogItem *mPersonaReward;\n  mce::UUID mPersonaRewardId;\n};\n\n")])])]),e("h3",{attrs:{id:"formattedplayerstats"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#formattedplayerstats"}},[t._v("#")]),t._v(" "),e("code",[t._v("FormattedPlayerStats")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FormattedPlayerStats\n{\n  std::string mGamerscoreValue;\n  std::string mAchievementValue;\n  std::string mTimePlayedValue;\n  std::string mAchievementPercentage;\n};\n\n")])])]),e("h3",{attrs:{id:"file-id-descriptor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#file-id-descriptor"}},[t._v("#")]),t._v(" "),e("code",[t._v("FILE_ID_DESCRIPTOR")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FILE_ID_DESCRIPTOR\n{\n  unsigned int dwSize;\n  _FILE_ID_TYPE Type;\n  $DDC60D76A4217E10985A7D269A0E4857 ___u2;\n};\n\n")])])]),e("h3",{attrs:{id:"flashwinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flashwinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("FLASHWINFO")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __declspec(align(8)) FLASHWINFO\n{\n  unsigned int cbSize;\n  HWND__ *hwnd;\n  unsigned int dwFlags;\n  unsigned int uCount;\n  unsigned int dwTimeout;\n};\n\n")])])]),e("h3",{attrs:{id:"firstpersonlookbehavior"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firstpersonlookbehavior"}},[t._v("#")]),t._v(" "),e("code",[t._v("FirstPersonLookBehavior")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FirstPersonLookBehavior : CameraBehavior<FirstPersonLookBehavior>\n{\n  float mYaw;\n  float mPitch;\n  float mYawDelta;\n  float mPitchMin;\n  float mPitchMax;\n};\n\n")])])]),e("h3",{attrs:{id:"firstpersonlookbehavior-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firstpersonlookbehavior-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FirstPersonLookBehavior_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FirstPersonLookBehavior_vtbl\n{\n  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);\n  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);\n  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);\n  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);\n  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);\n  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);\n  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);\n  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);\n  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);\n};\n\n")])])]),e("h3",{attrs:{id:"flybehavior"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flybehavior"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyBehavior")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlyBehavior : CameraBehavior<FlyBehavior>\n{\n  float mSpeed;\n  float mSpeedAlt;\n};\n\n")])])]),e("h3",{attrs:{id:"flybehavior-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flybehavior-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyBehavior_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlyBehavior_vtbl\n{\n  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);\n  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);\n  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);\n  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);\n  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);\n  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);\n  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);\n  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);\n  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);\n};\n\n")])])]),e("h3",{attrs:{id:"firstpersonlookbehaviorloader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firstpersonlookbehaviorloader"}},[t._v("#")]),t._v(" "),e("code",[t._v("FirstPersonLookBehaviorLoader")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FirstPersonLookBehaviorLoader : CameraBehaviorLoader\n{\n};\n\n")])])]),e("h3",{attrs:{id:"firstpersonlookbehaviorloader-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firstpersonlookbehaviorloader-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FirstPersonLookBehaviorLoader_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FirstPersonLookBehaviorLoader_vtbl\n{\n  void (__fastcall *~CameraBehaviorLoader)(CameraBehaviorLoader *this);\n  std::unique_ptr<ICameraBehavior> *(__fastcall *create)(CameraBehaviorLoader *this, std::unique_ptr<ICameraBehavior> *result);\n  void (__fastcall *parse)(CameraBehaviorLoader *this, Json::Value *, ICameraBehavior *);\n};\n\n")])])]),e("h3",{attrs:{id:"flybehaviorloader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flybehaviorloader"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyBehaviorLoader")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlyBehaviorLoader : CameraBehaviorLoader\n{\n};\n\n")])])]),e("h3",{attrs:{id:"flybehaviorloader-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flybehaviorloader-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyBehaviorLoader_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlyBehaviorLoader_vtbl\n{\n  void (__fastcall *~CameraBehaviorLoader)(CameraBehaviorLoader *this);\n  std::unique_ptr<ICameraBehavior> *(__fastcall *create)(CameraBehaviorLoader *this, std::unique_ptr<ICameraBehavior> *result);\n  void (__fastcall *parse)(CameraBehaviorLoader *this, Json::Value *, ICameraBehavior *);\n};\n\n")])])]),e("h3",{attrs:{id:"fencedringbuffer-core-cpuringbufferallocation-buffer-0-linearallocation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fencedringbuffer-core-cpuringbufferallocation-buffer-0-linearallocation"}},[t._v("#")]),t._v(" "),e("code",[t._v("FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::LinearAllocation")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FencedRingBuffer<Core::CpuRingBufferAllocation_Buffer,0>::LinearAllocation\n{\n  unsigned __int64 mOffsetPrefix;\n  unsigned __int64 mDataOffset;\n};\n\n")])])]),e("h3",{attrs:{id:"fireblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FireBlock : BlockLegacy\n{\n  std::unordered_map<BlockPos,std::string> mFireSourceMap;\n  AABB mAabb;\n};\n\n")])])]),e("h3",{attrs:{id:"fireblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FireBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"foliagecolor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foliagecolor"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoliageColor")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoliageColor\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fileentry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileentry"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileEntry")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FileEntry\n{\n  int file_id;\n  unsigned int offset;\n  unsigned int length;\n  unsigned int origin_len;\n};\n\n")])])]),e("h3",{attrs:{id:"frontloadedresources"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frontloadedresources"}},[t._v("#")]),t._v(" "),e("code",[t._v("FrontloadedResources")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FrontloadedResources\n{\n};\n\n")])])]),e("h3",{attrs:{id:"factorycomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#factorycomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("FactoryComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FactoryComponent : UIComponent\n{\n  std::weak_ptr<UIControlFactory> mControlFactory;\n  std::string mFactoryName;\n  std::unordered_map<std::string,std::string> mControlIdToTemplateLookup;\n  std::vector<std::pair<std::string const ,Json::Value const >> mVariables;\n  std::shared_ptr<UIControl> mControlTemplate;\n  std::vector<std::weak_ptr<UIControl>> mProgeny;\n  bool mFactoryIsChild;\n  int mMaxSize;\n  _BYTE mInsertPosition[4];\n};\n\n")])])]),e("h3",{attrs:{id:"factorycomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#factorycomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FactoryComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FactoryComponent_vtbl\n{\n  void (__fastcall *~UIComponent)(UIComponent *this);\n  void (__fastcall *OnScreenPop)(UIComponent *this);\n  std::unique_ptr<UIComponent> *(__fastcall *clone)(UIComponent *this, std::unique_ptr<UIComponent> *result, UIControl *);\n  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, const ScreenEvent *);\n  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, VisualTree *, ScreenInputContext *, UIAnimationController *, const ScreenEvent *);\n  void (__fastcall *onNotifyChildAdded)(UIComponent *this);\n  void (__fastcall *onNotifyChildRemoved)(UIComponent *this);\n  void (__fastcall *onRemoved)(UIComponent *this);\n  void (__fastcall *onAdded)(UIComponent *this);\n  void (__fastcall *onVisibilityChanged)(UIComponent *this, bool);\n  void (__fastcall *onEnabledChanged)(UIComponent *this, bool);\n  bool (__fastcall *isRenderableComponent)(UIComponent *this);\n  bool (__fastcall *onLayoutChange)(UIComponent *this);\n  void (__fastcall *reset)(UIComponent *this);\n  void (__fastcall *reload)(UIComponent *this, const UIComponent *);\n  const std::string *(__fastcall *getTextToSpeechComponentValue)(UIComponent *this);\n};\n\n")])])]),e("h3",{attrs:{id:"focuscontainercustomdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focuscontainercustomdata"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusContainerCustomData")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FocusContainerCustomData\n{\n  std::string otherFocusContainerName;\n  std::string focusIdInside;\n};\n\n")])])]),e("h3",{attrs:{id:"focuscontainercomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focuscontainercomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusContainerComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FocusContainerComponent : UIComponent\n{\n  RecentFocusVector mRecentFocusList;\n  std::weak_ptr<UIControl> mLastFocusedControl;\n  std::unordered_map<enum ui::CardinalDirection,enum FocusNavigationMode> mDirectionalFocusOverrides;\n  std::unordered_map<enum ui::CardinalDirection,std::vector<FocusContainerCustomData>> mFocusContainerCustomOverrides;\n  bool mUseLastFocus;\n  bool mWrappingAllowed;\n};\n\n")])])]),e("h3",{attrs:{id:"focuscontainercomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focuscontainercomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusContainerComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FocusContainerComponent_vtbl\n{\n  void (__fastcall *~UIComponent)(UIComponent *this);\n  void (__fastcall *OnScreenPop)(UIComponent *this);\n  std::unique_ptr<UIComponent> *(__fastcall *clone)(UIComponent *this, std::unique_ptr<UIComponent> *result, UIControl *);\n  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, const ScreenEvent *);\n  ComponentReceiveActionType (__fastcall *receive)(UIComponent *this, VisualTree *, ScreenInputContext *, UIAnimationController *, const ScreenEvent *);\n  void (__fastcall *onNotifyChildAdded)(UIComponent *this);\n  void (__fastcall *onNotifyChildRemoved)(UIComponent *this);\n  void (__fastcall *onRemoved)(UIComponent *this);\n  void (__fastcall *onAdded)(UIComponent *this);\n  void (__fastcall *onVisibilityChanged)(UIComponent *this, bool);\n  void (__fastcall *onEnabledChanged)(UIComponent *this, bool);\n  bool (__fastcall *isRenderableComponent)(UIComponent *this);\n  bool (__fastcall *onLayoutChange)(UIComponent *this);\n  void (__fastcall *reset)(UIComponent *this);\n  void (__fastcall *reload)(UIComponent *this, const UIComponent *);\n  const std::string *(__fastcall *getTextToSpeechComponentValue)(UIComponent *this);\n};\n\n")])])]),e("h3",{attrs:{id:"focuscomponent-capturefocuspoint-l2-lambda-0e51f1eba29be0dc80ad7fe30da0fb50"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focuscomponent-capturefocuspoint-l2-lambda-0e51f1eba29be0dc80ad7fe30da0fb50"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusComponent::_captureFocusPoint::__l2::<lambda_0e51f1eba29be0dc80ad7fe30da0fb50>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FocusComponent::_captureFocusPoint::__l2::<lambda_0e51f1eba29be0dc80ad7fe30da0fb50>\n{\n  const UIControl *owner;\n};\n\n")])])]),e("h3",{attrs:{id:"factorycomponent-create-l52-lambda-98dfe690793ad1dd20aceb51ef2d7967"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#factorycomponent-create-l52-lambda-98dfe690793ad1dd20aceb51ef2d7967"}},[t._v("#")]),t._v(" "),e("code",[t._v("FactoryComponent::create::__l52::<lambda_98dfe690793ad1dd20aceb51ef2d7967>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FactoryComponent::create::__l52::<lambda_98dfe690793ad1dd20aceb51ef2d7967>\n{\n  const UIPropertyBag *properties;\n};\n\n")])])]),e("h3",{attrs:{id:"flyingitemrenderer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flyingitemrenderer"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyingItemRenderer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlyingItemRenderer : MinecraftUICustomRenderer\n{\n  std::vector<ui::FlyingItem> mFlyingItems;\n};\n\n")])])]),e("h3",{attrs:{id:"flyingitemrenderer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flyingitemrenderer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyingItemRenderer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlyingItemRenderer_vtbl\n{\n  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);\n  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);\n  std::shared_ptr<UICustomRenderer> *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr<UICustomRenderer> *result);\n  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);\n  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);\n  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);\n  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);\n  int (__fastcall *getCustomId)(UICustomRenderer *this);\n  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);\n  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);\n  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);\n  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);\n  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);\n  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue<ScreenEvent> *);\n  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);\n  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);\n  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);\n};\n\n")])])]),e("h3",{attrs:{id:"filedeleteprogresshandler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedeleteprogresshandler"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDeleteProgressHandler")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FileDeleteProgressHandler : ProgressHandler\n{\n  ContentManager *mContentManager;\n  std::vector<ContentItem const *> mToDelete;\n  std::unique_ptr<TaskGroup> mIOTaskGroup;\n  bool mDeleteComplete;\n};\n\n")])])]),e("h3",{attrs:{id:"filedeleteprogresshandler-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedeleteprogresshandler-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDeleteProgressHandler_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileDeleteProgressHandler_vtbl\n{\n  void (__fastcall *~ProgressHandler)(ProgressHandler *this);\n  void (__fastcall *onStart)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *tick)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *onCancel)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *onExit)(ProgressHandler *this, MinecraftScreenModel *);\n  LoadingState (__fastcall *getLoadingState)(ProgressHandler *this, MinecraftScreenModel *);\n  float (__fastcall *getLoadingProgress)(ProgressHandler *this, MinecraftScreenModel *);\n  std::string *(__fastcall *getProgressMessage)(ProgressHandler *this, std::string *result, MinecraftScreenModel *);\n  void (__fastcall *addEventProperties)(ProgressHandler *this, std::unordered_map<std::string,std::string> *);\n  std::string *(__fastcall *getTTSProgressMessage)(ProgressHandler *this, std::string *result);\n  std::string *(__fastcall *getTitleText)(ProgressHandler *this, std::string *result);\n  ProgressAnimation (__fastcall *showLoadingBar)(ProgressHandler *this);\n};\n\n")])])]),e("h3",{attrs:{id:"fontalias"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fontalias"}},[t._v("#")]),t._v(" "),e("code",[t._v("FontAlias")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FontAlias : Font\n{\n  std::vector<FontAlias::ReferenceData> mFontReferences;\n  std::string mCurrentLanguageCode;\n  bool mAllReferencesMaterialsCanBeOverridden;\n  bool mAllReferencesScreenPixelAligned;\n  bool mAllReferencesSupportShadowInSingleDraw;\n  float mMaxWrapHeight;\n  float mMaxScalar;\n};\n\n")])])]),e("h3",{attrs:{id:"fontalias-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fontalias-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FontAlias_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FontAlias_vtbl\n{\n  void (__fastcall *~Font)(Font *this);\n  float (__fastcall *getCharWidth)(Font *this, int);\n  void (__fastcall *switchFontsource)(Font *this, const Core::Path *, const Core::Path *);\n  std::pair<Core::PathBuffer<std::string > const &,Core::PathBuffer<std::string > const &> *(__fastcall *getFontSources)(Font *this, std::pair<Core::PathBuffer<std::string > const &,Core::PathBuffer<std::string > const &> *result);\n  void (__fastcall *fetchPage)(Font *this, int);\n  Font::SheetId *(__fastcall *getSheet)(Font *this, Font::SheetId *result, int, int *, bool);\n  bool (__fastcall *supportsChar)(Font *this, const int *);\n  bool (__fastcall *_supportsShadowInSingleDraw)(Font *this);\n  int (__fastcall *getLineLength)(Font *this, const std::string *, float, bool);\n  float (__fastcall *getWrapHeight)(Font *this);\n  float (__fastcall *getScaleFactor)(Font *this);\n  Vec2 *(__fastcall *getTranslationFactor)(Font *this, Vec2 *result);\n  bool (__fastcall *isScreenPixelAligned)(Font *this);\n  bool (__fastcall *materialCanBeOverridden)(Font *this);\n  void (__fastcall *uploadTextureToGPU)(Font *this);\n  void (__fastcall *setTextConstantsInScreenContext)(Font *this, ScreenContext *, const Font::SheetId *, float, const mce::Color *, bool);\n  float (__fastcall *_getCharWidth)(Font *this, int, bool);\n  bool (__fastcall *_isIconPage)(Font *this, const Font::SheetId *);\n  mce::Font::Type (__fastcall *getType)(Font *this, const Font::SheetId *);\n  std::optional<mce::Font::RenderingParameters> *(__fastcall *tryGetRenderingParameters)(Font *this, std::optional<mce::Font::RenderingParameters> *result, const ScreenContext *, const Font::SheetId *, float, const mce::Color *, bool, const mce::Color *, const glm::tvec2<float,0> *);\n  void (__fastcall *drawCached)(Font *this, ScreenContext *, const std::string *, float, float, const mce::Color *, const mce::Color *, const glm::tvec2<float,0> *, bool, bool, mce::MaterialPtr *, int, bool, float, const mce::Color *);\n  void (__fastcall *onAppSuspended)(Font *this);\n  void (__fastcall *onDeviceLost)(Font *this);\n  void (__fastcall *reloadFontTextures)(Font *this, ResourceLoadManager *, bool);\n  bool (__fastcall *isReloadingTextures)(Font *this);\n  void (__fastcall *unloadTextures)(Font *this);\n  void (__fastcall *_scanUnicodeCharacterSize)(Font *this, int, const Font::SheetId *, bool);\n  bool (__fastcall *isSheetMatch)(Font *this, const Font::SheetId *);\n  bool (__fastcall *_containsWideChar)(Font *this, const std::string *);\n  float (__fastcall *_buildChar)(Font *this, std::vector<Font::GlyphQuad> *, int, const mce::Color *, bool, float, float, bool);\n  ResourceLocation *(__fastcall *_getFontSheetLocation)(Font *this, ResourceLocation *result, const Font::SheetId *, bool);\n  const mce::MaterialPtr *(__fastcall *getMaterial)(Font *this, const Font::SheetId *, bool);\n  void (__fastcall *flushQueuedImageUploads)(Font *this);\n  void (__fastcall *onLanguageChanged)(Font *this, const std::string *);\n  void (__fastcall *loadFontData)(Font *this, bool);\n  int (__fastcall *_getReplacementCharacter)(Font *this);\n};\n\n")])])]),e("h3",{attrs:{id:"ft-memoryrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-memoryrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_MemoryRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_MemoryRec_\n{\n  void *user;\n  void *(__fastcall *alloc)(FT_MemoryRec_ *, int);\n  void (__fastcall *free)(FT_MemoryRec_ *, void *);\n  void *(__fastcall *realloc)(FT_MemoryRec_ *, int, int, void *);\n};\n\n")])])]),e("h3",{attrs:{id:"ft-streamrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-streamrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_StreamRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_StreamRec_\n{\n  unsigned __int8 *base;\n  unsigned int size;\n  unsigned int pos;\n  FT_StreamDesc_ descriptor;\n  FT_StreamDesc_ pathname;\n  unsigned int (__fastcall *read)(FT_StreamRec_ *, unsigned int, unsigned __int8 *, unsigned int);\n  void (__fastcall *close)(FT_StreamRec_ *);\n  FT_MemoryRec_ *memory;\n  unsigned __int8 *cursor;\n  unsigned __int8 *limit;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-listnoderec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-listnoderec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_ListNodeRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_ListNodeRec_\n{\n  FT_ListNodeRec_ *prev;\n  FT_ListNodeRec_ *next;\n  void *data;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-bitmap-size"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-bitmap-size"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Bitmap_Size_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_Bitmap_Size_\n{\n  __int16 height;\n  __int16 width;\n  int size;\n  int x_ppem;\n  int y_ppem;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-modulerec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-modulerec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_ModuleRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_ModuleRec_\n{\n  FT_Module_Class_ *clazz;\n  FT_LibraryRec_ *library;\n  FT_MemoryRec_ *memory;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-libraryrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-libraryrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_LibraryRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __declspec(align(8)) FT_LibraryRec_\n{\n  FT_MemoryRec_ *memory;\n  int version_major;\n  int version_minor;\n  int version_patch;\n  unsigned int num_modules;\n  FT_ModuleRec_ *modules[32];\n  FT_ListRec_ renderers;\n  FT_RendererRec_ *cur_renderer;\n  FT_ModuleRec_ *auto_hinter;\n  int (__fastcall *debug_hooks[4])(void *);\n  FT_Vector_ lcd_geometry[3];\n  int refcount;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-rendererrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-rendererrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_RendererRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_RendererRec_\n{\n  FT_ModuleRec_ root;\n  FT_Renderer_Class_ *clazz;\n  FT_Glyph_Format_ glyph_format;\n  FT_Glyph_Class_ glyph_class;\n  struct FT_RasterRec_ *raster;\n  int (__fastcall *raster_render)(struct FT_RasterRec_ *, const FT_Raster_Params_ *);\n  int (__fastcall *render)(FT_RendererRec_ *, FT_GlyphSlotRec_ *, FT_Render_Mode_, const FT_Vector_ *);\n};\n\n")])])]),e("h3",{attrs:{id:"ft-facerec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-facerec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_FaceRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_FaceRec_\n{\n  int num_faces;\n  int face_index;\n  int face_flags;\n  int style_flags;\n  int num_glyphs;\n  char *family_name;\n  char *style_name;\n  int num_fixed_sizes;\n  FT_Bitmap_Size_ *available_sizes;\n  int num_charmaps;\n  FT_CharMapRec_ **charmaps;\n  FT_Generic_ generic;\n  FT_BBox_ bbox;\n  unsigned __int16 units_per_EM;\n  __int16 ascender;\n  __int16 descender;\n  __int16 height;\n  __int16 max_advance_width;\n  __int16 max_advance_height;\n  __int16 underline_position;\n  __int16 underline_thickness;\n  FT_GlyphSlotRec_ *glyph;\n  FT_SizeRec_ *size;\n  FT_CharMapRec_ *charmap;\n  FT_DriverRec_ *driver;\n  FT_MemoryRec_ *memory;\n  FT_StreamRec_ *stream;\n  FT_ListRec_ sizes_list;\n  FT_Generic_ autohint;\n  void *extensions;\n  FT_Face_InternalRec_ *internal;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-size-metrics"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-size-metrics"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Size_Metrics_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_Size_Metrics_\n{\n  unsigned __int16 x_ppem;\n  unsigned __int16 y_ppem;\n  int x_scale;\n  int y_scale;\n  int ascender;\n  int descender;\n  int height;\n  int max_advance;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-size-internalrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-size-internalrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Size_InternalRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_Size_InternalRec_\n{\n  void *module_data;\n  FT_Render_Mode_ autohint_mode;\n  FT_Size_Metrics_ autohint_metrics;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-sizerec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-sizerec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_SizeRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_SizeRec_\n{\n  FT_FaceRec_ *face;\n  FT_Generic_ generic;\n  FT_Size_Metrics_ metrics;\n  FT_Size_InternalRec_ *internal;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-parameter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-parameter"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Parameter_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_Parameter_\n{\n  unsigned int tag;\n  void *data;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-subglyphrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-subglyphrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_SubGlyphRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_SubGlyphRec_\n{\n  int index;\n  unsigned __int16 flags;\n  int arg1;\n  int arg2;\n  FT_Matrix_ transform;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-glyphloadrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-glyphloadrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_GlyphLoadRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_GlyphLoadRec_\n{\n  FT_Outline_ outline;\n  FT_Vector_ *extra_points;\n  FT_Vector_ *extra_points2;\n  unsigned int num_subglyphs;\n  FT_SubGlyphRec_ *subglyphs;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-glyphloaderrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-glyphloaderrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_GlyphLoaderRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_GlyphLoaderRec_\n{\n  FT_MemoryRec_ *memory;\n  unsigned int max_points;\n  unsigned int max_contours;\n  unsigned int max_subglyphs;\n  unsigned __int8 use_extra;\n  FT_GlyphLoadRec_ base;\n  FT_GlyphLoadRec_ current;\n  void *other;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-driverrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-driverrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_DriverRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_DriverRec_\n{\n  FT_ModuleRec_ root;\n  FT_Driver_ClassRec_ *clazz;\n  FT_ListRec_ faces_list;\n  FT_GlyphLoaderRec_ *glyph_loader;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-servicecacherec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-servicecacherec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_ServiceCacheRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_ServiceCacheRec_\n{\n  void *service_POSTSCRIPT_FONT_NAME;\n  void *service_MULTI_MASTERS;\n  void *service_METRICS_VARIATIONS;\n  void *service_GLYPH_DICT;\n  void *service_PFR_METRICS;\n  void *service_WINFNT;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-incremental-metricsrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-incremental-metricsrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Incremental_MetricsRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_Incremental_MetricsRec_\n{\n  int bearing_x;\n  int bearing_y;\n  int advance;\n  int advance_v;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-incremental-funcsrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-incremental-funcsrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Incremental_FuncsRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct FT_Incremental_FuncsRec_\n{\n  int (__fastcall *get_glyph_data)(struct FT_IncrementalRec_ *, unsigned int, FT_Data_ *);\n  void (__fastcall *free_glyph_data)(struct FT_IncrementalRec_ *, FT_Data_ *);\n  int (__fastcall *get_glyph_metrics)(struct FT_IncrementalRec_ *, unsigned int, unsigned __int8, FT_Incremental_MetricsRec_ *);\n};\n\n")])])]),e("h3",{attrs:{id:"ft-incremental-interfacerec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-incremental-interfacerec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Incremental_InterfaceRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FT_Incremental_InterfaceRec_\n{\n  const FT_Incremental_FuncsRec_ *funcs;\n  struct FT_IncrementalRec_ *object;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-face-internalrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-face-internalrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Face_InternalRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __declspec(align(8)) FT_Face_InternalRec_\n{\n  FT_Matrix_ transform_matrix;\n  FT_Vector_ transform_delta;\n  int transform_flags;\n  FT_ServiceCacheRec_ services;\n  FT_Incremental_InterfaceRec_ *incremental_interface;\n  char no_stem_darkening;\n  int random_seed;\n  int refcount;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-slot-internalrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-slot-internalrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_Slot_InternalRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __declspec(align(8)) FT_Slot_InternalRec_\n{\n  FT_GlyphLoaderRec_ *loader;\n  unsigned int flags;\n  unsigned __int8 glyph_transformed;\n  FT_Matrix_ glyph_matrix;\n  FT_Vector_ glyph_delta;\n  void *glyph_hints;\n  int load_flags;\n};\n\n")])])]),e("h3",{attrs:{id:"ft-glyphrec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ft-glyphrec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FT_GlyphRec_")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __declspec(align(8)) FT_GlyphRec_\n{\n  FT_LibraryRec_ *library;\n  const FT_Glyph_Class_ *clazz;\n  FT_Glyph_Format_ format;\n  FT_Vector_ advance;\n};\n\n")])])]),e("h3",{attrs:{id:"fontrepository-parseandloadmetadatafonts-l2-lambda-88925860aafd3405404c7e1df5755f91"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fontrepository-parseandloadmetadatafonts-l2-lambda-88925860aafd3405404c7e1df5755f91"}},[t._v("#")]),t._v(" "),e("code",[t._v("FontRepository::parseAndLoadMetadataFonts::__l2::<lambda_88925860aafd3405404c7e1df5755f91>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FontRepository::parseAndLoadMetadataFonts::__l2::<lambda_88925860aafd3405404c7e1df5755f91>\n{\n  FontRepository *const __this;\n  std::shared_ptr<std::vector<std::shared_ptr<Font>> > fontsLoaded;\n};\n\n")])])]),e("h3",{attrs:{id:"fontrepository-parseandloadmetadatafonts-l2-lambda-31bdad871b22ac7caa6a500c31451947"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fontrepository-parseandloadmetadatafonts-l2-lambda-31bdad871b22ac7caa6a500c31451947"}},[t._v("#")]),t._v(" "),e("code",[t._v("FontRepository::parseAndLoadMetadataFonts::__l2::<lambda_31bdad871b22ac7caa6a500c31451947>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FontRepository::parseAndLoadMetadataFonts::__l2::<lambda_31bdad871b22ac7caa6a500c31451947>\n{\n  FontRepository *const __this;\n  mce::TextureGroup *textureGroup;\n  std::shared_ptr<std::vector<std::shared_ptr<Font>> > fontsLoaded;\n};\n\n")])])]),e("h3",{attrs:{id:"fontrepository-loaddefaultfonts-l2-lambda-7fe000d9f42c358f49b7b7b1aeed026a-l2-lambda-ac0252748f91156e691c7d207fae26a9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fontrepository-loaddefaultfonts-l2-lambda-7fe000d9f42c358f49b7b7b1aeed026a-l2-lambda-ac0252748f91156e691c7d207fae26a9"}},[t._v("#")]),t._v(" "),e("code",[t._v("FontRepository::loadDefaultFonts::__l2::<lambda_7fe000d9f42c358f49b7b7b1aeed026a>::()::__l2::<lambda_ac0252748f91156e691c7d207fae26a9>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FontRepository::loadDefaultFonts::__l2::<lambda_7fe000d9f42c358f49b7b7b1aeed026a>::()::__l2::<lambda_ac0252748f91156e691c7d207fae26a9>\n{\n  const std::string alias;\n  const Core::Path fontPagePrefix;\n  std::shared_ptr<std::shared_ptr<MSDFFont> > loadedFont;\n  mce::TextureGroup *textureGroup;\n};\n\n")])])]),e("h3",{attrs:{id:"fontrepository-loaddefaultfonts-l2-lambda-4f422798d8e19b20911552d15f97b207-l2-lambda-97de77aa165493b1e2383fa55c9aadef"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fontrepository-loaddefaultfonts-l2-lambda-4f422798d8e19b20911552d15f97b207-l2-lambda-97de77aa165493b1e2383fa55c9aadef"}},[t._v("#")]),t._v(" "),e("code",[t._v("FontRepository::loadDefaultFonts::__l2::<lambda_4f422798d8e19b20911552d15f97b207>::()::__l2::<lambda_97de77aa165493b1e2383fa55c9aadef>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FontRepository::loadDefaultFonts::__l2::<lambda_4f422798d8e19b20911552d15f97b207>::()::__l2::<lambda_97de77aa165493b1e2383fa55c9aadef>\n{\n  const std::string alias;\n  const Core::Path asciiName;\n  const Core::Path unicodeName;\n  std::shared_ptr<std::shared_ptr<BitmapFont> > loadedFont;\n  mce::TextureGroup *textureGroup;\n};\n\n")])])]),e("h3",{attrs:{id:"font-gettextheight-l2-lambda-1e8f76698c9e82e8bd78f1bc5facf7f6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#font-gettextheight-l2-lambda-1e8f76698c9e82e8bd78f1bc5facf7f6"}},[t._v("#")]),t._v(" "),e("code",[t._v("Font::getTextHeight::__l2::<lambda_1e8f76698c9e82e8bd78f1bc5facf7f6>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Font::getTextHeight::__l2::<lambda_1e8f76698c9e82e8bd78f1bc5facf7f6>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"font-drawwordwrap-l2-lambda-109e8cc2ec8061788bcb30eaf502d4f4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#font-drawwordwrap-l2-lambda-109e8cc2ec8061788bcb30eaf502d4f4"}},[t._v("#")]),t._v(" "),e("code",[t._v("Font::_drawWordWrap::__l2::<lambda_109e8cc2ec8061788bcb30eaf502d4f4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Font::_drawWordWrap::__l2::<lambda_109e8cc2ec8061788bcb30eaf502d4f4>\n{\n  std::string *text;\n};\n\n")])])]),e("h3",{attrs:{id:"filedeleteprogresshandler-onstart-l2-lambda-f66a9fb0340462681c16b2ec2802629e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedeleteprogresshandler-onstart-l2-lambda-f66a9fb0340462681c16b2ec2802629e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDeleteProgressHandler::onStart::__l2::<lambda_f66a9fb0340462681c16b2ec2802629e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDeleteProgressHandler::onStart::__l2::<lambda_f66a9fb0340462681c16b2ec2802629e>\n{\n  MinecraftScreenModel *minecraftScreenModel;\n  FileDeleteProgressHandler *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedeleteprogresshandler-onstart-l2-lambda-d001b78764dbe0c23a6aa3eb590da16a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedeleteprogresshandler-onstart-l2-lambda-d001b78764dbe0c23a6aa3eb590da16a"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDeleteProgressHandler::onStart::__l2::<lambda_d001b78764dbe0c23a6aa3eb590da16a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDeleteProgressHandler::onStart::__l2::<lambda_d001b78764dbe0c23a6aa3eb590da16a>\n{\n  FileDeleteProgressHandler *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filecopyprogresshandler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filecopyprogresshandler"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileCopyProgressHandler")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileCopyProgressHandler : ProgressHandler\n{\n  std::string mTitle;\n  Core::PathBuffer<std::string > mDestPath;\n  std::shared_ptr<bool> mExistenceTracker;\n  std::function<void __cdecl(bool)> mCallback;\n  std::unique_ptr<TaskGroup> mIOTaskGroup;\n  ResourceLocation mSrcLocation;\n  bool mSrcZip;\n  bool mDestZip;\n  bool mCopyComplete;\n  bool mCopySuccess;\n  std::vector<std::string> mExcludeDirs;\n};\n\n")])])]),e("h3",{attrs:{id:"filecopyprogresshandler-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filecopyprogresshandler-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileCopyProgressHandler_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileCopyProgressHandler_vtbl\n{\n  void (__fastcall *~ProgressHandler)(ProgressHandler *this);\n  void (__fastcall *onStart)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *tick)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *onCancel)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *onExit)(ProgressHandler *this, MinecraftScreenModel *);\n  LoadingState (__fastcall *getLoadingState)(ProgressHandler *this, MinecraftScreenModel *);\n  float (__fastcall *getLoadingProgress)(ProgressHandler *this, MinecraftScreenModel *);\n  std::string *(__fastcall *getProgressMessage)(ProgressHandler *this, std::string *result, MinecraftScreenModel *);\n  void (__fastcall *addEventProperties)(ProgressHandler *this, std::unordered_map<std::string,std::string> *);\n  std::string *(__fastcall *getTTSProgressMessage)(ProgressHandler *this, std::string *result);\n  std::string *(__fastcall *getTitleText)(ProgressHandler *this, std::string *result);\n  ProgressAnimation (__fastcall *showLoadingBar)(ProgressHandler *this);\n};\n\n")])])]),e("h3",{attrs:{id:"filecopyprogresshandler-onstart-l2-lambda-845c8ae8b621017e79b44eea229b9484"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filecopyprogresshandler-onstart-l2-lambda-845c8ae8b621017e79b44eea229b9484"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileCopyProgressHandler::onStart::__l2::<lambda_845c8ae8b621017e79b44eea229b9484>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileCopyProgressHandler::onStart::__l2::<lambda_845c8ae8b621017e79b44eea229b9484>\n{\n  std::weak_ptr<bool> weak_existence;\n  FileCopyProgressHandler *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileaccesstransforms-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileaccesstransforms-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileAccessTransforms_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileAccessTransforms_vtbl\n{\n  void (__fastcall *~FileAccessTransforms)(FileAccessTransforms *this);\n  bool (__fastcall *readTransform)(FileAccessTransforms *this, std::vector<unsigned char> *);\n  bool (__fastcall *writeTransform)(FileAccessTransforms *this, std::vector<unsigned char> *);\n};\n\n")])])]),e("h3",{attrs:{id:"filteredcontainermodel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filteredcontainermodel"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilteredContainerModel")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilteredContainerModel : ExpandoContainerModel\n{\n  bool mDoExpandoGroups;\n  bool mIsFiltering;\n  int mFilteredItemCount;\n  std::vector<std::pair<ItemInstance,unsigned int>> mSavedItems;\n  std::vector<std::pair<ItemInstance,unsigned int>> mActiveFilteredExpandableSetHeads;\n  std::function<enum FilterResult __cdecl(ItemInstance const &)> mFilterRule;\n};\n\n")])])]),e("h3",{attrs:{id:"filteredcontainermodel-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filteredcontainermodel-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilteredContainerModel_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilteredContainerModel_vtbl\n{\n  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);\n  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);\n  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);\n  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);\n  void (__fastcall *postInit)(ContainerModel *this);\n  void (__fastcall *releaseResources)(ContainerModel *this);\n  int (__fastcall *getContainerSize)(ContainerModel *this);\n  int (__fastcall *getFilteredContainerSize)(ContainerModel *this);\n  void (__fastcall *tick)(ContainerModel *this, int);\n  ContainerWeakRef *(__fastcall *getContainerWeakRef)(ContainerModel *this, ContainerWeakRef *result);\n  const ItemStack *(__fastcall *getItemStack)(ContainerModel *this, int);\n  const std::vector<ItemStack> *(__fastcall *getItems)(ContainerModel *this);\n  const ItemInstance *(__fastcall *getItemInstance)(ContainerModel *this, int);\n  const ItemStackBase *(__fastcall *getItemStackBase)(ContainerModel *this, int);\n  bool (__fastcall *isItemInstanceBased)(ContainerModel *this);\n  void (__fastcall *setItem)(ContainerModel *this, int, const ItemStack *);\n  bool (__fastcall *isValid)(ContainerModel *this);\n  bool (__fastcall *isItemFiltered)(ContainerModel *this, const ItemStackBase *);\n  bool (__fastcall *isExpanableItemFiltered)(ContainerModel *this, int);\n  ContainerExpandStatus (__fastcall *getItemExpandStatus)(ContainerModel *this, int);\n  const std::string *(__fastcall *getItemGroupName)(ContainerModel *this, int);\n  void (__fastcall *switchItemExpando)(ContainerModel *this, int);\n  Container *(__fastcall *_getContainer)(ContainerModel *this);\n  int (__fastcall *_getContainerOffset)(ContainerModel *this);\n  void (__fastcall *_onItemChanged)(ContainerModel *this, int, const ItemStack *, const ItemStack *);\n  void (__fastcall *setItemInstance)(ExpandoContainerModel *this, int, const ItemInstance *);\n  void (__fastcall *refreshContainer)(ExpandoContainerModel *this, bool);\n};\n\n")])])]),e("h3",{attrs:{id:"floatoption"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floatoption"}},[t._v("#")]),t._v(" "),e("code",[t._v("FloatOption")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FloatOption : Option\n{\n  const float VALUE_MIN;\n  const float VALUE_MAX;\n  float mValue;\n  float mDefaultValue;\n  const float DELTA;\n};\n\n")])])]),e("h3",{attrs:{id:"floatoption-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floatoption-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FloatOption_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FloatOption_vtbl\n{\n  void (__fastcall *~Option)(Option *this);\n  void (__fastcall *save)(Option *this, std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *load)(Option *this, const Json::Value *);\n  void (__fastcall *load)(Option *this, std::map<std::string,std::string> *);\n  void (__fastcall *load)(Option *this, const std::string *);\n};\n\n")])])]),e("h3",{attrs:{id:"feedbackpromptcontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feedbackpromptcontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeedbackPromptController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeedbackPromptController : ClientInstanceScreenController\n{\n  const std::string mTitleId;\n  const std::string mImage;\n  const std::string mButtonName;\n};\n\n")])])]),e("h3",{attrs:{id:"feedbackpromptcontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feedbackpromptcontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeedbackPromptController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FeedbackPromptController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-realmdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-realmdata"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::RealmData")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::RealmData\n{\n  std::string realmID;\n  std::string realmName;\n  std::string realmVersion;\n  std::string realmVersionName;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FileDownloadScreenController : MainMenuScreenController\n{\n  FileDownloadScreenController::RealmData mRealmData;\n  float mDownloadProgress;\n  bool mContinueOnWifi;\n  bool mWifiWarningDisplaying;\n  bool mDownloadStarted;\n  bool mIsWaitingForCancel;\n  DownloadState mDownloadState;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileDownloadScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController : MainMenuScreenController\n{\n  std::string mRealmdID;\n  std::string mFileID;\n  bool mNeedArchiving;\n  float mUploadProgress;\n  bool mContinueOnWifi;\n  bool mWifiWarningDisplaying;\n  bool mUploadStarted;\n  UploadState mUploadState;\n  Core::FileUploadType mFileUploadType;\n  std::function<void __cdecl(enum UploadState)> mCallback;\n  std::shared_ptr<FileUploadManager> mFileUploadManager;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileUploadScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"furnacescreencontrollerproxycallbacks-lambda-68069f7fbd4730b8b6a4b64cd4ec15f3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnacescreencontrollerproxycallbacks-lambda-68069f7fbd4730b8b6a4b64cd4ec15f3"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceScreenControllerProxyCallbacks::<lambda_68069f7fbd4730b8b6a4b64cd4ec15f3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FurnaceScreenControllerProxyCallbacks::<lambda_68069f7fbd4730b8b6a4b64cd4ec15f3>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"furnacescreencontrollerproxycallbacks-lambda-9f2f11c7cc5957bbdf8a1f458419fc5b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnacescreencontrollerproxycallbacks-lambda-9f2f11c7cc5957bbdf8a1f458419fc5b"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceScreenControllerProxyCallbacks::<lambda_9f2f11c7cc5957bbdf8a1f458419fc5b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FurnaceScreenControllerProxyCallbacks::<lambda_9f2f11c7cc5957bbdf8a1f458419fc5b>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"furnacescreencontrollerproxycallbacks-lambda-6e9c8476017789a33bb2e3f39ef6501b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnacescreencontrollerproxycallbacks-lambda-6e9c8476017789a33bb2e3f39ef6501b"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceScreenControllerProxyCallbacks::<lambda_6e9c8476017789a33bb2e3f39ef6501b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FurnaceScreenControllerProxyCallbacks::<lambda_6e9c8476017789a33bb2e3f39ef6501b>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"furnacescreencontrollerproxy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnacescreencontrollerproxy"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceScreenControllerProxy")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FurnaceScreenControllerProxy : ScreenControllerProxy\n{\n  const FurnaceScreenControllerProxyCallbacks mCallbacks;\n};\n\n")])])]),e("h3",{attrs:{id:"furnacescreencontrollerproxy-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnacescreencontrollerproxy-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceScreenControllerProxy_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FurnaceScreenControllerProxy_vtbl\n{\n  void (__fastcall *~ScreenControllerProxy)(ScreenControllerProxy *this);\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-displayuploaderrorpopup-l2-lambda-56479a187dcfd6ee8d9902a0e71991b4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-displayuploaderrorpopup-l2-lambda-56479a187dcfd6ee8d9902a0e71991b4"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_displayUploadErrorPopup::__l2::<lambda_56479a187dcfd6ee8d9902a0e71991b4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_displayUploadErrorPopup::__l2::<lambda_56479a187dcfd6ee8d9902a0e71991b4>\n{\n  std::weak_ptr<FileUploadScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-8ee8e9c67e75344676445575aa03028f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-8ee8e9c67e75344676445575aa03028f"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_8ee8e9c67e75344676445575aa03028f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_8ee8e9c67e75344676445575aa03028f>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-a41320f59fb4cdb7cf30ce6c99707a59"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-a41320f59fb4cdb7cf30ce6c99707a59"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_a41320f59fb4cdb7cf30ce6c99707a59>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_a41320f59fb4cdb7cf30ce6c99707a59>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-5d144608546dbfd12362935a26df5fe2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-5d144608546dbfd12362935a26df5fe2"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_5d144608546dbfd12362935a26df5fe2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_5d144608546dbfd12362935a26df5fe2>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-e9304b7a424ecfbe227e796bc2e63013"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-e9304b7a424ecfbe227e796bc2e63013"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_e9304b7a424ecfbe227e796bc2e63013>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_e9304b7a424ecfbe227e796bc2e63013>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-33c32188ae4ce4f1a02432932a76c7c1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-33c32188ae4ce4f1a02432932a76c7c1"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_33c32188ae4ce4f1a02432932a76c7c1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_33c32188ae4ce4f1a02432932a76c7c1>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-53068d20d0cb864e1047432b0d9cdc33"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-53068d20d0cb864e1047432b0d9cdc33"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_53068d20d0cb864e1047432b0d9cdc33>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_53068d20d0cb864e1047432b0d9cdc33>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-cdf8cce4febf7d2f4dae8b6771bbb5b0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-cdf8cce4febf7d2f4dae8b6771bbb5b0"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_cdf8cce4febf7d2f4dae8b6771bbb5b0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_cdf8cce4febf7d2f4dae8b6771bbb5b0>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-6218337b9af756811c5a0c44f91959a1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-6218337b9af756811c5a0c44f91959a1"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_6218337b9af756811c5a0c44f91959a1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_6218337b9af756811c5a0c44f91959a1>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-590fca01935110f4321c59eab36a6688"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-590fca01935110f4321c59eab36a6688"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_590fca01935110f4321c59eab36a6688>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_590fca01935110f4321c59eab36a6688>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-63c99c602725913d46f15e1db4705954"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-63c99c602725913d46f15e1db4705954"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_63c99c602725913d46f15e1db4705954>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_63c99c602725913d46f15e1db4705954>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-44e7db5e29f5d557c5a0fc50a4e0360e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-44e7db5e29f5d557c5a0fc50a4e0360e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_44e7db5e29f5d557c5a0fc50a4e0360e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_44e7db5e29f5d557c5a0fc50a4e0360e>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-bec49fcaff1cdd081d60664ec8b895ec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-bec49fcaff1cdd081d60664ec8b895ec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_bec49fcaff1cdd081d60664ec8b895ec>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_bec49fcaff1cdd081d60664ec8b895ec>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-b5162ffa6e174b6687e4fce666835e1e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-b5162ffa6e174b6687e4fce666835e1e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_b5162ffa6e174b6687e4fce666835e1e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_b5162ffa6e174b6687e4fce666835e1e>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-82b9e20ea4e5e480bc08d809da2c4815"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-82b9e20ea4e5e480bc08d809da2c4815"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_82b9e20ea4e5e480bc08d809da2c4815>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_82b9e20ea4e5e480bc08d809da2c4815>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-b00c115ac684d8c7428ecfbed066a03c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-b00c115ac684d8c7428ecfbed066a03c"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_b00c115ac684d8c7428ecfbed066a03c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_b00c115ac684d8c7428ecfbed066a03c>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registerbindings-l2-lambda-9a195338068e0741805c9ba0c4634bf4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registerbindings-l2-lambda-9a195338068e0741805c9ba0c4634bf4"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerBindings::__l2::<lambda_9a195338068e0741805c9ba0c4634bf4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerBindings::__l2::<lambda_9a195338068e0741805c9ba0c4634bf4>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registereventhandlers-l2-lambda-10f62041708a9870311deb91f897c1bf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registereventhandlers-l2-lambda-10f62041708a9870311deb91f897c1bf"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerEventHandlers::__l2::<lambda_10f62041708a9870311deb91f897c1bf>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerEventHandlers::__l2::<lambda_10f62041708a9870311deb91f897c1bf>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registereventhandlers-l2-lambda-a0267568ae2a9f2a627ec27bf4e9481e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registereventhandlers-l2-lambda-a0267568ae2a9f2a627ec27bf4e9481e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerEventHandlers::__l2::<lambda_a0267568ae2a9f2a627ec27bf4e9481e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerEventHandlers::__l2::<lambda_a0267568ae2a9f2a627ec27bf4e9481e>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-registereventhandlers-l2-lambda-c32e1d45ca7729f5575d04896f9c582d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-registereventhandlers-l2-lambda-c32e1d45ca7729f5575d04896f9c582d"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_registerEventHandlers::__l2::<lambda_c32e1d45ca7729f5575d04896f9c582d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_registerEventHandlers::__l2::<lambda_c32e1d45ca7729f5575d04896f9c582d>\n{\n  FileUploadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadscreencontroller-startupload-l13-lambda-2d9bac4d3ebd66077c58a3e88c390363"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadscreencontroller-startupload-l13-lambda-2d9bac4d3ebd66077c58a3e88c390363"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadScreenController::_startUpload::__l13::<lambda_2d9bac4d3ebd66077c58a3e88c390363>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadScreenController::_startUpload::__l13::<lambda_2d9bac4d3ebd66077c58a3e88c390363>\n{\n  std::weak_ptr<FileUploadScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-displaydownloaderrorpopup-l2-lambda-016f9441dc96df5e1212767102cffed0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-displaydownloaderrorpopup-l2-lambda-016f9441dc96df5e1212767102cffed0"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_displayDownloadErrorPopup::__l2::<lambda_016f9441dc96df5e1212767102cffed0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_displayDownloadErrorPopup::__l2::<lambda_016f9441dc96df5e1212767102cffed0>\n{\n  std::weak_ptr<FileDownloadScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-7da7beb6a65d54a1547704035d2c60dd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-7da7beb6a65d54a1547704035d2c60dd"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_7da7beb6a65d54a1547704035d2c60dd>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_7da7beb6a65d54a1547704035d2c60dd>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-6392fad553f144397ab5bcc2a1d34410"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-6392fad553f144397ab5bcc2a1d34410"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_6392fad553f144397ab5bcc2a1d34410>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_6392fad553f144397ab5bcc2a1d34410>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-d634eb97b82394f3e97dcded9545e06c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-d634eb97b82394f3e97dcded9545e06c"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_d634eb97b82394f3e97dcded9545e06c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_d634eb97b82394f3e97dcded9545e06c>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-bf7ee73a20735c45f364febe848a40dc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-bf7ee73a20735c45f364febe848a40dc"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_bf7ee73a20735c45f364febe848a40dc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_bf7ee73a20735c45f364febe848a40dc>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-da21480f755e865b17249a84b077e41e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-da21480f755e865b17249a84b077e41e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_da21480f755e865b17249a84b077e41e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_da21480f755e865b17249a84b077e41e>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-9d75819f3dfd579957095ef2ceb945c5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-9d75819f3dfd579957095ef2ceb945c5"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_9d75819f3dfd579957095ef2ceb945c5>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_9d75819f3dfd579957095ef2ceb945c5>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-f99f8a6b71a89bd7283c91f2e01d22cc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-f99f8a6b71a89bd7283c91f2e01d22cc"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_f99f8a6b71a89bd7283c91f2e01d22cc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_f99f8a6b71a89bd7283c91f2e01d22cc>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-d9aab4afec3fedb3c12b0897b272bc41"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-d9aab4afec3fedb3c12b0897b272bc41"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_d9aab4afec3fedb3c12b0897b272bc41>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_d9aab4afec3fedb3c12b0897b272bc41>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-b60d51e9e7c65f65d9f81d6be7ae464e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-b60d51e9e7c65f65d9f81d6be7ae464e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_b60d51e9e7c65f65d9f81d6be7ae464e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_b60d51e9e7c65f65d9f81d6be7ae464e>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-996752e5deef7428293288b78e380631"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-996752e5deef7428293288b78e380631"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_996752e5deef7428293288b78e380631>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_996752e5deef7428293288b78e380631>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-b1ff2e52ed7aa2dee4b9f89ce6c1d862"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-b1ff2e52ed7aa2dee4b9f89ce6c1d862"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_b1ff2e52ed7aa2dee4b9f89ce6c1d862>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_b1ff2e52ed7aa2dee4b9f89ce6c1d862>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-05336d8bcda55d6e0b4f646905c793e0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-05336d8bcda55d6e0b4f646905c793e0"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_05336d8bcda55d6e0b4f646905c793e0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_05336d8bcda55d6e0b4f646905c793e0>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-316a697dff604b8b60e9d793ceae3786"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-316a697dff604b8b60e9d793ceae3786"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_316a697dff604b8b60e9d793ceae3786>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_316a697dff604b8b60e9d793ceae3786>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-498a0262eabc38b6226b47f518d4c077"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-498a0262eabc38b6226b47f518d4c077"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_498a0262eabc38b6226b47f518d4c077>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_498a0262eabc38b6226b47f518d4c077>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-07f3a1b857c8b974fed3caa7b4f0db34"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-07f3a1b857c8b974fed3caa7b4f0db34"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_07f3a1b857c8b974fed3caa7b4f0db34>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_07f3a1b857c8b974fed3caa7b4f0db34>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registerbindings-l2-lambda-271488a91b26a46f85ad51579d06d1a4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registerbindings-l2-lambda-271488a91b26a46f85ad51579d06d1a4"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerBindings::__l2::<lambda_271488a91b26a46f85ad51579d06d1a4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerBindings::__l2::<lambda_271488a91b26a46f85ad51579d06d1a4>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registereventhandlers-l2-lambda-44f09b874ee9fcdf631c347a92c94060"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registereventhandlers-l2-lambda-44f09b874ee9fcdf631c347a92c94060"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerEventHandlers::__l2::<lambda_44f09b874ee9fcdf631c347a92c94060>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerEventHandlers::__l2::<lambda_44f09b874ee9fcdf631c347a92c94060>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registereventhandlers-l2-lambda-cd96aaa67025ff6782d0910f7df6f119"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registereventhandlers-l2-lambda-cd96aaa67025ff6782d0910f7df6f119"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerEventHandlers::__l2::<lambda_cd96aaa67025ff6782d0910f7df6f119>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerEventHandlers::__l2::<lambda_cd96aaa67025ff6782d0910f7df6f119>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadscreencontroller-registereventhandlers-l2-lambda-74500b1f1908729aafc9a10e57877dd5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadscreencontroller-registereventhandlers-l2-lambda-74500b1f1908729aafc9a10e57877dd5"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadScreenController::_registerEventHandlers::__l2::<lambda_74500b1f1908729aafc9a10e57877dd5>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadScreenController::_registerEventHandlers::__l2::<lambda_74500b1f1908729aafc9a10e57877dd5>\n{\n  FileDownloadScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"feedbackpromptcontroller-registerbindings-l2-lambda-bbece4f512b264b74faf5ba26b7d54aa"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feedbackpromptcontroller-registerbindings-l2-lambda-bbece4f512b264b74faf5ba26b7d54aa"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeedbackPromptController::_registerBindings::__l2::<lambda_bbece4f512b264b74faf5ba26b7d54aa>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeedbackPromptController::_registerBindings::__l2::<lambda_bbece4f512b264b74faf5ba26b7d54aa>\n{\n  FeedbackPromptController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"feedbackpromptcontroller-registerbindings-l2-lambda-5e849c6e2f41680228c07a77ce688bfb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feedbackpromptcontroller-registerbindings-l2-lambda-5e849c6e2f41680228c07a77ce688bfb"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeedbackPromptController::_registerBindings::__l2::<lambda_5e849c6e2f41680228c07a77ce688bfb>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeedbackPromptController::_registerBindings::__l2::<lambda_5e849c6e2f41680228c07a77ce688bfb>\n{\n  FeedbackPromptController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"feedbackpromptcontroller-registerbindings-l2-lambda-b03504ae3a90eba43bc483a487f7bf8e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feedbackpromptcontroller-registerbindings-l2-lambda-b03504ae3a90eba43bc483a487f7bf8e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeedbackPromptController::_registerBindings::__l2::<lambda_b03504ae3a90eba43bc483a487f7bf8e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeedbackPromptController::_registerBindings::__l2::<lambda_b03504ae3a90eba43bc483a487f7bf8e>\n{\n  FeedbackPromptController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"feedbackpromptcontroller-registereventhandlers-l2-lambda-64f43d278793f4163eaa5b14f6e2ef4e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feedbackpromptcontroller-registereventhandlers-l2-lambda-64f43d278793f4163eaa5b14f6e2ef4e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeedbackPromptController::_registerEventHandlers::__l2::<lambda_64f43d278793f4163eaa5b14f6e2ef4e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeedbackPromptController::_registerEventHandlers::__l2::<lambda_64f43d278793f4163eaa5b14f6e2ef4e>\n{\n  FeedbackPromptController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"feedbackpromptcontroller-registereventhandlers-l2-lambda-e5d09be02c5d2616caaafaec652597f8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feedbackpromptcontroller-registereventhandlers-l2-lambda-e5d09be02c5d2616caaafaec652597f8"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeedbackPromptController::_registerEventHandlers::__l2::<lambda_e5d09be02c5d2616caaafaec652597f8>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeedbackPromptController::_registerEventHandlers::__l2::<lambda_e5d09be02c5d2616caaafaec652597f8>\n{\n  FeedbackPromptController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"facedirectionalactorblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#facedirectionalactorblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FaceDirectionalActorBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FaceDirectionalActorBlock : ActorBlock\n{\n  bool mHorizontalOnly;\n  float mYRotOffset;\n};\n\n")])])]),e("h3",{attrs:{id:"facedirectionalactorblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#facedirectionalactorblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FaceDirectionalActorBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FaceDirectionalActorBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),e("h3",{attrs:{id:"formjsonvalidator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#formjsonvalidator"}},[t._v("#")]),t._v(" "),e("code",[t._v("FormJsonValidator")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FormJsonValidator\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filtercollection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtercollection"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterCollection")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FilterCollection\n{\n  std::string mPrefix;\n  StoreFilter::MenuScreenType mScreenType;\n  std::vector<StoreFilter::Toggle> mCollection;\n  unsigned int mSelectedCount;\n  unsigned int mDirty;\n  bool mOneFilterSelection;\n};\n\n")])])]),e("h3",{attrs:{id:"focusmanager-updatependingfocuscontrol-l2-lambda-2e50f233adf9bc85cb1c5a5ad8433623"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focusmanager-updatependingfocuscontrol-l2-lambda-2e50f233adf9bc85cb1c5a5ad8433623"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusManager::updatePendingFocusControl::__l2::<lambda_2e50f233adf9bc85cb1c5a5ad8433623>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FocusManager::updatePendingFocusControl::__l2::<lambda_2e50f233adf9bc85cb1c5a5ad8433623>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"focusmanager-sweeptonextfocusobject-l26-lambda-fd9f72a95693dd52737e0c11d36d84ac"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focusmanager-sweeptonextfocusobject-l26-lambda-fd9f72a95693dd52737e0c11d36d84ac"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusManager::_sweepToNextFocusObject::__l26::<lambda_fd9f72a95693dd52737e0c11d36d84ac>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FocusManager::_sweepToNextFocusObject::__l26::<lambda_fd9f72a95693dd52737e0c11d36d84ac>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"focusmanager-ctor-l2-lambda-db482c4c922ab9a00f2e95c83a532c5b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#focusmanager-ctor-l2-lambda-db482c4c922ab9a00f2e95c83a532c5b"}},[t._v("#")]),t._v(" "),e("code",[t._v("FocusManager::{ctor}::__l2::<lambda_db482c4c922ab9a00f2e95c83a532c5b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FocusManager::{ctor}::__l2::<lambda_db482c4c922ab9a00f2e95c83a532c5b>\n{\n  FocusManager *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fullscreeneffectrenderer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fullscreeneffectrenderer"}},[t._v("#")]),t._v(" "),e("code",[t._v("FullScreenEffectRenderer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FullScreenEffectRenderer : AppPlatformListener\n{\n  std::unordered_map<unsigned int,mce::Mesh> mMeshes;\n  mce::Mesh mHeadlockedOverlayMesh;\n  mce::Mesh mHeadlockedOverlayMeshFill;\n  mce::TexturePtr mAtlasTexture;\n  mce::TexturePtr mPumpkinTex;\n  mce::MaterialPtr mFullscreenCubeOpaqueMaterial;\n  mce::MaterialPtr mFullscreenCubeBlendMaterial;\n};\n\n")])])]),e("h3",{attrs:{id:"fullscreeneffectrenderer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fullscreeneffectrenderer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FullScreenEffectRenderer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FullScreenEffectRenderer_vtbl\n{\n  void (__fastcall *~AppPlatformListener)(AppPlatformListener *this);\n  void (__fastcall *onLowMemory)(AppPlatformListener *this);\n  void (__fastcall *onAppPaused)(AppPlatformListener *this);\n  void (__fastcall *onAppUnpaused)(AppPlatformListener *this);\n  void (__fastcall *onAppPreSuspended)(AppPlatformListener *this);\n  void (__fastcall *onAppSuspended)(AppPlatformListener *this);\n  void (__fastcall *onAppResumed)(AppPlatformListener *this);\n  void (__fastcall *onAppFocusLost)(AppPlatformListener *this);\n  void (__fastcall *onAppFocusGained)(AppPlatformListener *this);\n  void (__fastcall *onAppTerminated)(AppPlatformListener *this);\n  void (__fastcall *onOperationModeChanged)(AppPlatformListener *this, const OperationMode);\n  void (__fastcall *onPerformanceModeChanged)(AppPlatformListener *this, const bool);\n  void (__fastcall *onPushNotificationReceived)(AppPlatformListener *this, const PushNotificationMessage *);\n  void (__fastcall *onResizeBegin)(AppPlatformListener *this);\n  void (__fastcall *onResizeEnd)(AppPlatformListener *this);\n  void (__fastcall *onDeviceLost)(AppPlatformListener *this);\n};\n\n")])])]),e("h3",{attrs:{id:"firstchargeinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firstchargeinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("FirstChargeInfo")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FirstChargeInfo\n{\n  bool mIsBuy;\n  std::string mTextureUrl;\n  std::string mTextureMD5;\n  std::unique_ptr<ResourceLocation> mResourceLocation;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController : MinecraftScreenController\n{\n  bool isInit;\n  const std::string mScreenName;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FoldMeuScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"flameparticle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flameparticle"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlameParticle")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FlameParticle : Particle\n{\n  float oSize;\n};\n\n")])])]),e("h3",{attrs:{id:"flameparticle-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flameparticle-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlameParticle_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlameParticle_vtbl\n{\n  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);\n  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);\n  void (__fastcall *~Particle)(Particle *this);\n  void (__fastcall *normalTick)(Particle *this);\n  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);\n  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);\n  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);\n  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);\n  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);\n};\n\n")])])]),e("h3",{attrs:{id:"fireworksstarter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworksstarter"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworksStarter")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FireworksStarter : Particle\n{\n  ParticleEngine *mEngine;\n  std::unique_ptr<CompoundTag> mTag;\n  const ListTag *mExplosions;\n  bool mTwinkleDelay;\n  Level *mLevel;\n};\n\n")])])]),e("h3",{attrs:{id:"fireworksstarter-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworksstarter-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworksStarter_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FireworksStarter_vtbl\n{\n  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);\n  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);\n  void (__fastcall *~Particle)(Particle *this);\n  void (__fastcall *normalTick)(Particle *this);\n  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);\n  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);\n  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);\n  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);\n  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);\n};\n\n")])])]),e("h3",{attrs:{id:"fireworkchargeitem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworkchargeitem"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworkChargeItem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FireworkChargeItem : Item\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fireworksitem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworksitem"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworksItem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FireworksItem : Item\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fireworkssparkparticle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworkssparkparticle"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworksSparkParticle")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FireworksSparkParticle : Particle\n{\n  bool mTrail;\n  bool mFlicker;\n  bool mHasFade;\n  int mBaseTex;\n  int mSpriteCount;\n  Level *mLevel;\n  mce::Color mFade;\n};\n\n")])])]),e("h3",{attrs:{id:"fireworkssparkparticle-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworkssparkparticle-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworksSparkParticle_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FireworksSparkParticle_vtbl\n{\n  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);\n  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);\n  void (__fastcall *~Particle)(Particle *this);\n  void (__fastcall *normalTick)(Particle *this);\n  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);\n  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);\n  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);\n  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);\n  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);\n};\n\n")])])]),e("h3",{attrs:{id:"fireworksoverlayparticle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworksoverlayparticle"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworksOverlayParticle")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FireworksOverlayParticle : Particle\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fireworksoverlayparticle-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworksoverlayparticle-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworksOverlayParticle_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FireworksOverlayParticle_vtbl\n{\n  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);\n  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);\n  void (__fastcall *~Particle)(Particle *this);\n  void (__fastcall *normalTick)(Particle *this);\n  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);\n  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);\n  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);\n  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);\n  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);\n};\n\n")])])]),e("h3",{attrs:{id:"fallingdustparticle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fallingdustparticle"}},[t._v("#")]),t._v(" "),e("code",[t._v("FallingDustParticle")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(4)) FallingDustParticle : Particle\n{\n  float oSize;\n  const int maxLifetime;\n  float rotSpeed;\n  bool insideBlock;\n};\n\n")])])]),e("h3",{attrs:{id:"fallingdustparticle-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fallingdustparticle-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FallingDustParticle_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FallingDustParticle_vtbl\n{\n  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);\n  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);\n  void (__fastcall *~Particle)(Particle *this);\n  void (__fastcall *normalTick)(Particle *this);\n  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);\n  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);\n  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);\n  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);\n  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);\n};\n\n")])])]),e("h3",{attrs:{id:"fooditemcomponent-saturationmodifier"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fooditemcomponent-saturationmodifier"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoodItemComponent::SaturationModifier")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoodItemComponent::SaturationModifier\n{\n  float mSaturationValue;\n};\n\n")])])]),e("h3",{attrs:{id:"fooditemcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fooditemcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoodItemComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoodItemComponent : ItemComponent, IFoodItemComponent\n{\n  int mNutrition;\n  FoodItemComponent::SaturationModifier mSaturationModifier;\n  ItemDescriptor mUsingConvertsTo;\n  bool mCanAlwaysEat;\n  DefinitionTrigger mOnConsume;\n};\n\n")])])]),e("h3",{attrs:{id:"fooditemcomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fooditemcomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoodItemComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FoodItemComponent_vtbl\n{\n  void (__fastcall *~ItemComponent)(ItemComponent *this);\n  bool (__fastcall *checkComponentDataForContentErrors)(ItemComponent *this);\n  void (__fastcall *writeSettings)(ItemComponent *this);\n  bool (__fastcall *useOn)(ItemComponent *this, ItemStack *, Actor *, const BlockPos *, unsigned __int8, const Vec3 *);\n  bool (__fastcall *isNetworkComponent)(ItemComponent *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(ItemComponent *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(ItemComponent *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"fallingblockrenderer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fallingblockrenderer"}},[t._v("#")]),t._v(" "),e("code",[t._v("FallingBlockRenderer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FallingBlockRenderer : ActorRenderer\n{\n  BlockTessellator *mBlockTessellator;\n  mce::MaterialPtr mHeavyBlockMaterial;\n  mce::MaterialPtr mHeavyBlockMaterialWithColor;\n};\n\n")])])]),e("h3",{attrs:{id:"fallingblockrenderer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fallingblockrenderer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FallingBlockRenderer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FallingBlockRenderer_vtbl\n{\n  void (__fastcall *~ActorShaderManager)(ActorShaderManager *this);\n  mce::Color *(__fastcall *_getOverlayColor)(ActorShaderManager *this, mce::Color *result, Actor *, float);\n  void (__fastcall *render)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderDebug)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderEffects)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderTrading)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *, float);\n  void (__fastcall *renderFlame)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderLeash)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *renderWaterHole)(ActorRenderer *this, BaseActorRenderContext *, ActorRenderData *);\n  void (__fastcall *addAdditionalRenderingIfNeeded)(ActorRenderer *this, mce::TextureGroup *);\n  void (__fastcall *renderWeaponEffect)(ActorRenderer *this, BaseActorRenderContext *, Actor *);\n  void (__fastcall *renderBindEffects)(ActorRenderer *this, BaseActorRenderContext *, Actor *);\n  AABB *(__fastcall *getRenderBounds)(ActorRenderer *this, AABB *result, const Actor *);\n  Vec3 *(__fastcall *getLeashOffset)(ActorRenderer *this, Vec3 *result, Actor *, float, float, float, bool, bool);\n  void (__fastcall *setIsOnScreen)(ActorRenderer *this, Actor *, const bool, float);\n  bool (__fastcall *shouldUpdateBonesAndEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);\n  bool (__fastcall *shouldUpdateEffectsIfOffScreen)(ActorRenderer *this, RenderParams *);\n  void (__fastcall *_bindModelEffectRender)(ActorRenderer *this, BaseActorRenderContext *, Mob *);\n};\n\n")])])]),e("h3",{attrs:{id:"fallingblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fallingblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FallingBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FallingBlock : PredictableProjectile\n{\n  bool mCreative;\n  FallingBlock::State mState;\n  int mWaitTicks;\n  int mTime;\n  bool mCancelDrop;\n  bool mHurtEntities;\n  int mFallDamageMax;\n  float mFallDamageAmount;\n  std::unique_ptr<CompoundTag> mFallingBlockSerId;\n  NewBlockID mFallingBlockId;\n  unsigned __int16 mFallingBlockData;\n};\n\n")])])]),e("h3",{attrs:{id:"fallingblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fallingblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FallingBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FallingBlock_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n};\n\n")])])]),e("h3",{attrs:{id:"freezeonhitsubcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#freezeonhitsubcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("FreezeOnHitSubcomponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FreezeOnHitSubcomponent : OnHitSubcomponent\n{\n  FreezeOnHitSubcomponent::Shape mShape;\n  float mSize;\n  bool mSnapToBlock;\n};\n\n")])])]),e("h3",{attrs:{id:"freezeonhitsubcomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#freezeonhitsubcomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FreezeOnHitSubcomponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FreezeOnHitSubcomponent_vtbl\n{\n  void (__fastcall *~OnHitSubcomponent)(OnHitSubcomponent *this);\n  void (__fastcall *readfromJSON)(OnHitSubcomponent *this, Json::Value *);\n  void (__fastcall *writetoJSON)(OnHitSubcomponent *this, Json::Value *);\n  void (__fastcall *doOnHitEffect)(OnHitSubcomponent *this, Actor *, ProjectileComponent *);\n  const char *(__fastcall *getName)(OnHitSubcomponent *this);\n};\n\n")])])]),e("h3",{attrs:{id:"fenceblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fenceblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FenceBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FenceBlock : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fenceblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fenceblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FenceBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FenceBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"flowerpotblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flowerpotblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlowerPotBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlowerPotBlock : ActorBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"flowerpotblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flowerpotblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlowerPotBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlowerPotBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),e("h3",{attrs:{id:"flowerpotblockactor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flowerpotblockactor"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlowerPotBlockActor")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlowerPotBlockActor : BlockActor\n{\n  const Block *mPlant;\n};\n\n")])])]),e("h3",{attrs:{id:"flowerpotblockactor-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flowerpotblockactor-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlowerPotBlockActor_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlowerPotBlockActor_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n};\n\n")])])]),e("h3",{attrs:{id:"facedirectionalcomponentdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#facedirectionalcomponentdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("FaceDirectionalComponentDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FaceDirectionalComponentDescription : BlockComponentDescription\n{\n  bool mHorizontalOnly;\n};\n\n")])])]),e("h3",{attrs:{id:"facedirectionalcomponentdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#facedirectionalcomponentdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FaceDirectionalComponentDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FaceDirectionalComponentDescription_vtbl\n{\n  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);\n  const std::string *(__fastcall *getName)(BlockComponentDescription *this);\n  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);\n  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,BlockComponentGroupDescription> > *, const BlockComponentFactory *);\n  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"facedirectionalcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#facedirectionalcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("FaceDirectionalComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FaceDirectionalComponent\n{\n  BlockLegacy *mBlockLegacy;\n  bool mHorizontalOnly;\n  float mYRotOffset;\n};\n\n")])])]),e("h3",{attrs:{id:"filesizerequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filesizerequest"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileSizeRequest")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileSizeRequest : RequestHandler\n{\n  const std::string mContentUrl;\n  std::function<void __cdecl(unsigned __int64)> mCallback;\n  std::shared_ptr<unsigned __int64> mContentLength;\n};\n\n")])])]),e("h3",{attrs:{id:"filesizerequest-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filesizerequest-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileSizeRequest_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileSizeRequest_vtbl\n{\n  void (__fastcall *~RequestHandler)(RequestHandler *this);\n  void (__fastcall *send)(RequestHandler *this);\n  void (__fastcall *sendCachedRequest)(RequestHandler *this);\n  bool (__fastcall *update)(RequestHandler *this);\n  bool (__fastcall *isDone)(RequestHandler *this);\n  void (__fastcall *onComplete)(RequestHandler *this);\n  bool (__fastcall *canSendRequest)(RequestHandler *this);\n  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);\n};\n\n")])])]),e("h3",{attrs:{id:"fileimagerequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileimagerequest"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileImageRequest")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileImageRequest : FileDataRequest\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fileimagerequest-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileimagerequest-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileImageRequest_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileImageRequest_vtbl\n{\n  void (__fastcall *~RequestHandler)(RequestHandler *this);\n  void (__fastcall *send)(RequestHandler *this);\n  void (__fastcall *sendCachedRequest)(RequestHandler *this);\n  bool (__fastcall *update)(RequestHandler *this);\n  bool (__fastcall *isDone)(RequestHandler *this);\n  void (__fastcall *onComplete)(RequestHandler *this);\n  bool (__fastcall *canSendRequest)(RequestHandler *this);\n  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);\n};\n\n")])])]),e("h3",{attrs:{id:"flightingresponse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingresponse"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingResponse")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj FlightingResponse\n{\n  std::vector<std::string> mTreatments;\n  std::vector<std::string> mProgressions;\n};\n\n")])])]),e("h3",{attrs:{id:"flightingrequest-cachemetadata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingrequest-cachemetadata"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingRequest::CacheMetadata")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlightingRequest::CacheMetadata\n{\n  std::string mEntityTag;\n};\n\n")])])]),e("h3",{attrs:{id:"flightingrequest"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingrequest"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingRequest")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlightingRequest : CachedRequest\n{\n  const std::string mClientId;\n  const std::string mCurrentLanguage;\n  const std::string mHostUrl;\n  std::function<void __cdecl(FlightingResponse const &)> mCallback;\n  FlightingResponse mFlightingResponse;\n  FlightingRequest::CacheMetadata mCacheMetadata;\n};\n\n")])])]),e("h3",{attrs:{id:"flightingrequest-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingrequest-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingRequest_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlightingRequest_vtbl\n{\n  void (__fastcall *~RequestHandler)(RequestHandler *this);\n  void (__fastcall *send)(RequestHandler *this);\n  void (__fastcall *sendCachedRequest)(RequestHandler *this);\n  bool (__fastcall *update)(RequestHandler *this);\n  bool (__fastcall *isDone)(RequestHandler *this);\n  void (__fastcall *onComplete)(RequestHandler *this);\n  bool (__fastcall *canSendRequest)(RequestHandler *this);\n  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);\n};\n\n")])])]),e("h3",{attrs:{id:"flightingtoggles-ctor-l2-lambda-38d0b82f17466d32b7c7c17849ffae66"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flightingtoggles-ctor-l2-lambda-38d0b82f17466d32b7c7c17849ffae66"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlightingToggles::{ctor}::__l2::<lambda_38d0b82f17466d32b7c7c17849ffae66>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlightingToggles::{ctor}::__l2::<lambda_38d0b82f17466d32b7c7c17849ffae66>\n{\n  FlightingToggles *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filettsoutput"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filettsoutput"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileTTSOutput")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileTTSOutput : TTSOutputInterface\n{\n  std::function<Core::PathBuffer<std::string > __cdecl(void)> mOutputPathCallback;\n};\n\n")])])]),e("h3",{attrs:{id:"filettsoutput-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filettsoutput-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileTTSOutput_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileTTSOutput_vtbl\n{\n  void (__fastcall *~TTSOutputInterface)(TTSOutputInterface *this);\n  void (__fastcall *synthesizeAndOutput)(TTSOutputInterface *this, const std::string *, cst_voice_struct *);\n  void (__fastcall *stop)(TTSOutputInterface *this);\n  bool (__fastcall *isIdle)(TTSOutputInterface *this);\n};\n\n")])])]),e("h3",{attrs:{id:"fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0-is-shared-ptr-std-shared-ptr-core-cpuringbufferallocation-buffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0-is-shared-ptr-std-shared-ptr-core-cpuringbufferallocation-buffer"}},[t._v("#")]),t._v(" "),e("code",[t._v("FencedDynamicRingBuffer<Core::CpuRingBufferAllocation_Buffer,2,0>::is_shared_ptr<std::shared_ptr<Core::CpuRingBufferAllocation_Buffer> >")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FencedDynamicRingBuffer<Core::CpuRingBufferAllocation_Buffer,2,0>::is_shared_ptr<std::shared_ptr<Core::CpuRingBufferAllocation_Buffer> > : std::integral_constant<bool,1>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0-setlastcompletedfencevalue-l2-lambda-be601a93d3a973414038685af37130e7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fenceddynamicringbuffer-core-cpuringbufferallocation-buffer-2-0-setlastcompletedfencevalue-l2-lambda-be601a93d3a973414038685af37130e7"}},[t._v("#")]),t._v(" "),e("code",[t._v("FencedDynamicRingBuffer<Core::CpuRingBufferAllocation_Buffer,2,0>::setLastCompletedFenceValue::__l2::<lambda_be601a93d3a973414038685af37130e7>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FencedDynamicRingBuffer<Core::CpuRingBufferAllocation_Buffer,2,0>::setLastCompletedFenceValue::__l2::<lambda_be601a93d3a973414038685af37130e7>\n{\n  const unsigned __int64 *completedFenceValue;\n  FencedDynamicRingBuffer<Core::CpuRingBufferAllocation_Buffer,2,0> *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"fogcommandcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogcommandcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogCommandComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogCommandComponent : IEntityComponent\n{\n  std::vector<FogCommandSettings> mFogStack;\n};\n\n")])])]),e("h3",{attrs:{id:"flagcomponent-actortickedflag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flagcomponent-actortickedflag"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlagComponent<ActorTickedFlag>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlagComponent<ActorTickedFlag> : IEntityComponent\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogcommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogcommand"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogCommand")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogCommand : Command\n{\n  CommandSelector<Player> mTargets;\n  FogCommand::Mode mMode;\n  std::string mFogId;\n  std::string mUserProvidedId;\n};\n\n")])])]),e("h3",{attrs:{id:"fogcommand-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogcommand-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogCommand_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FogCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),e("h3",{attrs:{id:"functionaction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functionaction"}},[t._v("#")]),t._v(" "),e("code",[t._v("FunctionAction")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FunctionAction : IChunkLoadedAction\n{\n  std::string mFilePath;\n};\n\n")])])]),e("h3",{attrs:{id:"functionaction-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functionaction-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FunctionAction_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FunctionAction_vtbl\n{\n  void (__fastcall *~IChunkLoadedAction)(IChunkLoadedAction *this);\n  void (__fastcall *execute)(IChunkLoadedAction *this, ServerLevel *, Dimension *);\n  void (__fastcall *serialize)(IChunkLoadedAction *this, CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"fireworksrocketactor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworksrocketactor"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworksRocketActor")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FireworksRocketActor : PredictableProjectile\n{\n  int mLife;\n  int mLifeTime;\n  bool mDispensed;\n};\n\n")])])]),e("h3",{attrs:{id:"fireworksrocketactor-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworksrocketactor-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworksRocketActor_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FireworksRocketActor_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n};\n\n")])])]),e("h3",{attrs:{id:"furnaceblockactor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnaceblockactor"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceBlockActor")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FurnaceBlockActor : BlockActor, Container\n{\n  int mLitTime;\n  int mLitDuration;\n  int mCookingProgress;\n  unsigned int mStoredXP;\n  ItemStack mItems[3];\n  bool mDirty[3];\n  std::unordered_set<ActorUniqueID> mPlayers;\n  const HashedString mRecipeTag;\n  const int mBurnInterval;\n  LevelSoundEvent mSmeltSoundEvent;\n  int mSoundTick;\n  int mSoundTickTarget;\n  Random mRandom;\n  const Block *mUnlitFurnace;\n  const Block *mLitFurnace;\n  ItemInstance mLastFuelItem;\n  bool mCanBeFinished;\n  bool mFinished;\n  bool mNoDrop;\n};\n\n")])])]),e("h3",{attrs:{id:"furnaceblockactor-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnaceblockactor-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceBlockActor_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FurnaceBlockActor_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n};\n\n")])])]),e("h3",{attrs:{id:"functionaction-printoutput-l2-lambda-29a6859966874ed56bdad0b621ece517"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functionaction-printoutput-l2-lambda-29a6859966874ed56bdad0b621ece517"}},[t._v("#")]),t._v(" "),e("code",[t._v("FunctionAction::_printOutput::__l2::<lambda_29a6859966874ed56bdad0b621ece517>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FunctionAction::_printOutput::__l2::<lambda_29a6859966874ed56bdad0b621ece517>\n{\n  TextObjectRoot *textObjectRoot;\n  _BYTE opPermLevel[1];\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-c388d79e814dd4ff849cbad3604bc61d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-c388d79e814dd4ff849cbad3604bc61d"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l8::<lambda_c388d79e814dd4ff849cbad3604bc61d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l8::<lambda_c388d79e814dd4ff849cbad3604bc61d>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-0a8ee2cd4bd4a4731c71a57d4abd4de2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-0a8ee2cd4bd4a4731c71a57d4abd4de2"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l8::<lambda_0a8ee2cd4bd4a4731c71a57d4abd4de2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l8::<lambda_0a8ee2cd4bd4a4731c71a57d4abd4de2>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-b6ab99318bc34040c23c84728383dea2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l8-lambda-b6ab99318bc34040c23c84728383dea2"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l8::<lambda_b6ab99318bc34040c23c84728383dea2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l8::<lambda_b6ab99318bc34040c23c84728383dea2>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-aa019d3dd92124d59bef87041ba622b0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-aa019d3dd92124d59bef87041ba622b0"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l7::<lambda_aa019d3dd92124d59bef87041ba622b0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l7::<lambda_aa019d3dd92124d59bef87041ba622b0>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-00880b92af31f968791c4eed7e6c61a8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-00880b92af31f968791c4eed7e6c61a8"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l7::<lambda_00880b92af31f968791c4eed7e6c61a8>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l7::<lambda_00880b92af31f968791c4eed7e6c61a8>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-f97cbdba0d2385587c63cedbaed4cbc4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-f97cbdba0d2385587c63cedbaed4cbc4"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l7::<lambda_f97cbdba0d2385587c63cedbaed4cbc4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l7::<lambda_f97cbdba0d2385587c63cedbaed4cbc4>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-2d9619e7737f7b9ef352678014760872"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l7-lambda-2d9619e7737f7b9ef352678014760872"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l7::<lambda_2d9619e7737f7b9ef352678014760872>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l7::<lambda_2d9619e7737f7b9ef352678014760872>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-dec754abcac794b6da96a720eded68bf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-dec754abcac794b6da96a720eded68bf"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_dec754abcac794b6da96a720eded68bf>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_dec754abcac794b6da96a720eded68bf>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-caeb69210887eb326d6a99ae06ff7020"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-caeb69210887eb326d6a99ae06ff7020"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_caeb69210887eb326d6a99ae06ff7020>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_caeb69210887eb326d6a99ae06ff7020>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-2c1b06c9f0a2c5248839b21168fc798c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-2c1b06c9f0a2c5248839b21168fc798c"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_2c1b06c9f0a2c5248839b21168fc798c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_2c1b06c9f0a2c5248839b21168fc798c>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-9c00dedd5332c3e2cd5037afcff10e0e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-9c00dedd5332c3e2cd5037afcff10e0e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_9c00dedd5332c3e2cd5037afcff10e0e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_9c00dedd5332c3e2cd5037afcff10e0e>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-a595d4db4302e152869dfff914040933"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l5-lambda-a595d4db4302e152869dfff914040933"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_a595d4db4302e152869dfff914040933>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l5::<lambda_a595d4db4302e152869dfff914040933>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l4-lambda-455a293d6b2c8ad2f10c131dbc53c5d4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l4-lambda-455a293d6b2c8ad2f10c131dbc53c5d4"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l4::<lambda_455a293d6b2c8ad2f10c131dbc53c5d4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l4::<lambda_455a293d6b2c8ad2f10c131dbc53c5d4>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l4-lambda-2cf1aefae47b2796c9704e85ed50ae79"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogdefinition-buildfogdefinitionschema-v1-16-100-l2-lambda-7dad882e37f33ff82791872eb65e74f2-l4-lambda-2cf1aefae47b2796c9704e85ed50ae79"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l4::<lambda_2cf1aefae47b2796c9704e85ed50ae79>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogDefinition::buildFogDefinitionSchema_v1_16_100::__l2::<lambda_7dad882e37f33ff82791872eb65e74f2>::()::__l4::<lambda_2cf1aefae47b2796c9704e85ed50ae79>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fogmanager-calculatecurrentcoefficientsetting-l2-lambda-12ef8424d68d1b5554d461cc50e22571"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogmanager-calculatecurrentcoefficientsetting-l2-lambda-12ef8424d68d1b5554d461cc50e22571"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogManager::calculateCurrentCoefficientSetting::__l2::<lambda_12ef8424d68d1b5554d461cc50e22571>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogManager::calculateCurrentCoefficientSetting::__l2::<lambda_12ef8424d68d1b5554d461cc50e22571>\n{\n  FogDefinition::CoefficientSettingType settingType;\n};\n\n")])])]),e("h3",{attrs:{id:"fogmanager-calculatecurrentdensitysetting-l2-lambda-6ba298e373dadcb52a3d9720e76557ba"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogmanager-calculatecurrentdensitysetting-l2-lambda-6ba298e373dadcb52a3d9720e76557ba"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogManager::calculateCurrentDensitySetting::__l2::<lambda_6ba298e373dadcb52a3d9720e76557ba>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogManager::calculateCurrentDensitySetting::__l2::<lambda_6ba298e373dadcb52a3d9720e76557ba>\n{\n  FogDefinition::DensitySettingType settingType;\n};\n\n")])])]),e("h3",{attrs:{id:"fogmanager-calculatecurrentdistancesetting-l2-lambda-fd7ebdbd98023fd0d9a821e51c7a6b3e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fogmanager-calculatecurrentdistancesetting-l2-lambda-fd7ebdbd98023fd0d9a821e51c7a6b3e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FogManager::calculateCurrentDistanceSetting::__l2::<lambda_fd7ebdbd98023fd0d9a821e51c7a6b3e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FogManager::calculateCurrentDistanceSetting::__l2::<lambda_fd7ebdbd98023fd0d9a821e51c7a6b3e>\n{\n  FogDefinition::DistanceSettingType settingType;\n};\n\n")])])]),e("h3",{attrs:{id:"familytypedefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#familytypedefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FamilyTypeDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FamilyTypeDefinition\n{\n  std::set<HashedString,std::hash<HashedString>,std::allocator<HashedString> > mFamilySet;\n};\n\n")])])]),e("h3",{attrs:{id:"flockingdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flockingdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlockingDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlockingDefinition\n{\n  bool mInWater;\n  bool mMatchVariant;\n  bool mUseCenterOfMass;\n  int mLowFlockLimit;\n  int mHighFlockLimit;\n  float mGoalWeight;\n  float mLonerChance;\n  float mInfluenceRadius;\n  float mBreachInfluence;\n  float mSeparationWeight;\n  float mSeparationThreshold;\n  float mCohesionWeight;\n  float mCohesionThreshold;\n  float mInnerCohesionThres;\n  float mMinHeight;\n  float mMaxHeight;\n  float mBlockDistance;\n  float mBlockWeight;\n};\n\n")])])]),e("h3",{attrs:{id:"feeditem-effect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feeditem-effect"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeedItem::Effect")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeedItem::Effect\n{\n  std::string descriptionId;\n  int id;\n  int duration;\n  int amplifier;\n  float chance;\n};\n\n")])])]),e("h3",{attrs:{id:"feeditem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#feeditem"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeedItem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeedItem\n{\n  ItemDescriptor mItemDescriptor;\n  int mValue;\n  std::vector<FeedItem::Effect> mEffects;\n};\n\n")])])]),e("h3",{attrs:{id:"flymovecontrol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flymovecontrol"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyMoveControl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlyMoveControl : MoveControl\n{\n};\n\n")])])]),e("h3",{attrs:{id:"flymovecontrol-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flymovecontrol-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyMoveControl_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlyMoveControl_vtbl\n{\n  void (__fastcall *~Control)(Control *this);\n  void (__fastcall *initializeInternal)(MoveControl *this, Mob *, MoveControlDescription *);\n  void (__fastcall *tick)(MoveControl *this, MoveControlComponent *, Mob *);\n  void (__fastcall *setWantedPosition)(MoveControl *this, MoveControlComponent *, Mob *, const Vec3 *, float);\n};\n\n")])])]),e("h3",{attrs:{id:"floatnavigation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floatnavigation"}},[t._v("#")]),t._v(" "),e("code",[t._v("FloatNavigation")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FloatNavigation : PathNavigation\n{\n};\n\n")])])]),e("h3",{attrs:{id:"floatnavigation-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floatnavigation-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FloatNavigation_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FloatNavigation_vtbl\n{\n  void (__fastcall *~PathNavigation)(PathNavigation *this);\n  void (__fastcall *initializeInternal)(PathNavigation *this, Mob *, NavigationDescription *);\n  void (__fastcall *tick)(PathNavigation *this, NavigationComponent *, Mob *);\n  Vec3 *(__fastcall *getTempMobPos)(PathNavigation *this, Vec3 *result, const Mob *);\n  std::unique_ptr<Path> *(__fastcall *createPath)(PathNavigation *this, std::unique_ptr<Path> *result, NavigationComponent *, Mob *, Actor *);\n  std::unique_ptr<Path> *(__fastcall *createPath)(PathNavigation *this, std::unique_ptr<Path> *result, NavigationComponent *, Mob *, const Vec3 *);\n  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, std::unique_ptr<Path>, float);\n  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, Actor *, float);\n  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, const Vec3 *, float);\n  void (__fastcall *stop)(PathNavigation *this, NavigationComponent *, Mob *);\n  bool (__fastcall *travel)(PathNavigation *this, NavigationComponent *, Mob *, float *, float *, float *);\n  bool (__fastcall *canUpdatePath)(PathNavigation *this, const Mob *);\n  void (__fastcall *updatePath)(PathNavigation *this, NavigationComponent *, Mob *);\n};\n\n")])])]),e("h3",{attrs:{id:"flyingpathnavigation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flyingpathnavigation"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyingPathNavigation")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlyingPathNavigation : PathNavigation\n{\n  bool mHadGravity;\n  bool mCanPathFromAir;\n  const float mMinWaypointRadius;\n};\n\n")])])]),e("h3",{attrs:{id:"flyingpathnavigation-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flyingpathnavigation-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyingPathNavigation_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlyingPathNavigation_vtbl\n{\n  void (__fastcall *~PathNavigation)(PathNavigation *this);\n  void (__fastcall *initializeInternal)(PathNavigation *this, Mob *, NavigationDescription *);\n  void (__fastcall *tick)(PathNavigation *this, NavigationComponent *, Mob *);\n  Vec3 *(__fastcall *getTempMobPos)(PathNavigation *this, Vec3 *result, const Mob *);\n  std::unique_ptr<Path> *(__fastcall *createPath)(PathNavigation *this, std::unique_ptr<Path> *result, NavigationComponent *, Mob *, Actor *);\n  std::unique_ptr<Path> *(__fastcall *createPath)(PathNavigation *this, std::unique_ptr<Path> *result, NavigationComponent *, Mob *, const Vec3 *);\n  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, std::unique_ptr<Path>, float);\n  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, Actor *, float);\n  bool (__fastcall *moveTo)(PathNavigation *this, NavigationComponent *, Mob *, const Vec3 *, float);\n  void (__fastcall *stop)(PathNavigation *this, NavigationComponent *, Mob *);\n  bool (__fastcall *travel)(PathNavigation *this, NavigationComponent *, Mob *, float *, float *, float *);\n  bool (__fastcall *canUpdatePath)(PathNavigation *this, const Mob *);\n  void (__fastcall *updatePath)(PathNavigation *this, NavigationComponent *, Mob *);\n};\n\n")])])]),e("h3",{attrs:{id:"flockingsystem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flockingsystem"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlockingSystem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlockingSystem : ITickingSystem\n{\n};\n\n")])])]),e("h3",{attrs:{id:"flockingsystem-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flockingsystem-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlockingSystem_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlockingSystem_vtbl\n{\n  void (__fastcall *~ITickingSystem)(ITickingSystem *this);\n  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);\n};\n\n")])])]),e("h3",{attrs:{id:"friendlysize"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#friendlysize"}},[t._v("#")]),t._v(" "),e("code",[t._v("FriendlySize")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FriendlySize\n{\n  unsigned __int64 bytes;\n};\n\n")])])]),e("h3",{attrs:{id:"fireworksrecipe"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworksrecipe"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworksRecipe")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FireworksRecipe : MultiRecipe\n{\n  std::vector<ItemInstance> mResult;\n};\n\n")])])]),e("h3",{attrs:{id:"fireworksrecipe-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworksrecipe-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworksRecipe_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FireworksRecipe_vtbl\n{\n  void (__fastcall *~Recipe)(Recipe *this);\n  const std::vector<ItemInstance> *(__fastcall *assemble)(Recipe *this, CraftingContainer *);\n  int (__fastcall *getCraftingSize)(Recipe *this);\n  const RecipeIngredient *(__fastcall *getIngredient)(Recipe *this, int, int);\n  const std::vector<ItemInstance> *(__fastcall *getResultItem)(Recipe *this);\n  bool (__fastcall *isShapeless)(Recipe *this);\n  bool (__fastcall *matches)(Recipe *this, CraftingContainer *, Level *);\n  int (__fastcall *size)(Recipe *this);\n  const mce::UUID *(__fastcall *getId)(Recipe *this);\n  const ItemPack *(__fastcall *getItemPack)(Recipe *this);\n  bool (__fastcall *isMultiRecipe)(Recipe *this);\n  std::string *(__fastcall *getTypeString)(Recipe *this, std::string *result);\n  bool (__fastcall *itemValidForRecipe)(Recipe *this, const ItemDescriptor *, const ItemStack *);\n  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, int, int, const CompoundTag *);\n  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, const ItemDescriptor *, const CompoundTag *);\n  bool (__fastcall *itemsMatch)(Recipe *this, const ItemDescriptor *, const ItemDescriptor *);\n};\n\n")])])]),e("h3",{attrs:{id:"featuretoggles-getdisabledlockedcallback-l2-lambda-5dbb485860e64799dd5864728b4946ff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featuretoggles-getdisabledlockedcallback-l2-lambda-5dbb485860e64799dd5864728b4946ff"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureToggles::_getDisabledLockedCallback::__l2::<lambda_5dbb485860e64799dd5864728b4946ff>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FeatureToggles::_getDisabledLockedCallback::__l2::<lambda_5dbb485860e64799dd5864728b4946ff>\n{\n  FeatureToggles *const __this;\n  _BYTE optionIdToCheck[4];\n};\n\n")])])]),e("h3",{attrs:{id:"featuretoggles-getdisabledsetupcallback-l2-lambda-7d67b21fbe351c2d84afc65451e90be2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featuretoggles-getdisabledsetupcallback-l2-lambda-7d67b21fbe351c2d84afc65451e90be2"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureToggles::_getDisabledSetupCallback::__l2::<lambda_7d67b21fbe351c2d84afc65451e90be2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FeatureToggles::_getDisabledSetupCallback::__l2::<lambda_7d67b21fbe351c2d84afc65451e90be2>\n{\n  FeatureToggles *const __this;\n  _BYTE optionIdToCheck[4];\n};\n\n")])])]),e("h3",{attrs:{id:"featuretoggles-getenabledlockedcallback-l2-lambda-e21ea8f733186111a070e29c202e5203"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featuretoggles-getenabledlockedcallback-l2-lambda-e21ea8f733186111a070e29c202e5203"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureToggles::_getEnabledLockedCallback::__l2::<lambda_e21ea8f733186111a070e29c202e5203>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FeatureToggles::_getEnabledLockedCallback::__l2::<lambda_e21ea8f733186111a070e29c202e5203>\n{\n  FeatureToggles *const __this;\n  _BYTE optionIdToCheck[4];\n};\n\n")])])]),e("h3",{attrs:{id:"featuretoggles-getenabledsetupcallback-l2-lambda-5db25955c5ba18bb6f909f1c95a0c4c3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featuretoggles-getenabledsetupcallback-l2-lambda-5db25955c5ba18bb6f909f1c95a0c4c3"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureToggles::_getEnabledSetupCallback::__l2::<lambda_5db25955c5ba18bb6f909f1c95a0c4c3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FeatureToggles::_getEnabledSetupCallback::__l2::<lambda_5db25955c5ba18bb6f909f1c95a0c4c3>\n{\n  FeatureToggles *const __this;\n  _BYTE optionIdToCheck[4];\n};\n\n")])])]),e("h3",{attrs:{id:"featuretoggles-initialize-l2-lambda-56780e8a1121adf4efc9847217156039"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featuretoggles-initialize-l2-lambda-56780e8a1121adf4efc9847217156039"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureToggles::_initialize::__l2::<lambda_56780e8a1121adf4efc9847217156039>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureToggles::_initialize::__l2::<lambda_56780e8a1121adf4efc9847217156039>\n{\n  FeatureToggles *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"filesystemfileaccess-filesystemfilereadaccess"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filesystemfileaccess-filesystemfilereadaccess"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileSystemFileAccess::FileSystemFileReadAccess")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileSystemFileAccess::FileSystemFileReadAccess : IFileReadAccess\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filesystemfileaccess-filesystemfilereadaccess-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filesystemfileaccess-filesystemfilereadaccess-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileSystemFileAccess::FileSystemFileReadAccess_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileSystemFileAccess::FileSystemFileReadAccess_vtbl\n{\n  void (__fastcall *~IFileReadAccess)(IFileReadAccess *this);\n  unsigned __int64 (__fastcall *fread)(IFileReadAccess *this, void *, unsigned __int64, unsigned __int64, void *);\n};\n\n")])])]),e("h3",{attrs:{id:"filesystemfileaccess-filesystemfilewriteaccess"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filesystemfileaccess-filesystemfilewriteaccess"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileSystemFileAccess::FileSystemFileWriteAccess")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileSystemFileAccess::FileSystemFileWriteAccess : IFileWriteAccess\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filesystemfileaccess-filesystemfilewriteaccess-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filesystemfileaccess-filesystemfilewriteaccess-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileSystemFileAccess::FileSystemFileWriteAccess_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileSystemFileAccess::FileSystemFileWriteAccess_vtbl\n{\n  void (__fastcall *~IFileWriteAccess)(IFileWriteAccess *this);\n  unsigned __int64 (__fastcall *fwrite)(IFileWriteAccess *this, const void *, unsigned __int64, unsigned __int64, void *);\n};\n\n")])])]),e("h3",{attrs:{id:"filesystemfileaccess"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filesystemfileaccess"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileSystemFileAccess")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileSystemFileAccess : IFileAccess\n{\n  FileSystemMode mMode;\n  FileSystemFileAccess::FileSystemFileReadAccess mReadInterface;\n  FileSystemFileAccess::FileSystemFileWriteAccess mWriteInterface;\n};\n\n")])])]),e("h3",{attrs:{id:"filesystemfileaccess-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filesystemfileaccess-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileSystemFileAccess_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileSystemFileAccess_vtbl\n{\n  void (__fastcall *~IFileAccess)(IFileAccess *this);\n  void *(__fastcall *fopen)(IFileAccess *this, const Core::Path *, const std::string *);\n  int (__fastcall *fclose)(IFileAccess *this, void *);\n  int (__fastcall *fseek)(IFileAccess *this, void *, __int64, int);\n  __int64 (__fastcall *ftell)(IFileAccess *this, void *);\n  const IFileReadAccess *(__fastcall *getReadInterface)(IFileAccess *this);\n  IFileWriteAccess *(__fastcall *getWriteInterface)(IFileAccess *this);\n  void (__fastcall *unload)(IFileAccess *this);\n};\n\n")])])]),e("h3",{attrs:{id:"featurereftraits"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featurereftraits"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureRefTraits")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureRefTraits\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureconstreftraits"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureconstreftraits"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureConstRefTraits")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureConstRefTraits\n{\n};\n\n")])])]),e("h3",{attrs:{id:"functionmanager-load-l7-lambda-83470faaeb21466e721bad93b29e86d1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functionmanager-load-l7-lambda-83470faaeb21466e721bad93b29e86d1"}},[t._v("#")]),t._v(" "),e("code",[t._v("FunctionManager::load::__l7::<lambda_83470faaeb21466e721bad93b29e86d1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FunctionManager::load::__l7::<lambda_83470faaeb21466e721bad93b29e86d1>\n{\n  FunctionManager *const __this;\n  const SemVersion *minEngineVersion;\n  ResourcePackManager *serverPackManager;\n  const CurrentCmdVersion *packCommandVersion;\n  CommandRegistry *registry;\n  std::vector<std::string> *functionSoftEnumNames;\n};\n\n")])])]),e("h3",{attrs:{id:"fillcommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fillcommand"}},[t._v("#")]),t._v(" "),e("code",[t._v("FillCommand")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FillCommand : Command\n{\n  CommandPosition mFrom;\n  CommandPosition mTo;\n  const Block *mBlock;\n  const Block *mReplaceBlock;\n  FillCommand::FillMode mMode;\n  int mBlockData;\n  int mReplaceBlockData;\n};\n\n")])])]),e("h3",{attrs:{id:"fillcommand-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fillcommand-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FillCommand_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FillCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),e("h3",{attrs:{id:"functioncommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functioncommand"}},[t._v("#")]),t._v(" "),e("code",[t._v("FunctionCommand")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FunctionCommand : Command\n{\n  CommandFilePath mFilePath;\n};\n\n")])])]),e("h3",{attrs:{id:"functioncommand-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#functioncommand-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FunctionCommand_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FunctionCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),e("h3",{attrs:{id:"filedataoutput"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedataoutput"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDataOutput")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDataOutput : BytesDataOutput\n{\n  bool mIsOk;\n  Core::File mFile;\n};\n\n")])])]),e("h3",{attrs:{id:"filedataoutput-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedataoutput-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDataOutput_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileDataOutput_vtbl\n{\n  void (__fastcall *~IDataOutput)(IDataOutput *this);\n  void (__fastcall *writeString)(IDataOutput *this, gsl::basic_string_span<char const ,-1>);\n  void (__fastcall *writeLongString)(IDataOutput *this, gsl::basic_string_span<char const ,-1>);\n  void (__fastcall *writeFloat)(IDataOutput *this, float);\n  void (__fastcall *writeDouble)(IDataOutput *this, long double);\n  void (__fastcall *writeByte)(IDataOutput *this, char);\n  void (__fastcall *writeShort)(IDataOutput *this, __int16);\n  void (__fastcall *writeInt)(IDataOutput *this, int);\n  void (__fastcall *writeLongLong)(IDataOutput *this, __int64);\n  void (__fastcall *writeBytes)(IDataOutput *this, const void *, unsigned __int64);\n  bool (__fastcall *isOk)(IDataOutput *this);\n};\n\n")])])]),e("h3",{attrs:{id:"filedatainput"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedatainput"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDataInput")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDataInput : BytesDataInput\n{\n  bool mIsOk;\n  Core::File mFile;\n};\n\n")])])]),e("h3",{attrs:{id:"filedatainput-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedatainput-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDataInput_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileDataInput_vtbl\n{\n  void (__fastcall *~IDataInput)(IDataInput *this);\n  std::string *(__fastcall *readString)(IDataInput *this, std::string *result);\n  std::string *(__fastcall *readLongString)(IDataInput *this, std::string *result);\n  float (__fastcall *readFloat)(IDataInput *this);\n  long double (__fastcall *readDouble)(IDataInput *this);\n  char (__fastcall *readByte)(IDataInput *this);\n  __int16 (__fastcall *readShort)(IDataInput *this);\n  int (__fastcall *readInt)(IDataInput *this);\n  __int64 (__fastcall *readLongLong)(IDataInput *this);\n  bool (__fastcall *readBytes)(IDataInput *this, void *, unsigned __int64);\n  unsigned __int64 (__fastcall *numBytesLeft)(IDataInput *this);\n  bool (__fastcall *isOk)(IDataInput *this);\n  bool (__fastcall *seek)(IDataInput *this, unsigned __int64);\n};\n\n")])])]),e("h3",{attrs:{id:"filepickersettings-lambda-129896ef764bb08519885b7ab5ca9016"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filepickersettings-lambda-129896ef764bb08519885b7ab5ca9016"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilePickerSettings::<lambda_129896ef764bb08519885b7ab5ca9016>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilePickerSettings::<lambda_129896ef764bb08519885b7ab5ca9016>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filepickersettings-lambda-1c69aa04d55bac9dab0ac921a14d8c2b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filepickersettings-lambda-1c69aa04d55bac9dab0ac921a14d8c2b"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilePickerSettings::<lambda_1c69aa04d55bac9dab0ac921a14d8c2b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilePickerSettings::<lambda_1c69aa04d55bac9dab0ac921a14d8c2b>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filepickersettings-lambda-3b83f32960a2e8aa93e0654bf1d2fbe5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filepickersettings-lambda-3b83f32960a2e8aa93e0654bf1d2fbe5"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilePickerSettings::<lambda_3b83f32960a2e8aa93e0654bf1d2fbe5>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilePickerSettings::<lambda_3b83f32960a2e8aa93e0654bf1d2fbe5>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadmanager-uploadstream-l2-lambda-704199bdd8ef4b5e4b61022e06e9c849"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager-uploadstream-l2-lambda-704199bdd8ef4b5e4b61022e06e9c849"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager::_uploadStream::__l2::<lambda_704199bdd8ef4b5e4b61022e06e9c849>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadManager::_uploadStream::__l2::<lambda_704199bdd8ef4b5e4b61022e06e9c849>\n{\n  std::weak_ptr<FileUploadManager> weak_this;\n  FileUploadManager::_uploadStream::__l2::<lambda_7c32c70c440907d77e4081b7aef620a1> fetchStreamDataCallback;\n  FileUploadManager::_uploadStream::__l2::<lambda_ab8d111204de64d325c648c9d712e8ea> onStreamFinishedCallback;\n  std::string boundary;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager::_uploadChunk::__l13::<lambda_beec154458228c4f1efa54daecb2bd49>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadManager::_uploadChunk::__l13::<lambda_beec154458228c4f1efa54daecb2bd49>\n{\n  std::weak_ptr<FileUploadManager> weak_this;\n  const FileChunkInfo chunk;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49-l5-lambda-b942687c99a128d38d4a3acdf5208e9b-l5-lambda-0e10341a96d156a6650052c442f8bc7b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager-uploadchunk-l13-lambda-beec154458228c4f1efa54daecb2bd49-l5-lambda-b942687c99a128d38d4a3acdf5208e9b-l5-lambda-0e10341a96d156a6650052c442f8bc7b"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager::_uploadChunk::__l13::<lambda_beec154458228c4f1efa54daecb2bd49>::()::__l5::<lambda_b942687c99a128d38d4a3acdf5208e9b>::()::__l5::<lambda_0e10341a96d156a6650052c442f8bc7b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadManager::_uploadChunk::__l13::<lambda_beec154458228c4f1efa54daecb2bd49>::()::__l5::<lambda_b942687c99a128d38d4a3acdf5208e9b>::()::__l5::<lambda_0e10341a96d156a6650052c442f8bc7b>\n{\n  std::weak_ptr<FileUploadManager> weak_this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadmanager-resumeupload-l2-lambda-edbb1383cf59043f3a41a84683bc4a8c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager-resumeupload-l2-lambda-edbb1383cf59043f3a41a84683bc4a8c"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager::_resumeUpload::__l2::<lambda_edbb1383cf59043f3a41a84683bc4a8c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUploadManager::_resumeUpload::__l2::<lambda_edbb1383cf59043f3a41a84683bc4a8c>\n{\n  std::weak_ptr<FileUploadManager> weak_this;\n};\n\n")])])]),e("h3",{attrs:{id:"fileuploadmanager-uploadfile-l13-lambda-74760951e5721fb9dafc828e7e1ca7c9-l11-lambda-aa179f462ff3a856f50c63ee1659ca3f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileuploadmanager-uploadfile-l13-lambda-74760951e5721fb9dafc828e7e1ca7c9-l11-lambda-aa179f462ff3a856f50c63ee1659ca3f"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUploadManager::uploadFile::__l13::<lambda_74760951e5721fb9dafc828e7e1ca7c9>::()::__l11::<lambda_aa179f462ff3a856f50c63ee1659ca3f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FileUploadManager::uploadFile::__l13::<lambda_74760951e5721fb9dafc828e7e1ca7c9>::()::__l11::<lambda_aa179f462ff3a856f50c63ee1659ca3f>\n{\n  std::weak_ptr<FileUploadManager> weak_this;\n  bool autoStartUpload;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadmanager-pausedownload-l5-lambda-411b52f0bd9ccf2ab6e8671e1b98316a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadmanager-pausedownload-l5-lambda-411b52f0bd9ccf2ab6e8671e1b98316a"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadManager::pauseDownload::__l5::<lambda_411b52f0bd9ccf2ab6e8671e1b98316a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadManager::pauseDownload::__l5::<lambda_411b52f0bd9ccf2ab6e8671e1b98316a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-d89c88a6ec3abc173214fdc98b971c20"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-d89c88a6ec3abc173214fdc98b971c20"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadManager::downloadFile::__l13::<lambda_0e52f60533a747952835c01f8836253e>::()::__l8::<lambda_d89c88a6ec3abc173214fdc98b971c20>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadManager::downloadFile::__l13::<lambda_0e52f60533a747952835c01f8836253e>::()::__l8::<lambda_d89c88a6ec3abc173214fdc98b971c20>\n{\n  std::weak_ptr<FileDownloadManager> weak_this;\n};\n\n")])])]),e("h3",{attrs:{id:"filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-2443bc6f7ea8a704e54426e60ed6d6fd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filedownloadmanager-downloadfile-l13-lambda-0e52f60533a747952835c01f8836253e-l8-lambda-2443bc6f7ea8a704e54426e60ed6d6fd"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileDownloadManager::downloadFile::__l13::<lambda_0e52f60533a747952835c01f8836253e>::()::__l8::<lambda_2443bc6f7ea8a704e54426e60ed6d6fd>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileDownloadManager::downloadFile::__l13::<lambda_0e52f60533a747952835c01f8836253e>::()::__l8::<lambda_2443bc6f7ea8a704e54426e60ed6d6fd>\n{\n  std::weak_ptr<FileDownloadManager> weak_this;\n};\n\n")])])]),e("h3",{attrs:{id:"fish"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fish"}},[t._v("#")]),t._v(" "),e("code",[t._v("Fish")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Fish : WaterAnimal\n{\n  float mAnimationAmount;\n  float mAnimationAmountPrev;\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestdaytime-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestdaytime-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestDaytime_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestDaytime_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestclock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestclock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestClock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterTestClock : SimpleFloatFilterTest\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestclock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestclock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestClock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestClock_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestmoonintensity"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestmoonintensity"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestMoonIntensity")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterTestMoonIntensity : SimpleFloatFilterTest\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestmoonintensity-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestmoonintensity-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestMoonIntensity_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestMoonIntensity_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestmoonphase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestmoonphase"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestMoonPhase")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterTestMoonPhase : SimpleFloatFilterTest\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestmoonphase-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestmoonphase-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestMoonPhase_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestMoonPhase_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestdistancetonearestplayer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestdistancetonearestplayer"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestDistanceToNearestPlayer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterTestDistanceToNearestPlayer : SimpleFloatFilterTest\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestdistancetonearestplayer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestdistancetonearestplayer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestDistanceToNearestPlayer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestDistanceToNearestPlayer_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestdimensionweather"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestdimensionweather"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestDimensionWeather")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FilterTestDimensionWeather : FilterTest\n{\n  FilterTestDimensionWeather::WeatherType mWeather;\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestdimensionweather-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestdimensionweather-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestDimensionWeather_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestDimensionWeather_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestdifficulty-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestdifficulty-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestDifficulty_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestDifficulty_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertesthourlyclock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertesthourlyclock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestHourlyClock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestHourlyClock_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestgamerule-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestgamerule-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestGameRule_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestGameRule_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestbiome-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestbiome-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestBiome_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestBiome_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestbiomesnowcovered-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestbiomesnowcovered-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestBiomeSnowCovered_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestBiomeSnowCovered_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestbiomehumid-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestbiomehumid-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestBiomeHumid_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestBiomeHumid_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertesttemperaturetype-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertesttemperaturetype-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestTemperatureType_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestTemperatureType_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertesttemperaturevalue-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertesttemperaturevalue-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestTemperatureValue_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestTemperatureValue_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestbrightness-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestbrightness-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestBrightness_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestBrightness_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestaltitude-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestaltitude-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestAltitude_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestAltitude_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestbiomehastag-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestbiomehastag-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestBiomeHasTag_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestBiomeHasTag_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertesthastradesupply-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertesthastradesupply-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestHasTradeSupply_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestHasTradeSupply_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestlightlevel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestlightlevel"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestLightLevel")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterTestLightLevel : SimpleIntFilterTest\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestlightlevel-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestlightlevel-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestLightLevel_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FilterTestLightLevel_vtbl\n{\n  void (__fastcall *~FilterTest)(FilterTest *this);\n  bool (__fastcall *setup)(FilterTest *this, const FilterTest::Definition *, const FilterInputs *);\n  bool (__fastcall *evaluate)(FilterTest *this, const FilterContext *);\n  void (__fastcall *finalizeParsedValue)(FilterTest *this, IWorldRegistriesProvider *);\n  gsl::basic_string_span<char const ,-1> *(__fastcall *getName)(FilterTest *this, gsl::basic_string_span<char const ,-1> *result);\n  Json::Value *(__fastcall *_serializeDomain)(FilterTest *this, Json::Value *result);\n  Json::Value *(__fastcall *_serializeValue)(FilterTest *this, Json::Value *result);\n};\n\n")])])]),e("h3",{attrs:{id:"fireimmunedefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireimmunedefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireImmuneDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FireImmuneDefinition\n{\n};\n\n")])])]),e("h3",{attrs:{id:"floatsinliquiddefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floatsinliquiddefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FloatsInLiquidDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FloatsInLiquidDefinition\n{\n};\n\n")])])]),e("h3",{attrs:{id:"flyingspeeddefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flyingspeeddefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyingSpeedDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlyingSpeedDefinition\n{\n  float mValue;\n};\n\n")])])]),e("h3",{attrs:{id:"frictionmodifierdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frictionmodifierdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FrictionModifierDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FrictionModifierDefinition\n{\n  float mValue;\n};\n\n")])])]),e("h3",{attrs:{id:"findcovergoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findcovergoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindCoverGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FindCoverGoal : Goal\n{\n  Mob *mMob;\n  float mSpeed;\n  int mCooldownTicks;\n  Tick mCooldownTimer;\n  Vec3 mWantedPosition;\n};\n\n")])])]),e("h3",{attrs:{id:"findcovergoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findcovergoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindCoverGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FindCoverGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),e("h3",{attrs:{id:"fleesungoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fleesungoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("FleeSunGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FleeSunGoal : FindCoverGoal\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fleesungoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fleesungoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FleeSunGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FleeSunGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),e("h3",{attrs:{id:"followflockgoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#followflockgoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("FollowFlockGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FollowFlockGoal : Goal\n{\n  Mob *mMob;\n  int mCooldownTicks;\n  int mNotInFlockTicks;\n  float mSpeed;\n};\n\n")])])]),e("h3",{attrs:{id:"followflockgoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#followflockgoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FollowFlockGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FollowFlockGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),e("h3",{attrs:{id:"findblocknode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findblocknode"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindBlockNode")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(4)) FindBlockNode : BehaviorNode\n{\n  const Block *mBlock;\n  int mSearchRadius;\n  bool mJumping;\n};\n\n")])])]),e("h3",{attrs:{id:"findblocknode-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findblocknode-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindBlockNode_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FindBlockNode_vtbl\n{\n  void (__fastcall *~BehaviorNode)(BehaviorNode *this);\n  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);\n  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);\n};\n\n")])])]),e("h3",{attrs:{id:"findblockdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findblockdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindBlockDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FindBlockDefinition : BehaviorDefinition\n{\n  std::string mBlockName;\n  std::string mBlockNameId;\n  int mSearchRadius;\n  std::string mSearchRadiusId;\n};\n\n")])])]),e("h3",{attrs:{id:"findblockdefinition-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findblockdefinition-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindBlockDefinition_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FindBlockDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),e("h3",{attrs:{id:"findactornode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findactornode"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindActorNode")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FindActorNode : BehaviorNode\n{\n  ActorType mActorType;\n  int mSearchRadius;\n};\n\n")])])]),e("h3",{attrs:{id:"findactornode-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findactornode-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindActorNode_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FindActorNode_vtbl\n{\n  void (__fastcall *~BehaviorNode)(BehaviorNode *this);\n  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);\n  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);\n};\n\n")])])]),e("h3",{attrs:{id:"findactordefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findactordefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindActorDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FindActorDefinition : BehaviorDefinition\n{\n  std::string mEntityName;\n  std::string mEntityType;\n  int mSearchRadius;\n  std::string mSearchRadiusId;\n};\n\n")])])]),e("h3",{attrs:{id:"findactordefinition-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findactordefinition-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindActorDefinition_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FindActorDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),e("h3",{attrs:{id:"flynode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flynode"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyNode")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(4)) FlyNode : BehaviorNode\n{\n  bool mHaveCheckedFlightStatus;\n  bool mJumpedLastTick;\n  bool mJumpedOnce;\n  bool mShouldBeFlying;\n  bool mShouldThrowEventIfNoStateChangeNecessary;\n};\n\n")])])]),e("h3",{attrs:{id:"flynode-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flynode-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyNode_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlyNode_vtbl\n{\n  void (__fastcall *~BehaviorNode)(BehaviorNode *this);\n  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);\n  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);\n};\n\n")])])]),e("h3",{attrs:{id:"flydefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flydefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlyDefinition : BehaviorDefinition\n{\n  bool mShouldBeFlying;\n  std::string mShouldBeFlyingId;\n  bool mShouldThrowEventIfNoStateChangeNecessary;\n  std::string mShouldThrowEventIfNoStateChangeNecessaryId;\n};\n\n")])])]),e("h3",{attrs:{id:"flydefinition-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flydefinition-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlyDefinition_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlyDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),e("h3",{attrs:{id:"findtargetnode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findtargetnode"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindTargetNode")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FindTargetNode : BehaviorNode\n{\n  bool mReselectTargets;\n};\n\n")])])]),e("h3",{attrs:{id:"findtargetnode-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findtargetnode-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindTargetNode_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FindTargetNode_vtbl\n{\n  void (__fastcall *~BehaviorNode)(BehaviorNode *this);\n  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);\n  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);\n};\n\n")])])]),e("h3",{attrs:{id:"findtargetdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findtargetdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindTargetDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FindTargetDefinition : BehaviorDefinition\n{\n  std::string mOperation;\n  std::string mOperationId;\n  float mDist;\n  std::string mDistId;\n  Vec3 mTargetPos;\n  std::string mTargetPosId;\n};\n\n")])])]),e("h3",{attrs:{id:"findtargetdefinition-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findtargetdefinition-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindTargetDefinition_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FindTargetDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),e("h3",{attrs:{id:"findharvestdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findharvestdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindHarvestDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FindHarvestDefinition : BehaviorDefinition\n{\n  std::string mItemName;\n  std::string mItemNameId;\n};\n\n")])])]),e("h3",{attrs:{id:"findharvestdefinition-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findharvestdefinition-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindHarvestDefinition_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FindHarvestDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),e("h3",{attrs:{id:"findrecipedefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findrecipedefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindRecipeDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FindRecipeDefinition : BehaviorDefinition\n{\n  std::string mItemName;\n  std::string mItemNameId;\n};\n\n")])])]),e("h3",{attrs:{id:"findrecipedefinition-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findrecipedefinition-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindRecipeDefinition_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FindRecipeDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),e("h3",{attrs:{id:"findrecipenode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findrecipenode"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindRecipeNode")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FindRecipeNode : BehaviorNode\n{\n  std::string mTargetItemName;\n};\n\n")])])]),e("h3",{attrs:{id:"findrecipenode-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findrecipenode-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindRecipeNode_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FindRecipeNode_vtbl\n{\n  void (__fastcall *~BehaviorNode)(BehaviorNode *this);\n  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);\n  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);\n};\n\n")])])]),e("h3",{attrs:{id:"fireworksrocketactor-checkachievement-l21-lambda-c73dc455ce730d1f42b1b56fbc1f5399"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireworksrocketactor-checkachievement-l21-lambda-c73dc455ce730d1f42b1b56fbc1f5399"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireworksRocketActor::checkAchievement::__l21::<lambda_c73dc455ce730d1f42b1b56fbc1f5399>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FireworksRocketActor::checkAchievement::__l21::<lambda_c73dc455ce730d1f42b1b56fbc1f5399>\n{\n  AABB *areaofeffect;\n};\n\n")])])]),e("h3",{attrs:{id:"fireball"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireball"}},[t._v("#")]),t._v(" "),e("code",[t._v("Fireball")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) Fireball : PredictableProjectile\n{\n  ActorUniqueID ownerId;\n  bool mInGround;\n  MovementInterpolator mInterpolation;\n};\n\n")])])]),e("h3",{attrs:{id:"fireball-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireball-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Fireball_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Fireball_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  float (__fastcall *getInertia)(Fireball *this);\n  void (__fastcall *onHit)(Fireball *this, const HitResult *);\n  ParticleType (__fastcall *getTrailParticle)(Fireball *this);\n  bool (__fastcall *shouldBurn)(Fireball *this);\n};\n\n")])])]),e("h3",{attrs:{id:"furnaceinputcontainercontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnaceinputcontainercontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceInputContainerController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FurnaceInputContainerController : ContainerController\n{\n  HashedString mRecipeTag;\n};\n\n")])])]),e("h3",{attrs:{id:"furnaceinputcontainercontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnaceinputcontainercontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceInputContainerController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FurnaceInputContainerController_vtbl\n{\n  void (__fastcall *~ContainerController)(ContainerController *this);\n  bool (__fastcall *canRemove)(ContainerController *this, int, int);\n  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);\n  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);\n  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);\n  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);\n  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);\n  bool (__fastcall *_canRemove)(ContainerController *this, int, int);\n  void (__fastcall *_onItemChanged)(ContainerController *this, int);\n};\n\n")])])]),e("h3",{attrs:{id:"filterlist-initialize-l2-lambda-53e6ff47ca84784fadfa6f6ea435d0db"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterlist-initialize-l2-lambda-53e6ff47ca84784fadfa6f6ea435d0db"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterList::initialize::__l2::<lambda_53e6ff47ca84784fadfa6f6ea435d0db>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterList::initialize::__l2::<lambda_53e6ff47ca84784fadfa6f6ea435d0db>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filterlist-initialize-l2-lambda-0b20278bf0b6617c64212f827fc3f6c6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterlist-initialize-l2-lambda-0b20278bf0b6617c64212f827fc3f6c6"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterList::initialize::__l2::<lambda_0b20278bf0b6617c64212f827fc3f6c6>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterList::initialize::__l2::<lambda_0b20278bf0b6617c64212f827fc3f6c6>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filterlist-initialize-l2-lambda-70127f048990374f535f74a1b0a14315"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterlist-initialize-l2-lambda-70127f048990374f535f74a1b0a14315"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterList::initialize::__l2::<lambda_70127f048990374f535f74a1b0a14315>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterList::initialize::__l2::<lambda_70127f048990374f535f74a1b0a14315>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filterlist-initialize-l2-lambda-c08235eaf234640396c8d9d4980e4d68"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterlist-initialize-l2-lambda-c08235eaf234640396c8d9d4980e4d68"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterList::initialize::__l2::<lambda_c08235eaf234640396c8d9d4980e4d68>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterList::initialize::__l2::<lambda_c08235eaf234640396c8d9d4980e4d68>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filterlist-initialize-l2-lambda-2277542b59c4fb23b9fa70a8ed97c541"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterlist-initialize-l2-lambda-2277542b59c4fb23b9fa70a8ed97c541"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterList::initialize::__l2::<lambda_2277542b59c4fb23b9fa70a8ed97c541>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterList::initialize::__l2::<lambda_2277542b59c4fb23b9fa70a8ed97c541>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filterlist-initialize-l2-lambda-93c18a3b380a6e7a33442d3c0483fbe3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterlist-initialize-l2-lambda-93c18a3b380a6e7a33442d3c0483fbe3"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterList::initialize::__l2::<lambda_93c18a3b380a6e7a33442d3c0483fbe3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterList::initialize::__l2::<lambda_93c18a3b380a6e7a33442d3c0483fbe3>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filterlist-initialize-l2-lambda-2d06b743fa8020ab3d8bf3c094340db8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterlist-initialize-l2-lambda-2d06b743fa8020ab3d8bf3c094340db8"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterList::initialize::__l2::<lambda_2d06b743fa8020ab3d8bf3c094340db8>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterList::initialize::__l2::<lambda_2d06b743fa8020ab3d8bf3c094340db8>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filterlist-initialize-l2-lambda-c3f8d4e5adf6bce18ffcdda2e15ecf8a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterlist-initialize-l2-lambda-c3f8d4e5adf6bce18ffcdda2e15ecf8a"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterList::initialize::__l2::<lambda_c3f8d4e5adf6bce18ffcdda2e15ecf8a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterList::initialize::__l2::<lambda_c3f8d4e5adf6bce18ffcdda2e15ecf8a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filterlist-initialize-l2-lambda-695aad19b31fab8d5eb858d6aa1aa324"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filterlist-initialize-l2-lambda-695aad19b31fab8d5eb858d6aa1aa324"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterList::initialize::__l2::<lambda_695aad19b31fab8d5eb858d6aa1aa324>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterList::initialize::__l2::<lambda_695aad19b31fab8d5eb858d6aa1aa324>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filtertestdistancetonearestplayer-evaluate-l2-lambda-ac2cf845ac1aa3efb9503cdba1ff5946"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filtertestdistancetonearestplayer-evaluate-l2-lambda-ac2cf845ac1aa3efb9503cdba1ff5946"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilterTestDistanceToNearestPlayer::evaluate::__l2::<lambda_ac2cf845ac1aa3efb9503cdba1ff5946>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilterTestDistanceToNearestPlayer::evaluate::__l2::<lambda_ac2cf845ac1aa3efb9503cdba1ff5946>\n{\n  const Vec3 pos;\n  float *best;\n};\n\n")])])]),e("h3",{attrs:{id:"fertilizeritem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fertilizeritem"}},[t._v("#")]),t._v(" "),e("code",[t._v("FertilizerItem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FertilizerItem : Item\n{\n  FertilizerType mType;\n};\n\n")])])]),e("h3",{attrs:{id:"fishingenchant"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fishingenchant"}},[t._v("#")]),t._v(" "),e("code",[t._v("FishingEnchant")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FishingEnchant : Enchant\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fishingenchant-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fishingenchant-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FishingEnchant_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FishingEnchant_vtbl\n{\n  void (__fastcall *~Enchant)(Enchant *this);\n  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);\n  int (__fastcall *getMinCost)(Enchant *this, int);\n  int (__fastcall *getMaxCost)(Enchant *this, int);\n  int (__fastcall *getMinLevel)(Enchant *this);\n  int (__fastcall *getMaxLevel)(Enchant *this);\n  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);\n  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);\n  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);\n  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);\n  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);\n  bool (__fastcall *isProtectionEnchant)(Enchant *this);\n  bool (__fastcall *isTreasureOnly)(Enchant *this);\n  bool (__fastcall *isDiscoverable)(Enchant *this);\n};\n\n")])])]),e("h3",{attrs:{id:"frostwalkerenchant"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frostwalkerenchant"}},[t._v("#")]),t._v(" "),e("code",[t._v("FrostWalkerEnchant")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FrostWalkerEnchant : Enchant\n{\n};\n\n")])])]),e("h3",{attrs:{id:"frostwalkerenchant-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frostwalkerenchant-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FrostWalkerEnchant_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FrostWalkerEnchant_vtbl\n{\n  void (__fastcall *~Enchant)(Enchant *this);\n  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);\n  int (__fastcall *getMinCost)(Enchant *this, int);\n  int (__fastcall *getMaxCost)(Enchant *this, int);\n  int (__fastcall *getMinLevel)(Enchant *this);\n  int (__fastcall *getMaxLevel)(Enchant *this);\n  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);\n  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);\n  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);\n  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);\n  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);\n  bool (__fastcall *isProtectionEnchant)(Enchant *this);\n  bool (__fastcall *isTreasureOnly)(Enchant *this);\n  bool (__fastcall *isDiscoverable)(Enchant *this);\n};\n\n")])])]),e("h3",{attrs:{id:"firechargeitem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#firechargeitem"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireChargeItem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FireChargeItem : Item\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fishingroditem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fishingroditem"}},[t._v("#")]),t._v(" "),e("code",[t._v("FishingRodItem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FishingRodItem : Item\n{\n  TextureUVCoordinateSet mFrame[2];\n};\n\n")])])]),e("h3",{attrs:{id:"flintandsteelitem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flintandsteelitem"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlintAndSteelItem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlintAndSteelItem : Item\n{\n};\n\n")])])]),e("h3",{attrs:{id:"flagcomponent-noisebasedcolorpalette"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flagcomponent-noisebasedcolorpalette"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlagComponent<NoiseBasedColorPalette>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlagComponent<NoiseBasedColorPalette> : IEntityComponent\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filteredtransformationattributes-prehillsedgetransformation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filteredtransformationattributes-prehillsedgetransformation"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilteredTransformationAttributes<PreHillsEdgeTransformation>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilteredTransformationAttributes<PreHillsEdgeTransformation>\n{\n  std::vector<PosibleTransformation> mTransformations;\n};\n\n")])])]),e("h3",{attrs:{id:"filteredtransformationattributes-legacyprehillsedgetransformation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filteredtransformationattributes-legacyprehillsedgetransformation"}},[t._v("#")]),t._v(" "),e("code",[t._v("FilteredTransformationAttributes<LegacyPreHillsEdgeTransformation>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FilteredTransformationAttributes<LegacyPreHillsEdgeTransformation>\n{\n  std::vector<PosibleTransformation> mTransformations;\n};\n\n")])])]),e("h3",{attrs:{id:"fixedbiomesource-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fixedbiomesource-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FixedBiomeSource_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FixedBiomeSource_vtbl\n{\n  void (__fastcall *~BiomeSource)(BiomeSource *this);\n  void (__fastcall *fillBiomes)(BiomeSource *this, LevelChunk *);\n  BiomeArea *(__fastcall *getBiomeArea)(BiomeSource *this, BiomeArea *result, const BoundingBox *, unsigned int);\n  bool (__fastcall *containsOnly)(BiomeSource *this, int, int, int, gsl::span<int const ,-1>);\n  const Biome *(__fastcall *getBiome)(BiomeSource *this, int, int);\n};\n\n")])])]),e("h3",{attrs:{id:"facedirectionalblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#facedirectionalblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FaceDirectionalBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FaceDirectionalBlock : BlockLegacy\n{\n  bool mHorizontalOnly;\n  float mYRotOffset;\n};\n\n")])])]),e("h3",{attrs:{id:"facedirectionalblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#facedirectionalblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FaceDirectionalBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FaceDirectionalBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"furnaceblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnaceblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FurnaceBlock : ActorBlock\n{\n  const bool mLit;\n};\n\n")])])]),e("h3",{attrs:{id:"furnaceblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnaceblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FurnaceBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),e("h3",{attrs:{id:"frostediceblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frostediceblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FrostedIceBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FrostedIceBlock : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"frostediceblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#frostediceblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FrostedIceBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FrostedIceBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"fireresistantcomponentdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireresistantcomponentdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireResistantComponentDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FireResistantComponentDescription : BlockComponentDescription\n{\n  bool fireResistant;\n};\n\n")])])]),e("h3",{attrs:{id:"fireresistantcomponentdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireresistantcomponentdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireResistantComponentDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FireResistantComponentDescription_vtbl\n{\n  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);\n  const std::string *(__fastcall *getName)(BlockComponentDescription *this);\n  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);\n  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,BlockComponentGroupDescription> > *, const BlockComponentFactory *);\n  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"farmblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#farmblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FarmBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FarmBlock : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"farmblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#farmblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FarmBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FarmBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"fencegateblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fencegateblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FenceGateBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FenceGateBlock : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fencegateblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fencegateblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FenceGateBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FenceGateBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"flowerblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flowerblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlowerBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FlowerBlock : BushBlock\n{\n  _BYTE mType[4];\n};\n\n")])])]),e("h3",{attrs:{id:"flowerblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flowerblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlowerBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlowerBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);\n};\n\n")])])]),e("h3",{attrs:{id:"farmblock-transformonfall-l16-lambda-6f1c6586e35323b556ccaad789196afc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#farmblock-transformonfall-l16-lambda-6f1c6586e35323b556ccaad789196afc"}},[t._v("#")]),t._v(" "),e("code",[t._v("FarmBlock::transformOnFall::__l16::<lambda_6f1c6586e35323b556ccaad789196afc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FarmBlock::transformOnFall::__l16::<lambda_6f1c6586e35323b556ccaad789196afc>\n{\n  Actor **entity;\n  const FarmBlock *const __this;\n  const BlockPos *pos;\n  BlockSource *region;\n};\n\n")])])]),e("h3",{attrs:{id:"fungusstem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fungusstem"}},[t._v("#")]),t._v(" "),e("code",[t._v("FungusStem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FungusStem : RotatedPillarBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fungusstem-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fungusstem-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FungusStem_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FungusStem_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"filearchiver-importlegacyworld-l16-lambda-538357a0a1f30c0e58914473ed9ae7db"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver-importlegacyworld-l16-lambda-538357a0a1f30c0e58914473ed9ae7db"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver::_importLegacyWorld::__l16::<lambda_538357a0a1f30c0e58914473ed9ae7db>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileArchiver::_importLegacyWorld::__l16::<lambda_538357a0a1f30c0e58914473ed9ae7db>\n{\n  Core::File *fOut;\n};\n\n")])])]),e("h3",{attrs:{id:"filearchiver-importlegacyworld-l2-lambda-30db252728e558b809611799e47d6aba"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver-importlegacyworld-l2-lambda-30db252728e558b809611799e47d6aba"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver::_importLegacyWorld::__l2::<lambda_30db252728e558b809611799e47d6aba>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileArchiver::_importLegacyWorld::__l2::<lambda_30db252728e558b809611799e47d6aba>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filearchiver-importworld-l2-lambda-80dd2c13733dd620134364ce61fd290a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver-importworld-l2-lambda-80dd2c13733dd620134364ce61fd290a"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver::_importWorld::__l2::<lambda_80dd2c13733dd620134364ce61fd290a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileArchiver::_importWorld::__l2::<lambda_80dd2c13733dd620134364ce61fd290a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"filearchiver-archivelevel-l2-lambda-e96768593f2d4ea24e6f0259355ea06f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filearchiver-archivelevel-l2-lambda-e96768593f2d4ea24e6f0259355ea06f"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileArchiver::archiveLevel::__l2::<lambda_e96768593f2d4ea24e6f0259355ea06f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileArchiver::archiveLevel::__l2::<lambda_e96768593f2d4ea24e6f0259355ea06f>\n{\n  unsigned __int64 *numFiles;\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-aggregatefeature-0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-aggregatefeature-0"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<AggregateFeature<0> >")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::ConcreteFeatureHolder<AggregateFeature<0> > : FeatureLoading::AbstractFeatureHolder\n{\n  AggregateFeature<0> *mFeaturePtr;\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-aggregatefeature-0-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-aggregatefeature-0-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<AggregateFeature<0> >_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder<AggregateFeature<0> >_vtbl\n{\n  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-aggregatefeature-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-aggregatefeature-1"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<AggregateFeature<1> >")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::ConcreteFeatureHolder<AggregateFeature<1> > : FeatureLoading::AbstractFeatureHolder\n{\n  AggregateFeature<1> *mFeaturePtr;\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-aggregatefeature-1-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-aggregatefeature-1-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<AggregateFeature<1> >_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder<AggregateFeature<1> >_vtbl\n{\n  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);\n};\n\n")])])]),e("h3",{attrs:{id:"flagcomponent-ignoreautomaticfeaturerules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flagcomponent-ignoreautomaticfeaturerules"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlagComponent<IgnoreAutomaticFeatureRules>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlagComponent<IgnoreAutomaticFeatureRules> : IEntityComponent\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fallentreetrunk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fallentreetrunk"}},[t._v("#")]),t._v(" "),e("code",[t._v("FallenTreeTrunk")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FallenTreeTrunk : ITreeTrunk\n{\n  IntRange mLogLength;\n  IntRange mHeightModifier;\n  IntRange mStumpHeight;\n  BlockDescriptor mTrunkBlockDescriptor;\n  WeakRefT<FeatureRefTraits> mLogDecorationFeature;\n  TreeHelper::AttachableDecoration mDecoration;\n};\n\n")])])]),e("h3",{attrs:{id:"fallentreetrunk-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fallentreetrunk-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FallenTreeTrunk_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FallenTreeTrunk_vtbl\n{\n  void (__fastcall *~ITreeTrunk)(ITreeTrunk *this);\n  std::optional<BlockPos> *(__fastcall *placeTrunk)(ITreeTrunk *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *, const TreeHelper::TreeParams *, const ITreeCanopy *);\n  bool (__fastcall *parse)(ITreeTrunk *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n};\n\n")])])]),e("h3",{attrs:{id:"fancytreecanopy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fancytreecanopy"}},[t._v("#")]),t._v(" "),e("code",[t._v("FancyTreeCanopy")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FancyTreeCanopy : ITreeCanopy\n{\n  int mHeight;\n  int mRadius;\n  BlockDescriptor mLeafBlockDescriptor;\n};\n\n")])])]),e("h3",{attrs:{id:"fancytreecanopy-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fancytreecanopy-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FancyTreeCanopy_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FancyTreeCanopy_vtbl\n{\n  void (__fastcall *~ITreeCanopy)(ITreeCanopy *this);\n  std::optional<BlockPos> *(__fastcall *placeCanopy)(ITreeCanopy *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *, const TreeHelper::TreeParams *);\n  bool (__fastcall *parseTreeCanopy)(ITreeCanopy *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n};\n\n")])])]),e("h3",{attrs:{id:"fancytreetrunk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fancytreetrunk"}},[t._v("#")]),t._v(" "),e("code",[t._v("FancyTreeTrunk")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) FancyTreeTrunk : ITreeTrunk\n{\n  int mBaseHeight;\n  int mHeightVariance;\n  int mTrunkWidth;\n  float mHeightScale;\n  float mBranchSlope;\n  float mBranchDensity;\n  float mBranchAltitudeFactor;\n  float mFoliageAltitudeFactor;\n  BlockDescriptor mTrunkBlockDescriptor;\n  float mWidthScale;\n};\n\n")])])]),e("h3",{attrs:{id:"fancytreetrunk-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fancytreetrunk-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FancyTreeTrunk_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FancyTreeTrunk_vtbl\n{\n  void (__fastcall *~ITreeTrunk)(ITreeTrunk *this);\n  std::optional<BlockPos> *(__fastcall *placeTrunk)(ITreeTrunk *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *, const TreeHelper::TreeParams *, const ITreeCanopy *);\n  bool (__fastcall *parse)(ITreeTrunk *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-orefeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-orefeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<OreFeature>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::ConcreteFeatureHolder<OreFeature> : FeatureLoading::AbstractFeatureHolder\n{\n  OreFeature *mFeaturePtr;\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-orefeature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-orefeature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<OreFeature>_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder<OreFeature>_vtbl\n{\n  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-scatterfeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-scatterfeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<ScatterFeature>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::ConcreteFeatureHolder<ScatterFeature> : FeatureLoading::AbstractFeatureHolder\n{\n  ScatterFeature *mFeaturePtr;\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-scatterfeature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-scatterfeature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<ScatterFeature>_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder<ScatterFeature>_vtbl\n{\n  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-searchfeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-searchfeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<SearchFeature>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::ConcreteFeatureHolder<SearchFeature> : FeatureLoading::AbstractFeatureHolder\n{\n  SearchFeature *mFeaturePtr;\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-searchfeature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-searchfeature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<SearchFeature>_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder<SearchFeature>_vtbl\n{\n  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-singleblockfeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-singleblockfeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<SingleBlockFeature>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::ConcreteFeatureHolder<SingleBlockFeature> : FeatureLoading::AbstractFeatureHolder\n{\n  SingleBlockFeature *mFeaturePtr;\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-singleblockfeature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-singleblockfeature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<SingleBlockFeature>_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder<SingleBlockFeature>_vtbl\n{\n  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-structuretemplatefeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-structuretemplatefeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<StructureTemplateFeature>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::ConcreteFeatureHolder<StructureTemplateFeature> : FeatureLoading::AbstractFeatureHolder\n{\n  StructureTemplateFeature *mFeaturePtr;\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-structuretemplatefeature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-structuretemplatefeature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<StructureTemplateFeature>_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder<StructureTemplateFeature>_vtbl\n{\n  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-weightedrandomfeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-weightedrandomfeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<WeightedRandomFeature>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::ConcreteFeatureHolder<WeightedRandomFeature> : FeatureLoading::AbstractFeatureHolder\n{\n  WeightedRandomFeature *mFeaturePtr;\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-concretefeatureholder-weightedrandomfeature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-concretefeatureholder-weightedrandomfeature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::ConcreteFeatureHolder<WeightedRandomFeature>_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FeatureLoading::ConcreteFeatureHolder<WeightedRandomFeature>_vtbl\n{\n  void (__fastcall *~AbstractFeatureHolder)(FeatureLoading::AbstractFeatureHolder *this);\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l4-lambda-070746fd668a8863cbe2a3fa42ef5d69"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l4-lambda-070746fd668a8863cbe2a3fa42ef5d69"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l4::<lambda_070746fd668a8863cbe2a3fa42ef5d69>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l4::<lambda_070746fd668a8863cbe2a3fa42ef5d69>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l4-lambda-d26feffea4ae0d0b0b8b4d6cae78c5cf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l4-lambda-d26feffea4ae0d0b0b8b4d6cae78c5cf"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l4::<lambda_d26feffea4ae0d0b0b8b4d6cae78c5cf>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l4::<lambda_d26feffea4ae0d0b0b8b4d6cae78c5cf>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l4-lambda-af5d1f29c06df3f1db5b8f80f70364da"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l4-lambda-af5d1f29c06df3f1db5b8f80f70364da"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l4::<lambda_af5d1f29c06df3f1db5b8f80f70364da>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l4::<lambda_af5d1f29c06df3f1db5b8f80f70364da>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-269493b156b355f6873e78f5de861254"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-269493b156b355f6873e78f5de861254"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_269493b156b355f6873e78f5de861254>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_269493b156b355f6873e78f5de861254>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-534deace486ba3fe58b054318be7d5d3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-534deace486ba3fe58b054318be7d5d3"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_534deace486ba3fe58b054318be7d5d3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_534deace486ba3fe58b054318be7d5d3>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-ab790779e99eb67e9d8c5c8fd9cc4c45"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-ab790779e99eb67e9d8c5c8fd9cc4c45"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_ab790779e99eb67e9d8c5c8fd9cc4c45>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_ab790779e99eb67e9d8c5c8fd9cc4c45>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-4037a9070031ea00ecf26a17b8deac9a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-4037a9070031ea00ecf26a17b8deac9a"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_4037a9070031ea00ecf26a17b8deac9a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_4037a9070031ea00ecf26a17b8deac9a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-58c2dcc1193277e90b7e9d1eb1c15558"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-58c2dcc1193277e90b7e9d1eb1c15558"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_58c2dcc1193277e90b7e9d1eb1c15558>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_58c2dcc1193277e90b7e9d1eb1c15558>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-4299ec9b57c324e4ed6c59adea430d1b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-4299ec9b57c324e4ed6c59adea430d1b"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_4299ec9b57c324e4ed6c59adea430d1b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_4299ec9b57c324e4ed6c59adea430d1b>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-39ac3505671351be2f07089f45af80d4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-39ac3505671351be2f07089f45af80d4"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_39ac3505671351be2f07089f45af80d4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_39ac3505671351be2f07089f45af80d4>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-62a233d718e72e6d45d8be1832f214d7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-62a233d718e72e6d45d8be1832f214d7"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_62a233d718e72e6d45d8be1832f214d7>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_62a233d718e72e6d45d8be1832f214d7>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-765a9a9c0c55c35967e3b8f28c6a4eb6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-765a9a9c0c55c35967e3b8f28c6a4eb6"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_765a9a9c0c55c35967e3b8f28c6a4eb6>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_765a9a9c0c55c35967e3b8f28c6a4eb6>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-897e6fcd2a422a00b9d9c4a201bfd773"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-897e6fcd2a422a00b9d9c4a201bfd773"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_897e6fcd2a422a00b9d9c4a201bfd773>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_897e6fcd2a422a00b9d9c4a201bfd773>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-42561c5376106a2d36a76d95d16bfeed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-42561c5376106a2d36a76d95d16bfeed"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_42561c5376106a2d36a76d95d16bfeed>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_42561c5376106a2d36a76d95d16bfeed>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-3353d277619da3d5cd138ecb16b20a40"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-3353d277619da3d5cd138ecb16b20a40"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_3353d277619da3d5cd138ecb16b20a40>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_3353d277619da3d5cd138ecb16b20a40>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-2555eade625bb966e8a1cb8c17c7d650"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-2555eade625bb966e8a1cb8c17c7d650"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_2555eade625bb966e8a1cb8c17c7d650>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_2555eade625bb966e8a1cb8c17c7d650>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-a0eedeb0869af7a0f96ac76dc92d0031"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-a0eedeb0869af7a0f96ac76dc92d0031"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_a0eedeb0869af7a0f96ac76dc92d0031>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_a0eedeb0869af7a0f96ac76dc92d0031>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-4bf39c4a9b08fca0df43481eceb092dc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-4bf39c4a9b08fca0df43481eceb092dc"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_4bf39c4a9b08fca0df43481eceb092dc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_4bf39c4a9b08fca0df43481eceb092dc>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-5ae05df8699a59f68386294438b05b14"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-5ae05df8699a59f68386294438b05b14"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_5ae05df8699a59f68386294438b05b14>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_5ae05df8699a59f68386294438b05b14>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-72c5c6cc5f5dd19ec9b756a6f4aa1c7e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-72c5c6cc5f5dd19ec9b756a6f4aa1c7e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_72c5c6cc5f5dd19ec9b756a6f4aa1c7e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_72c5c6cc5f5dd19ec9b756a6f4aa1c7e>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-45506032ba1c7b9bbd1df26c52850076"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-45506032ba1c7b9bbd1df26c52850076"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_45506032ba1c7b9bbd1df26c52850076>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_45506032ba1c7b9bbd1df26c52850076>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-bca5b7ec8dc84ccd012b20d3dd8504ec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-bca5b7ec8dc84ccd012b20d3dd8504ec"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_bca5b7ec8dc84ccd012b20d3dd8504ec>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_bca5b7ec8dc84ccd012b20d3dd8504ec>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-13ccba55549a4f3cd8e4c2c51a107ddd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-13ccba55549a4f3cd8e4c2c51a107ddd"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_13ccba55549a4f3cd8e4c2c51a107ddd>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_13ccba55549a4f3cd8e4c2c51a107ddd>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-3aa76ff1487ac6670529bd834c913005"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-3aa76ff1487ac6670529bd834c913005"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_3aa76ff1487ac6670529bd834c913005>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_3aa76ff1487ac6670529bd834c913005>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-5cb6d1b77b80274727750302cf95eef8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-5cb6d1b77b80274727750302cf95eef8"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_5cb6d1b77b80274727750302cf95eef8>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_5cb6d1b77b80274727750302cf95eef8>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-2db0a06029a62470922787888580f857"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-2db0a06029a62470922787888580f857"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_2db0a06029a62470922787888580f857>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_2db0a06029a62470922787888580f857>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-e3ab05455b51e5b1eb353e38d6a02e5a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-e3ab05455b51e5b1eb353e38d6a02e5a"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_e3ab05455b51e5b1eb353e38d6a02e5a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_e3ab05455b51e5b1eb353e38d6a02e5a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-a341f3a50e60c6ed529981a28c90aaac"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-a341f3a50e60c6ed529981a28c90aaac"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_a341f3a50e60c6ed529981a28c90aaac>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_a341f3a50e60c6ed529981a28c90aaac>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-8d80157009857924b75728f5593a8ff8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-8d80157009857924b75728f5593a8ff8"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_8d80157009857924b75728f5593a8ff8>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_8d80157009857924b75728f5593a8ff8>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-b79033f7b1569ed146e124133fdbcc0c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-b79033f7b1569ed146e124133fdbcc0c"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_b79033f7b1569ed146e124133fdbcc0c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_b79033f7b1569ed146e124133fdbcc0c>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-ff651ceb1e4b05630dbf709c5689b4b1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-ff651ceb1e4b05630dbf709c5689b4b1"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_ff651ceb1e4b05630dbf709c5689b4b1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_ff651ceb1e4b05630dbf709c5689b4b1>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-5c3870871285efa3a3aa788bcc59a6a5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-5c3870871285efa3a3aa788bcc59a6a5"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_5c3870871285efa3a3aa788bcc59a6a5>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_5c3870871285efa3a3aa788bcc59a6a5>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l3-lambda-30a0658175a01da0b1d017c3a844bd3e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l3-lambda-30a0658175a01da0b1d017c3a844bd3e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l3::<lambda_30a0658175a01da0b1d017c3a844bd3e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l3::<lambda_30a0658175a01da0b1d017c3a844bd3e>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-8863387e98ecef072021858bd81ad446"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-8863387e98ecef072021858bd81ad446"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_8863387e98ecef072021858bd81ad446>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_8863387e98ecef072021858bd81ad446>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-5345261c4062f4e77220602c18289610"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-5345261c4062f4e77220602c18289610"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_5345261c4062f4e77220602c18289610>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_5345261c4062f4e77220602c18289610>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-8fb55b46049a0200c7143f7ba4895532"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-8fb55b46049a0200c7143f7ba4895532"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_8fb55b46049a0200c7143f7ba4895532>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_8fb55b46049a0200c7143f7ba4895532>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-64df30a075a0c8c674bb3f6f828c52ca"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-64df30a075a0c8c674bb3f6f828c52ca"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_64df30a075a0c8c674bb3f6f828c52ca>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_64df30a075a0c8c674bb3f6f828c52ca>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-0d7cacde3fd40c099b69258499db96d6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-0d7cacde3fd40c099b69258499db96d6"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_0d7cacde3fd40c099b69258499db96d6>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_0d7cacde3fd40c099b69258499db96d6>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-e34e6baeca6179063c960b15821263e0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-e34e6baeca6179063c960b15821263e0"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_e34e6baeca6179063c960b15821263e0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_e34e6baeca6179063c960b15821263e0>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l5-lambda-bd812f17ea40517b41fdb6a37c75611f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l5-lambda-bd812f17ea40517b41fdb6a37c75611f"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l5::<lambda_bd812f17ea40517b41fdb6a37c75611f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l5::<lambda_bd812f17ea40517b41fdb6a37c75611f>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l5-lambda-0bab2de68df3204c165f75450ef8e72a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l5-lambda-0bab2de68df3204c165f75450ef8e72a"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l5::<lambda_0bab2de68df3204c165f75450ef8e72a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l5::<lambda_0bab2de68df3204c165f75450ef8e72a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l5-lambda-332a15757cb5a2ca55e4629941ee6bfe"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l5-lambda-332a15757cb5a2ca55e4629941ee6bfe"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l5::<lambda_332a15757cb5a2ca55e4629941ee6bfe>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l5::<lambda_332a15757cb5a2ca55e4629941ee6bfe>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l4-lambda-03b0ae550376e085f07188b9454238fd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l4-lambda-03b0ae550376e085f07188b9454238fd"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l4::<lambda_03b0ae550376e085f07188b9454238fd>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l4::<lambda_03b0ae550376e085f07188b9454238fd>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l4-lambda-6b158c2e512a8d1fbc8831cf780ee4dc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l4-lambda-6b158c2e512a8d1fbc8831cf780ee4dc"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l4::<lambda_6b158c2e512a8d1fbc8831cf780ee4dc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l4::<lambda_6b158c2e512a8d1fbc8831cf780ee4dc>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l4-lambda-83079f870ce1353e2d06423894cf973e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l4-lambda-83079f870ce1353e2d06423894cf973e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l4::<lambda_83079f870ce1353e2d06423894cf973e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l4::<lambda_83079f870ce1353e2d06423894cf973e>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-97556ef3bb7e60132ee693ff92d4f682"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-97556ef3bb7e60132ee693ff92d4f682"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_97556ef3bb7e60132ee693ff92d4f682>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_97556ef3bb7e60132ee693ff92d4f682>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-ed2b13013692bdd7f19a91b5afd86826"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-ed2b13013692bdd7f19a91b5afd86826"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_ed2b13013692bdd7f19a91b5afd86826>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_ed2b13013692bdd7f19a91b5afd86826>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-d222b44934b5477be8e0cf5e6eaab932"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-d222b44934b5477be8e0cf5e6eaab932"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_d222b44934b5477be8e0cf5e6eaab932>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_d222b44934b5477be8e0cf5e6eaab932>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-c8bd75ad40874126e6105b6c5b3170a4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-c8bd75ad40874126e6105b6c5b3170a4"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_c8bd75ad40874126e6105b6c5b3170a4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_c8bd75ad40874126e6105b6c5b3170a4>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-6820c32e3003b153c2b3cea1bdc8d1b3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-6820c32e3003b153c2b3cea1bdc8d1b3"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_6820c32e3003b153c2b3cea1bdc8d1b3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_6820c32e3003b153c2b3cea1bdc8d1b3>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-374f89a74208a5ae69066c135eeec787"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-374f89a74208a5ae69066c135eeec787"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_374f89a74208a5ae69066c135eeec787>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_374f89a74208a5ae69066c135eeec787>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-90c035c83f69abd1911d31525619f974"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-90c035c83f69abd1911d31525619f974"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_90c035c83f69abd1911d31525619f974>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_90c035c83f69abd1911d31525619f974>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-8d4f36e87c6e3e131780a3a2f22c6d9d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-8d4f36e87c6e3e131780a3a2f22c6d9d"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_8d4f36e87c6e3e131780a3a2f22c6d9d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_8d4f36e87c6e3e131780a3a2f22c6d9d>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-6de0fdb9a2c3ef41e1fef4cdd647078c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-6de0fdb9a2c3ef41e1fef4cdd647078c"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_6de0fdb9a2c3ef41e1fef4cdd647078c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_6de0fdb9a2c3ef41e1fef4cdd647078c>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"flatworldgenerator-threaddata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flatworldgenerator-threaddata"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlatWorldGenerator::ThreadData")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlatWorldGenerator::ThreadData\n{\n  Random random;\n};\n\n")])])]),e("h3",{attrs:{id:"flatworldgenerator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flatworldgenerator"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlatWorldGenerator")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlatWorldGenerator : ChunkSource, WorldGenerator\n{\n  std::vector<Block const *> mPrototypeBlocks;\n  BlockVolume mPrototype;\n  const Biome *mBiome;\n  Bedrock::Threading::InstancedThreadLocal<FlatWorldGenerator::ThreadData,std::allocator<FlatWorldGenerator::ThreadData> > generatorHelpersPool;\n};\n\n")])])]),e("h3",{attrs:{id:"flatworldgenerator-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flatworldgenerator-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlatWorldGenerator_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlatWorldGenerator_vtbl\n{\n  void (__fastcall *~ChunkSource)(ChunkSource *this);\n  void (__fastcall *shutdown)(ChunkSource *this);\n  bool (__fastcall *isShutdownDone)(ChunkSource *this);\n  std::shared_ptr<LevelChunk> *(__fastcall *getExistingChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, const ChunkPos *);\n  std::shared_ptr<LevelChunk> *(__fastcall *getRandomChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, Random *);\n  std::shared_ptr<LevelChunk> *(__fastcall *createNewChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, const ChunkPos *, ChunkSource::LoadMode);\n  std::shared_ptr<LevelChunk> *(__fastcall *getOrLoadChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, const ChunkPos *, ChunkSource::LoadMode);\n  bool (__fastcall *postProcess)(ChunkSource *this, ChunkViewSource *);\n  void (__fastcall *checkAndReplaceChunk)(ChunkSource *this, ChunkViewSource *, LevelChunk *);\n  void (__fastcall *loadChunk)(ChunkSource *this, LevelChunk *, bool);\n  void (__fastcall *postProcessMobsAt)(ChunkSource *this, BlockSource *, int, int, Random *);\n  bool (__fastcall *saveLiveChunk)(ChunkSource *this, LevelChunk *);\n  void (__fastcall *hintDiscardBatchBegin)(ChunkSource *this);\n  void (__fastcall *hintDiscardBatchEnd)(ChunkSource *this);\n  void (__fastcall *acquireDiscarded)(ChunkSource *this, std::unique_ptr<LevelChunk,LevelChunkFinalDeleter>);\n  void (__fastcall *compact)(ChunkSource *this);\n  void (__fastcall *flushPendingWrites)(ChunkSource *this);\n  bool (__fastcall *isWithinWorldLimit)(ChunkSource *this, const ChunkPos *);\n  const std::unordered_map<ChunkPos,std::weak_ptr<LevelChunk>> *(__fastcall *getChunkMap)(ChunkSource *this);\n  const std::unordered_map<ChunkPos,std::weak_ptr<LevelChunk>> *(__fastcall *getStorage)(ChunkSource *this);\n  void (__fastcall *clearDeletedEntities)(ChunkSource *this);\n  void (__fastcall *removeDimensionData)(ChunkSource *this, const std::unordered_set<AutomaticID<Dimension,int>> *);\n  bool (__fastcall *hasChunk)(ChunkSource *this, const ChunkPos *, AutomaticID<Dimension,int>);\n  bool (__fastcall *canCreateViews)(ChunkSource *this);\n};\n\n")])])]),e("h3",{attrs:{id:"featurepoolelement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featurepoolelement"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeaturePoolElement")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeaturePoolElement : StructurePoolElement\n{\n  WeakRefT<FeatureRefTraits> mFeature;\n};\n\n")])])]),e("h3",{attrs:{id:"featurepoolelement-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featurepoolelement-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeaturePoolElement_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FeaturePoolElement_vtbl\n{\n  BlockPos *(__fastcall *getSize)(StructurePoolElement *this, BlockPos *result, Rotation);\n  std::vector<JigsawBlockInfo> *(__fastcall *getJigsawMarkers)(StructurePoolElement *this, std::vector<JigsawBlockInfo> *result, BlockPos, LegacyStructureSettings *, BlockSource *);\n  std::vector<JigsawBlockInfo> *(__fastcall *getJigsawMarkers)(StructurePoolElement *this, std::vector<JigsawBlockInfo> *result, BlockPos, Rotation);\n  BoundingBox *(__fastcall *getBoundingBox)(StructurePoolElement *this, BoundingBox *result, BlockPos, Rotation);\n  void (__fastcall *setProjection)(StructurePoolElement *this, Projection);\n  Projection (__fastcall *getProjection)(StructurePoolElement *this);\n  PostProcessSettings (__fastcall *getPostProcessSettings)(StructurePoolElement *this);\n  bool (__fastcall *place)(StructurePoolElement *this, BlockSource *, BlockPos, Rotation, BoundingBox, Random *, std::unordered_map<BlockPos,std::optional<ActorDefinitionIdentifier>> *, BlockPos);\n  void (__fastcall *placeActors)(StructurePoolElement *this, BlockSource *, BlockPos, Rotation, Random *);\n  void (__fastcall *handleJigsawBlock)(StructurePoolElement *this, BlockSource *, JigsawBlockInfo *, LegacyStructureSettings *);\n  void (__fastcall *handleDataMarker)(StructurePoolElement *this, BlockSource *, BlockPos, std::string, std::unordered_map<BlockPos,std::optional<ActorDefinitionIdentifier>> *);\n  bool (__fastcall *isValid)(StructurePoolElement *this);\n  void (__fastcall *~StructurePoolElement)(StructurePoolElement *this);\n};\n\n")])])]),e("h3",{attrs:{id:"flushablestorageareaenv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flushablestorageareaenv"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlushableStorageAreaEnv")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FlushableStorageAreaEnv : FlushableEnv\n{\n  std::shared_ptr<Core::FileStorageArea> mStorageArea;\n};\n\n")])])]),e("h3",{attrs:{id:"flushablestorageareaenv-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flushablestorageareaenv-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FlushableStorageAreaEnv_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FlushableStorageAreaEnv_vtbl\n{\n  void (__fastcall *~Env)(leveldb::Env *this);\n  leveldb::Status *(__fastcall *NewSequentialFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::SequentialFile **);\n  leveldb::Status *(__fastcall *NewRandomAccessFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::RandomAccessFile **);\n  leveldb::Status *(__fastcall *NewWritableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);\n  leveldb::Status *(__fastcall *NewAppendableFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::WritableFile **);\n  bool (__fastcall *FileExists)(leveldb::Env *this, const std::string *);\n  leveldb::Status *(__fastcall *GetChildren)(leveldb::Env *this, leveldb::Status *result, const std::string *, std::vector<std::string> *);\n  leveldb::Status *(__fastcall *DeleteFileA)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *CreateDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *DeleteDir)(leveldb::Env *this, leveldb::Status *result, const std::string *);\n  leveldb::Status *(__fastcall *GetFileSize)(leveldb::Env *this, leveldb::Status *result, const std::string *, unsigned __int64 *);\n  leveldb::Status *(__fastcall *RenameFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, const std::string *);\n  leveldb::Status *(__fastcall *LockFile)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::FileLock **);\n  leveldb::Status *(__fastcall *UnlockFile)(leveldb::Env *this, leveldb::Status *result, leveldb::FileLock *);\n  void (__fastcall *Schedule)(leveldb::Env *this, void (__fastcall *)(void *), void *);\n  void (__fastcall *StartThread)(leveldb::Env *this, void (__fastcall *)(void *), void *);\n  leveldb::Status *(__fastcall *GetTestDirectory)(leveldb::Env *this, leveldb::Status *result, std::string *);\n  leveldb::Status *(__fastcall *NewLogger)(leveldb::Env *this, leveldb::Status *result, const std::string *, leveldb::Logger **);\n  unsigned __int64 (__fastcall *NowMicros)(leveldb::Env *this);\n  void (__fastcall *SleepForMicroseconds)(leveldb::Env *this, int);\n  void (__fastcall *flushToPermanentStorage)(FlushableEnv *this);\n};\n\n")])])]),e("h3",{attrs:{id:"fillcontainerfunction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fillcontainerfunction"}},[t._v("#")]),t._v(" "),e("code",[t._v("FillContainerFunction")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FillContainerFunction : LootItemFunction\n{\n  std::string mLootTable;\n};\n\n")])])]),e("h3",{attrs:{id:"fillcontainerfunction-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fillcontainerfunction-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FillContainerFunction_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FillContainerFunction_vtbl\n{\n  void (__fastcall *~LootItemFunction)(LootItemFunction *this);\n  int (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemInstance *, Random *, LootTableContext *);\n  int (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, const Trade *, LootTableContext *);\n  void (__fastcall *apply)(LootItemFunction *this, ItemStack *, Random *, LootTableContext *);\n};\n\n")])])]),e("h3",{attrs:{id:"fileentrycomparer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileentrycomparer"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileEntryComparer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileEntryComparer\n{\n};\n\n")])])]),e("h3",{attrs:{id:"findtargetnode-findtarget-l2-sortedentity"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findtargetnode-findtarget-l2-sortedentity"}},[t._v("#")]),t._v(" "),e("code",[t._v("FindTargetNode::_findTarget::__l2::SortedEntity")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct FindTargetNode::_findTarget::__l2::SortedEntity\n{\n  float distSq;\n  Actor *ptr;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-a6a6025a330bc32a52676484b89f42bc-l5-lambda-8feab0bb6d6076ddaea0f0c6fdd2a476"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-a6a6025a330bc32a52676484b89f42bc-l5-lambda-8feab0bb6d6076ddaea0f0c6fdd2a476"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_a6a6025a330bc32a52676484b89f42bc>::()::__l5::<lambda_8feab0bb6d6076ddaea0f0c6fdd2a476>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_a6a6025a330bc32a52676484b89f42bc>::()::__l5::<lambda_8feab0bb6d6076ddaea0f0c6fdd2a476>\n{\n  LocalPlayer **player;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-b501aa9096a8ed529fb12076180c73f1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-b501aa9096a8ed529fb12076180c73f1"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_b501aa9096a8ed529fb12076180c73f1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_b501aa9096a8ed529fb12076180c73f1>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-c083550131e71a55511296daac40f470"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-c083550131e71a55511296daac40f470"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_c083550131e71a55511296daac40f470>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_c083550131e71a55511296daac40f470>\n{\n  FoldMeuScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-0f88f144beee21e5774357a5f78da137"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-0f88f144beee21e5774357a5f78da137"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_0f88f144beee21e5774357a5f78da137>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_0f88f144beee21e5774357a5f78da137>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-2483871e72b0a3a4918ebadc3d6ad9a5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-2483871e72b0a3a4918ebadc3d6ad9a5"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_2483871e72b0a3a4918ebadc3d6ad9a5>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_2483871e72b0a3a4918ebadc3d6ad9a5>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-ef2987bf3d9f28b29fff7aa0a64c5416"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-ef2987bf3d9f28b29fff7aa0a64c5416"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_ef2987bf3d9f28b29fff7aa0a64c5416>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_ef2987bf3d9f28b29fff7aa0a64c5416>\n{\n  FoldMeuScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-64b49edc8ba5aeeb2f3476bd9b9c093a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-64b49edc8ba5aeeb2f3476bd9b9c093a"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_64b49edc8ba5aeeb2f3476bd9b9c093a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_64b49edc8ba5aeeb2f3476bd9b9c093a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-setupcallbacksforbooleanoption-l5-lambda-88a7b0e5f2761b34ffb9d0a84e730c1c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-setupcallbacksforbooleanoption-l5-lambda-88a7b0e5f2761b34ffb9d0a84e730c1c"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::setUpCallbacksForBooleanOption::__l5::<lambda_88a7b0e5f2761b34ffb9d0a84e730c1c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::setUpCallbacksForBooleanOption::__l5::<lambda_88a7b0e5f2761b34ffb9d0a84e730c1c>\n{\n  std::function<bool __cdecl(void)> isEnabled;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-918e92bc02a750928ba6a2b7978a22e3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-918e92bc02a750928ba6a2b7978a22e3"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_918e92bc02a750928ba6a2b7978a22e3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_918e92bc02a750928ba6a2b7978a22e3>\n{\n  FoldMeuScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-a6fc73c80d8a9683560641429bd0ed96"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-a6fc73c80d8a9683560641429bd0ed96"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_a6fc73c80d8a9683560641429bd0ed96>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_a6fc73c80d8a9683560641429bd0ed96>\n{\n  FoldMeuScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-e823ae91e9641fd1835e13f3c4ee3ca3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-e823ae91e9641fd1835e13f3c4ee3ca3"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_e823ae91e9641fd1835e13f3c4ee3ca3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_e823ae91e9641fd1835e13f3c4ee3ca3>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-6ec23c973f7b6a4da05b0939ba1a1eb0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-6ec23c973f7b6a4da05b0939ba1a1eb0"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_6ec23c973f7b6a4da05b0939ba1a1eb0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_6ec23c973f7b6a4da05b0939ba1a1eb0>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-5ade11331fe1558f519255d4b1202822"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-5ade11331fe1558f519255d4b1202822"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_5ade11331fe1558f519255d4b1202822>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_5ade11331fe1558f519255d4b1202822>\n{\n  FoldMeuScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-setupcallbacksforbooleanoption-l2-lambda-fa9d43b382490adf14339cf539e74ad6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-setupcallbacksforbooleanoption-l2-lambda-fa9d43b382490adf14339cf539e74ad6"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::setUpCallbacksForBooleanOption::__l2::<lambda_fa9d43b382490adf14339cf539e74ad6>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::setUpCallbacksForBooleanOption::__l2::<lambda_fa9d43b382490adf14339cf539e74ad6>\n{\n  std::function<void __cdecl(bool)> setValue;\n  std::function<bool __cdecl(void)> isEnabled;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-a5e9eed93727d5c4ebb5be06e9c90f04"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-a5e9eed93727d5c4ebb5be06e9c90f04"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_a5e9eed93727d5c4ebb5be06e9c90f04>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_a5e9eed93727d5c4ebb5be06e9c90f04>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-cb3d7b3d49701cb402d19becafe55657"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-cb3d7b3d49701cb402d19becafe55657"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_cb3d7b3d49701cb402d19becafe55657>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_cb3d7b3d49701cb402d19becafe55657>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-22fb87d39d0a867e7d00db491a10a129"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-22fb87d39d0a867e7d00db491a10a129"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_22fb87d39d0a867e7d00db491a10a129>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_22fb87d39d0a867e7d00db491a10a129>\n{\n  FoldMeuScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-2f57f4b9490b0343616042fd9a3c990a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-2f57f4b9490b0343616042fd9a3c990a"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_2f57f4b9490b0343616042fd9a3c990a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_2f57f4b9490b0343616042fd9a3c990a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-08424e551f27aafc65791bc8288cbde3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-08424e551f27aafc65791bc8288cbde3"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_08424e551f27aafc65791bc8288cbde3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_08424e551f27aafc65791bc8288cbde3>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-d157d9d5d6fdbca615e3caa8e0bf4222"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-d157d9d5d6fdbca615e3caa8e0bf4222"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_d157d9d5d6fdbca615e3caa8e0bf4222>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_d157d9d5d6fdbca615e3caa8e0bf4222>\n{\n  FoldMeuScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-3ed8c7b17036d6d51f6c5b76009abbb0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-3ed8c7b17036d6d51f6c5b76009abbb0"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_3ed8c7b17036d6d51f6c5b76009abbb0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_3ed8c7b17036d6d51f6c5b76009abbb0>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-b5146d2372a6b1483802334539c53cff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-b5146d2372a6b1483802334539c53cff"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_b5146d2372a6b1483802334539c53cff>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_b5146d2372a6b1483802334539c53cff>\n{\n  FoldMeuScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-9ad56d1a09ac749d3b8f4649d9b1d636"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-9ad56d1a09ac749d3b8f4649d9b1d636"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_9ad56d1a09ac749d3b8f4649d9b1d636>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_9ad56d1a09ac749d3b8f4649d9b1d636>\n{\n  FoldMeuScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-444e43ea276a91140d204a9cd9f398dc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-444e43ea276a91140d204a9cd9f398dc"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_444e43ea276a91140d204a9cd9f398dc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_444e43ea276a91140d204a9cd9f398dc>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-0f9b4d753427a8d4bf03f7ba64413b92"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-0f9b4d753427a8d4bf03f7ba64413b92"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_0f9b4d753427a8d4bf03f7ba64413b92>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_0f9b4d753427a8d4bf03f7ba64413b92>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-a6a6025a330bc32a52676484b89f42bc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-a6a6025a330bc32a52676484b89f42bc"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_a6a6025a330bc32a52676484b89f42bc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_a6a6025a330bc32a52676484b89f42bc>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registereventhandlers-l2-lambda-d0a328a4c1f934c10ffb505d9b5e76c9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registereventhandlers-l2-lambda-d0a328a4c1f934c10ffb505d9b5e76c9"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_d0a328a4c1f934c10ffb505d9b5e76c9>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerEventHandlers::__l2::<lambda_d0a328a4c1f934c10ffb505d9b5e76c9>\n{\n  FoldMeuScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-b17e57dcd81ae199a0d252bf7005e06e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-b17e57dcd81ae199a0d252bf7005e06e"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_b17e57dcd81ae199a0d252bf7005e06e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_b17e57dcd81ae199a0d252bf7005e06e>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"foldmeuscreencontroller-registerbindings-l2-lambda-3d3e37d1c4de3bdd812b3e051f0c85a9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldmeuscreencontroller-registerbindings-l2-lambda-3d3e37d1c4de3bdd812b3e051f0c85a9"}},[t._v("#")]),t._v(" "),e("code",[t._v("FoldMeuScreenController::_registerBindings::__l2::<lambda_3d3e37d1c4de3bdd812b3e051f0c85a9>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FoldMeuScreenController::_registerBindings::__l2::<lambda_3d3e37d1c4de3bdd812b3e051f0c85a9>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"fileupdatecallback"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileupdatecallback"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUpdateCallback")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FileUpdateCallback : DownloadCallback\n{\n  std::function<void __cdecl(tDownloadInfo &)> succCallback;\n  std::function<void __cdecl(tDownloadInfo &)> failCallback;\n  std::function<void __cdecl(tDownloadInfo &)> progCallback;\n};\n\n")])])]),e("h3",{attrs:{id:"fileupdatecallback-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fileupdatecallback-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("FileUpdateCallback_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ FileUpdateCallback_vtbl\n{\n  void (__fastcall *onSuccCallback)(DownloadCallback *this, tDownloadInfo *);\n  void (__fastcall *onFailCallback)(DownloadCallback *this, tDownloadInfo *);\n  void (__fastcall *onProgCallback)(DownloadCallback *this, tDownloadInfo *);\n  void (__fastcall *~DownloadCallback)(DownloadCallback *this);\n};\n\n")])])]),e("h3",{attrs:{id:"facedirectionalcomponentdescription-buildschema-l2-lambda-e384047c49a815c3752804224621532b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#facedirectionalcomponentdescription-buildschema-l2-lambda-e384047c49a815c3752804224621532b"}},[t._v("#")]),t._v(" "),e("code",[t._v("FaceDirectionalComponentDescription::buildSchema::__l2::<lambda_e384047c49a815c3752804224621532b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FaceDirectionalComponentDescription::buildSchema::__l2::<lambda_e384047c49a815c3752804224621532b>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"facedirectionalcomponentdescription-buildschema-l2-lambda-66c7ce4eb31239d7104331f3bfa7521d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#facedirectionalcomponentdescription-buildschema-l2-lambda-66c7ce4eb31239d7104331f3bfa7521d"}},[t._v("#")]),t._v(" "),e("code",[t._v("FaceDirectionalComponentDescription::buildSchema::__l2::<lambda_66c7ce4eb31239d7104331f3bfa7521d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FaceDirectionalComponentDescription::buildSchema::__l2::<lambda_66c7ce4eb31239d7104331f3bfa7521d>\n{\n  const BlockComponentFactory *factory;\n};\n\n")])])]),e("h3",{attrs:{id:"fireresistantcomponentdescription-buildschema-l2-lambda-8759fb23e5c0a21392825d06d0b04050"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireresistantcomponentdescription-buildschema-l2-lambda-8759fb23e5c0a21392825d06d0b04050"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireResistantComponentDescription::buildSchema::__l2::<lambda_8759fb23e5c0a21392825d06d0b04050>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FireResistantComponentDescription::buildSchema::__l2::<lambda_8759fb23e5c0a21392825d06d0b04050>\n{\n  const BlockComponentFactory *factory;\n};\n\n")])])]),e("h3",{attrs:{id:"fireresistantcomponentdescription-buildschema-l2-lambda-329954e13c2e3af67509eaea49dde588"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fireresistantcomponentdescription-buildschema-l2-lambda-329954e13c2e3af67509eaea49dde588"}},[t._v("#")]),t._v(" "),e("code",[t._v("FireResistantComponentDescription::buildSchema::__l2::<lambda_329954e13c2e3af67509eaea49dde588>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FireResistantComponentDescription::buildSchema::__l2::<lambda_329954e13c2e3af67509eaea49dde588>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"featureloading-buildschema-l2-lambda-b9b2bed89d2ad2db6dad7f2f0e544444"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#featureloading-buildschema-l2-lambda-b9b2bed89d2ad2db6dad7f2f0e544444"}},[t._v("#")]),t._v(" "),e("code",[t._v("FeatureLoading::_buildSchema::__l2::<lambda_b9b2bed89d2ad2db6dad7f2f0e544444>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FeatureLoading::_buildSchema::__l2::<lambda_b9b2bed89d2ad2db6dad7f2f0e544444>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"furnacecontainermanagermodel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#furnacecontainermanagermodel"}},[t._v("#")]),t._v(" "),e("code",[t._v("FurnaceContainerManagerModel")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj FurnaceContainerManagerModel : ContainerManagerModel\n{\n  BlockPos mBlockPos;\n  int mLastTickCount;\n  int mLastLitTime;\n  int mLastLitDuration;\n  int mLastStoredXP;\n  int mLastInputId;\n  int mLastInputAux;\n  std::string mLastOutputName;\n  int mLastResultDisplayId;\n  const BlockActorType mBlockActorType;\n  const ContainerEnumName mIngredientContainerName;\n  const HashedString mRecipeTag;\n};\n\n")])])])])}),[],!1,null,null,null);e.default=c.exports}}]);