(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{449:function(t,e,c){"use strict";c.r(e);var a=c(27),o=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"n"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#n"}},[t._v("#")]),t._v(" N")]),t._v(" "),e("h3",{attrs:{id:"notifymanagerclient"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notifymanagerclient"}},[t._v("#")]),t._v(" "),e("code",[t._v("NotifyManagerClient")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(232) "),e("code",[t._v("NotifyManager")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"notifymanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notifymanager"}},[t._v("#")]),t._v(" "),e("code",[t._v("NotifyManager")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("NotifyManager_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("_nextDtZero")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<std::string,std::list<std::shared_ptr<NotifyHandler>>>")])]),t._v(" "),e("td",[t._v("mTempAddMap")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<std::string,std::list<std::shared_ptr<NotifyHandler>>>")])]),t._v(" "),e("td",[t._v("mTempDelMap")])]),t._v(" "),e("tr",[e("td",[t._v("144")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::unordered_map<std::string,std::list<std::shared_ptr<NotifyHandler>>>")])]),t._v(" "),e("td",[t._v("mActiveMap")])]),t._v(" "),e("tr",[e("td",[t._v("208")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >")])]),t._v(" "),e("td",[t._v("lastPushTickTm")])]),t._v(" "),e("tr",[e("td",[t._v("216")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >")])]),t._v(" "),e("td",[t._v("timePassed")])]),t._v(" "),e("tr",[e("td",[t._v("224")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >")])]),t._v(" "),e("td",[t._v("lastEngineTickTm")])])])]),t._v(" "),e("h3",{attrs:{id:"notifymanagerserver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notifymanagerserver"}},[t._v("#")]),t._v(" "),e("code",[t._v("NotifyManagerServer")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(232) "),e("code",[t._v("NotifyManager")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("232")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::chrono::duration<__int64,std::ratio<1,1000000000> >")])]),t._v(" "),e("td",[t._v("mLastFrameTime")])])])]),t._v(" "),e("h3",{attrs:{id:"networkworldinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkworldinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkWorldInfo")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("WorldInfo")])]),t._v(" "),e("td",[t._v("baseclass_0")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mPlayerCount")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mOwnerName")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mOwnerXuid")])]),t._v(" "),e("tr",[e("td",[t._v("104")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mWorldName")])]),t._v(" "),e("tr",[e("td",[t._v("136")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mGameType")])]),t._v(" "),e("tr",[e("td",[t._v("168")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mVersion")])]),t._v(" "),e("tr",[e("td",[t._v("200")]),t._v(" "),e("td",[t._v("(208) "),e("code",[t._v("ExternalServer")])]),t._v(" "),e("td",[t._v("mExternalServer")])]),t._v(" "),e("tr",[e("td",[t._v("408")]),t._v(" "),e("td",[t._v("(304) "),e("code",[t._v("PingedCompatibleServer")])]),t._v(" "),e("td",[t._v("mRemoteServer")])]),t._v(" "),e("tr",[e("td",[t._v("712")]),t._v(" "),e("td",[t._v("(472) "),e("code",[t._v("Social::MultiplayerGameInfo")])]),t._v(" "),e("td",[t._v("mFriendGame")])]),t._v(" "),e("tr",[e("td",[t._v("1184")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<ThirdPartyServer>")])]),t._v(" "),e("td",[t._v("mThirdPartyServer")])])])]),t._v(" "),e("h3",{attrs:{id:"newtype-unsigned-char"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newtype-unsigned-char"}},[t._v("#")]),t._v(" "),e("code",[t._v("NewType<unsigned char>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("unsigned __int8")])]),t._v(" "),e("td",[t._v("value")])])])]),t._v(" "),e("h3",{attrs:{id:"networkhandler-runevents-l2-lambda-548e329923228af3a9c05419563beac9-l2-lambda-86aa690d2a07e32c745202fcad9767d8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhandler-runevents-l2-lambda-548e329923228af3a9c05419563beac9-l2-lambda-86aa690d2a07e32c745202fcad9767d8"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHandler::runEvents::__l2::<lambda_548e329923228af3a9c05419563beac9>::()::__l2::<lambda_86aa690d2a07e32c745202fcad9767d8>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"networkchunkpublisher-sendqueuedchunks-l2-lambda-94ae8e063655f414397d243cf2bdb40c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkpublisher-sendqueuedchunks-l2-lambda-94ae8e063655f414397d243cf2bdb40c"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkPublisher::sendQueuedChunks::__l2::<lambda_94ae8e063655f414397d243cf2bdb40c>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"nullsoundplayer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nullsoundplayer"}},[t._v("#")]),t._v(" "),e("code",[t._v("NullSoundPlayer")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("SoundPlayerInterface")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"newtype-int"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newtype-int"}},[t._v("#")]),t._v(" "),e("code",[t._v("NewType<int>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("value")])])])]),t._v(" "),e("h3",{attrs:{id:"netherlighttextureimagebuilder-ambientlevels"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherlighttextureimagebuilder-ambientlevels"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherLightTextureImageBuilder::AmbientLevels")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("height")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("ambient")])])])]),t._v(" "),e("h3",{attrs:{id:"networkidentifier"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkidentifier"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkIdentifier")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("RakNet::RakNetGUID")])]),t._v(" "),e("td",[t._v("mGuid")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(128) "),e("code",[t._v("sockaddr_storage")])]),t._v(" "),e("td",[t._v("mSock")])]),t._v(" "),e("tr",[e("td",[t._v("144")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("NetworkIdentifier::Type")])]),t._v(" "),e("td",[t._v("mType")])])])]),t._v(" "),e("h3",{attrs:{id:"nulllogger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nulllogger"}},[t._v("#")]),t._v(" "),e("code",[t._v("NullLogger")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("leveldb::Logger")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"namedpipeobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#namedpipeobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("NamedPipeObject")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("NamedPipeObject_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("recvBuffer")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("void *")])]),t._v(" "),e("td",[t._v("hPipe")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::string>")])]),t._v(" "),e("td",[t._v("packages")])])])]),t._v(" "),e("h3",{attrs:{id:"newtype-int64"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newtype-int64"}},[t._v("#")]),t._v(" "),e("code",[t._v("NewType<__int64>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("value")])])])]),t._v(" "),e("h3",{attrs:{id:"networkblockposition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkblockposition"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkBlockPosition")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("BlockPos")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"navigationcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationComponent")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mAvoidDamageBlocks")])]),t._v(" "),e("tr",[e("td",[t._v("1")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mAvoidPortals")])]),t._v(" "),e("tr",[e("td",[t._v("2")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mAvoidSun")])]),t._v(" "),e("tr",[e("td",[t._v("3")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mAvoidWater")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCanBreach")])]),t._v(" "),e("tr",[e("td",[t._v("5")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCanFloat")])]),t._v(" "),e("tr",[e("td",[t._v("6")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCanPathOverLava")])]),t._v(" "),e("tr",[e("td",[t._v("7")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCanWalkInLava")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCanJump")])]),t._v(" "),e("tr",[e("td",[t._v("9")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCanOpenDoors")])]),t._v(" "),e("tr",[e("td",[t._v("10")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCanOpenIronDoors")])]),t._v(" "),e("tr",[e("td",[t._v("11")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCanPassDoors")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCanSink")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mMaxIteration")])]),t._v(" "),e("tr",[e("td",[t._v("20")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mNavByScript")])]),t._v(" "),e("tr",[e("td",[t._v("21")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mConfirmDest")])]),t._v(" "),e("tr",[e("td",[t._v("22")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsAmphibious")])]),t._v(" "),e("tr",[e("td",[t._v("23")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mIsFollowingRivers")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasEndPathRadius")])]),t._v(" "),e("tr",[e("td",[t._v("25")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mHasDestination")])]),t._v(" "),e("tr",[e("td",[t._v("28")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mTick")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mTickTimeout")])]),t._v(" "),e("tr",[e("td",[t._v("36")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mLastStuckCheck")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mEndPathRadiusSqr")])]),t._v(" "),e("tr",[e("td",[t._v("44")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mSpeed")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("mTerminationThreshold")])]),t._v(" "),e("tr",[e("td",[t._v("52")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mLastStuckCheckPosition")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mTargetOffset")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<PathNavigation>")])]),t._v(" "),e("td",[t._v("mNavigation")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<Path>")])]),t._v(" "),e("td",[t._v("mPath")])])])]),t._v(" "),e("h3",{attrs:{id:"ninepatchfactory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ninepatchfactory"}},[t._v("#")]),t._v(" "),e("code",[t._v("NinePatchFactory")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("mce::TextureGroup *")])]),t._v(" "),e("td",[t._v("textures")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(56) "),e("code",[t._v("ResourceLocation")])]),t._v(" "),e("td",[t._v("mResourceLocation")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("width")])]),t._v(" "),e("tr",[e("td",[t._v("68")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("height")])])])]),t._v(" "),e("h3",{attrs:{id:"ninesliceinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ninesliceinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("NinesliceInfo")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("ImageInfo")])]),t._v(" "),e("td",[t._v("mTopLeft")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("ImageInfo")])]),t._v(" "),e("td",[t._v("mTopRight")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("ImageInfo")])]),t._v(" "),e("td",[t._v("mBottomLeft")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("ImageInfo")])]),t._v(" "),e("td",[t._v("mBottomRight")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("glm::tvec2<float,0>")])]),t._v(" "),e("td",[t._v("mUVScale")])]),t._v(" "),e("tr",[e("td",[t._v("136")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<ImageInfo>")])]),t._v(" "),e("td",[t._v("mLeft")])]),t._v(" "),e("tr",[e("td",[t._v("160")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<ImageInfo>")])]),t._v(" "),e("td",[t._v("mTop")])]),t._v(" "),e("tr",[e("td",[t._v("184")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<ImageInfo>")])]),t._v(" "),e("td",[t._v("mRight")])]),t._v(" "),e("tr",[e("td",[t._v("208")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<ImageInfo>")])]),t._v(" "),e("td",[t._v("mBottom")])]),t._v(" "),e("tr",[e("td",[t._v("232")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<ImageInfo>")])]),t._v(" "),e("td",[t._v("mMiddle")])])])]),t._v(" "),e("h3",{attrs:{id:"nestedbuttonscreencontroller-setupcallbacksfornestedbuttonincollection-l2-lambda-f718c084a1f26651d2ecf46c8f151872"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nestedbuttonscreencontroller-setupcallbacksfornestedbuttonincollection-l2-lambda-f718c084a1f26651d2ecf46c8f151872"}},[t._v("#")]),t._v(" "),e("code",[t._v("NestedButtonScreenController::setUpCallbacksForNestedButtonInCollection::__l2::<lambda_f718c084a1f26651d2ecf46c8f151872>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("NestedButtonScreenController *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<int __cdecl(UIPropertyBag &)>")])]),t._v(" "),e("td",[t._v("indexFunc")])])])]),t._v(" "),e("h3",{attrs:{id:"npccomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npccomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcComponent")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("NpcComponent_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("mCurrentSkin")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(36) "),e("code",[t._v("NpcGUIOffset")])]),t._v(" "),e("td",[t._v("mPortraitOffsets")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(36) "),e("code",[t._v("NpcGUIOffset")])]),t._v(" "),e("td",[t._v("mPickerOffsets")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<SkinData>")])]),t._v(" "),e("td",[t._v("mNPCSkins")])]),t._v(" "),e("tr",[e("td",[t._v("112")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("Json::Value")])]),t._v(" "),e("td",[t._v("mNPCData")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<std::unique_ptr<NpcAction>>")])]),t._v(" "),e("td",[t._v("mActions")])]),t._v(" "),e("tr",[e("td",[t._v("152")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("std::optional<std::string >")])]),t._v(" "),e("td",[t._v("mInteractText")])]),t._v(" "),e("tr",[e("td",[t._v("192")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<std::string __cdecl(std::string const &)>")])]),t._v(" "),e("td",[t._v("mInteractTextFilter")])]),t._v(" "),e("tr",[e("td",[t._v("256")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<NpcI18nObserver>")])]),t._v(" "),e("td",[t._v("mNpcI18nObserver")])])])]),t._v(" "),e("h3",{attrs:{id:"npcguioffset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcguioffset"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcGUIOffset")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mTranslation")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mRotation")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("Vec3")])]),t._v(" "),e("td",[t._v("mScale")])])])]),t._v(" "),e("h3",{attrs:{id:"newtype-std-basic-string-char-std-char-traits-char-std-allocator-char"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newtype-std-basic-string-char-std-char-traits-char-std-allocator-char"}},[t._v("#")]),t._v(" "),e("code",[t._v("NewType<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("value")])])])]),t._v(" "),e("h3",{attrs:{id:"nametaginfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nametaginfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("NameTagInfo")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mPrefix")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mPrefixColor")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mNameColor")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mSuffixColor")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mSuffix")])]),t._v(" "),e("tr",[e("td",[t._v("160")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mEnable")])]),t._v(" "),e("tr",[e("td",[t._v("161")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mRenderNameColor")])])])]),t._v(" "),e("h3",{attrs:{id:"networkchunkinserter-pendingchunk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkinserter-pendingchunk"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkInserter::PendingChunk")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("sequenceID")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<LevelChunk>")])]),t._v(" "),e("td",[t._v("chunk")])])])]),t._v(" "),e("h3",{attrs:{id:"nametagrenderobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nametagrenderobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("NameTagRenderObject")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mNameTag")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<mce::Mesh>")])]),t._v(" "),e("td",[t._v("mMesh")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("mce::MaterialPtr *")])]),t._v(" "),e("td",[t._v("mTagMat")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("mce::MaterialPtr *")])]),t._v(" "),e("td",[t._v("mTextMatOverride")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("mce::Color")])]),t._v(" "),e("td",[t._v("mTagColor")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("mce::Color")])]),t._v(" "),e("td",[t._v("mTextColor")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(12) "),e("code",[t._v("glm::tvec3<float,0>")])]),t._v(" "),e("td",[t._v("mPos")])])])]),t._v(" "),e("h3",{attrs:{id:"nametagrenderobjectcollection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nametagrenderobjectcollection"}},[t._v("#")]),t._v(" "),e("code",[t._v("NameTagRenderObjectCollection")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("std::vector<NameTagRenderObject,LinearAllocator<NameTagRenderObject> >")])]),t._v(" "),e("td",[t._v("mNameTags")])])])]),t._v(" "),e("h3",{attrs:{id:"networkhandler-runevents-l2-lambda-548e329923228af3a9c05419563beac9-l2-killlistdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhandler-runevents-l2-lambda-548e329923228af3a9c05419563beac9-l2-killlistdata"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHandler::runEvents::__l2::<lambda_548e329923228af3a9c05419563beac9>::()::__l2::KillListData")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(152) "),e("code",[t._v("NetworkIdentifier")])]),t._v(" "),e("td",[t._v("id")])]),t._v(" "),e("tr",[e("td",[t._v("152")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("unsigned __int64")])]),t._v(" "),e("td",[t._v("index")])])])]),t._v(" "),e("h3",{attrs:{id:"networkcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkComponent")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("EntityNetId")])]),t._v(" "),e("td",[t._v("mEntityNetId")])])])]),t._v(" "),e("h3",{attrs:{id:"nameabledefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nameabledefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("NameableDefinition")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<NameAction>")])]),t._v(" "),e("td",[t._v("mNameActions")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(320) "),e("code",[t._v("DefinitionTrigger")])]),t._v(" "),e("td",[t._v("mDefaultActionTrigger")])]),t._v(" "),e("tr",[e("td",[t._v("344")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mAlwaysShow")])]),t._v(" "),e("tr",[e("td",[t._v("345")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mAllowNameTagRenaming")])])])]),t._v(" "),e("h3",{attrs:{id:"namedmolangscript"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#namedmolangscript"}},[t._v("#")]),t._v(" "),e("code",[t._v("NamedMolangScript")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(48) "),e("code",[t._v("HashedString")])]),t._v(" "),e("td",[t._v("mName")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(216) "),e("code",[t._v("ExpressionNode")])]),t._v(" "),e("td",[t._v("mScript")])])])]),t._v(" "),e("h3",{attrs:{id:"newblockid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newblockid"}},[t._v("#")]),t._v(" "),e("code",[t._v("NewBlockID")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("NewType<unsigned short>")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"newtype-unsigned-short"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newtype-unsigned-short"}},[t._v("#")]),t._v(" "),e("code",[t._v("NewType<unsigned short>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(2) "),e("code",[t._v("unsigned __int16")])]),t._v(" "),e("td",[t._v("value")])])])]),t._v(" "),e("h3",{attrs:{id:"networkhookadapter-handlebreakvconnrequest-l13-lambda-5e83fe1dfa301b636a4c9a66ea9c3390"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhookadapter-handlebreakvconnrequest-l13-lambda-5e83fe1dfa301b636a4c9a66ea9c3390"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHookAdapter::handleBreakVConnRequest::__l13::<lambda_5e83fe1dfa301b636a4c9a66ea9c3390>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("NetworkHookAdapter *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(152) "),e("code",[t._v("const NetworkIdentifier")])]),t._v(" "),e("td",[t._v("source")])]),t._v(" "),e("tr",[e("td",[t._v("160")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("const VConnectionPacket")])]),t._v(" "),e("td",[t._v("packet")])])])]),t._v(" "),e("h3",{attrs:{id:"netherfortresspiece"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfortresspiece"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFortressPiece")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(40) "),e("code",[t._v("StructurePiece")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"numberfieldwidths"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#numberfieldwidths"}},[t._v("#")]),t._v(" "),e("code",[t._v("NumberFieldWidths")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("n_lpadding")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("n_prefix")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("n_spadding")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("n_rpadding")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("char")])]),t._v(" "),e("td",[t._v("sign")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("n_sign")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("n_grouped_digits")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("n_decimal")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("n_remainder")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("n_digits")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("n_min_width")])])])]),t._v(" "),e("h3",{attrs:{id:"nvsdk-ngx-d3d12-dlss-eval-params"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-d3d12-dlss-eval-params"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_D3D12_DLSS_Eval_Params")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("NVSDK_NGX_D3D12_Feature_Eval_Params")])]),t._v(" "),e("td",[t._v("Feature")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInDepth")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInMotionVectors")])]),t._v(" "),e("tr",[e("td",[t._v("40")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("InJitterOffsetX")])]),t._v(" "),e("tr",[e("td",[t._v("44")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("InJitterOffsetY")])]),t._v(" "),e("tr",[e("td",[t._v("48")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("NVSDK_NGX_Dimensions")])]),t._v(" "),e("td",[t._v("InRenderSubrectDimensions")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("InReset")])]),t._v(" "),e("tr",[e("td",[t._v("60")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("InMVScaleX")])]),t._v(" "),e("tr",[e("td",[t._v("64")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("InMVScaleY")])]),t._v(" "),e("tr",[e("td",[t._v("72")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInTransparencyMask")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInExposureTexture")])]),t._v(" "),e("tr",[e("td",[t._v("88")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInReduceGhostMask")])]),t._v(" "),e("tr",[e("td",[t._v("96")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("NVSDK_NGX_Coordinates")])]),t._v(" "),e("td",[t._v("InColorSubrectBase")])]),t._v(" "),e("tr",[e("td",[t._v("104")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("NVSDK_NGX_Coordinates")])]),t._v(" "),e("td",[t._v("InDepthSubrectBase")])]),t._v(" "),e("tr",[e("td",[t._v("112")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("NVSDK_NGX_Coordinates")])]),t._v(" "),e("td",[t._v("InMVSubrectBase")])]),t._v(" "),e("tr",[e("td",[t._v("120")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("NVSDK_NGX_Coordinates")])]),t._v(" "),e("td",[t._v("InTranslucencySubrectBase")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("NVSDK_NGX_Coordinates")])]),t._v(" "),e("td",[t._v("InReduceGhostSubrectBase")])]),t._v(" "),e("tr",[e("td",[t._v("136")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("NVSDK_NGX_Coordinates")])]),t._v(" "),e("td",[t._v("InOutputSubrectBase")])]),t._v(" "),e("tr",[e("td",[t._v("144")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("InPreExposure")])]),t._v(" "),e("tr",[e("td",[t._v("148")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("InIndicatorInvertXAxis")])]),t._v(" "),e("tr",[e("td",[t._v("152")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("InIndicatorInvertYAxis")])]),t._v(" "),e("tr",[e("td",[t._v("160")]),t._v(" "),e("td",[t._v("(128) "),e("code",[t._v("NVSDK_NGX_D3D12_GBuffer")])]),t._v(" "),e("td",[t._v("GBufferSurface")])]),t._v(" "),e("tr",[e("td",[t._v("288")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("NVSDK_NGX_ToneMapperType")])]),t._v(" "),e("td",[t._v("InToneMapperType")])]),t._v(" "),e("tr",[e("td",[t._v("296")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInMotionVectors3D")])]),t._v(" "),e("tr",[e("td",[t._v("304")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInIsParticleMask")])]),t._v(" "),e("tr",[e("td",[t._v("312")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInAnimatedTextureMask")])]),t._v(" "),e("tr",[e("td",[t._v("320")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInDepthHighRes")])]),t._v(" "),e("tr",[e("td",[t._v("328")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInPositionViewSpace")])]),t._v(" "),e("tr",[e("td",[t._v("336")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("InFrameTimeDeltaInMsec")])]),t._v(" "),e("tr",[e("td",[t._v("344")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInRayTracingHitDistance")])]),t._v(" "),e("tr",[e("td",[t._v("352")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInMotionVectorsReflections")])])])]),t._v(" "),e("h3",{attrs:{id:"nvsdk-ngx-d3d12-feature-eval-params"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-d3d12-feature-eval-params"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_D3D12_Feature_Eval_Params")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInColor")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ID3D12Resource *")])]),t._v(" "),e("td",[t._v("pInOutput")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("InSharpness")])])])]),t._v(" "),e("h3",{attrs:{id:"nvsdk-ngx-dimensions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-dimensions"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_Dimensions")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("Width")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("Height")])])])]),t._v(" "),e("h3",{attrs:{id:"nvsdk-ngx-coordinates"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-coordinates"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_Coordinates")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("X")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("Y")])])])]),t._v(" "),e("h3",{attrs:{id:"nvsdk-ngx-d3d12-gbuffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-d3d12-gbuffer"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_D3D12_GBuffer")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(128) "),e("code",[t._v("ID3D12Resource *[16]")])]),t._v(" "),e("td",[t._v("pInAttrib")])])])]),t._v(" "),e("h3",{attrs:{id:"nvsdk-ngx-dlss-create-params"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-dlss-create-params"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_DLSS_Create_Params")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(20) "),e("code",[t._v("NVSDK_NGX_Feature_Create_Params")])]),t._v(" "),e("td",[t._v("Feature")])]),t._v(" "),e("tr",[e("td",[t._v("20")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("int")])]),t._v(" "),e("td",[t._v("InFeatureCreateFlags")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("InEnableOutputSubrects")])])])]),t._v(" "),e("h3",{attrs:{id:"nvsdk-ngx-feature-create-params"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-feature-create-params"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_Feature_Create_Params")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("InWidth")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("InHeight")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("InTargetWidth")])]),t._v(" "),e("tr",[e("td",[t._v("12")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("InTargetHeight")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("NVSDK_NGX_PerfQuality_Value")])]),t._v(" "),e("td",[t._v("InPerfQualityValue")])])])]),t._v(" "),e("h3",{attrs:{id:"networkpeer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkpeer"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkPeer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkPeer\n{\n  NetworkPeer_vtbl *__vftable /*VFT*/;\n  std::shared_ptr<NetworkPeer> mPeer;\n};\n\n")])])]),e("h3",{attrs:{id:"networkpeer-networkstatus"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkpeer-networkstatus"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkPeer::NetworkStatus")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NetworkPeer::NetworkStatus\n{\n  NetworkPeer::NetworkLoad mLoad;\n  int mCurrentPing;\n  int mAveragePing;\n  int mApproximateMaxBps;\n  float mCurrentPacketLoss;\n  float mAveragePacketLoss;\n  unsigned __int64 mTotalBytesReceived;\n  unsigned __int64 mTotalBytesSent;\n};\n\n")])])]),e("h3",{attrs:{id:"networkpeer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkpeer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkPeer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkPeer_vtbl\n{\n  void (__fastcall *~NetworkPeer)(NetworkPeer *this);\n  void (__fastcall *sendPacket)(NetworkPeer *this, const std::string *, NetworkPeer::Reliability, int, unsigned __int16, Compressibility);\n  NetworkPeer::DataStatus (__fastcall *receivePacket)(NetworkPeer *this, std::string *);\n  NetworkPeer::NetworkStatus *(__fastcall *getNetworkStatus)(NetworkPeer *this, NetworkPeer::NetworkStatus *result);\n  void (__fastcall *addIncomingData)(NetworkPeer *this, std::string);\n  void (__fastcall *update)(NetworkPeer *this);\n  void (__fastcall *flush)(NetworkPeer *this, std::function<void __cdecl(void)> *);\n};\n\n")])])]),e("h3",{attrs:{id:"networksuspendresumelistener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networksuspendresumelistener"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkSuspendResumeListener")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NetworkSuspendResumeListener\n{\n  NetworkSuspendResumeListener_vtbl *__vftable /*VFT*/;\n  NetworkSuspendResumeListener::State mState;\n};\n\n")])])]),e("h3",{attrs:{id:"networksuspendresumelistener-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networksuspendresumelistener-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkSuspendResumeListener_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkSuspendResumeListener_vtbl\n{\n  void (__fastcall *~NetworkSuspendResumeListener)(NetworkSuspendResumeListener *this);\n  void (__fastcall *onSuspend)(NetworkSuspendResumeListener *this);\n  void (__fastcall *onResume)(NetworkSuspendResumeListener *this);\n};\n\n")])])]),e("h3",{attrs:{id:"networkpacketrecorder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkpacketrecorder"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkPacketRecorder")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkPacketRecorder : NetworkPeer\n{\n  bool mRecording;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mLastPacketTime;\n  Core::File mFile;\n};\n\n")])])]),e("h3",{attrs:{id:"networkpacketrecorder-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkpacketrecorder-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkPacketRecorder_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkPacketRecorder_vtbl\n{\n  void (__fastcall *~NetworkPeer)(NetworkPeer *this);\n  void (__fastcall *sendPacket)(NetworkPeer *this, const std::string *, NetworkPeer::Reliability, int, unsigned __int16, Compressibility);\n  NetworkPeer::DataStatus (__fastcall *receivePacket)(NetworkPeer *this, std::string *);\n  NetworkPeer::NetworkStatus *(__fastcall *getNetworkStatus)(NetworkPeer *this, NetworkPeer::NetworkStatus *result);\n  void (__fastcall *addIncomingData)(NetworkPeer *this, std::string);\n  void (__fastcall *update)(NetworkPeer *this);\n  void (__fastcall *flush)(NetworkPeer *this, std::function<void __cdecl(void)> *);\n};\n\n")])])]),e("h3",{attrs:{id:"networkhandler-connection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhandler-connection"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHandler::Connection")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkHandler::Connection\n{\n  NetworkIdentifier mId;\n  NetworkHandler::Connection::Type mType;\n  std::weak_ptr<NetworkPacketRecorder> mNetworkPacketRecorder;\n  std::weak_ptr<EncryptedNetworkPeer> mEncryptedPeer;\n  std::weak_ptr<BatchedNetworkPeer> mBatchedPeer;\n  std::shared_ptr<NetworkPeer> mPeer;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mLastPacketTime;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mClosedTime;\n  bool mShouldCloseConnection;\n  bool mDisconnected;\n  std::bitset<2> mPausedChannels;\n  std::queue<std::string> mResumedPackets;\n  std::array<std::vector<std::string>,2> mPausedPackets;\n};\n\n")])])]),e("h3",{attrs:{id:"neteventcallback"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#neteventcallback"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetEventCallback")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetEventCallback\n{\n  NetEventCallback_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"networkstacklatencypacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkstacklatencypacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkStackLatencyPacket")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj __declspec(align(8)) NetworkStackLatencyPacket : Packet\n{\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > createTime;\n  bool fromServer;\n};\n\n")])])]),e("h3",{attrs:{id:"networkstacklatencypacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkstacklatencypacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkStackLatencyPacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkStackLatencyPacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"networksettingspacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networksettingspacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkSettingsPacket")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj __declspec(align(8)) NetworkSettingsPacket : Packet\n{\n  unsigned __int16 mCompressionThreshold;\n};\n\n")])])]),e("h3",{attrs:{id:"networksettingspacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networksettingspacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkSettingsPacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkSettingsPacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"npcrequestpacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcrequestpacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcRequestPacket")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj __declspec(align(8)) NpcRequestPacket : Packet\n{\n  ActorRuntimeID mId;\n  NpcRequestPacket::RequestType mType;\n  std::string mActions;\n  unsigned __int8 mActionIndex;\n};\n\n")])])]),e("h3",{attrs:{id:"npcrequestpacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcrequestpacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcRequestPacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NpcRequestPacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunkpublisherupdatepacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkpublisherupdatepacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkPublisherUpdatePacket")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj NetworkChunkPublisherUpdatePacket : Packet\n{\n  BlockPos mPosition;\n  unsigned int mRadius;\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunkpublisherupdatepacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkpublisherupdatepacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkPublisherUpdatePacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkChunkPublisherUpdatePacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"networkidentifierwithsubid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkidentifierwithsubid"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkIdentifierWithSubId")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NetworkIdentifierWithSubId\n{\n  NetworkIdentifier id;\n  unsigned __int8 subClientId;\n};\n\n")])])]),e("h3",{attrs:{id:"newtype-std-string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newtype-std-string"}},[t._v("#")]),t._v(" "),e("code",[t._v("NewType<std::string >")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NewType<std::string >\n{\n  std::string value;\n};\n\n")])])]),e("h3",{attrs:{id:"networkhandler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhandler"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHandler")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NetworkHandler : Social::IGameConnectionInfoProvider, RakNetInstance::ConnectionCallbacks, RakPeerHelper::IPSupportInterface, LocalConnector::ConnectionCallbacks, NetworkSuspendResumeListener\n{\n  std::unique_ptr<RakNetInstance> mRakNetInstance;\n  std::unique_ptr<LocalConnector> mLocalConnector;\n  std::unique_ptr<RakNetServerLocator> mRakNetServerLocator;\n  std::unique_ptr<UPNPInterface> mUPnPInterface;\n  bool mConnectionDelayErase;\n  std::recursive_mutex mConnectionsMutex;\n  std::vector<std::unique_ptr<NetworkHandler::Connection>> mConnections;\n  std::shared_mutex mSendStreamMutex;\n  std::unordered_map<NetworkIdentifier,NetworkHandler::Connection *> mConnectionMap;\n  unsigned __int64 mCurrentConnection;\n  std::shared_ptr<Bedrock::Threading::IAsyncResult<void> > mReceiveTask;\n  std::unique_ptr<TaskGroup> mReceiveTaskGroup;\n  PacketObserver *mPacketObserver;\n  Scheduler *mMainThread;\n  std::string mReceiveBuffer;\n  NetworkIdentifier mHostingPlayerId;\n  unsigned __int8 mHostingPlayerSubId;\n  std::string mSendBuffer;\n  BinaryStream mSendStream;\n  std::unique_ptr<ResourcePackTransmissionManager> mResourcePackTransmissionManager;\n  std::unique_ptr<NetworkHandler::IncomingPacketQueue> mIncomingPackets[4];\n  bool mUseIPv6Only;\n  unsigned __int16 mDefaultGamePort;\n  unsigned __int16 mDefaultGamePortv6;\n  bool mUseLocalConnector;\n  bool mIsNetSafeAndFast;\n  std::shared_ptr<NetworkHookAdapter> mHookAdapter;\n  std::shared_ptr<NetworkHookAdapter> mBackupHookAdapter;\n  bool mIsNetWorkGame;\n  bool mIsScriptHandler;\n  std::unique_ptr<NetworkPacketEventCoordinator> mPacketEventCoordinator;\n  std::unique_ptr<NetworkStatistics> mNetworkStatistics;\n  std::unique_ptr<PacketViolationHandler> mPacketViolationHandler;\n  unsigned __int16 mCompressionThreshold;\n};\n\n")])])]),e("h3",{attrs:{id:"networkpacketeventlistener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkpacketeventlistener"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkPacketEventListener")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkPacketEventListener\n{\n  NetworkPacketEventListener_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"networkpacketeventlistener-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkpacketeventlistener-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkPacketEventListener_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkPacketEventListener_vtbl\n{\n  void (__fastcall *~NetworkPacketEventListener)(NetworkPacketEventListener *this);\n  EventResult (__fastcall *onPacketReceivedFrom)(NetworkPacketEventListener *this, const PacketHeader *, const Packet *);\n};\n\n")])])]),e("h3",{attrs:{id:"navbuttoncomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navbuttoncomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavButtonComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(4)) NavButtonComponent : StoreUIComponent\n{\n  std::string mNavButtonName;\n  std::string mImageId;\n  std::string mGroupName;\n  StoreCatalogCategory mCategory;\n  std::string mButtonId;\n  NavButtonLinksTo mNavButtonLinksTo;\n  bool mButtonSizeIsFill;\n};\n\n")])])]),e("h3",{attrs:{id:"navbuttoncomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navbuttoncomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavButtonComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NavButtonComponent_vtbl\n{\n  void (__fastcall *~StoreUIComponent)(StoreUIComponent *this);\n  void (__fastcall *tick)(StoreUIComponent *this, ui::DirtyFlag *);\n  bool (__fastcall *canRemove)(StoreUIComponent *this);\n  int (__fastcall *getReadyCount)(StoreUIComponent *this);\n  void (__fastcall *parseData)(StoreUIComponent *this, const struct web::json::value *);\n};\n\n")])])]),e("h3",{attrs:{id:"navbuttonsectioncomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navbuttonsectioncomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavButtonSectionComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NavButtonSectionComponent : StoreUIComponent\n{\n  std::vector<std::shared_ptr<StoreVisualStyle>> mNavButtonVisualStyles;\n  std::string mGroupName;\n  bool mButtonSizeIsFill;\n};\n\n")])])]),e("h3",{attrs:{id:"navbuttonsectioncomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navbuttonsectioncomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavButtonSectionComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NavButtonSectionComponent_vtbl\n{\n  void (__fastcall *~StoreUIComponent)(StoreUIComponent *this);\n  void (__fastcall *tick)(StoreUIComponent *this, ui::DirtyFlag *);\n  bool (__fastcall *canRemove)(StoreUIComponent *this);\n  int (__fastcall *getReadyCount)(StoreUIComponent *this);\n  void (__fastcall *parseData)(StoreUIComponent *this, const struct web::json::value *);\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunksubscriber"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunksubscriber"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkSubscriber")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkChunkSubscriber\n{\n  BlockPos mLastChunkUpdatePosition;\n  unsigned int mHandleForChunkBuildOrderUpdates;\n  unsigned int mBlockRadiusLimit;\n  std::unique_ptr<ChunkViewSource> mSource;\n};\n\n")])])]),e("h3",{attrs:{id:"navigationdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NavigationDescription : ComponentDescription\n{\n  std::string mNavigationType;\n  bool mIsAmphibious;\n  bool mAvoidSun;\n  bool mCanPassDoors;\n  bool mCanOpenDoors;\n  bool mCanOpenIronDoors;\n  bool mCanBreakDoors;\n  bool mAvoidWater;\n  bool mAvoidDamageBlocks;\n  bool mCanFloat;\n  bool mCanSink;\n  bool mCanPathOverLava;\n  bool mCanWalkInLava;\n  bool mAvoidPortals;\n  bool mCanWalk;\n  bool mCanSwim;\n  bool mCanBreach;\n  bool mCanJump;\n  bool mUsingDoorAnnotations;\n  bool mCanPathFromAir;\n};\n\n")])])]),e("h3",{attrs:{id:"navigationdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NavigationDescription_vtbl\n{\n  const char *(__fastcall *getJsonName)(Description *this);\n  void (__fastcall *~Description)(Description *this);\n  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);\n  void (__fastcall *serializeData)(Description *this, Json::Value *);\n};\n\n")])])]),e("h3",{attrs:{id:"networkhandler-incomingpacketqueue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhandler-incomingpacketqueue"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHandler::IncomingPacketQueue")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkHandler::IncomingPacketQueue\n{\n  NetEventCallback *mCallbacksObj;\n  std::mutex mMutex;\n};\n\n")])])]),e("h3",{attrs:{id:"networkhookadapter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhookadapter"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHookAdapter")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkHookAdapter : std::enable_shared_from_this<NetworkHookAdapter>\n{\n  NetworkHookAdapter_vtbl *__vftable /*VFT*/;\n  bool mIsConnectedOrHost;\n  bool mIsGameServerHook;\n  unsigned int mHostPlayerUid;\n  NetworkHandler *mGameHandler;\n  NetworkHandler *mLobbyHandler;\n  std::map<NetworkIdentifier,unsigned int> mNetID2UID;\n  std::map<unsigned int,std::shared_ptr<HookNetworkPeer>> mHookPeerMap;\n};\n\n")])])]),e("h3",{attrs:{id:"networkhookadapter-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhookadapter-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHookAdapter_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkHookAdapter_vtbl\n{\n  void (__fastcall *~NetworkHookAdapter)(NetworkHookAdapter *this);\n};\n\n")])])]),e("h3",{attrs:{id:"networkpacketeventcoordinator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkpacketeventcoordinator"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkPacketEventCoordinator")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkPacketEventCoordinator : EventCoordinator<NetworkPacketEventListener>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"networkstatistics-overviewstats"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkstatistics-overviewstats"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkStatistics::OverviewStats")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NetworkStatistics::OverviewStats\n{\n  unsigned int sentBytesUnpacked;\n  unsigned int sentBytesPacked;\n  unsigned int receivedBytesUnpacked;\n  unsigned int receivedBytesPacked;\n};\n\n")])])]),e("h3",{attrs:{id:"networkstatistics-packetstats"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkstatistics-packetstats"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkStatistics::PacketStats")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkStatistics::PacketStats\n{\n  unsigned int id;\n  unsigned int sentNum;\n  unsigned int sentBytes;\n  unsigned int receivedNum;\n  unsigned int receivedBytes;\n  unsigned int handledPackets;\n};\n\n")])])]),e("h3",{attrs:{id:"networkstatistics"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkstatistics"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkStatistics")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkStatistics : PacketObserver\n{\n  const TrackerType mType;\n  NetworkHandler *mNetworkHandler;\n  int mTicks;\n  NetworkStatistics::OverviewStats mTotalOverview;\n  std::unordered_map<int,NetworkStatistics::PacketStats> mTotalPacketStats;\n  std::vector<NetworkStatistics::PacketStats> mTotalCSVPacketStats;\n  std::unordered_map<int,NetworkStatistics::PacketStats> mCurrentPacketStats;\n  std::unordered_map<unsigned __int64,std::string> mCurrentSourceNetworkIdentifierStrings;\n  std::unordered_map<unsigned __int64,std::string> mCurrentTargetNetworkIdentifierStrings;\n  std::array<std::string,255> mPacketNames;\n  NetworkStatistics::OverviewStats mCurrentOverview;\n  std::vector<NetworkStatistics::OverviewStats> mLastSeconds;\n  long double mStartSeconds;\n  std::mutex mRakNetStatsReadingLock;\n  RakNet::RakNetStatistics mRakNetStatsReading;\n  std::function<bool __cdecl(RakNet::RakNetStatistics &)> mGetRakNetStatsReading;\n  std::unique_ptr<Core::OutputFileStream> mCSVFile;\n  Core::Profile::CounterTokenMicroProfile mUserBytesPerSecSentCounterToken;\n  Core::Profile::CounterTokenMicroProfile mActualBytesPerSecSentCounterToken;\n  Core::Profile::CounterTokenMicroProfile mActualBytesPerSecReceivedCounterToken;\n  Core::Profile::CounterTokenMicroProfile mUserBytesTotalSentCounterToken;\n  Core::Profile::CounterTokenMicroProfile mActualBytesTotalSentCounterToken;\n  Core::Profile::CounterTokenMicroProfile mActualBytesTotalReceivedCounterToken;\n  Core::Profile::CounterTokenMicroProfile mPacketLossPercentagePerSecCounterToken;\n  Core::Profile::CounterTokenMicroProfile mPacketLossPercentageTotalCounterToken;\n};\n\n")])])]),e("h3",{attrs:{id:"networkstatistics-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkstatistics-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkStatistics_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkStatistics_vtbl\n{\n  void (__fastcall *~PacketObserver)(PacketObserver *this);\n  void (__fastcall *packetSentTo)(PacketObserver *this, const NetworkIdentifier *, const Packet *, unsigned int);\n  void (__fastcall *packetReceivedFrom)(PacketObserver *this, const NetworkIdentifier *, const Packet *, unsigned int);\n  void (__fastcall *dataSentTo)(PacketObserver *this, const NetworkIdentifier *, gsl::basic_string_span<char const ,-1>);\n  void (__fastcall *dataReceivedFrom)(PacketObserver *this, const NetworkIdentifier *, const std::string *);\n};\n\n")])])]),e("h3",{attrs:{id:"networkhandler-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhandler-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHandler_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkHandler_vtbl\n{\n  void (__fastcall *~IGameConnectionInfoProvider)(Social::IGameConnectionInfoProvider *this);\n  const Social::GameConnectionInfo *(__fastcall *getConnectionInfo)(Social::IGameConnectionInfoProvider *this);\n};\n\n")])])]),e("h3",{attrs:{id:"navigationclimbdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationclimbdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationClimbDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NavigationClimbDescription : NavigationDescription\n{\n};\n\n")])])]),e("h3",{attrs:{id:"navigationclimbdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationclimbdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationClimbDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NavigationClimbDescription_vtbl\n{\n  const char *(__fastcall *getJsonName)(Description *this);\n  void (__fastcall *~Description)(Description *this);\n  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);\n  void (__fastcall *serializeData)(Description *this, Json::Value *);\n};\n\n")])])]),e("h3",{attrs:{id:"navigationfloatdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationfloatdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationFloatDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NavigationFloatDescription : NavigationDescription\n{\n};\n\n")])])]),e("h3",{attrs:{id:"navigationfloatdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationfloatdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationFloatDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NavigationFloatDescription_vtbl\n{\n  const char *(__fastcall *getJsonName)(Description *this);\n  void (__fastcall *~Description)(Description *this);\n  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);\n  void (__fastcall *serializeData)(Description *this, Json::Value *);\n};\n\n")])])]),e("h3",{attrs:{id:"navigationflydescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationflydescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationFlyDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NavigationFlyDescription : NavigationDescription\n{\n};\n\n")])])]),e("h3",{attrs:{id:"navigationflydescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationflydescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationFlyDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NavigationFlyDescription_vtbl\n{\n  const char *(__fastcall *getJsonName)(Description *this);\n  void (__fastcall *~Description)(Description *this);\n  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);\n  void (__fastcall *serializeData)(Description *this, Json::Value *);\n};\n\n")])])]),e("h3",{attrs:{id:"navigationhoverdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationhoverdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationHoverDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NavigationHoverDescription : NavigationDescription\n{\n};\n\n")])])]),e("h3",{attrs:{id:"navigationhoverdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationhoverdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationHoverDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NavigationHoverDescription_vtbl\n{\n  const char *(__fastcall *getJsonName)(Description *this);\n  void (__fastcall *~Description)(Description *this);\n  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);\n  void (__fastcall *serializeData)(Description *this, Json::Value *);\n};\n\n")])])]),e("h3",{attrs:{id:"navigationgenericdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationgenericdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationGenericDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NavigationGenericDescription : NavigationDescription\n{\n};\n\n")])])]),e("h3",{attrs:{id:"navigationgenericdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationgenericdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationGenericDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NavigationGenericDescription_vtbl\n{\n  const char *(__fastcall *getJsonName)(Description *this);\n  void (__fastcall *~Description)(Description *this);\n  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);\n  void (__fastcall *serializeData)(Description *this, Json::Value *);\n};\n\n")])])]),e("h3",{attrs:{id:"navigationswimdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationswimdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationSwimDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NavigationSwimDescription : NavigationDescription\n{\n  bool mUsingWander;\n  bool mAllowRiverFollow;\n  float mSteeringDamping;\n  float mMinDepth;\n  float mMaxDepth;\n  float mTerrainAvoidDist;\n  float mLookAheadDist;\n  float mCenteredThres;\n};\n\n")])])]),e("h3",{attrs:{id:"navigationswimdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationswimdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationSwimDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NavigationSwimDescription_vtbl\n{\n  const char *(__fastcall *getJsonName)(Description *this);\n  void (__fastcall *~Description)(Description *this);\n  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);\n  void (__fastcall *serializeData)(Description *this, Json::Value *);\n};\n\n")])])]),e("h3",{attrs:{id:"navigationwalkdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationwalkdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationWalkDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NavigationWalkDescription : NavigationDescription\n{\n};\n\n")])])]),e("h3",{attrs:{id:"navigationwalkdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationwalkdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationWalkDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NavigationWalkDescription_vtbl\n{\n  const char *(__fastcall *getJsonName)(Description *this);\n  void (__fastcall *~Description)(Description *this);\n  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);\n  void (__fastcall *serializeData)(Description *this, Json::Value *);\n};\n\n")])])]),e("h3",{attrs:{id:"netheritearmorequippedlistener"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netheritearmorequippedlistener"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetheriteArmorEquippedListener")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetheriteArmorEquippedListener : ActorEventListener\n{\n};\n\n")])])]),e("h3",{attrs:{id:"netheritearmorequippedlistener-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netheritearmorequippedlistener-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetheriteArmorEquippedListener_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetheriteArmorEquippedListener_vtbl\n{\n  void (__fastcall *~ActorEventListener)(ActorEventListener *this);\n  EventResult (__fastcall *onActorAttack)(ActorEventListener *this, Actor *, Actor *, int);\n  EventResult (__fastcall *onActorHit)(ActorEventListener *this, Actor *, const ActorDamageSource *, int *, bool *, bool *);\n  EventResult (__fastcall *onActorHurt)(ActorEventListener *this, const ActorHurtEvent *);\n  EventResult (__fastcall *onActorMove)(ActorEventListener *this, Actor *, const Vec3 *);\n  EventResult (__fastcall *onActorPredictedMove)(ActorEventListener *this, Actor *, MovePredictionType, const Vec3 *);\n  EventResult (__fastcall *onActorTick)(ActorEventListener *this, Actor *);\n  EventResult (__fastcall *onActorSneakChanged)(ActorEventListener *this, Actor *, bool);\n  EventResult (__fastcall *onActorStartRiding)(ActorEventListener *this, Actor *, Actor *);\n  EventResult (__fastcall *onActorStopRiding)(ActorEventListener *this, Actor *, bool, bool, bool);\n  EventResult (__fastcall *onActorDeath)(ActorEventListener *this, Actor *, const ActorDamageSource *, ActorType);\n  EventResult (__fastcall *onActorDefinitionEventTriggered)(ActorEventListener *this, const ActorDefinitionEvent *);\n  EventResult (__fastcall *onActorUseItem)(ActorEventListener *this, const ActorUseItemEvent *);\n  EventResult (__fastcall *onActorUseItemOn)(ActorEventListener *this, Actor *, const ItemStack *, const BlockPos *, unsigned __int8);\n  EventResult (__fastcall *onActorCreated)(ActorEventListener *this, Actor *);\n  EventResult (__fastcall *onProjectileHit)(ActorEventListener *this, const ProjectileHitEvent *);\n  EventResult (__fastcall *onActorTeleported)(ActorEventListener *this, Actor *);\n  EventResult (__fastcall *onActorAttackedActor)(ActorEventListener *this, Actor *, Actor *);\n  EventResult (__fastcall *onActorAcquiredItem)(ActorEventListener *this, const ActorAcquiredItemEvent *);\n  EventResult (__fastcall *onActorPlacedItem)(ActorEventListener *this, Actor *, const ItemInstance *);\n  EventResult (__fastcall *onActorDroppedItem)(ActorEventListener *this, Actor *, const ItemInstance *);\n  EventResult (__fastcall *onActorCarriedItemChanged)(ActorEventListener *this, Actor *, const ItemInstance *, const ItemInstance *, HandSlot);\n  EventResult (__fastcall *onActorEquippedArmor)(ActorEventListener *this, Actor *, const ItemInstance *, ArmorSlot);\n  EventResult (__fastcall *onActorRemoved)(ActorEventListener *this, Actor *);\n  EventResult (__fastcall *onActorMobInteraction)(ActorEventListener *this, Actor *, MinecraftEventing::InteractionType, ActorType);\n  EventResult (__fastcall *onActorTargetAcquired)(ActorEventListener *this, Actor *, Actor *);\n  EventResult (__fastcall *onActorGriefingBlock)(ActorEventListener *this, const ActorGriefingBlockEvent *);\n  EventResult (__fastcall *onActorAddEffect)(ActorEventListener *this, const ActorAddEffectEvent *);\n  EventResult (__fastcall *onActorKilled)(ActorEventListener *this, const ActorKilledEvent *);\n  EventResult (__fastcall *onActorRemoveEffect)(ActorEventListener *this, const ActorRemoveEffectEvent *);\n  EventResult (__fastcall *onKnockBack)(ActorEventListener *this, const KnockBackEvent *);\n  EventResult (__fastcall *onMountTaming)(ActorEventListener *this, const MountTamingEvent *);\n  EventResult (__fastcall *onActorAnimationChanged)(ActorEventListener *this, const ActorAnimationChangedEvent *);\n  EventResult (__fastcall *onSendActorAddBuff)(ActorEventListener *this, Actor *, const AttributeInstance *, const std::string *, int, bool, int, int, int);\n};\n\n")])])]),e("h3",{attrs:{id:"networkchangeobserver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchangeobserver"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChangeObserver")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkChangeObserver : Core::Observer<NetworkChangeObserver,std::mutex>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"networkchangeobserver-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchangeobserver-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChangeObserver_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkChangeObserver_vtbl\n{\n  void (__fastcall *~Observer<NetworkChangeObserver,std::mutex>)(Core::Observer<NetworkChangeObserver,std::mutex> *this);\n  void (__fastcall *_onSubjectDestroyed)(Core::Observer<NetworkChangeObserver,std::mutex> *this);\n  void (__fastcall *onNetworkConfigurationChanged)(NetworkChangeObserver *this);\n};\n\n")])])]),e("h3",{attrs:{id:"networkdebugmanager-tracker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkdebugmanager-tracker"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkDebugManager::Tracker")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NetworkDebugManager::Tracker\n{\n  std::mutex mCurrentStatLock;\n  TrackerStat mCurrentStat;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mLastUpdate;\n  std::vector<TrackerStat> mStats;\n  unsigned int mLastSampleNum;\n};\n\n")])])]),e("h3",{attrs:{id:"networkdebugmanager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkdebugmanager"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkDebugManager")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkDebugManager : Bedrock::EnableNonOwnerReferences\n{\n  std::array<NetworkDebugManager::Tracker,4> mTrackers;\n  TrackerType mRenderGraphMode;\n  std::set<NetworkStatistics *> mStatistics;\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunkinserter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkinserter"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkInserter")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkChunkInserter\n{\n  ClientNetworkHandler *mHandler;\n  unsigned __int64 mChunkSequenceIDCounter;\n  unsigned __int64 mNextChunkSequenceID;\n  MovePriorityQueue<NetworkChunkInserter::PendingChunk,std::greater<NetworkChunkInserter::PendingChunk> > mChunksPendingInsertion;\n};\n\n")])])]),e("h3",{attrs:{id:"nibblepair"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nibblepair"}},[t._v("#")]),t._v(" "),e("code",[t._v("NibblePair")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct NibblePair\n{\n  unsigned __int8 first : 4;\n  unsigned __int8 second : 4;\n};\n\n")])])]),e("h3",{attrs:{id:"navigatetogamescreenprogresshandler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigatetogamescreenprogresshandler"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigateToGameScreenProgressHandler")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NavigateToGameScreenProgressHandler : ProgressHandler\n{\n  _BYTE state[4];\n};\n\n")])])]),e("h3",{attrs:{id:"navigatetogamescreenprogresshandler-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigatetogamescreenprogresshandler-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigateToGameScreenProgressHandler_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NavigateToGameScreenProgressHandler_vtbl\n{\n  void (__fastcall *~ProgressHandler)(ProgressHandler *this);\n  void (__fastcall *onStart)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *tick)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *onCancel)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *onExit)(ProgressHandler *this, MinecraftScreenModel *);\n  LoadingState (__fastcall *getLoadingState)(ProgressHandler *this, MinecraftScreenModel *);\n  float (__fastcall *getLoadingProgress)(ProgressHandler *this, MinecraftScreenModel *);\n  std::string *(__fastcall *getProgressMessage)(ProgressHandler *this, std::string *result, MinecraftScreenModel *);\n  void (__fastcall *addEventProperties)(ProgressHandler *this, std::unordered_map<std::string,std::string> *);\n  std::string *(__fastcall *getTTSProgressMessage)(ProgressHandler *this, std::string *result);\n  std::string *(__fastcall *getTitleText)(ProgressHandler *this, std::string *result);\n  ProgressAnimation (__fastcall *showLoadingBar)(ProgressHandler *this);\n};\n\n")])])]),e("h3",{attrs:{id:"newoffersquery"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newoffersquery"}},[t._v("#")]),t._v(" "),e("code",[t._v("NewOffersQuery")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NewOffersQuery : SearchQuery\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nbtio"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbtio"}},[t._v("#")]),t._v(" "),e("code",[t._v("NbtIo")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NbtIo\n{\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunksource"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunksource"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkSource")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkChunkSource : ChunkSource\n{\n  std::unordered_map<ChunkPos,std::weak_ptr<LevelChunk>> mChunkMap;\n  std::vector<SyncChunkPosPacket> mNewComingChunkPosPackets;\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunksource-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunksource-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkSource_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkChunkSource_vtbl\n{\n  void (__fastcall *~ChunkSource)(ChunkSource *this);\n  void (__fastcall *shutdown)(ChunkSource *this);\n  bool (__fastcall *isShutdownDone)(ChunkSource *this);\n  std::shared_ptr<LevelChunk> *(__fastcall *getExistingChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, const ChunkPos *);\n  std::shared_ptr<LevelChunk> *(__fastcall *getRandomChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, Random *);\n  std::shared_ptr<LevelChunk> *(__fastcall *createNewChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, const ChunkPos *, ChunkSource::LoadMode);\n  std::shared_ptr<LevelChunk> *(__fastcall *getOrLoadChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, const ChunkPos *, ChunkSource::LoadMode);\n  bool (__fastcall *postProcess)(ChunkSource *this, ChunkViewSource *);\n  void (__fastcall *checkAndReplaceChunk)(ChunkSource *this, ChunkViewSource *, LevelChunk *);\n  void (__fastcall *loadChunk)(ChunkSource *this, LevelChunk *, bool);\n  void (__fastcall *postProcessMobsAt)(ChunkSource *this, BlockSource *, int, int, Random *);\n  bool (__fastcall *saveLiveChunk)(ChunkSource *this, LevelChunk *);\n  void (__fastcall *hintDiscardBatchBegin)(ChunkSource *this);\n  void (__fastcall *hintDiscardBatchEnd)(ChunkSource *this);\n  void (__fastcall *acquireDiscarded)(ChunkSource *this, std::unique_ptr<LevelChunk,LevelChunkFinalDeleter>);\n  void (__fastcall *compact)(ChunkSource *this);\n  void (__fastcall *flushPendingWrites)(ChunkSource *this);\n  bool (__fastcall *isWithinWorldLimit)(ChunkSource *this, const ChunkPos *);\n  const std::unordered_map<ChunkPos,std::weak_ptr<LevelChunk>> *(__fastcall *getChunkMap)(ChunkSource *this);\n  const std::unordered_map<ChunkPos,std::weak_ptr<LevelChunk>> *(__fastcall *getStorage)(ChunkSource *this);\n  void (__fastcall *clearDeletedEntities)(ChunkSource *this);\n  void (__fastcall *removeDimensionData)(ChunkSource *this, const std::unordered_set<AutomaticID<Dimension,int>> *);\n  bool (__fastcall *hasChunk)(ChunkSource *this, const ChunkPos *, AutomaticID<Dimension,int>);\n  bool (__fastcall *canCreateViews)(ChunkSource *this);\n};\n\n")])])]),e("h3",{attrs:{id:"netherwastesmoodsoundplayer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherwastesmoodsoundplayer"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherWastesMoodSoundPlayer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherWastesMoodSoundPlayer\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nullsecurestorage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nullsecurestorage"}},[t._v("#")]),t._v(" "),e("code",[t._v("NullSecureStorage")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NullSecureStorage : SecureStorage\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nullsecurestorage-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nullsecurestorage-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NullSecureStorage_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NullSecureStorage_vtbl\n{\n  void (__fastcall *~SecureStorage)(SecureStorage *this);\n  bool (__fastcall *add)(SecureStorage *this, const std::string *, const std::string *);\n  bool (__fastcall *addOrUpdate)(SecureStorage *this, const std::string *, const std::string *);\n  bool (__fastcall *remove)(SecureStorage *this, const std::string *);\n  bool (__fastcall *get)(SecureStorage *this, const std::string *, std::string *);\n};\n\n")])])]),e("h3",{attrs:{id:"numparse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#numparse"}},[t._v("#")]),t._v(" "),e("code",[t._v("NUMPARSE")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NUMPARSE\n{\n  int cDig;\n  unsigned int dwInFlags;\n  unsigned int dwOutFlags;\n  int cchUsed;\n  int nBaseShift;\n  int nPwr10;\n};\n\n")])])]),e("h3",{attrs:{id:"notify-user-power-setting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notify-user-power-setting"}},[t._v("#")]),t._v(" "),e("code",[t._v("NOTIFY_USER_POWER_SETTING")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NOTIFY_USER_POWER_SETTING\n{\n  _GUID Guid;\n};\n\n")])])]),e("h3",{attrs:{id:"netent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netent"}},[t._v("#")]),t._v(" "),e("code",[t._v("netent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct netent\n{\n  char *n_name;\n  char **n_aliases;\n  __int16 n_addrtype;\n  unsigned int n_net;\n};\n\n")])])]),e("h3",{attrs:{id:"notifyhandler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notifyhandler"}},[t._v("#")]),t._v(" "),e("code",[t._v("NotifyHandler")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NotifyHandler\n{\n  NotifyHandler_vtbl *__vftable /*VFT*/;\n  int m_handleId;\n  std::string m_funcName;\n  bool mIsEnable;\n};\n\n")])])]),e("h3",{attrs:{id:"notifymanager-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notifymanager-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NotifyManager_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NotifyManager_vtbl\n{\n  void (__fastcall *~NotifyManager)(NotifyManager *this);\n  bool (__fastcall *checkThread)(NotifyManager *this);\n  void (__fastcall *pushTick)(NotifyManager *this, __int64);\n  void (__fastcall *pushTickUpdate)(NotifyManager *this);\n  void (__fastcall *_dispatchTick)(NotifyManager *this);\n};\n\n")])])]),e("h3",{attrs:{id:"notifymanagerclient-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notifymanagerclient-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NotifyManagerClient_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NotifyManagerClient_vtbl\n{\n  void (__fastcall *~NotifyManager)(NotifyManager *this);\n  bool (__fastcall *checkThread)(NotifyManager *this);\n  void (__fastcall *pushTick)(NotifyManager *this, __int64);\n  void (__fastcall *pushTickUpdate)(NotifyManager *this);\n  void (__fastcall *_dispatchTick)(NotifyManager *this);\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunkpublisher"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkpublisher"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkPublisher")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkChunkPublisher\n{\n  NetworkChunkPublisher_vtbl *__vftable /*VFT*/;\n  Level *mLevel;\n  NetworkHandler *mNetworkHandler;\n  NetworkIdentifier mOwner;\n  ClientBlobCache::Server::ActiveTransfersManager *mClientCache;\n  unsigned __int8 mSubClientId;\n  BlockPos mLastChunkUpdatePosition;\n  unsigned int mLastChunkUpdateRadius;\n  unsigned int mHandleForChunkBuildOrderUpdates;\n  int mChunksSentSinceStart;\n  std::unique_ptr<ChunkViewSource> mSource;\n  std::function<void __cdecl(buffer_span_mut<std::shared_ptr<LevelChunk> >,buffer_span<unsigned int>)> mAddCallback;\n  std::string mCacheSerializeBuffer;\n  std::unordered_map<ChunkPositionAndDimension,std::weak_ptr<LevelChunk>> mQueuedChunks;\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunkpublisher-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkpublisher-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkPublisher_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkChunkPublisher_vtbl\n{\n  void (__fastcall *~NetworkChunkPublisher)(NetworkChunkPublisher *this);\n};\n\n")])])]),e("h3",{attrs:{id:"networkstatmetrics"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkstatmetrics"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkStatMetrics")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkStatMetrics\n{\n  unsigned int sentPackets;\n  unsigned int sentBytes;\n  unsigned int receivedPackets;\n  unsigned int receivedBytes;\n};\n\n")])])]),e("h3",{attrs:{id:"notifymanagerserver-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notifymanagerserver-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NotifyManagerServer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NotifyManagerServer_vtbl\n{\n  void (__fastcall *~NotifyManager)(NotifyManager *this);\n  bool (__fastcall *checkThread)(NotifyManager *this);\n  void (__fastcall *pushTick)(NotifyManager *this, __int64);\n  void (__fastcall *pushTickUpdate)(NotifyManager *this);\n  void (__fastcall *_dispatchTick)(NotifyManager *this);\n};\n\n")])])]),e("h3",{attrs:{id:"ninepatchlayer-cachedquad"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ninepatchlayer-cachedquad"}},[t._v("#")]),t._v(" "),e("code",[t._v("NinePatchLayer::CachedQuad")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NinePatchLayer::CachedQuad\n{\n  float x0;\n  float x1;\n  float y0;\n  float y1;\n  float z;\n  float u0;\n  float u1;\n  float v0;\n  float v1;\n};\n\n")])])]),e("h3",{attrs:{id:"ninepatchlayer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ninepatchlayer"}},[t._v("#")]),t._v(" "),e("code",[t._v("NinePatchLayer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NinePatchLayer : ScreenRenderer\n{\n  NinePatchLayer_vtbl *__vftable /*VFT*/;\n  float w;\n  float h;\n  NinePatchDescription desc;\n  mce::TexturePtr texture;\n  int excluded;\n  NinePatchLayer::CachedQuad quads[9];\n};\n\n")])])]),e("h3",{attrs:{id:"ninepatchlayer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ninepatchlayer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NinePatchLayer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NinePatchLayer_vtbl\n{\n  void (__fastcall *~NinePatchLayer)(NinePatchLayer *this);\n};\n\n")])])]),e("h3",{attrs:{id:"ninepatchdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ninepatchdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("NinePatchDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NinePatchDescription\n{\n  float u0;\n  float u1;\n  float u2;\n  float u3;\n  float v0;\n  float v1;\n  float v2;\n  float v3;\n  float w;\n  float e;\n  float n;\n  float s;\n  int imgW;\n  int imgH;\n};\n\n")])])]),e("h3",{attrs:{id:"nametagrenderer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nametagrenderer"}},[t._v("#")]),t._v(" "),e("code",[t._v("NameTagRenderer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NameTagRenderer : MinecraftUICustomRenderer\n{\n  std::string mNameTagText;\n  std::string mFilteredText;\n  mce::Color mTextColor;\n  mce::Color mBackgroundColor;\n};\n\n")])])]),e("h3",{attrs:{id:"nametagrenderer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nametagrenderer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NameTagRenderer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NameTagRenderer_vtbl\n{\n  void (__fastcall *~UICustomRenderer)(UICustomRenderer *this);\n  void (__fastcall *preRenderSetup)(UICustomRenderer *this, UIRenderContext *);\n  std::shared_ptr<UICustomRenderer> *(__fastcall *clone)(UICustomRenderer *this, std::shared_ptr<UICustomRenderer> *result);\n  bool (__fastcall *update)(UICustomRenderer *this, IClientInstance *, UIControl *, const UIScene *);\n  void (__fastcall *frameUpdate)(UICustomRenderer *this, UIFrameUpdateContext *, UIControl *);\n  void (__fastcall *render)(UICustomRenderer *this, UIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);\n  UIBatchType (__fastcall *getBatchType)(UICustomRenderer *this);\n  int (__fastcall *getCustomId)(UICustomRenderer *this);\n  int (__fastcall *getNumRenderPasses)(UICustomRenderer *this);\n  ResourceLocation *(__fastcall *getResourceLocation)(UICustomRenderer *this, ResourceLocation *result, int, int);\n  UIMaterialType (__fastcall *getUIMaterialType)(UICustomRenderer *this, int);\n  bool (__fastcall *getRequiresPreRenderSetup)(UICustomRenderer *this, int);\n  void (__fastcall *onVisibilityChanged)(UICustomRenderer *this, bool);\n  void (__fastcall *collectScreenEvents)(UICustomRenderer *this, std::queue<ScreenEvent> *);\n  void (__fastcall *frameUpdate)(MinecraftUICustomRenderer *this, MinecraftUIFrameUpdateContext *, UIControl *);\n  void (__fastcall *render)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *, IClientInstance *, UIControl *, int, RectangleArea *);\n  void (__fastcall *preRenderSetup)(MinecraftUICustomRenderer *this, MinecraftUIRenderContext *);\n};\n\n")])])]),e("h3",{attrs:{id:"node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[t._v("#")]),t._v(" "),e("code",[t._v("Node")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Node\n{\n  std::function<enum ui::ViewRequest __cdecl(unsigned int,std::string const &,int)> mOnEnter;\n  std::function<enum ui::ViewRequest __cdecl(unsigned int,std::string const &,int)> mOnExit;\n};\n\n")])])]),e("h3",{attrs:{id:"nestedbuttonscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nestedbuttonscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("NestedButtonScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NestedButtonScreenController : ScreenController\n{\n  std::string mFirstControlName;\n  bool mFocusFirst;\n  bool mNestedContentVisible;\n  int mSelectedIndex;\n  unsigned int mBaseButtonId;\n  std::vector<unsigned int> mIgnoredControls;\n};\n\n")])])]),e("h3",{attrs:{id:"nestedbuttonscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nestedbuttonscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NestedButtonScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NestedButtonScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n};\n\n")])])]),e("h3",{attrs:{id:"noinvitesorjoiningscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#noinvitesorjoiningscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoInvitesOrJoiningScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NoInvitesOrJoiningScreenController : MinecraftScreenController\n{\n};\n\n")])])]),e("h3",{attrs:{id:"noinvitesorjoiningscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#noinvitesorjoiningscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoInvitesOrJoiningScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NoInvitesOrJoiningScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"nolicensescreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nolicensescreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoLicenseScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NoLicenseScreenController : MinecraftScreenController\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nolicensescreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nolicensescreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoLicenseScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NoLicenseScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"nowifiwarningscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nowifiwarningscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoWifiWarningScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NoWifiWarningScreenController : MinecraftScreenController\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nowifiwarningscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nowifiwarningscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoWifiWarningScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NoWifiWarningScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"npcaction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcaction"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcAction")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcAction\n{\n  NpcAction_vtbl *__vftable /*VFT*/;\n  const NpcActionType mType;\n  NpcActionMode mMode;\n  std::string mButtonName;\n  std::string mEvaluatedButtonName;\n  std::string mText;\n  std::optional<std::string > mEvaluatedText;\n};\n\n")])])]),e("h3",{attrs:{id:"npcaction-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcaction-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcAction_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NpcAction_vtbl\n{\n  void (__fastcall *~NpcAction)(NpcAction *this);\n  Json::Value *(__fastcall *toJson)(NpcAction *this, Json::Value *result);\n  bool (__fastcall *fromJson)(NpcAction *this, const Json::Value *);\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController : ClientInstanceScreenController\n{\n  Player *mPlayer;\n  ActorUniqueID mActorId;\n  NpcInteractScreenController::Section mVisibleSection;\n  int mMaxSkinsPerRow;\n  int mStartSkinIndex;\n  int mMaxSkinButtonIndex;\n  int mMaxSkinIndex;\n  int mSelectedSkinIndex;\n  int mHoverSkin;\n  int mMaximizedEditIndex;\n  std::unique_ptr<DeferredTextObject> mDeferredNameText;\n  std::unique_ptr<DeferredTextObject> mDeferredInteractText;\n  std::vector<std::pair<DeferredTextObject,DeferredTextObject>> mDeferredActionTexts;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NpcInteractScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"npccomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npccomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NpcComponent_vtbl\n{\n  void (__fastcall *~NpcComponent)(NpcComponent *this);\n};\n\n")])])]),e("h3",{attrs:{id:"npci18nobserver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npci18nobserver"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcI18nObserver")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcI18nObserver : I18nObserver\n{\n  NpcComponent *mOwner;\n  Actor *mActor;\n};\n\n")])])]),e("h3",{attrs:{id:"npci18nobserver-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npci18nobserver-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcI18nObserver_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NpcI18nObserver_vtbl\n{\n  void (__fastcall *~Observer<I18nObserver,Core::SingleThreadedLock>)(Core::Observer<I18nObserver,Core::SingleThreadedLock> *this);\n  void (__fastcall *_onSubjectDestroyed)(Core::Observer<I18nObserver,Core::SingleThreadedLock> *this);\n  void (__fastcall *onLanguageChanged)(I18nObserver *this, const std::string *, bool);\n  void (__fastcall *onLanguageKeywordsLoadedFromPack)(I18nObserver *this, const PackManifest *);\n  void (__fastcall *onLanguagesLoaded)(I18nObserver *this);\n};\n\n")])])]),e("h3",{attrs:{id:"npcurlaction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcurlaction"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcUrlAction")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcUrlAction : NpcAction\n{\n};\n\n")])])]),e("h3",{attrs:{id:"npcurlaction-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcurlaction-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcUrlAction_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NpcUrlAction_vtbl\n{\n  void (__fastcall *~NpcAction)(NpcAction *this);\n  Json::Value *(__fastcall *toJson)(NpcAction *this, Json::Value *result);\n  bool (__fastcall *fromJson)(NpcAction *this, const Json::Value *);\n};\n\n")])])]),e("h3",{attrs:{id:"npccommandaction-savedcommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npccommandaction-savedcommand"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcCommandAction::SavedCommand")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NpcCommandAction::SavedCommand\n{\n  std::string mCommandLine;\n  std::unique_ptr<Command> mCommand;\n  int mVersion;\n};\n\n")])])]),e("h3",{attrs:{id:"npccommandaction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npccommandaction"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcCommandAction")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcCommandAction : NpcAction\n{\n  std::vector<NpcCommandAction::SavedCommand> mCommands;\n};\n\n")])])]),e("h3",{attrs:{id:"npccommandaction-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npccommandaction-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcCommandAction_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NpcCommandAction_vtbl\n{\n  void (__fastcall *~NpcAction)(NpcAction *this);\n  Json::Value *(__fastcall *toJson)(NpcAction *this, Json::Value *result);\n  bool (__fastcall *fromJson)(NpcAction *this, const Json::Value *);\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-addnewdeferredbuttontexts-l27-lambda-525972a55d1f265793f219cebda19565"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-addnewdeferredbuttontexts-l27-lambda-525972a55d1f265793f219cebda19565"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_addNewDeferredButtonTexts::__l27::<lambda_525972a55d1f265793f219cebda19565>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_addNewDeferredButtonTexts::__l27::<lambda_525972a55d1f265793f219cebda19565>\n{\n  NpcInteractScreenController *const __this;\n  unsigned __int64 actionIndex;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-addnewdeferredbuttontexts-l27-lambda-5979e78b14d99a72e640ac7a1490967a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-addnewdeferredbuttontexts-l27-lambda-5979e78b14d99a72e640ac7a1490967a"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_addNewDeferredButtonTexts::__l27::<lambda_5979e78b14d99a72e640ac7a1490967a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_addNewDeferredButtonTexts::__l27::<lambda_5979e78b14d99a72e640ac7a1490967a>\n{\n  NpcInteractScreenController *const __this;\n  unsigned __int64 actionIndex;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-performaction-l16-lambda-770c8bde188452f9dd915d451b120383"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-performaction-l16-lambda-770c8bde188452f9dd915d451b120383"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_performAction::__l16::<lambda_770c8bde188452f9dd915d451b120383>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NpcInteractScreenController::_performAction::__l16::<lambda_770c8bde188452f9dd915d451b120383>\n{\n  NpcInteractScreenController *const __this;\n  int index;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-685132e4215fce5d6b0e5251f3fff374"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-685132e4215fce5d6b0e5251f3fff374"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_685132e4215fce5d6b0e5251f3fff374>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_685132e4215fce5d6b0e5251f3fff374>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-bd50889f0f8efbf1910ec3665fab9da6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-bd50889f0f8efbf1910ec3665fab9da6"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_bd50889f0f8efbf1910ec3665fab9da6>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_bd50889f0f8efbf1910ec3665fab9da6>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-f9dc8265b0e290a3b9979321e6f98210"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-f9dc8265b0e290a3b9979321e6f98210"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_f9dc8265b0e290a3b9979321e6f98210>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_f9dc8265b0e290a3b9979321e6f98210>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-918f49358adec11c427318acb5d69f83"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-918f49358adec11c427318acb5d69f83"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_918f49358adec11c427318acb5d69f83>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_918f49358adec11c427318acb5d69f83>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-c2e417e5496db5e00549a0c1c7657df9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-c2e417e5496db5e00549a0c1c7657df9"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_c2e417e5496db5e00549a0c1c7657df9>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_c2e417e5496db5e00549a0c1c7657df9>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-9cc7365efe2ecd15773c5e96154585c0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-9cc7365efe2ecd15773c5e96154585c0"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_9cc7365efe2ecd15773c5e96154585c0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_9cc7365efe2ecd15773c5e96154585c0>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-1b11e5bdefb9cfebd326408a82e32cc9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-1b11e5bdefb9cfebd326408a82e32cc9"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_1b11e5bdefb9cfebd326408a82e32cc9>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_1b11e5bdefb9cfebd326408a82e32cc9>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-961bd95fcd582e4bbf5c0414148176ab"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-961bd95fcd582e4bbf5c0414148176ab"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_961bd95fcd582e4bbf5c0414148176ab>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_961bd95fcd582e4bbf5c0414148176ab>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-d50efe909a7c46e7687e0b3a232473ba"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-d50efe909a7c46e7687e0b3a232473ba"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_d50efe909a7c46e7687e0b3a232473ba>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_d50efe909a7c46e7687e0b3a232473ba>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-38ce483024813d3823a3ac425c8f3b4f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-38ce483024813d3823a3ac425c8f3b4f"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_38ce483024813d3823a3ac425c8f3b4f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_38ce483024813d3823a3ac425c8f3b4f>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-28f724f63f22111fcc66aa3c85134d52"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-28f724f63f22111fcc66aa3c85134d52"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_28f724f63f22111fcc66aa3c85134d52>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_28f724f63f22111fcc66aa3c85134d52>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-27b60f1c49a81525a15a80133af6e6c5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-27b60f1c49a81525a15a80133af6e6c5"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_27b60f1c49a81525a15a80133af6e6c5>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_27b60f1c49a81525a15a80133af6e6c5>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-6b93d3f1b7924a3692e51f0a818a2aa3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-6b93d3f1b7924a3692e51f0a818a2aa3"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_6b93d3f1b7924a3692e51f0a818a2aa3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_6b93d3f1b7924a3692e51f0a818a2aa3>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-9ffaf4d7b653b6efe16a30a56024a344"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-9ffaf4d7b653b6efe16a30a56024a344"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_9ffaf4d7b653b6efe16a30a56024a344>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_9ffaf4d7b653b6efe16a30a56024a344>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-98dd1895ad58be4fd0643ba408f3dc9b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-98dd1895ad58be4fd0643ba408f3dc9b"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_98dd1895ad58be4fd0643ba408f3dc9b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_98dd1895ad58be4fd0643ba408f3dc9b>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-bf814a0438fe0cf5a9d127c9d3fbc2e7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-bf814a0438fe0cf5a9d127c9d3fbc2e7"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_bf814a0438fe0cf5a9d127c9d3fbc2e7>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_bf814a0438fe0cf5a9d127c9d3fbc2e7>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-5f7a42ab3172a17486bd8c065939826a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-5f7a42ab3172a17486bd8c065939826a"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_5f7a42ab3172a17486bd8c065939826a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_5f7a42ab3172a17486bd8c065939826a>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-27126e782ce13cc59b9148c91d336520"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-27126e782ce13cc59b9148c91d336520"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_27126e782ce13cc59b9148c91d336520>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_27126e782ce13cc59b9148c91d336520>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-3d87a45349c82392988892f1aa6201d4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-3d87a45349c82392988892f1aa6201d4"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_3d87a45349c82392988892f1aa6201d4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_3d87a45349c82392988892f1aa6201d4>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-bbd7a451a770d6ad1104aee1de332f62"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-bbd7a451a770d6ad1104aee1de332f62"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_bbd7a451a770d6ad1104aee1de332f62>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_bbd7a451a770d6ad1104aee1de332f62>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-c4f01a600a557aae90fd29dc866bc693"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-c4f01a600a557aae90fd29dc866bc693"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_c4f01a600a557aae90fd29dc866bc693>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_c4f01a600a557aae90fd29dc866bc693>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-551f4af8bd75ecee9d5b1320adf1cbac"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-551f4af8bd75ecee9d5b1320adf1cbac"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_551f4af8bd75ecee9d5b1320adf1cbac>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_551f4af8bd75ecee9d5b1320adf1cbac>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-ce4df114df64c7ea79640edf13f8035e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-ce4df114df64c7ea79640edf13f8035e"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_ce4df114df64c7ea79640edf13f8035e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_ce4df114df64c7ea79640edf13f8035e>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-2f9ed62f6fbe1445c08b4da73602ec87"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-2f9ed62f6fbe1445c08b4da73602ec87"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_2f9ed62f6fbe1445c08b4da73602ec87>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_2f9ed62f6fbe1445c08b4da73602ec87>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-b7f1b4cbf605dd4eb95d8a9c52ca36fb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-b7f1b4cbf605dd4eb95d8a9c52ca36fb"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_b7f1b4cbf605dd4eb95d8a9c52ca36fb>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_b7f1b4cbf605dd4eb95d8a9c52ca36fb>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-6b2f551d84bdc8e3c9679231c50a02e3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-6b2f551d84bdc8e3c9679231c50a02e3"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_6b2f551d84bdc8e3c9679231c50a02e3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_6b2f551d84bdc8e3c9679231c50a02e3>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-ce31bf8ec73dc59d148c0b13005b77ea"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-ce31bf8ec73dc59d148c0b13005b77ea"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_ce31bf8ec73dc59d148c0b13005b77ea>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_ce31bf8ec73dc59d148c0b13005b77ea>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-76e75e1f87ca49bb70bfd42ceed335d9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-76e75e1f87ca49bb70bfd42ceed335d9"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_76e75e1f87ca49bb70bfd42ceed335d9>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_76e75e1f87ca49bb70bfd42ceed335d9>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-dc7c55d4bb3f780ccc8c0b5828296abc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-dc7c55d4bb3f780ccc8c0b5828296abc"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_dc7c55d4bb3f780ccc8c0b5828296abc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_dc7c55d4bb3f780ccc8c0b5828296abc>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-b64b97281b0f0f98fea045f927cb3214"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-b64b97281b0f0f98fea045f927cb3214"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_b64b97281b0f0f98fea045f927cb3214>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_b64b97281b0f0f98fea045f927cb3214>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-8b0c4a6b6ced70ce383d81cc6b2ca2d2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-8b0c4a6b6ced70ce383d81cc6b2ca2d2"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_8b0c4a6b6ced70ce383d81cc6b2ca2d2>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_8b0c4a6b6ced70ce383d81cc6b2ca2d2>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registerbindings-l2-lambda-af06e22ddd1258f13e12a0178e52eb82"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registerbindings-l2-lambda-af06e22ddd1258f13e12a0178e52eb82"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerBindings::__l2::<lambda_af06e22ddd1258f13e12a0178e52eb82>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerBindings::__l2::<lambda_af06e22ddd1258f13e12a0178e52eb82>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-0f87fed6fb4312dda2670798b50f151e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-0f87fed6fb4312dda2670798b50f151e"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_0f87fed6fb4312dda2670798b50f151e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_0f87fed6fb4312dda2670798b50f151e>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-0b39ecdd70a9cbba8ff6d63033e7656f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-0b39ecdd70a9cbba8ff6d63033e7656f"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_0b39ecdd70a9cbba8ff6d63033e7656f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_0b39ecdd70a9cbba8ff6d63033e7656f>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-9afc29b3dd5cc1aae8670def45ffc7be"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-9afc29b3dd5cc1aae8670def45ffc7be"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_9afc29b3dd5cc1aae8670def45ffc7be>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_9afc29b3dd5cc1aae8670def45ffc7be>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-27417888587095cb2e72a69771817beb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-27417888587095cb2e72a69771817beb"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_27417888587095cb2e72a69771817beb>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_27417888587095cb2e72a69771817beb>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-46fb4c0b60385f1a6cf29c5c493a988f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-46fb4c0b60385f1a6cf29c5c493a988f"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_46fb4c0b60385f1a6cf29c5c493a988f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_46fb4c0b60385f1a6cf29c5c493a988f>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-8d65bfe355354836db1ec1e005ccee61"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-8d65bfe355354836db1ec1e005ccee61"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_8d65bfe355354836db1ec1e005ccee61>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_8d65bfe355354836db1ec1e005ccee61>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-92f886b587409e6e1e5d18b741ec11eb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-92f886b587409e6e1e5d18b741ec11eb"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_92f886b587409e6e1e5d18b741ec11eb>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_92f886b587409e6e1e5d18b741ec11eb>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-b119d233e4e8b72d38293e7cf0841ebd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-b119d233e4e8b72d38293e7cf0841ebd"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_b119d233e4e8b72d38293e7cf0841ebd>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_b119d233e4e8b72d38293e7cf0841ebd>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-5b8259b00dee110f428b87fabc7b6ef1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-5b8259b00dee110f428b87fabc7b6ef1"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_5b8259b00dee110f428b87fabc7b6ef1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_5b8259b00dee110f428b87fabc7b6ef1>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-e569107e2da18809e468761ce1180ac9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-e569107e2da18809e468761ce1180ac9"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_e569107e2da18809e468761ce1180ac9>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_e569107e2da18809e468761ce1180ac9>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-529c12038656d1e68dae8adde58aae76"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-529c12038656d1e68dae8adde58aae76"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_529c12038656d1e68dae8adde58aae76>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_529c12038656d1e68dae8adde58aae76>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-3f9ebd4054d1f015433789d31640f170"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-3f9ebd4054d1f015433789d31640f170"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_3f9ebd4054d1f015433789d31640f170>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_3f9ebd4054d1f015433789d31640f170>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-d8dc877c9602e19aace2f6ea1e3ac663"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-d8dc877c9602e19aace2f6ea1e3ac663"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_d8dc877c9602e19aace2f6ea1e3ac663>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_d8dc877c9602e19aace2f6ea1e3ac663>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-65cd00d13b9b49e1a03643d6c3a37994"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-65cd00d13b9b49e1a03643d6c3a37994"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_65cd00d13b9b49e1a03643d6c3a37994>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_65cd00d13b9b49e1a03643d6c3a37994>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-b1e8cdc2fe15eeaad5abf69089b81ac1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-b1e8cdc2fe15eeaad5abf69089b81ac1"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_b1e8cdc2fe15eeaad5abf69089b81ac1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_b1e8cdc2fe15eeaad5abf69089b81ac1>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-0b7a2867178d7c118d371ed4ffefe5ec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-0b7a2867178d7c118d371ed4ffefe5ec"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_0b7a2867178d7c118d371ed4ffefe5ec>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_0b7a2867178d7c118d371ed4ffefe5ec>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-59277c57f9ed34755d3501796c6d5e19"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-59277c57f9ed34755d3501796c6d5e19"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_59277c57f9ed34755d3501796c6d5e19>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_59277c57f9ed34755d3501796c6d5e19>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-835aae1b6d1de636a10bfb62595ec300"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-835aae1b6d1de636a10bfb62595ec300"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_835aae1b6d1de636a10bfb62595ec300>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_835aae1b6d1de636a10bfb62595ec300>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-527810ea16a23cdbccc7359bea9aa091"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-527810ea16a23cdbccc7359bea9aa091"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_527810ea16a23cdbccc7359bea9aa091>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_527810ea16a23cdbccc7359bea9aa091>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-10f7de869da8691f08d1419b8765e838"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-10f7de869da8691f08d1419b8765e838"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_10f7de869da8691f08d1419b8765e838>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_10f7de869da8691f08d1419b8765e838>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-9c561b746454dc637849d9e0de291451"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-9c561b746454dc637849d9e0de291451"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_9c561b746454dc637849d9e0de291451>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_9c561b746454dc637849d9e0de291451>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-d6543b3c323d884ac56460bbbd12fffc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-d6543b3c323d884ac56460bbbd12fffc"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_d6543b3c323d884ac56460bbbd12fffc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_d6543b3c323d884ac56460bbbd12fffc>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-d2e6de15aefe0f4465d6f2b0455c106b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-d2e6de15aefe0f4465d6f2b0455c106b"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_d2e6de15aefe0f4465d6f2b0455c106b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_d2e6de15aefe0f4465d6f2b0455c106b>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-registereventhandlers-l2-lambda-42cc15f8d8a565c4d87fa63846cefc74"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-registereventhandlers-l2-lambda-42cc15f8d8a565c4d87fa63846cefc74"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_42cc15f8d8a565c4d87fa63846cefc74>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_registerEventHandlers::__l2::<lambda_42cc15f8d8a565c4d87fa63846cefc74>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-ctor-l5-lambda-545b5b064f68a330907a1d62901c26fd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-ctor-l5-lambda-545b5b064f68a330907a1d62901c26fd"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::{ctor}::__l5::<lambda_545b5b064f68a330907a1d62901c26fd>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::{ctor}::__l5::<lambda_545b5b064f68a330907a1d62901c26fd>\n{\n  std::weak_ptr<ClientInstanceScreenModel> clientInstanceScreenModel;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-ctor-l2-lambda-12cdb0e9312e4c06909367b29defc283"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-ctor-l2-lambda-12cdb0e9312e4c06909367b29defc283"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::{ctor}::__l2::<lambda_12cdb0e9312e4c06909367b29defc283>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::{ctor}::__l2::<lambda_12cdb0e9312e4c06909367b29defc283>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-ctor-l2-lambda-96fcc5098b0104a2c148880f42282cd3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-ctor-l2-lambda-96fcc5098b0104a2c148880f42282cd3"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::{ctor}::__l2::<lambda_96fcc5098b0104a2c148880f42282cd3>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::{ctor}::__l2::<lambda_96fcc5098b0104a2c148880f42282cd3>\n{\n  NpcInteractScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"nowifiwarningscreencontroller-onopen-l2-lambda-678e104bd177bafcbbaf50e5b4a17646"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nowifiwarningscreencontroller-onopen-l2-lambda-678e104bd177bafcbbaf50e5b4a17646"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoWifiWarningScreenController::onOpen::__l2::<lambda_678e104bd177bafcbbaf50e5b4a17646>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NoWifiWarningScreenController::onOpen::__l2::<lambda_678e104bd177bafcbbaf50e5b4a17646>\n{\n  std::weak_ptr<NoWifiWarningScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"nolicensescreencontroller-registereventhandlers-l2-lambda-0dde9eacc6bf0e0b0c150fb009adb02b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nolicensescreencontroller-registereventhandlers-l2-lambda-0dde9eacc6bf0e0b0c150fb009adb02b"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoLicenseScreenController::_registerEventHandlers::__l2::<lambda_0dde9eacc6bf0e0b0c150fb009adb02b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NoLicenseScreenController::_registerEventHandlers::__l2::<lambda_0dde9eacc6bf0e0b0c150fb009adb02b>\n{\n  MinecraftScreenModel *minecraftScreenModel;\n};\n\n")])])]),e("h3",{attrs:{id:"nolicensescreencontroller-onopen-l2-lambda-2735138fa77094ec25279457d23a4977"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nolicensescreencontroller-onopen-l2-lambda-2735138fa77094ec25279457d23a4977"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoLicenseScreenController::onOpen::__l2::<lambda_2735138fa77094ec25279457d23a4977>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NoLicenseScreenController::onOpen::__l2::<lambda_2735138fa77094ec25279457d23a4977>\n{\n  std::weak_ptr<NoLicenseScreenController> weakThis;\n  MinecraftScreenModel *minecraftScreenModel;\n};\n\n")])])]),e("h3",{attrs:{id:"noinvitesorjoiningscreencontroller-onopen-l2-lambda-3c9e8f66ed803a3660dcf022e414dc0b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#noinvitesorjoiningscreencontroller-onopen-l2-lambda-3c9e8f66ed803a3660dcf022e414dc0b"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoInvitesOrJoiningScreenController::onOpen::__l2::<lambda_3c9e8f66ed803a3660dcf022e414dc0b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NoInvitesOrJoiningScreenController::onOpen::__l2::<lambda_3c9e8f66ed803a3660dcf022e414dc0b>\n{\n  std::weak_ptr<NoInvitesOrJoiningScreenController> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"nestedbuttonscreencontroller-setupcallbacksfornestedbuttonincollection-l2-lambda-2440ef04aad8628a954849b7a600a2b1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nestedbuttonscreencontroller-setupcallbacksfornestedbuttonincollection-l2-lambda-2440ef04aad8628a954849b7a600a2b1"}},[t._v("#")]),t._v(" "),e("code",[t._v("NestedButtonScreenController::setUpCallbacksForNestedButtonInCollection::__l2::<lambda_2440ef04aad8628a954849b7a600a2b1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NestedButtonScreenController::setUpCallbacksForNestedButtonInCollection::__l2::<lambda_2440ef04aad8628a954849b7a600a2b1>\n{\n  NestedButtonScreenController *const __this;\n  std::function<bool __cdecl(UIPropertyBag &,int)> visibilityFunc;\n};\n\n")])])]),e("h3",{attrs:{id:"nestedbuttonscreencontroller-setupcallbacksfornestedbutton-l2-lambda-83d1f6d270356c6c9764f02a4331fd7c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nestedbuttonscreencontroller-setupcallbacksfornestedbutton-l2-lambda-83d1f6d270356c6c9764f02a4331fd7c"}},[t._v("#")]),t._v(" "),e("code",[t._v("NestedButtonScreenController::setUpCallbacksForNestedButton::__l2::<lambda_83d1f6d270356c6c9764f02a4331fd7c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NestedButtonScreenController::setUpCallbacksForNestedButton::__l2::<lambda_83d1f6d270356c6c9764f02a4331fd7c>\n{\n  NestedButtonScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"nestedbuttonscreencontroller-setupcallbacksfornestedbutton-l2-lambda-0061e4a29d8aa831f112fae32c83e5fb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nestedbuttonscreencontroller-setupcallbacksfornestedbutton-l2-lambda-0061e4a29d8aa831f112fae32c83e5fb"}},[t._v("#")]),t._v(" "),e("code",[t._v("NestedButtonScreenController::setUpCallbacksForNestedButton::__l2::<lambda_0061e4a29d8aa831f112fae32c83e5fb>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NestedButtonScreenController::setUpCallbacksForNestedButton::__l2::<lambda_0061e4a29d8aa831f112fae32c83e5fb>\n{\n  NestedButtonScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"networksettingoptions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networksettingoptions"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkSettingOptions")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NetworkSettingOptions\n{\n  unsigned __int16 mCompressionThreshold;\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunkrelighter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkrelighter"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkRelighter")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkChunkRelighter\n{\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunkrelighter-spawnlightingtask-l2-lambda-c80b1902f85c8610f74a44f0a2e8f79a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkrelighter-spawnlightingtask-l2-lambda-c80b1902f85c8610f74a44f0a2e8f79a"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkRelighter::_spawnLightingTask::__l2::<lambda_c80b1902f85c8610f74a44f0a2e8f79a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NetworkChunkRelighter::_spawnLightingTask::__l2::<lambda_c80b1902f85c8610f74a44f0a2e8f79a>\n{\n  LevelChunk *lcActual;\n  std::shared_ptr<ChunkViewSource> chunks;\n  int basePriority;\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunkrelighter-spawnlightingtask-l2-lambda-116be2b2e5e0868b15dbe531e6fc72e7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkrelighter-spawnlightingtask-l2-lambda-116be2b2e5e0868b15dbe531e6fc72e7"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkRelighter::_spawnLightingTask::__l2::<lambda_116be2b2e5e0868b15dbe531e6fc72e7>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkChunkRelighter::_spawnLightingTask::__l2::<lambda_116be2b2e5e0868b15dbe531e6fc72e7>\n{\n  LevelChunk *lcActual;\n  std::shared_ptr<ChunkViewSource> chunks;\n};\n\n")])])]),e("h3",{attrs:{id:"noteparticle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#noteparticle"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoteParticle")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NoteParticle : Particle\n{\n  float oSize;\n};\n\n")])])]),e("h3",{attrs:{id:"noteparticle-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#noteparticle-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoteParticle_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NoteParticle_vtbl\n{\n  void (__fastcall *init)(Particle *this, const Vec3 *, const Vec3 *, int, ParticleEngine *);\n  void (__fastcall *addTagData)(Particle *this, const CompoundTag *);\n  void (__fastcall *~Particle)(Particle *this);\n  void (__fastcall *normalTick)(Particle *this);\n  void (__fastcall *tessellate)(Particle *this, const ParticleRenderContext *);\n  const mce::TexturePtr *(__fastcall *getParticleTexture)(Particle *this);\n  mce::Color *(__fastcall *getParticleLightColor)(Particle *this, mce::Color *result, float, const LightTexture *);\n  void (__fastcall *setEmittingEntity)(Particle *this, Actor *);\n  bool (__fastcall *_shouldUpdateVertexData)(Particle *this, float);\n};\n\n")])])]),e("h3",{attrs:{id:"noteblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#noteblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoteBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NoteBlock : ActorBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"noteblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#noteblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoteBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NoteBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),e("h3",{attrs:{id:"navsectionstorevisualstyle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navsectionstorevisualstyle"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavSectionStoreVisualStyle")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NavSectionStoreVisualStyle : StoreVisualStyle\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nulltexttospeechclient"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nulltexttospeechclient"}},[t._v("#")]),t._v(" "),e("code",[t._v("NullTextToSpeechClient")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NullTextToSpeechClient : TextToSpeechClient\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nulltexttospeechclient-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nulltexttospeechclient-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NullTextToSpeechClient_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NullTextToSpeechClient_vtbl\n{\n  void (__fastcall *~TextToSpeechClient)(TextToSpeechClient *this);\n  void (__fastcall *setTextToSpeechEnabled)(TextToSpeechClient *this, bool);\n  bool (__fastcall *getTextToSpeechEnabled)(TextToSpeechClient *this);\n  void (__fastcall *speakText)(TextToSpeechClient *this, const std::string *);\n  void (__fastcall *stopSpeaking)(TextToSpeechClient *this);\n  bool (__fastcall *isIdle)(TextToSpeechClient *this);\n};\n\n")])])]),e("h3",{attrs:{id:"nulltexttospeechsystem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nulltexttospeechsystem"}},[t._v("#")]),t._v(" "),e("code",[t._v("NullTextToSpeechSystem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NullTextToSpeechSystem : TextToSpeechSystem\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nulltexttospeechsystem-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nulltexttospeechsystem-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NullTextToSpeechSystem_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NullTextToSpeechSystem_vtbl\n{\n  void (__fastcall *~TextToSpeechSystem)(TextToSpeechSystem *this);\n  bool (__fastcall *checkPlatformTTSEnabled)(TextToSpeechSystem *this, gsl::not_null<Options *>);\n  bool (__fastcall *canAutoEnableTTS)(TextToSpeechSystem *this, gsl::not_null<Options const *>);\n  TTSEnabledStatus (__fastcall *getTTSEnabledStatus)(TextToSpeechSystem *this);\n  void (__fastcall *setTTSEnabledStatus)(TextToSpeechSystem *this, TTSEnabledStatus);\n  bool (__fastcall *supportsMultipleTTSClients)(TextToSpeechSystem *this);\n  std::shared_ptr<TextToSpeechClient> *(__fastcall *_createTTSClient)(TextToSpeechSystem *this, std::shared_ptr<TextToSpeechClient> *result);\n};\n\n")])])]),e("h3",{attrs:{id:"ntassociatedfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ntassociatedfile"}},[t._v("#")]),t._v(" "),e("code",[t._v("NtAssociatedFile")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NtAssociatedFile\n{\n  char *m_srcFilePathUtf8;\n  char *m_srcContentUtf8;\n  char *m_destFileNameUtf8;\n};\n\n")])])]),e("h3",{attrs:{id:"nameablecomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nameablecomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("NameableComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NameableComponent : IEntityComponent\n{\n  bool mAllowNameTagRenaming;\n  bool mAlwaysShow;\n};\n\n")])])]),e("h3",{attrs:{id:"nameaction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nameaction"}},[t._v("#")]),t._v(" "),e("code",[t._v("NameAction")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NameAction\n{\n  std::vector<std::string> mNameFilters;\n  DefinitionTrigger mOnNamed;\n};\n\n")])])]),e("h3",{attrs:{id:"normalnoiselayer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#normalnoiselayer"}},[t._v("#")]),t._v(" "),e("code",[t._v("NormalNoiseLayer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NormalNoiseLayer : RootLayer<float>\n{\n  unsigned int mSeedOffset;\n  int mLevels;\n  std::unique_ptr<PerlinNoise> mFirst;\n  std::unique_ptr<PerlinNoise> mSecond;\n  float mValueFactor;\n};\n\n")])])]),e("h3",{attrs:{id:"normalnoiselayer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#normalnoiselayer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NormalNoiseLayer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NormalNoiseLayer_vtbl\n{\n  void (__fastcall *~LayerBase)(LayerDetails::LayerBase *this);\n  void (__fastcall *init)(LayerDetails::LayerBase *this, __int64);\n  LayerDetails::TransferData<float> *(__fastcall *_allocateAndFill)(Layer<float> *this, LayerDetails::TransferData<float> *result, unsigned __int64, int, int, unsigned int, unsigned int);\n  void (__fastcall *_fillArea)(RootLayer<float> *this, LayerDetails::WorkingData<float,char> *, int, int, int, int);\n};\n\n")])])]),e("h3",{attrs:{id:"npcdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcDefinition\n{\n  Json::Value mNPCData;\n};\n\n")])])]),e("h3",{attrs:{id:"npc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npc"}},[t._v("#")]),t._v(" "),e("code",[t._v("Npc")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Npc : Mob\n{\n};\n\n")])])]),e("h3",{attrs:{id:"npccomponent-getinteraction-l5-lambda-af092033498043834f29b3d77957f2af"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npccomponent-getinteraction-l5-lambda-af092033498043834f29b3d77957f2af"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcComponent::getInteraction::__l5::<lambda_af092033498043834f29b3d77957f2af>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcComponent::getInteraction::__l5::<lambda_af092033498043834f29b3d77957f2af>\n{\n  Actor *owner;\n  Player *pPlayer;\n};\n\n")])])]),e("h3",{attrs:{id:"navigationcomponent-checksendmovetoresult-l5-lambda-c9b21251bc9efcfb8c3fa81a3ebf905e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationcomponent-checksendmovetoresult-l5-lambda-c9b21251bc9efcfb8c3fa81a3ebf905e"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationComponent::checkSendMoveToResult::__l5::<lambda_c9b21251bc9efcfb8c3fa81a3ebf905e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NavigationComponent::checkSendMoveToResult::__l5::<lambda_c9b21251bc9efcfb8c3fa81a3ebf905e>\n{\n  __int64 *rawID;\n  int *result;\n};\n\n")])])]),e("h3",{attrs:{id:"nameablecomponent-getinteraction-l27-lambda-19d4c46f68253fdf8e80814d97b1ae7b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nameablecomponent-getinteraction-l27-lambda-19d4c46f68253fdf8e80814d97b1ae7b"}},[t._v("#")]),t._v(" "),e("code",[t._v("NameableComponent::getInteraction::__l27::<lambda_19d4c46f68253fdf8e80814d97b1ae7b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NameableComponent::getInteraction::__l27::<lambda_19d4c46f68253fdf8e80814d97b1ae7b>\n{\n  Player *player;\n  NameableComponent *const __this;\n  Actor *owner;\n};\n\n")])])]),e("h3",{attrs:{id:"navigationsystem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationsystem"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationSystem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NavigationSystem : ITickingSystem\n{\n};\n\n")])])]),e("h3",{attrs:{id:"navigationsystem-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigationsystem-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NavigationSystem_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NavigationSystem_vtbl\n{\n  void (__fastcall *~ITickingSystem)(ITickingSystem *this);\n  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);\n};\n\n")])])]),e("h3",{attrs:{id:"networkhandler-sortandpacketizeevents-l26-lambda-c18f95e2a881ec6c4bfa5557333b70c8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhandler-sortandpacketizeevents-l26-lambda-c18f95e2a881ec6c4bfa5557333b70c8"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHandler::_sortAndPacketizeEvents::__l26::<lambda_c18f95e2a881ec6c4bfa5557333b70c8>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkHandler::_sortAndPacketizeEvents::__l26::<lambda_c18f95e2a881ec6c4bfa5557333b70c8>\n{\n  NetworkHandler *const __this;\n  ReadOnlyBinaryStream *stream;\n  unsigned __int64 *oldReadPointer;\n  NetworkHandler::Connection *connection;\n  std::shared_ptr<Packet> *packet;\n};\n\n")])])]),e("h3",{attrs:{id:"networkreplayer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkreplayer"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkReplayer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkReplayer : AppPlatformListener\n{\n  std::chrono::duration<__int64,std::ratio<1,1000> > mPingIntervals;\n  std::unique_ptr<Scheduler> mScheduler;\n  std::unique_ptr<NetworkHandler> mNetworkHandler;\n  std::unique_ptr<PacketReplayNetworkHandler> mPacketReplayNetworkHandler;\n  std::vector<__int64> mLatencyTimePointsMS;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mLastLatencyPacketSentAt;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mLastReplayPacketSentAt;\n};\n\n")])])]),e("h3",{attrs:{id:"networkreplayer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkreplayer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkReplayer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetworkReplayer_vtbl\n{\n  void (__fastcall *~AppPlatformListener)(AppPlatformListener *this);\n  void (__fastcall *onLowMemory)(AppPlatformListener *this);\n  void (__fastcall *onAppPaused)(AppPlatformListener *this);\n  void (__fastcall *onAppUnpaused)(AppPlatformListener *this);\n  void (__fastcall *onAppPreSuspended)(AppPlatformListener *this);\n  void (__fastcall *onAppSuspended)(AppPlatformListener *this);\n  void (__fastcall *onAppResumed)(AppPlatformListener *this);\n  void (__fastcall *onAppFocusLost)(AppPlatformListener *this);\n  void (__fastcall *onAppFocusGained)(AppPlatformListener *this);\n  void (__fastcall *onAppTerminated)(AppPlatformListener *this);\n  void (__fastcall *onOperationModeChanged)(AppPlatformListener *this, const OperationMode);\n  void (__fastcall *onPerformanceModeChanged)(AppPlatformListener *this, const bool);\n  void (__fastcall *onPushNotificationReceived)(AppPlatformListener *this, const PushNotificationMessage *);\n  void (__fastcall *onResizeBegin)(AppPlatformListener *this);\n  void (__fastcall *onResizeEnd)(AppPlatformListener *this);\n  void (__fastcall *onDeviceLost)(AppPlatformListener *this);\n};\n\n")])])]),e("h3",{attrs:{id:"networkreplayreader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkreplayreader"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkReplayReader")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkReplayReader\n{\n  Core::PathBuffer<std::string > mReplayFolderPath;\n  std::string mReplayName;\n  const unsigned int mVersion;\n  std::vector<std::string> mPacketData;\n};\n\n")])])]),e("h3",{attrs:{id:"networkhandler-runevents-l2-lambda-548e329923228af3a9c05419563beac9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhandler-runevents-l2-lambda-548e329923228af3a9c05419563beac9"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHandler::runEvents::__l2::<lambda_548e329923228af3a9c05419563beac9>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NetworkHandler::runEvents::__l2::<lambda_548e329923228af3a9c05419563beac9>\n{\n  NetworkHandler *const __this;\n  bool networkIsCritical;\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunkpublisher-sendqueuedchunk-l14-lambda-27221b25a8833b16088c094287e84112"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkpublisher-sendqueuedchunk-l14-lambda-27221b25a8833b16088c094287e84112"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkPublisher::_sendQueuedChunk::__l14::<lambda_27221b25a8833b16088c094287e84112>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkChunkPublisher::_sendQueuedChunk::__l14::<lambda_27221b25a8833b16088c094287e84112>\n{\n  std::shared_ptr<LevelChunk> levelChunk;\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunkpublisher-sendqueuedchunk-l18-lambda-3d90a21a191e0fc25d4d3524ff4242ca"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkpublisher-sendqueuedchunk-l18-lambda-3d90a21a191e0fc25d4d3524ff4242ca"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkPublisher::_sendQueuedChunk::__l18::<lambda_3d90a21a191e0fc25d4d3524ff4242ca>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkChunkPublisher::_sendQueuedChunk::__l18::<lambda_3d90a21a191e0fc25d4d3524ff4242ca>\n{\n  SubChunk *sc;\n};\n\n")])])]),e("h3",{attrs:{id:"networkchunkpublisher-prepareregion-l2-lambda-230d3b8c30a9a01eadc378cb610b2e9d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkchunkpublisher-prepareregion-l2-lambda-230d3b8c30a9a01eadc378cb610b2e9d"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkChunkPublisher::prepareRegion::__l2::<lambda_230d3b8c30a9a01eadc378cb610b2e9d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkChunkPublisher::prepareRegion::__l2::<lambda_230d3b8c30a9a01eadc378cb610b2e9d>\n{\n  NetworkChunkPublisher *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"networkaddress"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkaddress"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkAddress")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NetworkAddress\n{\n  std::string host;\n  unsigned __int16 port;\n};\n\n")])])]),e("h3",{attrs:{id:"nearestattackabletargetdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nearestattackabletargetdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("NearestAttackableTargetDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NearestAttackableTargetDefinition : TargetGoalDefinition\n{\n  bool mReselectTargets;\n  int mAttackInterval;\n  int mScanInterval;\n  float mTargetSearchHeight;\n  float mTargetInvisibleMultiplier;\n  float mTargetSneakVisibilityMultiplier;\n  bool mSetPersistent;\n};\n\n")])])]),e("h3",{attrs:{id:"nearestattackabletargetdefinition-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nearestattackabletargetdefinition-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NearestAttackableTargetDefinition_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NearestAttackableTargetDefinition_vtbl\n{\n  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);\n  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);\n  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);\n};\n\n")])])]),e("h3",{attrs:{id:"nearestattackabletargetgoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nearestattackabletargetgoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("NearestAttackableTargetGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NearestAttackableTargetGoal : TargetGoal\n{\n  ActorUniqueID mTargetID;\n  const MobDescriptor *mTargetDescriptor;\n  bool mReselectTargets;\n  int mAttackInterval;\n  int mScanInterval;\n  bool mSetPersistent;\n  float mTargetSearchHeight;\n  float mTargetInvisibleMultiplier;\n  float mTargetSneakVisibilityMultiplier;\n};\n\n")])])]),e("h3",{attrs:{id:"nearestattackabletargetgoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nearestattackabletargetgoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NearestAttackableTargetGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NearestAttackableTargetGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n  bool (__fastcall *_canAttack)(TargetGoal *this, Mob *, Actor *, bool, bool, const MobDescriptor **);\n  ActorUniqueID *(__fastcall *_findTarget)(NearestAttackableTargetGoal *this, ActorUniqueID *result, const MobDescriptor **);\n};\n\n")])])]),e("h3",{attrs:{id:"nearestprioritizedattackabletargetgoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nearestprioritizedattackabletargetgoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("NearestPrioritizedAttackableTargetGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NearestPrioritizedAttackableTargetGoal : NearestAttackableTargetGoal\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nearestprioritizedattackabletargetgoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nearestprioritizedattackabletargetgoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NearestPrioritizedAttackableTargetGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NearestPrioritizedAttackableTargetGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n  bool (__fastcall *_canAttack)(TargetGoal *this, Mob *, Actor *, bool, bool, const MobDescriptor **);\n  ActorUniqueID *(__fastcall *_findTarget)(NearestAttackableTargetGoal *this, ActorUniqueID *result, const MobDescriptor **);\n};\n\n")])])]),e("h3",{attrs:{id:"networkpacketeventcoordinator-sendpacketreceivedfrom-l2-lambda-b5b734c663c77d1d84ead46a045879f1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkpacketeventcoordinator-sendpacketreceivedfrom-l2-lambda-b5b734c663c77d1d84ead46a045879f1"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkPacketEventCoordinator::sendPacketReceivedFrom::__l2::<lambda_b5b734c663c77d1d84ead46a045879f1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkPacketEventCoordinator::sendPacketReceivedFrom::__l2::<lambda_b5b734c663c77d1d84ead46a045879f1>\n{\n  const PacketHeader *header;\n  const Packet *packet;\n};\n\n")])])]),e("h3",{attrs:{id:"noisebasedtemperatureattributes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#noisebasedtemperatureattributes"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoiseBasedTemperatureAttributes")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NoiseBasedTemperatureAttributes\n{\n  TemperatureCategory mTemperatureCategory;\n};\n\n")])])]),e("h3",{attrs:{id:"netherreactorblockactor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherreactorblockactor"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherReactorBlockActor")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NetherReactorBlockActor : BlockActor\n{\n  bool mIsInitialized;\n  bool mHasFinished;\n  __int16 mProgress;\n};\n\n")])])]),e("h3",{attrs:{id:"netherreactorblockactor-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherreactorblockactor-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherReactorBlockActor_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherReactorBlockActor_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n};\n\n")])])]),e("h3",{attrs:{id:"netherfungusblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfungusblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFungusBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherFungusBlock : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"netherfungusblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfungusblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFungusBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherFungusBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"netherrackblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherrackblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherrackBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherrackBlock : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"netherrackblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherrackblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherrackBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherrackBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"nyliumblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nyliumblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("NyliumBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NyliumBlock : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nyliumblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nyliumblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NyliumBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NyliumBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"netherreactorblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherreactorblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherReactorBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherReactorBlock : ActorBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"netherreactorblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherreactorblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherReactorBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherReactorBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),e("h3",{attrs:{id:"netherreactorpattern"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherreactorpattern"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherReactorPattern")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherReactorPattern\n{\n  const BlockLegacy *pattern[3][3][3];\n};\n\n")])])]),e("h3",{attrs:{id:"nethersprouts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nethersprouts"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherSprouts")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherSprouts : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nethersprouts-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nethersprouts-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherSprouts_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherSprouts_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"netherwartblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherwartblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherWartBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherWartBlock : BushBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"netherwartblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherwartblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherWartBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherWartBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);\n};\n\n")])])]),e("h3",{attrs:{id:"newleafblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newleafblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("NewLeafBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NewLeafBlock : LeafBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"newleafblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newleafblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NewLeafBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NewLeafBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getExtraResourceItem)(LeafBlock *this, ItemInstance *result, const Block *);\n};\n\n")])])]),e("h3",{attrs:{id:"newlogblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newlogblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("NewLogBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NewLogBlock : LogBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"newlogblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newlogblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NewLogBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NewLogBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"netherrackblock-onfertilized-l2-lambda-6d65dcf93f58a78a396e94a2bb3d8336"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherrackblock-onfertilized-l2-lambda-6d65dcf93f58a78a396e94a2bb3d8336"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherrackBlock::onFertilized::__l2::<lambda_6d65dcf93f58a78a396e94a2bb3d8336>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherrackBlock::onFertilized::__l2::<lambda_6d65dcf93f58a78a396e94a2bb3d8336>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"netherlayer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherlayer"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherLayer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherLayer : RootLayer<enum LayerValues::Terrain>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"netherlayer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherlayer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherLayer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherLayer_vtbl\n{\n  void (__fastcall *~LayerBase)(LayerDetails::LayerBase *this);\n  void (__fastcall *init)(LayerDetails::LayerBase *this, __int64);\n  LayerDetails::TransferData<enum LayerValues::Terrain> *(__fastcall *_allocateAndFill)(Layer<enum LayerValues::Terrain> *this, LayerDetails::TransferData<enum LayerValues::Terrain> *result, unsigned __int64, int, int, unsigned int, unsigned int);\n  void (__fastcall *_fillArea)(RootLayer<enum LayerValues::Terrain> *this, LayerDetails::WorkingData<enum LayerValues::Terrain,char> *, int, int, int, int);\n};\n\n")])])]),e("h3",{attrs:{id:"nulllogger-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nulllogger-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NullLogger_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NullLogger_vtbl\n{\n  void (__fastcall *~Logger)(leveldb::Logger *this);\n  void (__fastcall *Logv)(leveldb::Logger *this, const char *, char *);\n};\n\n")])])]),e("h3",{attrs:{id:"networkhookadapter-hostconnectionlost-l9-lambda-f0ec1d78c18f06441748962b30921005"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhookadapter-hostconnectionlost-l9-lambda-f0ec1d78c18f06441748962b30921005"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHookAdapter::hostConnectionLost::__l9::<lambda_f0ec1d78c18f06441748962b30921005>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkHookAdapter::hostConnectionLost::__l9::<lambda_f0ec1d78c18f06441748962b30921005>\n{\n  NetworkHookAdapter *const __this;\n  RakNet::RakNetGUID rakGuid;\n};\n\n")])])]),e("h3",{attrs:{id:"networkhookadapter-disconnect-l9-lambda-f87092517f3f9678454df5a1b6684d7f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhookadapter-disconnect-l9-lambda-f87092517f3f9678454df5a1b6684d7f"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHookAdapter::disconnect::__l9::<lambda_f87092517f3f9678454df5a1b6684d7f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkHookAdapter::disconnect::__l9::<lambda_f87092517f3f9678454df5a1b6684d7f>\n{\n  NetworkHookAdapter *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"networkhookadapter-disconnect-l9-lambda-f87092517f3f9678454df5a1b6684d7f-l2-lambda-dd670411e34a0c080be72d02f3a94087"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhookadapter-disconnect-l9-lambda-f87092517f3f9678454df5a1b6684d7f-l2-lambda-dd670411e34a0c080be72d02f3a94087"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHookAdapter::disconnect::__l9::<lambda_f87092517f3f9678454df5a1b6684d7f>::()::__l2::<lambda_dd670411e34a0c080be72d02f3a94087>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkHookAdapter::disconnect::__l9::<lambda_f87092517f3f9678454df5a1b6684d7f>::()::__l2::<lambda_dd670411e34a0c080be72d02f3a94087>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"namedpipeobject-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#namedpipeobject-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NamedPipeObject_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NamedPipeObject_vtbl\n{\n  void (__fastcall *~NamedPipeObject)(NamedPipeObject *this);\n};\n\n")])])]),e("h3",{attrs:{id:"nativesubentry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nativesubentry"}},[t._v("#")]),t._v(" "),e("code",[t._v("NativeSubEntry")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NativeSubEntry\n{\n  _object *code;\n  unsigned int callcount;\n  unsigned int recursivecallcount;\n  long double totaltime;\n  long double inlinetime;\n};\n\n")])])]),e("h3",{attrs:{id:"nativeentry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nativeentry"}},[t._v("#")]),t._v(" "),e("code",[t._v("NativeEntry")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NativeEntry\n{\n  _object *code;\n  unsigned int callcount;\n  unsigned int recursivecallcount;\n  long double totaltime;\n  long double inlinetime;\n  std::unordered_map<_object *,NativeSubEntry> calls;\n};\n\n")])])]),e("h3",{attrs:{id:"native-statscollector-t"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#native-statscollector-t"}},[t._v("#")]),t._v(" "),e("code",[t._v("native_statscollector_t")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj native_statscollector_t\n{\n  std::unordered_map<_object *,NativeEntry> entries;\n  std::unordered_map<_object *,NativeSubEntry> subEntries;\n  long double factor;\n};\n\n")])])]),e("h3",{attrs:{id:"netherlighttextureimagebuilder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherlighttextureimagebuilder"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherLightTextureImageBuilder")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherLightTextureImageBuilder : BaseLightTextureImageBuilder\n{\n  Brightness mBrightnessColorBoost[128];\n};\n\n")])])]),e("h3",{attrs:{id:"netherlighttextureimagebuilder-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherlighttextureimagebuilder-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherLightTextureImageBuilder_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherLightTextureImageBuilder_vtbl\n{\n  void (__fastcall *~BaseLightTextureImageBuilder)(BaseLightTextureImageBuilder *this);\n  void (__fastcall *init)(BaseLightTextureImageBuilder *this, Dimension *);\n  bool (__fastcall *buildImage)(BaseLightTextureImageBuilder *this, const BaseLightData *, mce::Image *, unsigned int, float, float, bool);\n  void (__fastcall *getModifiedBlockBrightnessColor)(BaseLightTextureImageBuilder *this, const BlockPos *, const Block *, const Brightness *, BrightnessPair *);\n  std::unique_ptr<BaseLightData> *(__fastcall *createBaseLightTextureData)(BaseLightTextureImageBuilder *this, std::unique_ptr<BaseLightData> *result, IClientInstance *, const BaseLightData *);\n};\n\n")])])]),e("h3",{attrs:{id:"napgoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#napgoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("NapGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NapGoal : Goal\n{\n  Mob *mMob;\n  Tick mCooldown;\n  Tick mDetectMobsTimer;\n  bool mInvalidCooldown;\n  const int mNapCooldownMin;\n  const int mNapCooldownMax;\n  const Vec3 mDetectRange;\n  ActorFilterGroup mCanNapFilters;\n  ActorFilterGroup mWakeMobExceptions;\n};\n\n")])])]),e("h3",{attrs:{id:"napgoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#napgoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NapGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NapGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),e("h3",{attrs:{id:"netherbrightnessramp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherbrightnessramp"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherBrightnessRamp")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherBrightnessRamp : DimensionBrightnessRamp\n{\n};\n\n")])])]),e("h3",{attrs:{id:"netherbrightnessramp-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherbrightnessramp-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherBrightnessRamp_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherBrightnessRamp_vtbl\n{\n  void (__fastcall *~DimensionBrightnessRamp)(DimensionBrightnessRamp *this);\n  void (__fastcall *buildBrightnessRamp)(DimensionBrightnessRamp *this);\n  float (__fastcall *getBaseAmbientValue)(DimensionBrightnessRamp *this);\n};\n\n")])])]),e("h3",{attrs:{id:"netherfortressstart"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfortressstart"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFortressStart")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherFortressStart : StructureStart\n{\n};\n\n")])])]),e("h3",{attrs:{id:"netherfortressstart-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfortressstart-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFortressStart_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherFortressStart_vtbl\n{\n  void (__fastcall *~StructureStart)(StructureStart *this);\n  bool (__fastcall *postProcess)(StructureStart *this, BlockSource *, Random *, const BoundingBox *);\n  bool (__fastcall *isValid)(StructureStart *this);\n  StructureFeatureType (__fastcall *getType)(StructureStart *this);\n};\n\n")])])]),e("h3",{attrs:{id:"netherdimension"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherdimension"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherDimension")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherDimension : Dimension\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nethergenerator-threaddata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nethergenerator-threaddata"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherGenerator::ThreadData")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherGenerator::ThreadData\n{\n  Random random;\n  std::array<Block const *,32768> blockBuffer;\n};\n\n")])])]),e("h3",{attrs:{id:"netherfortressfeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfortressfeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFortressFeature")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherFortressFeature : StructureFeature\n{\n  std::vector<int> mAllowedBiomes;\n};\n\n")])])]),e("h3",{attrs:{id:"netherfortressfeature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfortressfeature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFortressFeature_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherFortressFeature_vtbl\n{\n  void (__fastcall *~StructureFeature)(StructureFeature *this);\n  bool (__fastcall *postProcess)(StructureFeature *this, BlockSource *, Random *, int, int);\n  bool (__fastcall *getNearestGeneratedFeature)(StructureFeature *this, Dimension *, BiomeSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *isFeatureChunk)(StructureFeature *this, const BiomeSource *, Random *, const ChunkPos *, unsigned int);\n  std::unique_ptr<StructureStart> *(__fastcall *createStructureStart)(StructureFeature *this, std::unique_ptr<StructureStart> *result, Dimension *, BiomeSource *, Random *, const ChunkPos *);\n  StructureStart *(__fastcall *getStructureAt)(StructureFeature *this, int, int, int);\n  std::vector<BlockPos> *(__fastcall *getGuesstimatedFeaturePositions)(StructureFeature *this, std::vector<BlockPos> *result);\n};\n\n")])])]),e("h3",{attrs:{id:"nethergenerator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nethergenerator"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherGenerator")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherGenerator : ChunkSource, WorldGenerator\n{\n  std::unique_ptr<PerlinNoise> lperlinNoise1;\n  std::unique_ptr<PerlinNoise> lperlinNoise2;\n  std::unique_ptr<PerlinNoise> perlinNoise1;\n  std::unique_ptr<PerlinNoise> perlinNoise2;\n  std::unique_ptr<PerlinNoise> scaleNoise;\n  std::unique_ptr<PerlinNoise> depthNoise;\n  std::unique_ptr<PerlinSimplexNoise> surfaceNoise;\n  std::unique_ptr<PerlinSimplexNoise> mMaterialAdjNoise;\n  Bedrock::Threading::InstancedThreadLocal<NetherGenerator::ThreadData,std::allocator<NetherGenerator::ThreadData> > generatorHelpersPool;\n  NetherFortressFeature netherFortressFeature;\n  RuinedPortalFeature ruinedPortalFeature;\n  BastionFeature bastionFeature;\n  LargeHellCaveFeature hellCaveFeature;\n  std::shared_ptr<Layer<Biome *> const > mBlockResolutionLayer;\n  std::shared_ptr<Layer<Biome *> const > m4x4ResolutionLayer;\n  std::shared_mutex mTryGetHeightMutex;\n  std::unordered_map<BlockPos,int> mHeightCache;\n};\n\n")])])]),e("h3",{attrs:{id:"nethergenerator-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nethergenerator-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherGenerator_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherGenerator_vtbl\n{\n  void (__fastcall *~ChunkSource)(ChunkSource *this);\n  void (__fastcall *shutdown)(ChunkSource *this);\n  bool (__fastcall *isShutdownDone)(ChunkSource *this);\n  std::shared_ptr<LevelChunk> *(__fastcall *getExistingChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, const ChunkPos *);\n  std::shared_ptr<LevelChunk> *(__fastcall *getRandomChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, Random *);\n  std::shared_ptr<LevelChunk> *(__fastcall *createNewChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, const ChunkPos *, ChunkSource::LoadMode);\n  std::shared_ptr<LevelChunk> *(__fastcall *getOrLoadChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, const ChunkPos *, ChunkSource::LoadMode);\n  bool (__fastcall *postProcess)(ChunkSource *this, ChunkViewSource *);\n  void (__fastcall *checkAndReplaceChunk)(ChunkSource *this, ChunkViewSource *, LevelChunk *);\n  void (__fastcall *loadChunk)(ChunkSource *this, LevelChunk *, bool);\n  void (__fastcall *postProcessMobsAt)(ChunkSource *this, BlockSource *, int, int, Random *);\n  bool (__fastcall *saveLiveChunk)(ChunkSource *this, LevelChunk *);\n  void (__fastcall *hintDiscardBatchBegin)(ChunkSource *this);\n  void (__fastcall *hintDiscardBatchEnd)(ChunkSource *this);\n  void (__fastcall *acquireDiscarded)(ChunkSource *this, std::unique_ptr<LevelChunk,LevelChunkFinalDeleter>);\n  void (__fastcall *compact)(ChunkSource *this);\n  void (__fastcall *flushPendingWrites)(ChunkSource *this);\n  bool (__fastcall *isWithinWorldLimit)(ChunkSource *this, const ChunkPos *);\n  const std::unordered_map<ChunkPos,std::weak_ptr<LevelChunk>> *(__fastcall *getChunkMap)(ChunkSource *this);\n  const std::unordered_map<ChunkPos,std::weak_ptr<LevelChunk>> *(__fastcall *getStorage)(ChunkSource *this);\n  void (__fastcall *clearDeletedEntities)(ChunkSource *this);\n  void (__fastcall *removeDimensionData)(ChunkSource *this, const std::unordered_set<AutomaticID<Dimension,int>> *);\n  bool (__fastcall *hasChunk)(ChunkSource *this, const ChunkPos *, AutomaticID<Dimension,int>);\n  bool (__fastcall *canCreateViews)(ChunkSource *this);\n};\n\n")])])]),e("h3",{attrs:{id:"netherfossilfeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfossilfeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFossilFeature")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NetherFossilFeature : Feature\n{\n  std::vector<Block const *> mValidGroundBlocks;\n  bool mMayPlaceInLava;\n};\n\n")])])]),e("h3",{attrs:{id:"netherfossilfeature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfossilfeature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFossilFeature_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherFossilFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n  bool (__fastcall *place)(Feature *this, BlockSource *, const BlockPos *, Random *);\n};\n\n")])])]),e("h3",{attrs:{id:"nosurfaceorefeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nosurfaceorefeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoSurfaceOreFeature")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NoSurfaceOreFeature : IFeature\n{\n  IntRange mCount;\n  BlockDescriptor mPlaceBlock;\n  BlockDescriptor mReplaceBlock;\n  BlockDescriptor mAvoidsBlock;\n};\n\n")])])]),e("h3",{attrs:{id:"nosurfaceorefeature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nosurfaceorefeature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoSurfaceOreFeature_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NoSurfaceOreFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n};\n\n")])])]),e("h3",{attrs:{id:"netherfortresspiece-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfortresspiece-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFortressPiece_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherFortressPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbbridgecrossing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbbridgecrossing"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBBridgeCrossing")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NBBridgeCrossing : NetherFortressPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nbbridgecrossing-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbbridgecrossing-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBBridgeCrossing_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBBridgeCrossing_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbstartpiece"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbstartpiece"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBStartPiece")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NBStartPiece : NBBridgeCrossing\n{\n  std::string previousPiece;\n  std::vector<PieceWeight> availableBridgePieces;\n  std::vector<PieceWeight> availableCastlePieces;\n  std::vector<StructurePiece *> pendingChildren;\n};\n\n")])])]),e("h3",{attrs:{id:"nbstartpiece-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbstartpiece-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBStartPiece_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBStartPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbbridgestraight"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbbridgestraight"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBBridgeStraight")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NBBridgeStraight : NetherFortressPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nbbridgestraight-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbbridgestraight-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBBridgeStraight_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBBridgeStraight_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbbridgeendfiller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbbridgeendfiller"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBBridgeEndFiller")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NBBridgeEndFiller : NetherFortressPiece\n{\n  int selfSeed;\n};\n\n")])])]),e("h3",{attrs:{id:"nbbridgeendfiller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbbridgeendfiller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBBridgeEndFiller_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBBridgeEndFiller_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbroomcrossing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbroomcrossing"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBRoomCrossing")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NBRoomCrossing : NetherFortressPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nbroomcrossing-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbroomcrossing-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBRoomCrossing_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBRoomCrossing_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbstairsroom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbstairsroom"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBStairsRoom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NBStairsRoom : NetherFortressPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nbstairsroom-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbstairsroom-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBStairsRoom_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBStairsRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbmonsterthrone"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbmonsterthrone"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBMonsterThrone")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NBMonsterThrone : NetherFortressPiece\n{\n  bool hasPlacedMobSpawner;\n};\n\n")])])]),e("h3",{attrs:{id:"nbmonsterthrone-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbmonsterthrone-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBMonsterThrone_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBMonsterThrone_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastleentrance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastleentrance"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleEntrance")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NBCastleEntrance : NetherFortressPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastleentrance-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastleentrance-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleEntrance_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBCastleEntrance_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlestalkroom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlestalkroom"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleStalkRoom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NBCastleStalkRoom : NetherFortressPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlestalkroom-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlestalkroom-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleStalkRoom_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBCastleStalkRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlesmallcorridorpiece"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlesmallcorridorpiece"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleSmallCorridorPiece")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NBCastleSmallCorridorPiece : NetherFortressPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlesmallcorridorpiece-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlesmallcorridorpiece-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleSmallCorridorPiece_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBCastleSmallCorridorPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlesmallcorridorcrossingpiece"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlesmallcorridorcrossingpiece"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleSmallCorridorCrossingPiece")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NBCastleSmallCorridorCrossingPiece : NetherFortressPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlesmallcorridorcrossingpiece-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlesmallcorridorcrossingpiece-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleSmallCorridorCrossingPiece_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBCastleSmallCorridorCrossingPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlesmallcorridorrightturnpiece"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlesmallcorridorrightturnpiece"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleSmallCorridorRightTurnPiece")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NBCastleSmallCorridorRightTurnPiece : NetherFortressPiece\n{\n  bool isNeedingChest;\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlesmallcorridorrightturnpiece-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlesmallcorridorrightturnpiece-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleSmallCorridorRightTurnPiece_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBCastleSmallCorridorRightTurnPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlesmallcorridorleftturnpiece"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlesmallcorridorleftturnpiece"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleSmallCorridorLeftTurnPiece")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) NBCastleSmallCorridorLeftTurnPiece : NetherFortressPiece\n{\n  bool isNeedingChest;\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlesmallcorridorleftturnpiece-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlesmallcorridorleftturnpiece-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleSmallCorridorLeftTurnPiece_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBCastleSmallCorridorLeftTurnPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlecorridorstairspiece"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlecorridorstairspiece"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleCorridorStairsPiece")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NBCastleCorridorStairsPiece : NetherFortressPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlecorridorstairspiece-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlecorridorstairspiece-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleCorridorStairsPiece_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBCastleCorridorStairsPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlecorridortbalconypiece"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlecorridortbalconypiece"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleCorridorTBalconyPiece")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NBCastleCorridorTBalconyPiece : NetherFortressPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"nbcastlecorridortbalconypiece-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nbcastlecorridortbalconypiece-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NBCastleCorridorTBalconyPiece_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NBCastleCorridorTBalconyPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"nldecoder-object"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nldecoder-object"}},[t._v("#")]),t._v(" "),e("code",[t._v("nldecoder_object")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __declspec(align(8)) nldecoder_object\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  _object *decoder;\n  _object *errors;\n  __int32 pendingcr : 1;\n  __int32 translate : 1;\n  unsigned __int32 seennl : 3;\n};\n\n")])])]),e("h3",{attrs:{id:"nullimporter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nullimporter"}},[t._v("#")]),t._v(" "),e("code",[t._v("NullImporter")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NullImporter\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n};\n\n")])])]),e("h3",{attrs:{id:"nrmutex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nrmutex"}},[t._v("#")]),t._v(" "),e("code",[t._v("NRMUTEX")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NRMUTEX\n{\n  int owned;\n  unsigned int thread_id;\n  void *hevent;\n};\n\n")])])]),e("h3",{attrs:{id:"nvsdk-ngx-pathlistinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-pathlistinfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_PathListInfo")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __declspec(align(8)) NVSDK_NGX_PathListInfo\n{\n  wchar_t **Path;\n  unsigned int Length;\n};\n\n")])])]),e("h3",{attrs:{id:"nvsdk-ngx-featurecommoninfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-featurecommoninfo"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_FeatureCommonInfo")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NVSDK_NGX_FeatureCommonInfo\n{\n  NVSDK_NGX_PathListInfo PathListInfo;\n  NVSDK_NGX_FeatureCommonInfo_Internal *InternalData;\n};\n\n")])])]),e("h3",{attrs:{id:"nvsdk-ngx-parameter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-parameter"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_Parameter")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NVSDK_NGX_Parameter\n{\n  NVSDK_NGX_Parameter_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"nvsdk-ngx-parameter-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-parameter-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_Parameter_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NVSDK_NGX_Parameter_vtbl\n{\n  void (__fastcall *Set)(NVSDK_NGX_Parameter *this, const char *, void *);\n  void (__fastcall *Set)(NVSDK_NGX_Parameter *this, const char *, ID3D12Resource *);\n  void (__fastcall *Set)(NVSDK_NGX_Parameter *this, const char *, ID3D11Resource *);\n  void (__fastcall *Set)(NVSDK_NGX_Parameter *this, const char *, int);\n  void (__fastcall *Set)(NVSDK_NGX_Parameter *this, const char *, unsigned int);\n  void (__fastcall *Set)(NVSDK_NGX_Parameter *this, const char *, long double);\n  void (__fastcall *Set)(NVSDK_NGX_Parameter *this, const char *, float);\n  void (__fastcall *Set)(NVSDK_NGX_Parameter *this, const char *, unsigned __int64);\n  NVSDK_NGX_Result (__fastcall *Get)(NVSDK_NGX_Parameter *this, const char *, void **);\n  NVSDK_NGX_Result (__fastcall *Get)(NVSDK_NGX_Parameter *this, const char *, ID3D12Resource **);\n  NVSDK_NGX_Result (__fastcall *Get)(NVSDK_NGX_Parameter *this, const char *, ID3D11Resource **);\n  NVSDK_NGX_Result (__fastcall *Get)(NVSDK_NGX_Parameter *this, const char *, int *);\n  NVSDK_NGX_Result (__fastcall *Get)(NVSDK_NGX_Parameter *this, const char *, unsigned int *);\n  NVSDK_NGX_Result (__fastcall *Get)(NVSDK_NGX_Parameter *this, const char *, long double *);\n  NVSDK_NGX_Result (__fastcall *Get)(NVSDK_NGX_Parameter *this, const char *, float *);\n  NVSDK_NGX_Result (__fastcall *Get)(NVSDK_NGX_Parameter *this, const char *, unsigned __int64 *);\n  void (__fastcall *Reset)(NVSDK_NGX_Parameter *this);\n};\n\n")])])]),e("h3",{attrs:{id:"nvsdk-ngx-handle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-handle"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_Handle")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NVSDK_NGX_Handle\n{\n  unsigned int Id;\n};\n\n")])])]),e("h3",{attrs:{id:"ngxloader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ngxloader"}},[t._v("#")]),t._v(" "),e("code",[t._v("NgxLoader")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NgxLoader\n{\n  void *m_dllHandle;\n  std::tuple<std::pair<enum NVSDK_NGX_Result (__cdecl*)(unsigned __int64,wchar_t const *,ID3D12Device *,NVSDK_NGX_FeatureCommonInfo const *,enum NVSDK_NGX_Version),char const *>,std::pair<enum NVSDK_NGX_Result (__cdecl*)(void),char const *>,std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Parameter * *),char const *>,std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,enum NVSDK_NGX_Feature,NVSDK_NGX_Parameter const *,NVSDK_NGX_Handle * *),char const *>,std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,NVSDK_NGX_Handle const *,NVSDK_NGX_Parameter const *,void (__cdecl*)(float,bool &)),char const *>,std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Handle *),char const *> > m_functions;\n};\n\n")])])]),e("h3",{attrs:{id:"nvsdk-ngx-d3d11-feature-eval-params"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-d3d11-feature-eval-params"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_D3D11_Feature_Eval_Params")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __declspec(align(8)) NVSDK_NGX_D3D11_Feature_Eval_Params\n{\n  ID3D11Resource *pInColor;\n  ID3D11Resource *pInOutput;\n  float InSharpness;\n};\n\n")])])]),e("h3",{attrs:{id:"nvsdk-ngx-d3d11-dlisp-eval-params"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-d3d11-dlisp-eval-params"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_D3D11_DLISP_Eval_Params")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __declspec(align(8)) NVSDK_NGX_D3D11_DLISP_Eval_Params\n{\n  NVSDK_NGX_D3D11_Feature_Eval_Params Feature;\n  unsigned int InRectX;\n  unsigned int InRectY;\n  unsigned int InRectW;\n  unsigned int InRectH;\n  float InDenoise;\n};\n\n")])])]),e("h3",{attrs:{id:"nvsdk-ngx-d3d11-gbuffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-d3d11-gbuffer"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_D3D11_GBuffer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NVSDK_NGX_D3D11_GBuffer\n{\n  ID3D11Resource *pInAttrib[16];\n};\n\n")])])]),e("h3",{attrs:{id:"nvsdk-ngx-d3d11-dlss-eval-params"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-d3d11-dlss-eval-params"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_D3D11_DLSS_Eval_Params")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct NVSDK_NGX_D3D11_DLSS_Eval_Params\n{\n  NVSDK_NGX_D3D11_Feature_Eval_Params Feature;\n  ID3D11Resource *pInDepth;\n  ID3D11Resource *pInMotionVectors;\n  float InJitterOffsetX;\n  float InJitterOffsetY;\n  NVSDK_NGX_Dimensions InRenderSubrectDimensions;\n  int InReset;\n  float InMVScaleX;\n  float InMVScaleY;\n  ID3D11Resource *pInTransparencyMask;\n  ID3D11Resource *pInExposureTexture;\n  ID3D11Resource *pInReduceGhostMask;\n  NVSDK_NGX_Coordinates InColorSubrectBase;\n  NVSDK_NGX_Coordinates InDepthSubrectBase;\n  NVSDK_NGX_Coordinates InMVSubrectBase;\n  NVSDK_NGX_Coordinates InTranslucencySubrectBase;\n  NVSDK_NGX_Coordinates InReduceGhostSubrectBase;\n  NVSDK_NGX_Coordinates InOutputSubrectBase;\n  float InPreExposure;\n  int InIndicatorInvertXAxis;\n  int InIndicatorInvertYAxis;\n  NVSDK_NGX_D3D11_GBuffer GBufferSurface;\n  NVSDK_NGX_ToneMapperType InToneMapperType;\n  ID3D11Resource *pInMotionVectors3D;\n  ID3D11Resource *pInIsParticleMask;\n  ID3D11Resource *pInAnimatedTextureMask;\n  ID3D11Resource *pInDepthHighRes;\n  ID3D11Resource *pInPositionViewSpace;\n  float InFrameTimeDeltaInMsec;\n  ID3D11Resource *pInRayTracingHitDistance;\n  ID3D11Resource *pInMotionVectorsReflections;\n};\n\n")])])]),e("h3",{attrs:{id:"nvsdk-ngx-d3d12-dlisp-eval-params"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nvsdk-ngx-d3d12-dlisp-eval-params"}},[t._v("#")]),t._v(" "),e("code",[t._v("NVSDK_NGX_D3D12_DLISP_Eval_Params")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __declspec(align(8)) NVSDK_NGX_D3D12_DLISP_Eval_Params\n{\n  NVSDK_NGX_D3D12_Feature_Eval_Params Feature;\n  unsigned int InRectX;\n  unsigned int InRectY;\n  unsigned int InRectW;\n  unsigned int InRectH;\n  float InDenoise;\n};\n\n")])])]),e("h3",{attrs:{id:"npcinteractscreencontroller-performaction-l8-lambda-91d1e6691d6d39f56b307163e6dbf920"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npcinteractscreencontroller-performaction-l8-lambda-91d1e6691d6d39f56b307163e6dbf920"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcInteractScreenController::_performAction::__l8::<lambda_91d1e6691d6d39f56b307163e6dbf920>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcInteractScreenController::_performAction::__l8::<lambda_91d1e6691d6d39f56b307163e6dbf920>\n{\n  NpcAction *action;\n};\n\n")])])]),e("h3",{attrs:{id:"npccomponent-getbuttoncounts-l12-lambda-e2d1cdb6cb681ef1beb194f64005002a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npccomponent-getbuttoncounts-l12-lambda-e2d1cdb6cb681ef1beb194f64005002a"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcComponent::getButtonCounts::__l12::<lambda_e2d1cdb6cb681ef1beb194f64005002a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcComponent::getButtonCounts::__l12::<lambda_e2d1cdb6cb681ef1beb194f64005002a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"npccomponent-geturlcount-l2-lambda-3eb1d5c3281d617e75c2642d583a26a7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npccomponent-geturlcount-l2-lambda-3eb1d5c3281d617e75c2642d583a26a7"}},[t._v("#")]),t._v(" "),e("code",[t._v("NpcComponent::getUrlCount::__l2::<lambda_3eb1d5c3281d617e75c2642d583a26a7>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NpcComponent::getUrlCount::__l2::<lambda_3eb1d5c3281d617e75c2642d583a26a7>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"networkhandler-onconnectionclosed-l2-lambda-9480810ae157ee4bfb675726738eebc8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhandler-onconnectionclosed-l2-lambda-9480810ae157ee4bfb675726738eebc8"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHandler::onConnectionClosed::__l2::<lambda_9480810ae157ee4bfb675726738eebc8>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkHandler::onConnectionClosed::__l2::<lambda_9480810ae157ee4bfb675726738eebc8>\n{\n  const NetworkIdentifier *id;\n};\n\n")])])]),e("h3",{attrs:{id:"networkhandler-runevents-l2-lambda-548e329923228af3a9c05419563beac9-l20-lambda-adf0c3bb7090e3c81bf11e92a1890232"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#networkhandler-runevents-l2-lambda-548e329923228af3a9c05419563beac9-l20-lambda-adf0c3bb7090e3c81bf11e92a1890232"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetworkHandler::runEvents::__l2::<lambda_548e329923228af3a9c05419563beac9>::()::__l20::<lambda_adf0c3bb7090e3c81bf11e92a1890232>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetworkHandler::runEvents::__l2::<lambda_548e329923228af3a9c05419563beac9>::()::__l20::<lambda_adf0c3bb7090e3c81bf11e92a1890232>\n{\n  const NetworkHandler::runEvents::__l2::<lambda_548e329923228af3a9c05419563beac9>::()::__l2::KillListData id;\n};\n\n")])])]),e("h3",{attrs:{id:"noteblock-triggerevent-l2-lambda-0100b5e5d44339fc9040c38336001c41-l2-literal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#noteblock-triggerevent-l2-lambda-0100b5e5d44339fc9040c38336001c41-l2-literal"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoteBlock::triggerEvent::__l2::<lambda_0100b5e5d44339fc9040c38336001c41>::()::__l2::Literal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NoteBlock::triggerEvent::__l2::<lambda_0100b5e5d44339fc9040c38336001c41>::()::__l2::Literal\n{\n};\n\n")])])]),e("h3",{attrs:{id:"noteblock-triggerevent-l2-lambda-0100b5e5d44339fc9040c38336001c41"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#noteblock-triggerevent-l2-lambda-0100b5e5d44339fc9040c38336001c41"}},[t._v("#")]),t._v(" "),e("code",[t._v("NoteBlock::triggerEvent::__l2::<lambda_0100b5e5d44339fc9040c38336001c41>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NoteBlock::triggerEvent::__l2::<lambda_0100b5e5d44339fc9040c38336001c41>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"notifymanager-tickupdate-l10-lambda-ea8507050d0b423e358e089c69f28097"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notifymanager-tickupdate-l10-lambda-ea8507050d0b423e358e089c69f28097"}},[t._v("#")]),t._v(" "),e("code",[t._v("NotifyManager::tickUpdate::__l10::<lambda_ea8507050d0b423e358e089c69f28097>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NotifyManager::tickUpdate::__l10::<lambda_ea8507050d0b423e358e089c69f28097>\n{\n  std::_List_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<NotifyHandler> > > > remove;\n};\n\n")])])]),e("h3",{attrs:{id:"netherdimension-creategenerator-l2-lambda-817f6734b6547373310e517d46e852ba"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherdimension-creategenerator-l2-lambda-817f6734b6547373310e517d46e852ba"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherDimension::createGenerator::__l2::<lambda_817f6734b6547373310e517d46e852ba>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherDimension::createGenerator::__l2::<lambda_817f6734b6547373310e517d46e852ba>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"netherfossilfeature-place-l4-lambda-43d78cc1a17d10de4f962512a76c319f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfossilfeature-place-l4-lambda-43d78cc1a17d10de4f962512a76c319f"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFossilFeature::place::__l4::<lambda_43d78cc1a17d10de4f962512a76c319f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherFossilFeature::place::__l4::<lambda_43d78cc1a17d10de4f962512a76c319f>\n{\n  BlockSource *region;\n  const NetherFossilFeature *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"netherfossilfeature-place-l7-lambda-aba1b6b3f46ea98c9b5b4643fde7d896"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfossilfeature-place-l7-lambda-aba1b6b3f46ea98c9b5b4643fde7d896"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFossilFeature::place::__l7::<lambda_aba1b6b3f46ea98c9b5b4643fde7d896>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherFossilFeature::place::__l7::<lambda_aba1b6b3f46ea98c9b5b4643fde7d896>\n{\n  BlockSource *region;\n};\n\n")])])]),e("h3",{attrs:{id:"netherfossilfeature-place-l4-lambda-e02907b64d2b8692df4ffa8e49654add"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherfossilfeature-place-l4-lambda-e02907b64d2b8692df4ffa8e49654add"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherFossilFeature::place::__l4::<lambda_e02907b64d2b8692df4ffa8e49654add>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NetherFossilFeature::place::__l4::<lambda_e02907b64d2b8692df4ffa8e49654add>\n{\n  int testY;\n};\n\n")])])]),e("h3",{attrs:{id:"ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf"}},[t._v("#")]),t._v(" "),e("code",[t._v("NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>\n{\n  NgxLoader *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf-l2-lambda-cae84393e093c2b9dfe8d29a926b8480"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf-l2-lambda-cae84393e093c2b9dfe8d29a926b8480"}},[t._v("#")]),t._v(" "),e("code",[t._v("NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>::()::__l2::<lambda_cae84393e093c2b9dfe8d29a926b8480>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>::()::__l2::<lambda_cae84393e093c2b9dfe8d29a926b8480>\n{\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(unsigned __int64,wchar_t const *,ID3D12Device *,NVSDK_NGX_FeatureCommonInfo const *,enum NVSDK_NGX_Version),char const *> *<func_0>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(void),char const *> *<func_1>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Parameter * *),char const *> *<func_2>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,enum NVSDK_NGX_Feature,NVSDK_NGX_Parameter const *,NVSDK_NGX_Handle * *),char const *> *<func_3>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,NVSDK_NGX_Handle const *,NVSDK_NGX_Parameter const *,void (__cdecl*)(float,bool &)),char const *> *<func_4>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Handle *),char const *> *<func_5>;\n  NgxLoader *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf-l2-lambda-1ea729a85be84ceda97c81a80935f84b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf-l2-lambda-1ea729a85be84ceda97c81a80935f84b"}},[t._v("#")]),t._v(" "),e("code",[t._v("NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>::()::__l2::<lambda_1ea729a85be84ceda97c81a80935f84b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>::()::__l2::<lambda_1ea729a85be84ceda97c81a80935f84b>\n{\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(unsigned __int64,wchar_t const *,ID3D12Device *,NVSDK_NGX_FeatureCommonInfo const *,enum NVSDK_NGX_Version),char const *> *<func_0>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(void),char const *> *<func_1>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Parameter * *),char const *> *<func_2>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,enum NVSDK_NGX_Feature,NVSDK_NGX_Parameter const *,NVSDK_NGX_Handle * *),char const *> *<func_3>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,NVSDK_NGX_Handle const *,NVSDK_NGX_Parameter const *,void (__cdecl*)(float,bool &)),char const *> *<func_4>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Handle *),char const *> *<func_5>;\n  NgxLoader *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf-l2-lambda-a4cb10909c7a811092c5e99775a11fc5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf-l2-lambda-a4cb10909c7a811092c5e99775a11fc5"}},[t._v("#")]),t._v(" "),e("code",[t._v("NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>::()::__l2::<lambda_a4cb10909c7a811092c5e99775a11fc5>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>::()::__l2::<lambda_a4cb10909c7a811092c5e99775a11fc5>\n{\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(unsigned __int64,wchar_t const *,ID3D12Device *,NVSDK_NGX_FeatureCommonInfo const *,enum NVSDK_NGX_Version),char const *> *<func_0>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(void),char const *> *<func_1>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Parameter * *),char const *> *<func_2>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,enum NVSDK_NGX_Feature,NVSDK_NGX_Parameter const *,NVSDK_NGX_Handle * *),char const *> *<func_3>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,NVSDK_NGX_Handle const *,NVSDK_NGX_Parameter const *,void (__cdecl*)(float,bool &)),char const *> *<func_4>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Handle *),char const *> *<func_5>;\n  NgxLoader *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf-l2-lambda-ee70469736aa2a6cf0e46653f4c99ecb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf-l2-lambda-ee70469736aa2a6cf0e46653f4c99ecb"}},[t._v("#")]),t._v(" "),e("code",[t._v("NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>::()::__l2::<lambda_ee70469736aa2a6cf0e46653f4c99ecb>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>::()::__l2::<lambda_ee70469736aa2a6cf0e46653f4c99ecb>\n{\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(unsigned __int64,wchar_t const *,ID3D12Device *,NVSDK_NGX_FeatureCommonInfo const *,enum NVSDK_NGX_Version),char const *> *<func_0>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(void),char const *> *<func_1>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Parameter * *),char const *> *<func_2>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,enum NVSDK_NGX_Feature,NVSDK_NGX_Parameter const *,NVSDK_NGX_Handle * *),char const *> *<func_3>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,NVSDK_NGX_Handle const *,NVSDK_NGX_Parameter const *,void (__cdecl*)(float,bool &)),char const *> *<func_4>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Handle *),char const *> *<func_5>;\n  NgxLoader *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf-l2-lambda-b6a3e25a28cc8b2ccd554b218ad28d32"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf-l2-lambda-b6a3e25a28cc8b2ccd554b218ad28d32"}},[t._v("#")]),t._v(" "),e("code",[t._v("NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>::()::__l2::<lambda_b6a3e25a28cc8b2ccd554b218ad28d32>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>::()::__l2::<lambda_b6a3e25a28cc8b2ccd554b218ad28d32>\n{\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(unsigned __int64,wchar_t const *,ID3D12Device *,NVSDK_NGX_FeatureCommonInfo const *,enum NVSDK_NGX_Version),char const *> *<func_0>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(void),char const *> *<func_1>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Parameter * *),char const *> *<func_2>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,enum NVSDK_NGX_Feature,NVSDK_NGX_Parameter const *,NVSDK_NGX_Handle * *),char const *> *<func_3>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,NVSDK_NGX_Handle const *,NVSDK_NGX_Parameter const *,void (__cdecl*)(float,bool &)),char const *> *<func_4>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Handle *),char const *> *<func_5>;\n  NgxLoader *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf-l2-lambda-47d447b34610e4b746cb6093934dffae"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ngxloader-ctor-l5-lambda-b6b08d8b75b7d65c3da867be38e76baf-l2-lambda-47d447b34610e4b746cb6093934dffae"}},[t._v("#")]),t._v(" "),e("code",[t._v("NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>::()::__l2::<lambda_47d447b34610e4b746cb6093934dffae>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj NgxLoader::{ctor}::__l5::<lambda_b6b08d8b75b7d65c3da867be38e76baf>::()::__l2::<lambda_47d447b34610e4b746cb6093934dffae>\n{\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(unsigned __int64,wchar_t const *,ID3D12Device *,NVSDK_NGX_FeatureCommonInfo const *,enum NVSDK_NGX_Version),char const *> *<func_0>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(void),char const *> *<func_1>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Parameter * *),char const *> *<func_2>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,enum NVSDK_NGX_Feature,NVSDK_NGX_Parameter const *,NVSDK_NGX_Handle * *),char const *> *<func_3>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(ID3D12GraphicsCommandList *,NVSDK_NGX_Handle const *,NVSDK_NGX_Parameter const *,void (__cdecl*)(float,bool &)),char const *> *<func_4>;\n  std::pair<enum NVSDK_NGX_Result (__cdecl*)(NVSDK_NGX_Handle *),char const *> *<func_5>;\n  NgxLoader *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"npc-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#npc-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Npc_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Npc_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n};\n\n")])])]),e("h3",{attrs:{id:"netherdimension-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#netherdimension-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("NetherDimension_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ NetherDimension_vtbl\n{\n  void (__fastcall *~BlockSourceListener)(BlockSourceListener *this);\n  void (__fastcall *onSourceCreated)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onSourceDestroyed)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onAreaChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, const BlockPos *);\n  void (__fastcall *onBlockChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, unsigned int, const Block *, const Block *, int, const ActorBlockSyncMessage *);\n  void (__fastcall *onBrightnessChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onBlockEntityChanged)(BlockSourceListener *this, BlockSource *, BlockActor *);\n  void (__fastcall *onBlockEntityAboutToBeRemoved)(BlockSourceListener *this, BlockSource *, std::shared_ptr<BlockActor>);\n  void (__fastcall *onEntityChanged)(BlockSourceListener *this, BlockSource *, Actor *);\n  void (__fastcall *onBlockEvent)(BlockSourceListener *this, BlockSource *, int, int, int, int, int);\n  void (__fastcall *allChanged)(LevelListener *this);\n  Particle *(__fastcall *addParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int, const CompoundTag *, bool);\n  void (__fastcall *sendServerLegacyParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int);\n  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Actor *, const HashedString *, const Vec3 *, const MolangVariableMap *);\n  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Vec3 *, const MolangVariableMap *);\n  void (__fastcall *addTerrainParticleEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);\n  void (__fastcall *addTerrainSlideEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);\n  void (__fastcall *addBreakingItemParticleEffect)(LevelListener *this, const Vec3 *, ParticleType, const TextureUVCoordinateSet *, bool);\n  void (__fastcall *playMusic)(LevelListener *this, const std::string *, const Vec3 *, float, float);\n  void (__fastcall *playStreamingMusic)(LevelListener *this, const std::string *, int, int, int);\n  void (__fastcall *onEntityAdded)(LevelListener *this, Actor *);\n  void (__fastcall *onEntityRemoved)(LevelListener *this, Actor *);\n  void (__fastcall *onChunkLoaded)(LevelListener *this, ChunkSource *, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(LevelListener *this, LevelChunk *);\n  void (__fastcall *onLevelDestruction)(LevelListener *this, const std::string *);\n  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const CompoundTag *);\n  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const Vec3 *, int);\n  void (__fastcall *levelSoundEvent)(LevelListener *this, const std::string *, const Vec3 *, float, float);\n  void (__fastcall *levelSoundEvent)(LevelListener *this, LevelSoundEvent, const Vec3 *, int, const ActorDefinitionIdentifier *, bool, bool);\n  void (__fastcall *stopSoundEvent)(LevelListener *this, const std::string *);\n  void (__fastcall *stopAllSounds)(LevelListener *this);\n  void (__fastcall *takePicture)(LevelListener *this, cg::ImageBuffer *, Actor *, Actor *, ScreenshotOptions *);\n  void (__fastcall *playerListChanged)(LevelListener *this);\n  void (__fastcall *init)(Dimension *this);\n  void (__fastcall *tick)(Dimension *this);\n  void (__fastcall *tickRedstone)(Dimension *this);\n  std::tuple<std::unique_ptr<ChunkSource>,WorldGenerator *> *(__fastcall *createGenerator)(Dimension *this, std::tuple<std::unique_ptr<ChunkSource>,WorldGenerator *> *result);\n  void (__fastcall *upgradeLevelChunk)(Dimension *this, ChunkSource *, LevelChunk *);\n  void (__fastcall *fixWallChunk)(Dimension *this, ChunkSource *, LevelChunk *);\n  bool (__fastcall *isNaturalDimension)(Dimension *this);\n  bool (__fastcall *isValidSpawn)(Dimension *this, int, int);\n  mce::Color *(__fastcall *getBrightnessDependentFogColor)(Dimension *this, mce::Color *result, const mce::Color *, float);\n  float (__fastcall *getMaxFogEnd)(Dimension *this);\n  float (__fastcall *getMaxFogStart)(Dimension *this);\n  bool (__fastcall *isFoggyAt)(Dimension *this, int, int);\n  __int16 (__fastcall *getCloudHeight)(Dimension *this);\n  int (__fastcall *getDefaultBiome)(Dimension *this);\n  bool (__fastcall *mayRespawnViaBed)(Dimension *this);\n  bool (__fastcall *hasGround)(Dimension *this);\n  BlockPos *(__fastcall *getSpawnPos)(Dimension *this, BlockPos *result);\n  int (__fastcall *getSpawnYPosition)(Dimension *this);\n  bool (__fastcall *hasBedrockFog)(Dimension *this);\n  float (__fastcall *getClearColorScale)(Dimension *this);\n  bool (__fastcall *showSky)(Dimension *this);\n  bool (__fastcall *isDay)(Dimension *this);\n  float (__fastcall *getTimeOfDay)(Dimension *this, int, float);\n  float (__fastcall *getSunIntensity)(Dimension *this, float, const Vec3 *, float);\n  bool (__fastcall *forceCheckAllNeighChunkSavedStat)(Dimension *this);\n  Vec3 *(__fastcall *translatePosAcrossDimension)(Dimension *this, Vec3 *result, const Vec3 *, AutomaticID<Dimension,int>);\n  void (__fastcall *sendBroadcast)(Dimension *this, const Packet *, Player *);\n  bool (__fastcall *is2DPositionRelevantForPlayer)(Dimension *this, const BlockPos *, Player *);\n  bool (__fastcall *isEntityRelevantForPlayer)(Dimension *this, Player *, const Actor *);\n  BaseLightTextureImageBuilder *(__fastcall *getLightTextureImageBuilder)(Dimension *this);\n  const DimensionBrightnessRamp *(__fastcall *getBrightnessRamp)(Dimension *this);\n  void (__fastcall *startLeaveGame)(Dimension *this);\n  std::unique_ptr<ChunkBuildOrderPolicyBase> *(__fastcall *_createChunkBuildOrderPolicy)(Dimension *this, std::unique_ptr<ChunkBuildOrderPolicyBase> *result);\n  void (__fastcall *_upgradeOldLimboEntity)(Dimension *this, CompoundTag *, LimboEntitiesVersion);\n  std::unique_ptr<ChunkSource> *(__fastcall *_wrapStorageForVersionCompatibility)(Dimension *this, std::unique_ptr<ChunkSource> *result, std::unique_ptr<ChunkSource>, StorageVersion);\n};\n\n")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);