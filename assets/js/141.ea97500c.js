(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{450:function(t,e,a){"use strict";a.r(e);var o=a(27),c=Object(o.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"o"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#o"}},[t._v("#")]),t._v(" O")]),t._v(" "),e("h3",{attrs:{id:"optionconstants-lambda-494f639503c40febe0dbb14372a57cbf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionconstants-lambda-494f639503c40febe0dbb14372a57cbf"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionConstants::<lambda_494f639503c40febe0dbb14372a57cbf>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"optionconstants-lambda-631366cfcd28947db7d3be15dfb1611c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionconstants-lambda-631366cfcd28947db7d3be15dfb1611c"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionConstants::<lambda_631366cfcd28947db7d3be15dfb1611c>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"optionconstants-lambda-f6873ee4037cf69a5750303b33811eac"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionconstants-lambda-f6873ee4037cf69a5750303b33811eac"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionConstants::<lambda_f6873ee4037cf69a5750303b33811eac>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"optionconstants-lambda-ac8f171e94addf05b263c93e72bdf2a9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionconstants-lambda-ac8f171e94addf05b263c93e72bdf2a9"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionConstants::<lambda_ac8f171e94addf05b263c93e72bdf2a9>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"option"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#option"}},[t._v("#")]),t._v(" "),e("code",[t._v("Option")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Option_vtbl *")])]),t._v(" "),e("td",[t._v("__vftable")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(120) "),e("code",[t._v("Bedrock::PubSub::Publisher<void __cdecl(Option const &),Bedrock::PubSub::ThreadModel::MultiThreaded,void>")])]),t._v(" "),e("td",[t._v("mValueChangedPublisher")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(120) "),e("code",[t._v("Bedrock::PubSub::Publisher<void __cdecl(Option const &,enum InputMode),Bedrock::PubSub::ThreadModel::MultiThreaded,void>")])]),t._v(" "),e("td",[t._v("mInputModeChangedPublisher")])]),t._v(" "),e("tr",[e("td",[t._v("248")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<Bedrock::PubSub::Publisher<void __cdecl(bool &),Bedrock::PubSub::ThreadModel::MultiThreaded,void>>")])]),t._v(" "),e("td",[t._v("mLock")])]),t._v(" "),e("tr",[e("td",[t._v("256")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mSaveTag")])]),t._v(" "),e("tr",[e("td",[t._v("288")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("mTelemetryProperty")])]),t._v(" "),e("tr",[e("td",[t._v("320")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("const OptionID")])]),t._v(" "),e("td",[t._v("mID")])]),t._v(" "),e("tr",[e("td",[t._v("324")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("const OptionOwnerType")])]),t._v(" "),e("td",[t._v("mOwnerType")])]),t._v(" "),e("tr",[e("td",[t._v("328")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("OptionType")])]),t._v(" "),e("td",[t._v("mOptionType")])]),t._v(" "),e("tr",[e("td",[t._v("336")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("const std::string")])]),t._v(" "),e("td",[t._v("mCaptionId")])]),t._v(" "),e("tr",[e("td",[t._v("368")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("_BYTE[4]")])]),t._v(" "),e("td",[t._v("mOptionResetFlags")])]),t._v(" "),e("tr",[e("td",[t._v("376")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("Option *")])]),t._v(" "),e("td",[t._v("mOverrideSource")])]),t._v(" "),e("tr",[e("td",[t._v("384")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("Bedrock::PubSub::ScopedSubscription")])]),t._v(" "),e("td",[t._v("mOverrideSourceValueChangedSubscription")])]),t._v(" "),e("tr",[e("td",[t._v("400")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("Bedrock::PubSub::ScopedSubscription")])]),t._v(" "),e("td",[t._v("mOverrideSourceInputModeChangedSubscription")])]),t._v(" "),e("tr",[e("td",[t._v("416")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(bool)>")])]),t._v(" "),e("td",[t._v("mRequestSaveCallback")])]),t._v(" "),e("tr",[e("td",[t._v("480")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mCanChange")])])])]),t._v(" "),e("h3",{attrs:{id:"optional-ref-terrainmaterialvariationmanager-const"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional-ref-terrainmaterialvariationmanager-const"}},[t._v("#")]),t._v(" "),e("code",[t._v("optional_ref<TerrainMaterialVariationManager const >")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const TerrainMaterialVariationManager *")])]),t._v(" "),e("td",[t._v("ptr")])])])]),t._v(" "),e("h3",{attrs:{id:"optional-ref-rendergraph-framebufferbuilder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional-ref-rendergraph-framebufferbuilder"}},[t._v("#")]),t._v(" "),e("code",[t._v("optional_ref<rendergraph::FrameBufferBuilder>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("rendergraph::FrameBufferBuilder *")])]),t._v(" "),e("td",[t._v("ptr")])])])]),t._v(" "),e("h3",{attrs:{id:"optionconstants-lambda-0e1acb4e778a483f08cd62409c6f59ee"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionconstants-lambda-0e1acb4e778a483f08cd62409c6f59ee"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionConstants::<lambda_0e1acb4e778a483f08cd62409c6f59ee>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody")]),t._v(" "),e("h3",{attrs:{id:"ownerptrt-entityregistryreftraits"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerptrt-entityregistryreftraits"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerPtrT<EntityRegistryRefTraits>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("OwnerStorageSharePtr<EntityRegistryOwned>")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"ownerstorageshareptr-entityregistryowned"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerstorageshareptr-entityregistryowned"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerStorageSharePtr<EntityRegistryOwned>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<EntityRegistryOwned>")])]),t._v(" "),e("td",[t._v("mValue")])])])]),t._v(" "),e("h3",{attrs:{id:"ownerptrt-entityreftraits"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerptrt-entityreftraits"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerPtrT<EntityRefTraits>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("OwnerStorageEntity")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"ownerstorageentity"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerstorageentity"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerStorageEntity")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::optional<OwnerStorageEntity::EntityContextOwned>")])]),t._v(" "),e("td",[t._v("mContext")])])])]),t._v(" "),e("h3",{attrs:{id:"ownerstorageentity-entitycontextowned"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerstorageentity-entitycontextowned"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerStorageEntity::EntityContextOwned")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("EntityContext")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"optional-ref-localization-const"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional-ref-localization-const"}},[t._v("#")]),t._v(" "),e("code",[t._v("optional_ref<Localization const >")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("const Localization *")])]),t._v(" "),e("td",[t._v("ptr")])])])]),t._v(" "),e("h3",{attrs:{id:"optionsavedeferral"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionsavedeferral"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionSaveDeferral")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::weak_ptr<Options>")])]),t._v(" "),e("td",[t._v("mOptions")])])])]),t._v(" "),e("h3",{attrs:{id:"objmodel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#objmodel"}},[t._v("#")]),t._v(" "),e("code",[t._v("ObjModel")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("name")])]),t._v(" "),e("tr",[e("td",[t._v("32")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<float>")])]),t._v(" "),e("td",[t._v("positions")])]),t._v(" "),e("tr",[e("td",[t._v("56")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<float>")])]),t._v(" "),e("td",[t._v("normals")])]),t._v(" "),e("tr",[e("td",[t._v("80")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<float>")])]),t._v(" "),e("td",[t._v("texcoords")])]),t._v(" "),e("tr",[e("td",[t._v("104")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<unsigned int>")])]),t._v(" "),e("td",[t._v("colors")])]),t._v(" "),e("tr",[e("td",[t._v("128")]),t._v(" "),e("td",[t._v("(24) "),e("code",[t._v("std::vector<unsigned int>")])]),t._v(" "),e("td",[t._v("indices")])])])]),t._v(" "),e("h3",{attrs:{id:"optional-ref-rendergraph-pass"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional-ref-rendergraph-pass"}},[t._v("#")]),t._v(" "),e("code",[t._v("optional_ref<rendergraph::Pass>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("rendergraph::Pass *")])]),t._v(" "),e("td",[t._v("ptr")])])])]),t._v(" "),e("h3",{attrs:{id:"owneddurablespagingcache-ctor-l2-lambda-28a90fe2ce902a855825d33515958818"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-ctor-l2-lambda-28a90fe2ce902a855825d33515958818"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::{ctor}::__l2::<lambda_28a90fe2ce902a855825d33515958818>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("OwnedDurablesPagingCache *const")])]),t._v(" "),e("td",[t._v("__this")])])])]),t._v(" "),e("h3",{attrs:{id:"owneddurablespagingcache-search-l2-lambda-c62e108c2369350517fae1efb94c51cb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-search-l2-lambda-c62e108c2369350517fae1efb94c51cb"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::search::__l2::<lambda_c62e108c2369350517fae1efb94c51cb>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("OwnedDurablesPagingCache *const")])]),t._v(" "),e("td",[t._v("__this")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(576) "),e("code",[t._v("const SearchQuery")])]),t._v(" "),e("td",[t._v("query")])]),t._v(" "),e("tr",[e("td",[t._v("584")]),t._v(" "),e("td",[t._v("(64) "),e("code",[t._v("std::function<void __cdecl(DurableSearchResults const &)>")])]),t._v(" "),e("td",[t._v("callback")])])])]),t._v(" "),e("h3",{attrs:{id:"ownerptrt-shareptrreftraits-fogdefinition-const"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerptrt-shareptrreftraits-fogdefinition-const"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerPtrT<SharePtrRefTraits<FogDefinition const > >")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("OwnerStorageSharePtr<FogDefinition const >")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"ownerstorageshareptr-fogdefinition-const"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerstorageshareptr-fogdefinition-const"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerStorageSharePtr<FogDefinition const >")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<FogDefinition const >")])]),t._v(" "),e("td",[t._v("mValue")])])])]),t._v(" "),e("h3",{attrs:{id:"owneditemstackrequestscope"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneditemstackrequestscope"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedItemStackRequestScope")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("ItemStackNetManagerClient *")])]),t._v(" "),e("td",[t._v("mItemStackNetManagerClient")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("mBeganRequest")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<ItemStackRequestData>")])]),t._v(" "),e("td",[t._v("mResult")])])])]),t._v(" "),e("h3",{attrs:{id:"optionalstring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionalstring"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionalString")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(1) "),e("code",[t._v("bool")])]),t._v(" "),e("td",[t._v("valid")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("string")])])])]),t._v(" "),e("h3",{attrs:{id:"osinformation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#osinformation"}},[t._v("#")]),t._v(" "),e("code",[t._v("OSInformation")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("MajorOSVersion")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("unsigned int")])]),t._v(" "),e("td",[t._v("MinorOSVersion")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(32) "),e("code",[t._v("std::string")])]),t._v(" "),e("td",[t._v("OSVersionName")])])])]),t._v(" "),e("h3",{attrs:{id:"overworldgenerator-overridablebiomesourcehelper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overworldgenerator-overridablebiomesourcehelper"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverworldGenerator::OverridableBiomeSourceHelper")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<CachedBiomeSource<VanillaOverworldBiomeSource>>")])]),t._v(" "),e("td",[t._v("mNormalBiomeSource")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("std::unique_ptr<FixedBiomeSource>")])]),t._v(" "),e("td",[t._v("mOverriddenBiomeSource")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("BiomeSource *")])]),t._v(" "),e("td",[t._v("mBiomeSource")])])])]),t._v(" "),e("h3",{attrs:{id:"oceanruinconfiguration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanruinconfiguration"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanRuinConfiguration")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("OceanTempCategory")])]),t._v(" "),e("td",[t._v("type")])]),t._v(" "),e("tr",[e("td",[t._v("4")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("largeProbability")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(4) "),e("code",[t._v("float")])]),t._v(" "),e("td",[t._v("clusterProbability")])])])]),t._v(" "),e("h3",{attrs:{id:"ownerptrt-shareptrreftraits-perlinsimplexnoise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerptrt-shareptrreftraits-perlinsimplexnoise"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerPtrT<SharePtrRefTraits<PerlinSimplexNoise> >")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("OwnerStorageSharePtr<PerlinSimplexNoise>")])]),t._v(" "),e("td",[t._v("baseclass_0")])])])]),t._v(" "),e("h3",{attrs:{id:"ownerstorageshareptr-perlinsimplexnoise"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerstorageshareptr-perlinsimplexnoise"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerStorageSharePtr<PerlinSimplexNoise>")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(16) "),e("code",[t._v("std::shared_ptr<PerlinSimplexNoise>")])]),t._v(" "),e("td",[t._v("mValue")])])])]),t._v(" "),e("h3",{attrs:{id:"outputstring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#outputstring"}},[t._v("#")]),t._v(" "),e("code",[t._v("OutputString")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Offset")]),t._v(" "),e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("0")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char *")])]),t._v(" "),e("td",[t._v("ptr")])]),t._v(" "),e("tr",[e("td",[t._v("8")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("char *")])]),t._v(" "),e("td",[t._v("end")])]),t._v(" "),e("tr",[e("td",[t._v("16")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("_object *")])]),t._v(" "),e("td",[t._v("obj")])]),t._v(" "),e("tr",[e("td",[t._v("24")]),t._v(" "),e("td",[t._v("(8) "),e("code",[t._v("__int64")])]),t._v(" "),e("td",[t._v("size_increment")])])])]),t._v(" "),e("h3",{attrs:{id:"onscreentextureanimationpacket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onscreentextureanimationpacket"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnScreenTextureAnimationPacket")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj __declspec(align(8)) OnScreenTextureAnimationPacket : Packet\n{\n  unsigned int mEffectID;\n};\n\n")])])]),e("h3",{attrs:{id:"onscreentextureanimationpacket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onscreentextureanimationpacket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnScreenTextureAnimationPacket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnScreenTextureAnimationPacket_vtbl\n{\n  void (__fastcall *~Packet)(Packet *this);\n  MinecraftPacketIds (__fastcall *getId)(Packet *this);\n  std::string *(__fastcall *getName)(Packet *this, std::string *result);\n  void (__fastcall *write)(Packet *this, BinaryStream *);\n  StreamReadResult (__fastcall *read)(Packet *this, ReadOnlyBinaryStream *);\n  ExtendedStreamReadResult *(__fastcall *readExtended)(Packet *this, ExtendedStreamReadResult *result, ReadOnlyBinaryStream *);\n  bool (__fastcall *disallowBatching)(Packet *this);\n};\n\n")])])]),e("h3",{attrs:{id:"option-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#option-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Option_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Option_vtbl\n{\n  void (__fastcall *~Option)(Option *this);\n  void (__fastcall *save)(Option *this, std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *load)(Option *this, const Json::Value *);\n  void (__fastcall *load)(Option *this, std::map<std::string,std::string> *);\n  void (__fastcall *load)(Option *this, const std::string *);\n};\n\n")])])]),e("h3",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options : std::enable_shared_from_this<Options>\n{\n  std::array<std::unique_ptr<Option>,541> mOptions;\n  std::unique_ptr<ChatOptions> mChatOptions;\n  Options *mPerMachineOptionsSource;\n  std::string mOverrideUsername;\n  Core::PathBuffer<std::string > mFilePath;\n  bool mLoadInProgress;\n  bool mUseVROptions;\n  bool mPrimaryUserStatus;\n  bool mAllowedToSave;\n  _BYTE mSaveRequestMode[4];\n  std::atomic<int> mSaveDeferralCount;\n  std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > > mNextSaveTime;\n  std::unique_ptr<OptionValueInterface> mOptionValues;\n  int mDefaultViewDistanceChunks;\n  int mDefaultRayTracingViewDistanceChunks;\n  int mDefaultVRViewDistanceChunks;\n  std::vector<int> mRenderDistanceLevels;\n  std::vector<int> mVRRenderDistanceLevels;\n  std::vector<int> mRayTracingRenderDistanceLevels;\n  float mPpmDpadSizeOld;\n  std::vector<std::string> mRecentSkinIds;\n  std::unique_ptr<GamePadRemappingLayout> mGamePadRemappings[4];\n  std::unique_ptr<GamePadRemappingLayout> mMotionControllerRemapping;\n  std::vector<std::shared_ptr<KeyboardRemappingLayout>> mKeyboardRemappings;\n  Core::Subject<OptionsObserver,Core::SingleThreadedLock> mEventSubject;\n  std::unique_ptr<TaskGroup> mIOTaskGroup;\n  bool mIsSaveInProgress;\n  std::vector<Bedrock::PubSub::ScopedSubscription> mObserverSubscriptions;\n  std::vector<Bedrock::PubSub::ScopedSubscription> mLockSubscriptions;\n  int mLockPlayerViewMode;\n  int mLockViewBobbing;\n};\n\n")])])]),e("h3",{attrs:{id:"optionvalueinterface"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionvalueinterface"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionValueInterface")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OptionValueInterface\n{\n  OptionValueInterface_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"optionvalueinterface-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionvalueinterface-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionValueInterface_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OptionValueInterface_vtbl\n{\n  void (__fastcall *~OptionValueInterface)(OptionValueInterface *this);\n  const std::vector<int> *(__fastcall *getRenderDistanceLevels)(OptionValueInterface *this, const std::vector<int> *result);\n  const std::vector<int> *(__fastcall *getVRRenderDistanceLevels)(OptionValueInterface *this, const std::vector<int> *result);\n  const std::vector<int> *(__fastcall *getRayTracingRenderDistanceLevels)(OptionValueInterface *this, const std::vector<int> *result);\n  int (__fastcall *getDefaultRenderDistanceLevel)(OptionValueInterface *this);\n  int (__fastcall *getDefaultVRRenderDistanceLevel)(OptionValueInterface *this);\n  int (__fastcall *getDefaultRayTracingRenderDistanceLevel)(OptionValueInterface *this);\n  bool (__fastcall *getDefaultTexelAA)(OptionValueInterface *this);\n  bool (__fastcall *getDefaultVRTexelAA)(OptionValueInterface *this);\n  int (__fastcall *getDefaultMSAA)(OptionValueInterface *this);\n  int (__fastcall *getDefaultVRMSAA)(OptionValueInterface *this);\n  VRHUDPosition (__fastcall *getDefaultVRHUDPosition)(OptionValueInterface *this);\n  const std::vector<int> *(__fastcall *getSupportedMSAAValues)(OptionValueInterface *this, const std::vector<int> *result, bool);\n  void (__fastcall *setMSAAValue)(OptionValueInterface *this, int);\n  void (__fastcall *setTexelAA)(OptionValueInterface *this, const bool);\n};\n\n")])])]),e("h3",{attrs:{id:"optionsobserver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionsobserver"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionsObserver")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OptionsObserver : Core::Observer<OptionsObserver,Core::SingleThreadedLock>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"optionsobserver-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionsobserver-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionsObserver_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OptionsObserver_vtbl\n{\n  void (__fastcall *~Observer<OptionsObserver,Core::SingleThreadedLock>)(Core::Observer<OptionsObserver,Core::SingleThreadedLock> *this);\n  void (__fastcall *_onSubjectDestroyed)(Core::Observer<OptionsObserver,Core::SingleThreadedLock> *this);\n  void (__fastcall *onForceCloudSave)(OptionsObserver *this);\n  void (__fastcall *onOptionsLoadBegin)(OptionsObserver *this);\n  void (__fastcall *onOptionsLoadComplete)(OptionsObserver *this);\n};\n\n")])])]),e("h3",{attrs:{id:"offer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offer"}},[t._v("#")]),t._v(" "),e("code",[t._v("Offer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Offer\n{\n  ProductSku mProductSku;\n  ProductType mProductType;\n  OfferCategory mCategory;\n  std::unique_ptr<ProductInfo> mActiveProductInfo;\n  std::vector<std::shared_ptr<Purchase>> mActivePurchases;\n};\n\n")])])]),e("h3",{attrs:{id:"objectivecriteria"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#objectivecriteria"}},[t._v("#")]),t._v(" "),e("code",[t._v("ObjectiveCriteria")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj __declspec(align(8)) ObjectiveCriteria\n{\n  const std::string mName;\n  const bool mReadOnly;\n  const ObjectiveRenderType mRenderType;\n};\n\n")])])]),e("h3",{attrs:{id:"objective"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#objective"}},[t._v("#")]),t._v(" "),e("code",[t._v("Objective")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj Objective\n{\n  std::unordered_map<ScoreboardId,int> mScores;\n  const std::string mName;\n  std::string mDisplayName;\n  const ObjectiveCriteria *mCriteria;\n};\n\n")])])]),e("h3",{attrs:{id:"offercollectioncomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offercollectioncomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferCollectionComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OfferCollectionComponent : StoreUIComponent\n{\n  std::shared_ptr<CatalogCollection> mCollection;\n  bool mIsValid;\n};\n\n")])])]),e("h3",{attrs:{id:"offercollectioncomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offercollectioncomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferCollectionComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OfferCollectionComponent_vtbl\n{\n  void (__fastcall *~StoreUIComponent)(StoreUIComponent *this);\n  void (__fastcall *tick)(StoreUIComponent *this, ui::DirtyFlag *);\n  bool (__fastcall *canRemove)(StoreUIComponent *this);\n  int (__fastcall *getReadyCount)(StoreUIComponent *this);\n  void (__fastcall *parseData)(StoreUIComponent *this, const struct web::json::value *);\n};\n\n")])])]),e("h3",{attrs:{id:"owneddurablespagingcache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnedDurablesPagingCache\n{\n  const int SEARCH_BATCH_SIZE;\n  std::shared_ptr<GenericEntitlementChangeListener> mEntitlementChangeListener;\n  std::function<void __cdecl(SearchQuery const &,std::function<void __cdecl(DurableSearchResults const &)>)> mSearchHandler;\n  std::unordered_map<std::string,DocumentMeta> mDocumentCache;\n  std::unordered_map<unsigned int,std::unique_ptr<std::unordered_set<std::string>>> mCachedQueryResultsMap;\n  std::function<std::vector<mce::UUID> __cdecl(void)> mRetrieveOwnedPackIds;\n  std::function<std::unordered_set<PackIdVersion,PackIdentityUUIDHash,PackIdentityUUIDEquality,std::allocator<PackIdVersion> > __cdecl(void)> mRetrieveInstalledPackIds;\n};\n\n")])])]),e("h3",{attrs:{id:"optional-ref-rendergraph-resourceviewinterface-const"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional-ref-rendergraph-resourceviewinterface-const"}},[t._v("#")]),t._v(" "),e("code",[t._v("optional_ref<rendergraph::ResourceViewInterface const >")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj optional_ref<rendergraph::ResourceViewInterface const >\n{\n  const rendergraph::ResourceViewInterface *ptr;\n};\n\n")])])]),e("h3",{attrs:{id:"optional-ref-rendergraph-resourcetargetinterface-const"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional-ref-rendergraph-resourcetargetinterface-const"}},[t._v("#")]),t._v(" "),e("code",[t._v("optional_ref<rendergraph::ResourceTargetInterface const >")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj optional_ref<rendergraph::ResourceTargetInterface const >\n{\n  const rendergraph::ResourceTargetInterface *ptr;\n};\n\n")])])]),e("h3",{attrs:{id:"overlaytexturemap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overlaytexturemap"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverlayTextureMap")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OverlayTextureMap\n{\n  mce::TextureGroupBase *mTextureGroup;\n  _BYTE mCachedOverlayTextureId[4];\n  mce::TexturePtr mCachedOverlayTexture;\n  std::array<std::string,2> mTextureNames;\n};\n\n")])])]),e("h3",{attrs:{id:"optional-ref-playerrenderview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional-ref-playerrenderview"}},[t._v("#")]),t._v(" "),e("code",[t._v("optional_ref<PlayerRenderView>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj optional_ref<PlayerRenderView>\n{\n  PlayerRenderView *ptr;\n};\n\n")])])]),e("h3",{attrs:{id:"optional-ref-playerrenderview-legacyplayerrenderpass"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional-ref-playerrenderview-legacyplayerrenderpass"}},[t._v("#")]),t._v(" "),e("code",[t._v("optional_ref<PlayerRenderView::LegacyPlayerRenderPass>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj optional_ref<PlayerRenderView::LegacyPlayerRenderPass>\n{\n  PlayerRenderView::LegacyPlayerRenderPass *ptr;\n};\n\n")])])]),e("h3",{attrs:{id:"optional-ref-mce-renderstage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional-ref-mce-renderstage"}},[t._v("#")]),t._v(" "),e("code",[t._v("optional_ref<mce::RenderStage>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj optional_ref<mce::RenderStage>\n{\n  mce::RenderStage *ptr;\n};\n\n")])])]),e("h3",{attrs:{id:"optional-ref-commandlistqueue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional-ref-commandlistqueue"}},[t._v("#")]),t._v(" "),e("code",[t._v("optional_ref<CommandListQueue>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj optional_ref<CommandListQueue>\n{\n  CommandListQueue *ptr;\n};\n\n")])])]),e("h3",{attrs:{id:"ovrplatformmessagehandler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ovrplatformmessagehandler"}},[t._v("#")]),t._v(" "),e("code",[t._v("OVRPlatformMessageHandler")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OVRPlatformMessageHandler\n{\n  OVRPlatformMessageHandler_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"ovrplatformmessagehandler-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ovrplatformmessagehandler-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OVRPlatformMessageHandler_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OVRPlatformMessageHandler_vtbl\n{\n  void (__fastcall *~OVRPlatformMessageHandler)(OVRPlatformMessageHandler *this);\n  bool (__fastcall *handleMessage)(OVRPlatformMessageHandler *this, struct ovrMessage *);\n};\n\n")])])]),e("h3",{attrs:{id:"oculusplatformmessagepump"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oculusplatformmessagepump"}},[t._v("#")]),t._v(" "),e("code",[t._v("OculusPlatformMessagePump")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OculusPlatformMessagePump\n{\n  std::vector<OVRPlatformMessageHandler *> mOVRPlatformMessageHandlers;\n  bool mEnabled;\n};\n\n")])])]),e("h3",{attrs:{id:"offerrepository-productqueryattemptresult"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offerrepository-productqueryattemptresult"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferRepository::ProductQueryAttemptResult")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OfferRepository::ProductQueryAttemptResult\n{\n  bool mComplete;\n  bool mSuccess;\n};\n\n")])])]),e("h3",{attrs:{id:"offerrepository-realmsoffertypecontainer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offerrepository-realmsoffertypecontainer"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferRepository::RealmsOfferTypeContainer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OfferRepository::RealmsOfferTypeContainer\n{\n  std::map<enum RealmsOfferPeriod,std::map<enum RealmsOfferTier,std::vector<Offer *>>> Elements;\n};\n\n")])])]),e("h3",{attrs:{id:"oculussyncservice"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oculussyncservice"}},[t._v("#")]),t._v(" "),e("code",[t._v("OculusSyncService")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OculusSyncService : ServiceClient\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oculussyncservice-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oculussyncservice-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OculusSyncService_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OculusSyncService_vtbl\n{\n  void (__fastcall *~ServiceClient)(ServiceClient *this);\n  void (__fastcall *update)(ServiceClient *this);\n  void (__fastcall *_submitRequest)(ServiceClient *this, std::shared_ptr<RequestHandler>);\n};\n\n")])])]),e("h3",{attrs:{id:"offerrepository"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offerrepository"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferRepository")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OfferRepository : StoreListener, Bedrock::EnableNonOwnerReferences, std::enable_shared_from_this<OfferRepository>\n{\n  IMinecraftEventing *mEventing;\n  Bedrock::NonOwnerPointer<Social::IUserManager> mUserManager;\n  IEntitlementManager *mEntitlementManager;\n  IClientInstance *mPrimaryClient;\n  std::vector<std::unique_ptr<Offer>> mAllOffers;\n  std::vector<Offer *> mRealmsOffersPendingFulfillment;\n  std::vector<Offer *> mMinecoinOffersPendingFulfillment;\n  std::vector<Offer *> mEduOffersPendingFulfillment;\n  std::function<std::shared_ptr<OfferRepository::ProductQueryAttemptResult> __cdecl(void)> mProductQueryAttemptCallback;\n  std::map<enum RealmsOfferType,OfferRepository::RealmsOfferTypeContainer> mRealmsOfferMatrix;\n  std::unique_ptr<GameStore> mGameStore;\n  std::unique_ptr<DurableTransactionHandler> mDurableTransactionHandler;\n  std::unique_ptr<RealmsTransactionHandler> mRealmsTransactionHandler;\n  std::unique_ptr<MinecoinTransactionHandler> mMinecoinTransactionHandler;\n  std::unique_ptr<EduTransactionHandler> mEduTransactionHandler;\n  std::unique_ptr<PurchaseCache> mPurchaseCache;\n  std::unique_ptr<TransactionContext> mUserTransactionContext;\n  std::function<void __cdecl(bool)> mQueryPurchasesCallback;\n  bool mQueryPurchasesAllowSignIn;\n  __declspec(align(4)) RetryDelay mProductsRefresh;\n  RetryDelay mPurchasesRefresh;\n  RetryDelay mFulfillmentRefresh;\n  bool mInitialized;\n  ServiceRegistrationToken<OfferRepository> mServiceRegistrationToken;\n};\n\n")])])]),e("h3",{attrs:{id:"offerrepository-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offerrepository-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferRepository_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OfferRepository_vtbl\n{\n  void (__fastcall *~StoreListener)(StoreListener *this);\n  void (__fastcall *onStoreInitialized)(StoreListener *this, bool);\n  void (__fastcall *setStoreAvailable)(StoreListener *this, bool);\n  void (__fastcall *onQueryProductsSuccess)(StoreListener *this, const std::vector<ProductInfo> *);\n  void (__fastcall *onQueryProductsFail)(StoreListener *this);\n  void (__fastcall *onPurchaseSuccessful)(StoreListener *this, const PurchaseInfo *);\n  void (__fastcall *onPurchaseCanceled)(StoreListener *this, const ProductSku *);\n  void (__fastcall *onPurchaseFailed)(StoreListener *this, const ProductSku *);\n  void (__fastcall *onQueryPurchasesSuccess)(StoreListener *this, const std::vector<PurchaseInfo> *);\n  void (__fastcall *onQueryPurchasesFail)(StoreListener *this);\n  void (__fastcall *onAppPurchaseSuccess)(StoreListener *this);\n  void (__fastcall *onAppPurchaseFailed)(StoreListener *this);\n  void (__fastcall *onAppPurchaseCanceled)(StoreListener *this);\n};\n\n")])])]),e("h3",{attrs:{id:"ownerstoragefeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerstoragefeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerStorageFeature")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnerStorageFeature\n{\n  std::optional<std::reference_wrapper<FeatureRegistry> > mRegistry;\n  unsigned __int64 mIndex;\n};\n\n")])])]),e("h3",{attrs:{id:"ownerptrt-featurereftraits"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerptrt-featurereftraits"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerPtrT<FeatureRefTraits>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnerPtrT<FeatureRefTraits> : OwnerStorageFeature\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onhitsubcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onhitsubcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnHitSubcomponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnHitSubcomponent\n{\n  OnHitSubcomponent_vtbl *__vftable /*VFT*/;\n};\n\n")])])]),e("h3",{attrs:{id:"onhitsubcomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onhitsubcomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnHitSubcomponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnHitSubcomponent_vtbl\n{\n  void (__fastcall *~OnHitSubcomponent)(OnHitSubcomponent *this);\n  void (__fastcall *readfromJSON)(OnHitSubcomponent *this, Json::Value *);\n  void (__fastcall *writetoJSON)(OnHitSubcomponent *this, Json::Value *);\n  void (__fastcall *doOnHitEffect)(OnHitSubcomponent *this, Actor *, ProjectileComponent *);\n  const char *(__fastcall *getName)(OnHitSubcomponent *this);\n};\n\n")])])]),e("h3",{attrs:{id:"opendoorannotationdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opendoorannotationdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("OpenDoorAnnotationDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OpenDoorAnnotationDescription : ComponentDescription\n{\n};\n\n")])])]),e("h3",{attrs:{id:"opendoorannotationdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opendoorannotationdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OpenDoorAnnotationDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OpenDoorAnnotationDescription_vtbl\n{\n  const char *(__fastcall *getJsonName)(Description *this);\n  void (__fastcall *~Description)(Description *this);\n  void (__fastcall *deserializeData)(Description *this, DeserializeDataParams);\n  void (__fastcall *serializeData)(Description *this, Json::Value *);\n};\n\n")])])]),e("h3",{attrs:{id:"ownerstorageshareptr-entityregistry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerstorageshareptr-entityregistry"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerStorageSharePtr<EntityRegistry>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnerStorageSharePtr<EntityRegistry>\n{\n  std::shared_ptr<EntityRegistry> mValue;\n};\n\n")])])]),e("h3",{attrs:{id:"onlinesafetyprogresshandler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onlinesafetyprogresshandler"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnlineSafetyProgressHandler")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OnlineSafetyProgressHandler : ProgressHandler\n{\n  OnlineSafetyProgressHandler::State mState;\n};\n\n")])])]),e("h3",{attrs:{id:"onlinesafetyprogresshandler-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onlinesafetyprogresshandler-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnlineSafetyProgressHandler_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnlineSafetyProgressHandler_vtbl\n{\n  void (__fastcall *~ProgressHandler)(ProgressHandler *this);\n  void (__fastcall *onStart)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *tick)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *onCancel)(ProgressHandler *this, MinecraftScreenModel *);\n  void (__fastcall *onExit)(ProgressHandler *this, MinecraftScreenModel *);\n  LoadingState (__fastcall *getLoadingState)(ProgressHandler *this, MinecraftScreenModel *);\n  float (__fastcall *getLoadingProgress)(ProgressHandler *this, MinecraftScreenModel *);\n  std::string *(__fastcall *getProgressMessage)(ProgressHandler *this, std::string *result, MinecraftScreenModel *);\n  void (__fastcall *addEventProperties)(ProgressHandler *this, std::unordered_map<std::string,std::string> *);\n  std::string *(__fastcall *getTTSProgressMessage)(ProgressHandler *this, std::string *result);\n  std::string *(__fastcall *getTitleText)(ProgressHandler *this, std::string *result);\n  ProgressAnimation (__fastcall *showLoadingBar)(ProgressHandler *this);\n};\n\n")])])]),e("h3",{attrs:{id:"offercollectioncustom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offercollectioncustom"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferCollectionCustom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OfferCollectionCustom\n{\n  QueryDocument mQueryDoc;\n  int mSalesRecentDocumentValue;\n};\n\n")])])]),e("h3",{attrs:{id:"offercollectiondocument"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offercollectiondocument"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferCollectionDocument")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OfferCollectionDocument\n{\n  CommonDocument mCommon;\n  OfferCollectionCustom mCustom;\n};\n\n")])])]),e("h3",{attrs:{id:"offercollectionsearchresults"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offercollectionsearchresults"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferCollectionSearchResults")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const struct __cppobj OfferCollectionSearchResults : CommonSearchResults\n{\n  std::vector<OfferCollectionDocument> mDocuments;\n};\n\n")])])]),e("h3",{attrs:{id:"onlinesafetydialogscreencontroller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onlinesafetydialogscreencontroller"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnlineSafetyDialogScreenController")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnlineSafetyDialogScreenController : MinecraftScreenController\n{\n  OnlineSafetyProgressHandler *mOnlineSafetyProgressHandler;\n};\n\n")])])]),e("h3",{attrs:{id:"onlinesafetydialogscreencontroller-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onlinesafetydialogscreencontroller-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnlineSafetyDialogScreenController_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnlineSafetyDialogScreenController_vtbl\n{\n  void (__fastcall *~IScreenController)(IScreenController *this);\n  ui::DirtyFlag (__fastcall *tick)(IScreenController *this);\n  ui::ViewRequest (__fastcall *handleEvent)(IScreenController *this, ScreenEvent *);\n  std::optional<std::string > *(__fastcall *getRoute)(IScreenController *this, std::optional<std::string > *result);\n  void (__fastcall *setScreenState)(IScreenController *this, const std::vector<std::pair<std::string,std::string >> *);\n  void (__fastcall *onOpen)(ScreenController *this);\n  void (__fastcall *onTerminate)(ScreenController *this);\n  void (__fastcall *onInit)(ScreenController *this);\n  void (__fastcall *onDelete)(ScreenController *this);\n  bool (__fastcall *canExit)(ScreenController *this);\n  ui::ViewRequest (__fastcall *tryExit)(ScreenController *this);\n  bool (__fastcall *areControllerTabsEnabled)(ScreenController *this);\n  void (__fastcall *onCreation)(ScreenController *this);\n  void (__fastcall *logCreationTime)(ScreenController *this, const std::string *, long double, long double, unsigned __int8);\n  void (__fastcall *onLeave)(ScreenController *this);\n  void (__fastcall *leaveScreen)(ScreenController *this);\n  ui::DirtyFlag (__fastcall *handleGameEventNotification)(ScreenController *this, ui::GameEventNotification);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  bool (__fastcall *bind)(ScreenController *this, const std::string *, unsigned int, int, const std::string *, unsigned int, const std::string *, UIPropertyBag *);\n  void (__fastcall *handleLicenseChanged)(ScreenController *this);\n  void (__fastcall *onDictationEvent)(ScreenController *this, const std::string *);\n  void (__fastcall *setAssociatedBlockPos)(ScreenController *this, const BlockPos *);\n  void (__fastcall *setAssociatedEntityUniqueID)(ScreenController *this, const ActorUniqueID);\n  void (__fastcall *setSuspendInput)(ScreenController *this, bool);\n  float (__fastcall *getCallbackInterval)(ScreenController *this);\n  void (__fastcall *onRender)(ScreenController *this);\n  void (__fastcall *addStaticScreenVars)(ScreenController *this, Json::Value *);\n  std::string *(__fastcall *getAdditionalScreenInfo)(ScreenController *this, std::string *result);\n  std::string *(__fastcall *getTelemetryOverride)(ScreenController *this, std::string *result);\n  void (__fastcall *addEventProperties)(ScreenController *this, std::unordered_map<std::string,std::string> *);\n  ui::SceneType (__fastcall *getSceneType)(ScreenController *this);\n  int (__fastcall *getScreenVersion)(ScreenController *this);\n  bool (__fastcall *screenHandlesGamepadMenuButton)(ScreenController *this);\n  ScreenControllerProxy *(__fastcall *getProxy)(ScreenController *this);\n  void (__fastcall *onEntered)(ScreenController *this);\n  unsigned int (__fastcall *getNameId)(ScreenController *this, const std::string *);\n  bool (__fastcall *verifySceneStack)(ScreenController *this, SceneStack *);\n  bool (__fastcall *_doesScreenHaveExitBehavior)(ScreenController *this);\n  bool (__fastcall *_isStillValid)(MinecraftScreenController *this);\n  bool (__fastcall *_getGamepadHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getMixedHelperVisible)(MinecraftScreenController *this);\n  bool (__fastcall *_getKeyboardHelperVisible)(MinecraftScreenController *this);\n  std::string *(__fastcall *_getButtonADescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonBDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonXDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonYDescription)(MinecraftScreenController *this, std::string *result);\n  std::string *(__fastcall *_getButtonKeyboardDescription)(MinecraftScreenController *this, std::string *result);\n};\n\n")])])]),e("h3",{attrs:{id:"onlinesafetydialogscreencontroller-registerprogressbindings-l2-lambda-7cab83aadfffc6c6f3533f3188941405"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onlinesafetydialogscreencontroller-registerprogressbindings-l2-lambda-7cab83aadfffc6c6f3533f3188941405"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnlineSafetyDialogScreenController::_registerProgressBindings::__l2::<lambda_7cab83aadfffc6c6f3533f3188941405>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnlineSafetyDialogScreenController::_registerProgressBindings::__l2::<lambda_7cab83aadfffc6c6f3533f3188941405>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onlinesafetydialogscreencontroller-registerprogressbindings-l2-lambda-9a561524d40350cc3faeda38517440ce"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onlinesafetydialogscreencontroller-registerprogressbindings-l2-lambda-9a561524d40350cc3faeda38517440ce"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnlineSafetyDialogScreenController::_registerProgressBindings::__l2::<lambda_9a561524d40350cc3faeda38517440ce>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnlineSafetyDialogScreenController::_registerProgressBindings::__l2::<lambda_9a561524d40350cc3faeda38517440ce>\n{\n  OnlineSafetyDialogScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-aa0696b494dc24d731ca3415eb7512e1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-aa0696b494dc24d731ca3415eb7512e1"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_aa0696b494dc24d731ca3415eb7512e1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_aa0696b494dc24d731ca3415eb7512e1>\n{\n  OnlineSafetyDialogScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-ff8c03f366e9ea90c239e7accb05879d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-ff8c03f366e9ea90c239e7accb05879d"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_ff8c03f366e9ea90c239e7accb05879d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_ff8c03f366e9ea90c239e7accb05879d>\n{\n  OnlineSafetyDialogScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-1ca3a046a3907aedfae4f13653e071cc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-1ca3a046a3907aedfae4f13653e071cc"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_1ca3a046a3907aedfae4f13653e071cc>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_1ca3a046a3907aedfae4f13653e071cc>\n{\n  OnlineSafetyDialogScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-a93e6c06c61804e1fbd2a20a8c69c969"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-a93e6c06c61804e1fbd2a20a8c69c969"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_a93e6c06c61804e1fbd2a20a8c69c969>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_a93e6c06c61804e1fbd2a20a8c69c969>\n{\n  OnlineSafetyDialogScreenController *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-98bb0289cd1621c1ca883be4cca3467d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onlinesafetydialogscreencontroller-registereventhandlers-l2-lambda-98bb0289cd1621c1ca883be4cca3467d"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_98bb0289cd1621c1ca883be4cca3467d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnlineSafetyDialogScreenController::_registerEventHandlers::__l2::<lambda_98bb0289cd1621c1ca883be4cca3467d>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"offercategoryenumhasher"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offercategoryenumhasher"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferCategoryEnumHasher")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OfferCategoryEnumHasher\n{\n};\n\n")])])]),e("h3",{attrs:{id:"optional-ref-int"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional-ref-int"}},[t._v("#")]),t._v(" "),e("code",[t._v("optional_ref<int>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj optional_ref<int>\n{\n  int *ptr;\n};\n\n")])])]),e("h3",{attrs:{id:"optional-ref-mce-texture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional-ref-mce-texture"}},[t._v("#")]),t._v(" "),e("code",[t._v("optional_ref<mce::Texture>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj optional_ref<mce::Texture>\n{\n  mce::Texture *ptr;\n};\n\n")])])]),e("h3",{attrs:{id:"optionactivationrule"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionactivationrule"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionActivationRule")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OptionActivationRule : ActivationRule\n{\n  PlayerViewMode mType;\n};\n\n")])])]),e("h3",{attrs:{id:"optionactivationrule-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionactivationrule-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionActivationRule_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OptionActivationRule_vtbl\n{\n  void (__fastcall *~ActivationRule)(ActivationRule *this);\n  std::unique_ptr<ActivationRule> *(__fastcall *create)(ActivationRule *this, std::unique_ptr<ActivationRule> *result, Json::Value *);\n  bool (__fastcall *evaluate)(ActivationRule *this, const IClientInstance *, float, const Camera *);\n};\n\n")])])]),e("h3",{attrs:{id:"orbitbehavior"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#orbitbehavior"}},[t._v("#")]),t._v(" "),e("code",[t._v("OrbitBehavior")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OrbitBehavior : CameraBehavior<OrbitBehavior>\n{\n  CriticallyDampedSpring<float> mAzimuthSmoothingSpring;\n  CriticallyDampedSpring<float> mPolarAngleSmoothingSpring;\n  CriticallyDampedSpring<float> mDistanceSmoothingSpring;\n  Spherical mCurrentSpherical;\n  Spherical mIdealSpherical;\n  float mPolarAngleMin;\n  float mPolarAngleMax;\n  float mAzimuthVelocity;\n  float mPolarAngleVelocity;\n  float mDistanceVelocity;\n  float mDistanceConstraint;\n};\n\n")])])]),e("h3",{attrs:{id:"orbitbehavior-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#orbitbehavior-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OrbitBehavior_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OrbitBehavior_vtbl\n{\n  void (__fastcall *~ICameraBehavior)(ICameraBehavior *this);\n  void (__fastcall *onSetup)(ICameraBehavior *this, IClientInstance *, CameraDirector *);\n  void (__fastcall *onStart)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);\n  void (__fastcall *update)(ICameraBehavior *this, IClientInstance *, float, float, CameraDirector *);\n  void (__fastcall *handleLookInput)(ICameraBehavior *this, Vec2 *, CameraDirector *);\n  void (__fastcall *renderDebug)(ICameraBehavior *this, IClientInstance *, float, CameraDirector *);\n  bool (__fastcall *handleCameraSetRot)(ICameraBehavior *this, const Vec2 *, CameraDirector *);\n  HashedString *(__fastcall *getId)(ICameraBehavior *this, HashedString *result);\n  ICameraBehavior::UpdateOrder (__fastcall *getUpdateOrder)(ICameraBehavior *this);\n};\n\n")])])]),e("h3",{attrs:{id:"orbitbehaviorloader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#orbitbehaviorloader"}},[t._v("#")]),t._v(" "),e("code",[t._v("OrbitBehaviorLoader")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OrbitBehaviorLoader : CameraBehaviorLoader\n{\n};\n\n")])])]),e("h3",{attrs:{id:"orbitbehaviorloader-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#orbitbehaviorloader-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OrbitBehaviorLoader_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OrbitBehaviorLoader_vtbl\n{\n  void (__fastcall *~CameraBehaviorLoader)(CameraBehaviorLoader *this);\n  std::unique_ptr<ICameraBehavior> *(__fastcall *create)(CameraBehaviorLoader *this, std::unique_ptr<ICameraBehavior> *result);\n  void (__fastcall *parse)(CameraBehaviorLoader *this, Json::Value *, ICameraBehavior *);\n};\n\n")])])]),e("h3",{attrs:{id:"overloadsyntaxinformation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overloadsyntaxinformation"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverloadSyntaxInformation")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OverloadSyntaxInformation\n{\n  std::string text;\n  unsigned int start;\n  unsigned int length;\n};\n\n")])])]),e("h3",{attrs:{id:"onuseitemcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onuseitemcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnUseItemComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnUseItemComponent : ItemComponent\n{\n  DefinitionTrigger mOnUse;\n};\n\n")])])]),e("h3",{attrs:{id:"onuseitemcomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onuseitemcomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnUseItemComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnUseItemComponent_vtbl\n{\n  void (__fastcall *~ItemComponent)(ItemComponent *this);\n  bool (__fastcall *checkComponentDataForContentErrors)(ItemComponent *this);\n  void (__fastcall *writeSettings)(ItemComponent *this);\n  bool (__fastcall *useOn)(ItemComponent *this, ItemStack *, Actor *, const BlockPos *, unsigned __int8, const Vec3 *);\n  bool (__fastcall *isNetworkComponent)(ItemComponent *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(ItemComponent *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(ItemComponent *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"owneddurablespagingcache-aggregateresults"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-aggregateresults"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::AggregateResults")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnedDurablesPagingCache::AggregateResults\n{\n  int mRemainingBatches;\n  std::unique_ptr<std::unordered_set<std::string>> mProductIdSet;\n  std::function<void __cdecl(std::unique_ptr<std::unordered_set<std::string>>)> mCallback;\n};\n\n")])])]),e("h3",{attrs:{id:"optionsavedeferral-release-l16-lambda-b309dec70b808e8609e224c1506fb95a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optionsavedeferral-release-l16-lambda-b309dec70b808e8609e224c1506fb95a"}},[t._v("#")]),t._v(" "),e("code",[t._v("OptionSaveDeferral::release::__l16::<lambda_b309dec70b808e8609e224c1506fb95a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OptionSaveDeferral::release::__l16::<lambda_b309dec70b808e8609e224c1506fb95a>\n{\n  std::weak_ptr<Options> options;\n};\n\n")])])]),e("h3",{attrs:{id:"options-setplayerviewperspective-l2-lambda-2933f73a92da25ab7eb8888027fc5027"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-setplayerviewperspective-l2-lambda-2933f73a92da25ab7eb8888027fc5027"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::setPlayerViewPerspective::__l2::<lambda_2933f73a92da25ab7eb8888027fc5027>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::setPlayerViewPerspective::__l2::<lambda_2933f73a92da25ab7eb8888027fc5027>\n{\n  Options *const __this;\n  int *playerViewPerspective;\n};\n\n")])])]),e("h3",{attrs:{id:"options-endloadingsession-l5-lambda-c02e99fb4834412c0d487a342dd02b2a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-endloadingsession-l5-lambda-c02e99fb4834412c0d487a342dd02b2a"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_endLoadingSession::__l5::<lambda_c02e99fb4834412c0d487a342dd02b2a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_endLoadingSession::__l5::<lambda_c02e99fb4834412c0d487a342dd02b2a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"options-beginloadingsession-l5-lambda-efe1aacdc65c1acb51ca6cd303b70c1d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-beginloadingsession-l5-lambda-efe1aacdc65c1acb51ca6cd303b70c1d"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_beginLoadingSession::__l5::<lambda_efe1aacdc65c1acb51ca6cd303b70c1d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_beginLoadingSession::__l5::<lambda_efe1aacdc65c1acb51ca6cd303b70c1d>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"options-loadoptions-l2-lambda-f2dc6bf19bfc274071900699a3267aab"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-loadoptions-l2-lambda-f2dc6bf19bfc274071900699a3267aab"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_loadOptions::__l2::<lambda_f2dc6bf19bfc274071900699a3267aab>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_loadOptions::__l2::<lambda_f2dc6bf19bfc274071900699a3267aab>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-loadoptions-l2-lambda-a60f418fafc87ff5dc33874f9996e92d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-loadoptions-l2-lambda-a60f418fafc87ff5dc33874f9996e92d"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_loadOptions::__l2::<lambda_a60f418fafc87ff5dc33874f9996e92d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_loadOptions::__l2::<lambda_a60f418fafc87ff5dc33874f9996e92d>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-loadoptions-l2-lambda-75c87264413dc083e0ecaa10c5192172"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-loadoptions-l2-lambda-75c87264413dc083e0ecaa10c5192172"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_loadOptions::__l2::<lambda_75c87264413dc083e0ecaa10c5192172>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_loadOptions::__l2::<lambda_75c87264413dc083e0ecaa10c5192172>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-save-l18-lambda-6f9032d848d392ddf02a80ada4c68215"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-save-l18-lambda-6f9032d848d392ddf02a80ada4c68215"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_save::__l18::<lambda_6f9032d848d392ddf02a80ada4c68215>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_save::__l18::<lambda_6f9032d848d392ddf02a80ada4c68215>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"options-saveasync-l2-lambda-79138d76ef9458f6e4612f819f3ab2ea"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-saveasync-l2-lambda-79138d76ef9458f6e4612f819f3ab2ea"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_saveAsync::__l2::<lambda_79138d76ef9458f6e4612f819f3ab2ea>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) Options::_saveAsync::__l2::<lambda_79138d76ef9458f6e4612f819f3ab2ea>\n{\n  Options *const __this;\n  std::shared_ptr<bool> hasFailedToSave;\n  _BYTE cachedSaveRequest[4];\n};\n\n")])])]),e("h3",{attrs:{id:"options-saveasync-l2-lambda-fbed4f7a7e8aeeddc0b8e4a80d747935"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-saveasync-l2-lambda-fbed4f7a7e8aeeddc0b8e4a80d747935"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_saveAsync::__l2::<lambda_fbed4f7a7e8aeeddc0b8e4a80d747935>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_saveAsync::__l2::<lambda_fbed4f7a7e8aeeddc0b8e4a80d747935>\n{\n  Options *const __this;\n  std::vector<std::pair<std::string,std::string >> settingsVec;\n  std::shared_ptr<bool> hasFailedToSave;\n};\n\n")])])]),e("h3",{attrs:{id:"options-saveasync-l2-lambda-79138d76ef9458f6e4612f819f3ab2ea-l8-lambda-0dfff5764f0623e212f81d2e2f8bfba1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-saveasync-l2-lambda-79138d76ef9458f6e4612f819f3ab2ea-l8-lambda-0dfff5764f0623e212f81d2e2f8bfba1"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_saveAsync::__l2::<lambda_79138d76ef9458f6e4612f819f3ab2ea>::()::__l8::<lambda_0dfff5764f0623e212f81d2e2f8bfba1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_saveAsync::__l2::<lambda_79138d76ef9458f6e4612f819f3ab2ea>::()::__l8::<lambda_0dfff5764f0623e212f81d2e2f8bfba1>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselflocks-l2-lambda-50fe63b9e25ac6375291495c25d838f4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselflocks-l2-lambda-50fe63b9e25ac6375291495c25d838f4"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfLocks::__l2::<lambda_50fe63b9e25ac6375291495c25d838f4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfLocks::__l2::<lambda_50fe63b9e25ac6375291495c25d838f4>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselflocks-l2-lambda-b5d6adc02c288532a55896180d04bcb6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselflocks-l2-lambda-b5d6adc02c288532a55896180d04bcb6"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfLocks::__l2::<lambda_b5d6adc02c288532a55896180d04bcb6>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfLocks::__l2::<lambda_b5d6adc02c288532a55896180d04bcb6>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselflocks-l2-lambda-a38362f13b6055cf66128de76723f3d8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselflocks-l2-lambda-a38362f13b6055cf66128de76723f3d8"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfLocks::__l2::<lambda_a38362f13b6055cf66128de76723f3d8>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfLocks::__l2::<lambda_a38362f13b6055cf66128de76723f3d8>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselflocks-l2-lambda-ac581a5d50fb80d69368380a8811d8a1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselflocks-l2-lambda-ac581a5d50fb80d69368380a8811d8a1"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfLocks::__l2::<lambda_ac581a5d50fb80d69368380a8811d8a1>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfLocks::__l2::<lambda_ac581a5d50fb80d69368380a8811d8a1>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselflocks-l2-lambda-57c624900efc65c068fad36bbfdbaebf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselflocks-l2-lambda-57c624900efc65c068fad36bbfdbaebf"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfLocks::__l2::<lambda_57c624900efc65c068fad36bbfdbaebf>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfLocks::__l2::<lambda_57c624900efc65c068fad36bbfdbaebf>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselflocks-l2-lambda-199adfe065c6dca797da5ce18416772e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselflocks-l2-lambda-199adfe065c6dca797da5ce18416772e"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfLocks::__l2::<lambda_199adfe065c6dca797da5ce18416772e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfLocks::__l2::<lambda_199adfe065c6dca797da5ce18416772e>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselflocks-l2-lambda-cd834d48ffb65032bb9f6c8cca8d0312"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselflocks-l2-lambda-cd834d48ffb65032bb9f6c8cca8d0312"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfLocks::__l2::<lambda_cd834d48ffb65032bb9f6c8cca8d0312>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfLocks::__l2::<lambda_cd834d48ffb65032bb9f6c8cca8d0312>\n{\n  Options::_registerSelfLocks::__l2::<lambda_199adfe065c6dca797da5ce18416772e> vrSnapLock;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselflocks-l2-lambda-86205ee13076472cb59fe87cb90a8ae9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselflocks-l2-lambda-86205ee13076472cb59fe87cb90a8ae9"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfLocks::__l2::<lambda_86205ee13076472cb59fe87cb90a8ae9>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfLocks::__l2::<lambda_86205ee13076472cb59fe87cb90a8ae9>\n{\n  Options::_registerSelfLocks::__l2::<lambda_199adfe065c6dca797da5ce18416772e> vrSnapLock;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselflocks-l2-lambda-b9da9739a53f45c8f2534e78482a8f15"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselflocks-l2-lambda-b9da9739a53f45c8f2534e78482a8f15"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfLocks::__l2::<lambda_b9da9739a53f45c8f2534e78482a8f15>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfLocks::__l2::<lambda_b9da9739a53f45c8f2534e78482a8f15>\n{\n  Options::_registerSelfLocks::__l2::<lambda_199adfe065c6dca797da5ce18416772e> vrSnapLock;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselflocks-l2-lambda-0a437dfd734b2239b707d376daf7211a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselflocks-l2-lambda-0a437dfd734b2239b707d376daf7211a"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfLocks::__l2::<lambda_0a437dfd734b2239b707d376daf7211a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfLocks::__l2::<lambda_0a437dfd734b2239b707d376daf7211a>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselflocks-l2-lambda-de46fbdf10fbd5875880cec202917d13"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselflocks-l2-lambda-de46fbdf10fbd5875880cec202917d13"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfLocks::__l2::<lambda_de46fbdf10fbd5875880cec202917d13>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfLocks::__l2::<lambda_de46fbdf10fbd5875880cec202917d13>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l2-lambda-8728dfacd96bef3f811545e6af45195a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l2-lambda-8728dfacd96bef3f811545e6af45195a"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l2::<lambda_8728dfacd96bef3f811545e6af45195a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l2::<lambda_8728dfacd96bef3f811545e6af45195a>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l2-lambda-236561e98783743080cb37aab28a134f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l2-lambda-236561e98783743080cb37aab28a134f"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l2::<lambda_236561e98783743080cb37aab28a134f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l2::<lambda_236561e98783743080cb37aab28a134f>\n{\n  Options::_registerSelfObservers::__l2::<lambda_8728dfacd96bef3f811545e6af45195a> forEachGamePadRemapping;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l2-lambda-236561e98783743080cb37aab28a134f-l2-lambda-7ecfef012c0561dc8df6ecd46b929d09"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l2-lambda-236561e98783743080cb37aab28a134f-l2-lambda-7ecfef012c0561dc8df6ecd46b929d09"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l2::<lambda_236561e98783743080cb37aab28a134f>::()::__l2::<lambda_7ecfef012c0561dc8df6ecd46b929d09>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l2::<lambda_236561e98783743080cb37aab28a134f>::()::__l2::<lambda_7ecfef012c0561dc8df6ecd46b929d09>\n{\n  const bool newValue;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l2-lambda-da79e5db0113a982f326005a0df5fe67"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l2-lambda-da79e5db0113a982f326005a0df5fe67"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l2::<lambda_da79e5db0113a982f326005a0df5fe67>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l2::<lambda_da79e5db0113a982f326005a0df5fe67>\n{\n  Options::_registerSelfObservers::__l2::<lambda_8728dfacd96bef3f811545e6af45195a> forEachGamePadRemapping;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l2-lambda-da79e5db0113a982f326005a0df5fe67-l2-lambda-83afd32887477a4a48785321fb5da7ce"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l2-lambda-da79e5db0113a982f326005a0df5fe67-l2-lambda-83afd32887477a4a48785321fb5da7ce"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l2::<lambda_da79e5db0113a982f326005a0df5fe67>::()::__l2::<lambda_83afd32887477a4a48785321fb5da7ce>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l2::<lambda_da79e5db0113a982f326005a0df5fe67>::()::__l2::<lambda_83afd32887477a4a48785321fb5da7ce>\n{\n  const bool newValue;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l5-lambda-54a4fc15e87446e96720d7403f0c0d1e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l5-lambda-54a4fc15e87446e96720d7403f0c0d1e"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l5::<lambda_54a4fc15e87446e96720d7403f0c0d1e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l5::<lambda_54a4fc15e87446e96720d7403f0c0d1e>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l5-lambda-557bf8d5cc55e77fe80dd091c4484c9d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l5-lambda-557bf8d5cc55e77fe80dd091c4484c9d"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l5::<lambda_557bf8d5cc55e77fe80dd091c4484c9d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l5::<lambda_557bf8d5cc55e77fe80dd091c4484c9d>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l2-lambda-83f555d90a49e0a1b25a0ec40e3fff25"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l2-lambda-83f555d90a49e0a1b25a0ec40e3fff25"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l2::<lambda_83f555d90a49e0a1b25a0ec40e3fff25>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l2::<lambda_83f555d90a49e0a1b25a0ec40e3fff25>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l2-lambda-e30f9b834d00dfc3dd4e96db8a3a5bea"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l2-lambda-e30f9b834d00dfc3dd4e96db8a3a5bea"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l2::<lambda_e30f9b834d00dfc3dd4e96db8a3a5bea>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l2::<lambda_e30f9b834d00dfc3dd4e96db8a3a5bea>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l2-lambda-64ef34ccf9fab49f51aa313471ca3845"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l2-lambda-64ef34ccf9fab49f51aa313471ca3845"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l2::<lambda_64ef34ccf9fab49f51aa313471ca3845>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l2::<lambda_64ef34ccf9fab49f51aa313471ca3845>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l2-lambda-c77648a2d5ed4dd75b935a12e6167dc4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l2-lambda-c77648a2d5ed4dd75b935a12e6167dc4"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l2::<lambda_c77648a2d5ed4dd75b935a12e6167dc4>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l2::<lambda_c77648a2d5ed4dd75b935a12e6167dc4>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l2-lambda-153f972500716c6f966a5058a0a6e79d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l2-lambda-153f972500716c6f966a5058a0a6e79d"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l2::<lambda_153f972500716c6f966a5058a0a6e79d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l2::<lambda_153f972500716c6f966a5058a0a6e79d>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerselfobservers-l2-lambda-e4f03c81be69e05a90c38d508926b073"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerselfobservers-l2-lambda-e4f03c81be69e05a90c38d508926b073"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerSelfObservers::__l2::<lambda_e4f03c81be69e05a90c38d508926b073>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerSelfObservers::__l2::<lambda_e4f03c81be69e05a90c38d508926b073>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-setoptioncallbacks-l2-lambda-2baa0dd320795f4976a4bc2b9c2a8c73"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-setoptioncallbacks-l2-lambda-2baa0dd320795f4976a4bc2b9c2a8c73"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_setOptionCallbacks::__l2::<lambda_2baa0dd320795f4976a4bc2b9c2a8c73>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_setOptionCallbacks::__l2::<lambda_2baa0dd320795f4976a4bc2b9c2a8c73>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-setoptioncallbacks-l2-lambda-977405555789dcffc289e657addad1ed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-setoptioncallbacks-l2-lambda-977405555789dcffc289e657addad1ed"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_setOptionCallbacks::__l2::<lambda_977405555789dcffc289e657addad1ed>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_setOptionCallbacks::__l2::<lambda_977405555789dcffc289e657addad1ed>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"options-setoptioncallbacks-l2-lambda-adeaa5a7f14542839dda6e3dd82859e5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-setoptioncallbacks-l2-lambda-adeaa5a7f14542839dda6e3dd82859e5"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_setOptionCallbacks::__l2::<lambda_adeaa5a7f14542839dda6e3dd82859e5>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_setOptionCallbacks::__l2::<lambda_adeaa5a7f14542839dda6e3dd82859e5>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"options-registeroption-l2-lambda-66976bbdee59fb67fe1feb36db4af030"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registeroption-l2-lambda-66976bbdee59fb67fe1feb36db4af030"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerOption::__l2::<lambda_66976bbdee59fb67fe1feb36db4af030>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerOption::__l2::<lambda_66976bbdee59fb67fe1feb36db4af030>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-ctor-l14-lambda-fa4403c1a03d594c6268b771c878a778"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-ctor-l14-lambda-fa4403c1a03d594c6268b771c878a778"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::{ctor}::__l14::<lambda_fa4403c1a03d594c6268b771c878a778>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::{ctor}::__l14::<lambda_fa4403c1a03d594c6268b771c878a778>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registerchatoptions-l2-lambda-4b61316cf59efab0fcdfe3f771b9653b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registerchatoptions-l2-lambda-4b61316cf59efab0fcdfe3f771b9653b"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerChatOptions::__l2::<lambda_4b61316cf59efab0fcdfe3f771b9653b>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerChatOptions::__l2::<lambda_4b61316cf59efab0fcdfe3f771b9653b>\n{\n  Options *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"ownerstorageshareptr-fogdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerstorageshareptr-fogdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerStorageSharePtr<FogDefinition>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnerStorageSharePtr<FogDefinition>\n{\n  std::shared_ptr<FogDefinition> mValue;\n};\n\n")])])]),e("h3",{attrs:{id:"owneddurablespagingcache-performbatchedsearch-l2-lambda-b134f75ebce8a481f3da8d26d3d4bddf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-performbatchedsearch-l2-lambda-b134f75ebce8a481f3da8d26d3d4bddf"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::_performBatchedSearch::__l2::<lambda_b134f75ebce8a481f3da8d26d3d4bddf>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnedDurablesPagingCache::_performBatchedSearch::__l2::<lambda_b134f75ebce8a481f3da8d26d3d4bddf>\n{\n  OwnedDurablesPagingCache *const __this;\n  std::shared_ptr<std::vector<mce::UUID> > packIdBatch;\n  std::shared_ptr<OwnedDurablesPagingCache::AggregateResults> sharedResults;\n};\n\n")])])]),e("h3",{attrs:{id:"owneddurablespagingcache-sortdociteratorsby-l2-lambda-709068024ba758914a8b9be0575b359c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-709068024ba758914a8b9be0575b359c"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_709068024ba758914a8b9be0575b359c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_709068024ba758914a8b9be0575b359c>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"owneddurablespagingcache-sortdociteratorsby-l2-lambda-f79e648a61267cc2eba8fabdbac8c75a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-f79e648a61267cc2eba8fabdbac8c75a"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_f79e648a61267cc2eba8fabdbac8c75a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_f79e648a61267cc2eba8fabdbac8c75a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"owneddurablespagingcache-sortdociteratorsby-l2-lambda-278f90c39267690d5f8fd7879c8a262a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-278f90c39267690d5f8fd7879c8a262a"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_278f90c39267690d5f8fd7879c8a262a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_278f90c39267690d5f8fd7879c8a262a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"owneddurablespagingcache-sortdociteratorsby-l2-lambda-b101d75ce3122f6287edbbe29bc1860e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-b101d75ce3122f6287edbbe29bc1860e"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_b101d75ce3122f6287edbbe29bc1860e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_b101d75ce3122f6287edbbe29bc1860e>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"owneddurablespagingcache-sortdociteratorsby-l2-lambda-2352e89429b7cbbe1e610b942d38dc7a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-2352e89429b7cbbe1e610b942d38dc7a"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_2352e89429b7cbbe1e610b942d38dc7a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_2352e89429b7cbbe1e610b942d38dc7a>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"owneddurablespagingcache-sortdociteratorsby-l2-lambda-810c9df654a8be4ff39687782286a8a0"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-810c9df654a8be4ff39687782286a8a0"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_810c9df654a8be4ff39687782286a8a0>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_810c9df654a8be4ff39687782286a8a0>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"owneddurablespagingcache-sortdociteratorsby-l2-lambda-39e81e94d3d33a0f208a7c22f80c2a20"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-39e81e94d3d33a0f208a7c22f80c2a20"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_39e81e94d3d33a0f208a7c22f80c2a20>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_39e81e94d3d33a0f208a7c22f80c2a20>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"owneddurablespagingcache-sortdociteratorsby-l2-lambda-fb4fd9557833de1e6e3d537364831732"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-sortdociteratorsby-l2-lambda-fb4fd9557833de1e6e3d537364831732"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_fb4fd9557833de1e6e3d537364831732>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnedDurablesPagingCache::_sortDocIteratorsBy::__l2::<lambda_fb4fd9557833de1e6e3d537364831732>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oculuspostdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oculuspostdata"}},[t._v("#")]),t._v(" "),e("code",[t._v("OculusPostData")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OculusPostData\n{\n  const std::string mOculusAppId;\n  const std::string mLanguageCode;\n  const std::string mRegionCode;\n  const std::string mCustomerPurchaseId;\n  const std::string mOculusUserAccessToken;\n  const std::string mProductSku;\n};\n\n")])])]),e("h3",{attrs:{id:"oculusgetserviceticket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oculusgetserviceticket"}},[t._v("#")]),t._v(" "),e("code",[t._v("OculusGetServiceTicket")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OculusGetServiceTicket : RequestHandler\n{\n  std::string mClientId;\n  mce::UUID mCorrelationId;\n  std::function<void __cdecl(std::string const &)> mCallback;\n  std::shared_ptr<std::string > mServiceTicketResponse;\n};\n\n")])])]),e("h3",{attrs:{id:"oculusgetserviceticket-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oculusgetserviceticket-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OculusGetServiceTicket_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OculusGetServiceTicket_vtbl\n{\n  void (__fastcall *~RequestHandler)(RequestHandler *this);\n  void (__fastcall *send)(RequestHandler *this);\n  void (__fastcall *sendCachedRequest)(RequestHandler *this);\n  bool (__fastcall *update)(RequestHandler *this);\n  bool (__fastcall *isDone)(RequestHandler *this);\n  void (__fastcall *onComplete)(RequestHandler *this);\n  bool (__fastcall *canSendRequest)(RequestHandler *this);\n  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);\n};\n\n")])])]),e("h3",{attrs:{id:"oculuspostentitlement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oculuspostentitlement"}},[t._v("#")]),t._v(" "),e("code",[t._v("OculusPostEntitlement")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OculusPostEntitlement : RequestHandler\n{\n  OculusPostData mPostData;\n  mce::UUID mCorrelationId;\n  std::function<void __cdecl(bool)> mCallback;\n  std::shared_ptr<bool> mSuccess;\n};\n\n")])])]),e("h3",{attrs:{id:"oculuspostentitlement-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oculuspostentitlement-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OculusPostEntitlement_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OculusPostEntitlement_vtbl\n{\n  void (__fastcall *~RequestHandler)(RequestHandler *this);\n  void (__fastcall *send)(RequestHandler *this);\n  void (__fastcall *sendCachedRequest)(RequestHandler *this);\n  bool (__fastcall *update)(RequestHandler *this);\n  bool (__fastcall *isDone)(RequestHandler *this);\n  void (__fastcall *onComplete)(RequestHandler *this);\n  bool (__fastcall *canSendRequest)(RequestHandler *this);\n  void (__fastcall *fireTelemetry)(RequestHandler *this, IMinecraftEventing *);\n};\n\n")])])]),e("h3",{attrs:{id:"offerrepository-update-l25-lambda-872c40fd9efcbf74f55c70f8d9ffb74d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offerrepository-update-l25-lambda-872c40fd9efcbf74f55c70f8d9ffb74d"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferRepository::update::__l25::<lambda_872c40fd9efcbf74f55c70f8d9ffb74d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OfferRepository::update::__l25::<lambda_872c40fd9efcbf74f55c70f8d9ffb74d>\n{\n  OfferRepository *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"offerrepository-update-l22-lambda-8ae77870353b265a35b8d175223822f8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offerrepository-update-l22-lambda-8ae77870353b265a35b8d175223822f8"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferRepository::update::__l22::<lambda_8ae77870353b265a35b8d175223822f8>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OfferRepository::update::__l22::<lambda_8ae77870353b265a35b8d175223822f8>\n{\n  OfferRepository *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"offerrepository-beginasyncinit-l2-lambda-fe2a701c6f03e4c80ab08db13674b5da"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offerrepository-beginasyncinit-l2-lambda-fe2a701c6f03e4c80ab08db13674b5da"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferRepository::beginAsyncInit::__l2::<lambda_fe2a701c6f03e4c80ab08db13674b5da>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OfferRepository::beginAsyncInit::__l2::<lambda_fe2a701c6f03e4c80ab08db13674b5da>\n{\n  std::weak_ptr<OfferRepository> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"offerrepository-beginasyncinit-l2-lambda-0690b8f7dfc1d762a7c6c615b4ac4b94"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offerrepository-beginasyncinit-l2-lambda-0690b8f7dfc1d762a7c6c615b4ac4b94"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferRepository::beginAsyncInit::__l2::<lambda_0690b8f7dfc1d762a7c6c615b4ac4b94>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OfferRepository::beginAsyncInit::__l2::<lambda_0690b8f7dfc1d762a7c6c615b4ac4b94>\n{\n  std::weak_ptr<OfferRepository> weakThis;\n};\n\n")])])]),e("h3",{attrs:{id:"offerrepository-registerproductqueryattemptcallback-l2-lambda-36626fa5e6a2b1fdb27f2301632d6635"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offerrepository-registerproductqueryattemptcallback-l2-lambda-36626fa5e6a2b1fdb27f2301632d6635"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferRepository::registerProductQueryAttemptCallback::__l2::<lambda_36626fa5e6a2b1fdb27f2301632d6635>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OfferRepository::registerProductQueryAttemptCallback::__l2::<lambda_36626fa5e6a2b1fdb27f2301632d6635>\n{\n  std::shared_ptr<OfferRepository::ProductQueryAttemptResult> productQueryAttempted;\n};\n\n")])])]),e("h3",{attrs:{id:"outofcontroldefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#outofcontroldefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OutOfControlDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OutOfControlDefinition\n{\n};\n\n")])])]),e("h3",{attrs:{id:"outofcontrolcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#outofcontrolcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("OutOfControlComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OutOfControlComponent : IEntityComponent\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onuseonitemcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onuseonitemcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnUseOnItemComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnUseOnItemComponent : ItemComponent\n{\n  DefinitionTrigger mOnUseOn;\n};\n\n")])])]),e("h3",{attrs:{id:"onuseonitemcomponent-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onuseonitemcomponent-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnUseOnItemComponent_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnUseOnItemComponent_vtbl\n{\n  void (__fastcall *~ItemComponent)(ItemComponent *this);\n  bool (__fastcall *checkComponentDataForContentErrors)(ItemComponent *this);\n  void (__fastcall *writeSettings)(ItemComponent *this);\n  bool (__fastcall *useOn)(ItemComponent *this, ItemStack *, Actor *, const BlockPos *, unsigned __int8, const Vec3 *);\n  bool (__fastcall *isNetworkComponent)(ItemComponent *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(ItemComponent *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(ItemComponent *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"onfallontriggerdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onfallontriggerdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnFallOnTriggerDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OnFallOnTriggerDescription : BlockTriggerDescription<OnFallOnTrigger>\n{\n  float mMinimumFallDistance;\n};\n\n")])])]),e("h3",{attrs:{id:"onfallontriggerdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onfallontriggerdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnFallOnTriggerDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnFallOnTriggerDescription_vtbl\n{\n  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);\n  const std::string *(__fastcall *getName)(BlockComponentDescription *this);\n  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);\n  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,BlockComponentGroupDescription> > *, const BlockComponentFactory *);\n  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"onfallontrigger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onfallontrigger"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnFallOnTrigger")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OnFallOnTrigger : DefinitionTrigger\n{\n  float mMinimumFallDistance;\n};\n\n")])])]),e("h3",{attrs:{id:"onfallontriggerdescription-buildschema-l2-lambda-ff131107eb300bbd2c5caa396b00731d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onfallontriggerdescription-buildschema-l2-lambda-ff131107eb300bbd2c5caa396b00731d"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnFallOnTriggerDescription::buildSchema::__l2::<lambda_ff131107eb300bbd2c5caa396b00731d>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnFallOnTriggerDescription::buildSchema::__l2::<lambda_ff131107eb300bbd2c5caa396b00731d>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onfallontriggerdescription-buildschema-l2-lambda-faf42de703e4e5a4c3f6fb1f94959021"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onfallontriggerdescription-buildschema-l2-lambda-faf42de703e4e5a4c3f6fb1f94959021"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnFallOnTriggerDescription::buildSchema::__l2::<lambda_faf42de703e4e5a4c3f6fb1f94959021>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnFallOnTriggerDescription::buildSchema::__l2::<lambda_faf42de703e4e5a4c3f6fb1f94959021>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onfallontriggerdescription-buildschema-l2-lambda-b614e50d91add974a8a52f7400d9d361"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onfallontriggerdescription-buildschema-l2-lambda-b614e50d91add974a8a52f7400d9d361"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnFallOnTriggerDescription::buildSchema::__l2::<lambda_b614e50d91add974a8a52f7400d9d361>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnFallOnTriggerDescription::buildSchema::__l2::<lambda_b614e50d91add974a8a52f7400d9d361>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onfallontriggerdescription-buildschema-l2-lambda-654a272ba692830cd3f5ce995706e46f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onfallontriggerdescription-buildschema-l2-lambda-654a272ba692830cd3f5ce995706e46f"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnFallOnTriggerDescription::buildSchema::__l2::<lambda_654a272ba692830cd3f5ce995706e46f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnFallOnTriggerDescription::buildSchema::__l2::<lambda_654a272ba692830cd3f5ce995706e46f>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onfallontriggerdescription-buildschema-l2-lambda-c92ebfb32705be8ff950d83fc5ef4c37"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onfallontriggerdescription-buildschema-l2-lambda-c92ebfb32705be8ff950d83fc5ef4c37"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnFallOnTriggerDescription::buildSchema::__l2::<lambda_c92ebfb32705be8ff950d83fc5ef4c37>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnFallOnTriggerDescription::buildSchema::__l2::<lambda_c92ebfb32705be8ff950d83fc5ef4c37>\n{\n  const BlockComponentFactory *factory;\n};\n\n")])])]),e("h3",{attrs:{id:"oninteracttriggerdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oninteracttriggerdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnInteractTriggerDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnInteractTriggerDescription : BlockTriggerDescription<OnInteractTrigger>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oninteracttriggerdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oninteracttriggerdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnInteractTriggerDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnInteractTriggerDescription_vtbl\n{\n  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);\n  const std::string *(__fastcall *getName)(BlockComponentDescription *this);\n  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);\n  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,BlockComponentGroupDescription> > *, const BlockComponentFactory *);\n  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"oninteracttrigger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oninteracttrigger"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnInteractTrigger")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnInteractTrigger : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onplacedtriggerdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onplacedtriggerdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnPlacedTriggerDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnPlacedTriggerDescription : BlockTriggerDescription<OnPlacedTrigger>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onplacedtriggerdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onplacedtriggerdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnPlacedTriggerDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnPlacedTriggerDescription_vtbl\n{\n  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);\n  const std::string *(__fastcall *getName)(BlockComponentDescription *this);\n  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);\n  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,BlockComponentGroupDescription> > *, const BlockComponentFactory *);\n  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"onplacedtrigger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onplacedtrigger"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnPlacedTrigger")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnPlacedTrigger : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onplayerdestroyedtriggerdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onplayerdestroyedtriggerdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnPlayerDestroyedTriggerDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnPlayerDestroyedTriggerDescription : BlockTriggerDescription<OnPlayerDestroyedTrigger>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onplayerdestroyedtriggerdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onplayerdestroyedtriggerdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnPlayerDestroyedTriggerDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnPlayerDestroyedTriggerDescription_vtbl\n{\n  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);\n  const std::string *(__fastcall *getName)(BlockComponentDescription *this);\n  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);\n  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,BlockComponentGroupDescription> > *, const BlockComponentFactory *);\n  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"onplayerdestroyedtrigger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onplayerdestroyedtrigger"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnPlayerDestroyedTrigger")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnPlayerDestroyedTrigger : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onplayerplacingtriggerdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onplayerplacingtriggerdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnPlayerPlacingTriggerDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnPlayerPlacingTriggerDescription : BlockTriggerDescription<OnPlayerPlacingTrigger>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onplayerplacingtriggerdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onplayerplacingtriggerdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnPlayerPlacingTriggerDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnPlayerPlacingTriggerDescription_vtbl\n{\n  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);\n  const std::string *(__fastcall *getName)(BlockComponentDescription *this);\n  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);\n  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,BlockComponentGroupDescription> > *, const BlockComponentFactory *);\n  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"onplayerplacingtrigger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onplayerplacingtrigger"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnPlayerPlacingTrigger")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnPlayerPlacingTrigger : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onstepontriggerdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onstepontriggerdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnStepOnTriggerDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnStepOnTriggerDescription : BlockTriggerDescription<OnStepOnTrigger>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onstepontriggerdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onstepontriggerdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnStepOnTriggerDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnStepOnTriggerDescription_vtbl\n{\n  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);\n  const std::string *(__fastcall *getName)(BlockComponentDescription *this);\n  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);\n  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,BlockComponentGroupDescription> > *, const BlockComponentFactory *);\n  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"onstepofftriggerdescription"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onstepofftriggerdescription"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnStepOffTriggerDescription")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnStepOffTriggerDescription : BlockTriggerDescription<OnStepOffTrigger>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onstepofftriggerdescription-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onstepofftriggerdescription-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnStepOffTriggerDescription_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OnStepOffTriggerDescription_vtbl\n{\n  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);\n  const std::string *(__fastcall *getName)(BlockComponentDescription *this);\n  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);\n  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,BlockComponentGroupDescription> > *, const BlockComponentFactory *);\n  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);\n};\n\n")])])]),e("h3",{attrs:{id:"onstepofftrigger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onstepofftrigger"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnStepOffTrigger")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnStepOffTrigger : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onstepontrigger"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onstepontrigger"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnStepOnTrigger")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnStepOnTrigger : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"ownerptrt-shareptrreftraits-fogdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerptrt-shareptrreftraits-fogdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerPtrT<SharePtrRefTraits<FogDefinition> >")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnerPtrT<SharePtrRefTraits<FogDefinition> > : OwnerStorageSharePtr<FogDefinition>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"opendoorannotationcomponent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opendoorannotationcomponent"}},[t._v("#")]),t._v(" "),e("code",[t._v("OpenDoorAnnotationComponent")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OpenDoorAnnotationComponent : IEntityComponent\n{\n  std::queue<BlockPos> mPassedDoorPositions;\n};\n\n")])])]),e("h3",{attrs:{id:"onignitedefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onignitedefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnIgniteDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnIgniteDefinition : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onfriendlyangerdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onfriendlyangerdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnFriendlyAngerDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnFriendlyAngerDefinition : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"opendoorannotationsystem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opendoorannotationsystem"}},[t._v("#")]),t._v(" "),e("code",[t._v("OpenDoorAnnotationSystem")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OpenDoorAnnotationSystem : ITickingSystem\n{\n};\n\n")])])]),e("h3",{attrs:{id:"opendoorannotationsystem-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opendoorannotationsystem-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OpenDoorAnnotationSystem_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OpenDoorAnnotationSystem_vtbl\n{\n  void (__fastcall *~ITickingSystem)(ITickingSystem *this);\n  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);\n};\n\n")])])]),e("h3",{attrs:{id:"observingnetworkpeer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#observingnetworkpeer"}},[t._v("#")]),t._v(" "),e("code",[t._v("ObservingNetworkPeer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj ObservingNetworkPeer : NetworkPeer\n{\n  NetworkIdentifier mId;\n  PacketObserver *mPacketObserver;\n};\n\n")])])]),e("h3",{attrs:{id:"observingnetworkpeer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#observingnetworkpeer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("ObservingNetworkPeer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ ObservingNetworkPeer_vtbl\n{\n  void (__fastcall *~NetworkPeer)(NetworkPeer *this);\n  void (__fastcall *sendPacket)(NetworkPeer *this, const std::string *, NetworkPeer::Reliability, int, unsigned __int16, Compressibility);\n  NetworkPeer::DataStatus (__fastcall *receivePacket)(NetworkPeer *this, std::string *);\n  NetworkPeer::NetworkStatus *(__fastcall *getNetworkStatus)(NetworkPeer *this, NetworkPeer::NetworkStatus *result);\n  void (__fastcall *addIncomingData)(NetworkPeer *this, std::string);\n  void (__fastcall *update)(NetworkPeer *this);\n  void (__fastcall *flush)(NetworkPeer *this, std::function<void __cdecl(void)> *);\n};\n\n")])])]),e("h3",{attrs:{id:"option-setoverridesource-l8-lambda-b12e3f1582359f44e815cb61e571f14c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#option-setoverridesource-l8-lambda-b12e3f1582359f44e815cb61e571f14c"}},[t._v("#")]),t._v(" "),e("code",[t._v("Option::setOverrideSource::__l8::<lambda_b12e3f1582359f44e815cb61e571f14c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Option::setOverrideSource::__l8::<lambda_b12e3f1582359f44e815cb61e571f14c>\n{\n  Option *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"option-setoverridesource-l8-lambda-0267e32cdc5641c5ccc3bda66d66248e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#option-setoverridesource-l8-lambda-0267e32cdc5641c5ccc3bda66d66248e"}},[t._v("#")]),t._v(" "),e("code",[t._v("Option::setOverrideSource::__l8::<lambda_0267e32cdc5641c5ccc3bda66d66248e>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Option::setOverrideSource::__l8::<lambda_0267e32cdc5641c5ccc3bda66d66248e>\n{\n  Option *const __this;\n};\n\n")])])]),e("h3",{attrs:{id:"opcommand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opcommand"}},[t._v("#")]),t._v(" "),e("code",[t._v("OpCommand")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OpCommand : ServerCommand\n{\n  CommandSelector<Player> mTargets;\n};\n\n")])])]),e("h3",{attrs:{id:"opcommand-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opcommand-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OpCommand_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OpCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),e("h3",{attrs:{id:"ontargetacquireddefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ontargetacquireddefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnTargetAcquiredDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnTargetAcquiredDefinition : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"ontargetescapedefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ontargetescapedefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnTargetEscapeDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnTargetEscapeDefinition : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onhurtdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onhurtdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnHurtDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnHurtDefinition : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"ondeathdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ondeathdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnDeathDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnDeathDefinition : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onhurtbyplayerdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onhurtbyplayerdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnHurtByPlayerDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnHurtByPlayerDefinition : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onstartlandingdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onstartlandingdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnStartLandingDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnStartLandingDefinition : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onstarttakeoffdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onstarttakeoffdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnStartTakeoffDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnStartTakeoffDefinition : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onwakewithownerdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onwakewithownerdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnWakeWithOwnerDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnWakeWithOwnerDefinition : DefinitionTrigger\n{\n};\n\n")])])]),e("h3",{attrs:{id:"offerflowergoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offerflowergoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferFlowerGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OfferFlowerGoal : Goal\n{\n  TempEPtr<Mob> mOfferedToMob;\n  int mGameTicks;\n  IronGolem *mGolem;\n};\n\n")])])]),e("h3",{attrs:{id:"offerflowergoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offerflowergoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OfferFlowerGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OfferFlowerGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),e("h3",{attrs:{id:"ocelot"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ocelot"}},[t._v("#")]),t._v(" "),e("code",[t._v("Ocelot")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Ocelot : Animal\n{\n};\n\n")])])]),e("h3",{attrs:{id:"offhandcontainermodel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offhandcontainermodel"}},[t._v("#")]),t._v(" "),e("code",[t._v("OffhandContainerModel")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OffhandContainerModel : ContainerModel\n{\n  Player *mPlayer;\n};\n\n")])])]),e("h3",{attrs:{id:"offhandcontainermodel-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#offhandcontainermodel-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OffhandContainerModel_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OffhandContainerModel_vtbl\n{\n  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);\n  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);\n  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);\n  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);\n  void (__fastcall *postInit)(ContainerModel *this);\n  void (__fastcall *releaseResources)(ContainerModel *this);\n  int (__fastcall *getContainerSize)(ContainerModel *this);\n  int (__fastcall *getFilteredContainerSize)(ContainerModel *this);\n  void (__fastcall *tick)(ContainerModel *this, int);\n  ContainerWeakRef *(__fastcall *getContainerWeakRef)(ContainerModel *this, ContainerWeakRef *result);\n  const ItemStack *(__fastcall *getItemStack)(ContainerModel *this, int);\n  const std::vector<ItemStack> *(__fastcall *getItems)(ContainerModel *this);\n  const ItemInstance *(__fastcall *getItemInstance)(ContainerModel *this, int);\n  const ItemStackBase *(__fastcall *getItemStackBase)(ContainerModel *this, int);\n  bool (__fastcall *isItemInstanceBased)(ContainerModel *this);\n  void (__fastcall *setItem)(ContainerModel *this, int, const ItemStack *);\n  bool (__fastcall *isValid)(ContainerModel *this);\n  bool (__fastcall *isItemFiltered)(ContainerModel *this, const ItemStackBase *);\n  bool (__fastcall *isExpanableItemFiltered)(ContainerModel *this, int);\n  ContainerExpandStatus (__fastcall *getItemExpandStatus)(ContainerModel *this, int);\n  const std::string *(__fastcall *getItemGroupName)(ContainerModel *this, int);\n  void (__fastcall *switchItemExpando)(ContainerModel *this, int);\n  Container *(__fastcall *_getContainer)(ContainerModel *this);\n  int (__fastcall *_getContainerOffset)(ContainerModel *this);\n  void (__fastcall *_onItemChanged)(ContainerModel *this, int, const ItemStack *, const ItemStack *);\n};\n\n")])])]),e("h3",{attrs:{id:"overworldheightattributes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overworldheightattributes"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverworldHeightAttributes")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OverworldHeightAttributes\n{\n  BiomeHeight mHeightParams;\n};\n\n")])])]),e("h3",{attrs:{id:"observerblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#observerblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("ObserverBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj ObserverBlock : FaceDirectionalBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"observerblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#observerblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("ObserverBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ ObserverBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"obsidianblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#obsidianblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("ObsidianBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) ObsidianBlock : BlockLegacy\n{\n  bool mIsGlowing;\n};\n\n")])])]),e("h3",{attrs:{id:"obsidianblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#obsidianblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("ObsidianBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ ObsidianBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"oldleafblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oldleafblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("OldLeafBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OldLeafBlock : LeafBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oldleafblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oldleafblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OldLeafBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OldLeafBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getExtraResourceItem)(LeafBlock *this, ItemInstance *result, const Block *);\n};\n\n")])])]),e("h3",{attrs:{id:"oldlogblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oldlogblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("OldLogBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OldLogBlock : LogBlock\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oldlogblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oldlogblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OldLogBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OldLogBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"oreblock"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oreblock"}},[t._v("#")]),t._v(" "),e("code",[t._v("OreBlock")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OreBlock : BlockLegacy\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oreblock-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oreblock-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OreBlock_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OreBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),e("h3",{attrs:{id:"orefeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#orefeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("OreFeature")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OreFeature : IFeature\n{\n  int mCount;\n  float mCountf;\n  float mCountfInv;\n  BlockDescriptor mBlock;\n  std::vector<BlockDescriptor> mMayReplace;\n  std::set<Block const *> mMatchBlocks;\n};\n\n")])])]),e("h3",{attrs:{id:"orefeature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#orefeature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OreFeature_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OreFeature_vtbl\n{\n  void (__fastcall *~IFeature)(IFeature *this);\n  std::optional<BlockPos> *(__fastcall *place)(IFeature *this, std::optional<BlockPos> *result, IBlockWorldGenAPI *, const BlockPos *, Random *, RenderParams *);\n  std::string *(__fastcall *getStructureName)(IFeature *this, std::string *result);\n  bool (__fastcall *parse)(IFeature *this, const rapidjson::GenericValue<rapidjson::UTF8<char>,rapidjson::MemoryPoolAllocator<rapidjson::CrtAllocator> > *, IWorldRegistriesProvider *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmixerlayer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmixerlayer"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMixerLayer")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMixerLayer : MixerLayer<Biome *,Biome *,enum BiomeTemperatureCategory>\n{\n  Biome *mGenericShallowOcean;\n  Biome *mGenericDeepOcean;\n  std::vector<std::pair<Biome *,unsigned int>> mShallowOceanBiomes[5];\n  std::vector<std::pair<Biome *,unsigned int>> mDeepOceanBiomes[5];\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmixerlayer-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmixerlayer-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMixerLayer_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMixerLayer_vtbl\n{\n  void (__fastcall *~LayerBase)(LayerDetails::LayerBase *this);\n  void (__fastcall *init)(LayerDetails::LayerBase *this, __int64);\n  LayerDetails::TransferData<Biome *> *(__fastcall *_allocateAndFill)(Layer<Biome *> *this, LayerDetails::TransferData<Biome *> *result, unsigned __int64, int, int, unsigned int, unsigned int);\n  void (__fastcall *_fillArea)(MixerLayer<Biome *,Biome *,enum BiomeTemperatureCategory> *this, LayerDetails::WorkingData<Biome *,Biome *> *, int, int, int, int, int, LayerResult<enum BiomeTemperatureCategory>);\n  std::tuple<int,int,unsigned int,unsigned int> *(__fastcall *_getAreaRead)(MixerLayer<Biome *,Biome *,enum BiomeTemperatureCategory> *this, std::tuple<int,int,unsigned int,unsigned int> *result, int, int, unsigned int, unsigned int);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmixerlayer-ctor-l2-lambda-12b4dbfeadd327d72f7fe23713e095d6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmixerlayer-ctor-l2-lambda-12b4dbfeadd327d72f7fe23713e095d6"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMixerLayer::{ctor}::__l2::<lambda_12b4dbfeadd327d72f7fe23713e095d6>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMixerLayer::{ctor}::__l2::<lambda_12b4dbfeadd327d72f7fe23713e095d6>\n{\n  OceanMixerLayer *const __this;\n  const TagRegistry<IDType<BiomeTagIDType>,IDType<BiomeTagSetIDType> > *tagRegistry;\n  const WellKnownBiomeTags *wellKnownBiomeTags;\n};\n\n")])])]),e("h3",{attrs:{id:"overworldlighttextureimagebuilder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overworldlighttextureimagebuilder"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverworldLightTextureImageBuilder")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OverworldLightTextureImageBuilder : BaseLightTextureImageBuilder\n{\n};\n\n")])])]),e("h3",{attrs:{id:"overworldlighttextureimagebuilder-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overworldlighttextureimagebuilder-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverworldLightTextureImageBuilder_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OverworldLightTextureImageBuilder_vtbl\n{\n  void (__fastcall *~BaseLightTextureImageBuilder)(BaseLightTextureImageBuilder *this);\n  void (__fastcall *init)(BaseLightTextureImageBuilder *this, Dimension *);\n  bool (__fastcall *buildImage)(BaseLightTextureImageBuilder *this, const BaseLightData *, mce::Image *, unsigned int, float, float, bool);\n  void (__fastcall *getModifiedBlockBrightnessColor)(BaseLightTextureImageBuilder *this, const BlockPos *, const Block *, const Brightness *, BrightnessPair *);\n  std::unique_ptr<BaseLightData> *(__fastcall *createBaseLightTextureData)(BaseLightTextureImageBuilder *this, std::unique_ptr<BaseLightData> *result, IClientInstance *, const BaseLightData *);\n};\n\n")])])]),e("h3",{attrs:{id:"ocelotattackdefinition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ocelotattackdefinition"}},[t._v("#")]),t._v(" "),e("code",[t._v("OcelotAttackDefinition")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OcelotAttackDefinition : BaseGoalDefinition\n{\n  float mCooldownTime;\n  float mMaxRotationX;\n  float mMaxHeadRotationY;\n  float mMaxDistance;\n  float mMaxSneakRange;\n  float mMaxSprintRange;\n  float mReachMultiplier;\n  float mSneakSpeedModifier;\n  float mSprintSpeedModifier;\n  float mWalkSpeedModifier;\n};\n\n")])])]),e("h3",{attrs:{id:"ocelotattackdefinition-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ocelotattackdefinition-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OcelotAttackDefinition_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OcelotAttackDefinition_vtbl\n{\n  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);\n  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);\n  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);\n};\n\n")])])]),e("h3",{attrs:{id:"ocelotattackgoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ocelotattackgoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("OcelotAttackGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OcelotAttackGoal : Goal\n{\n  Mob *mMob;\n  int mAttackTicks;\n  int mCooldownTicks;\n  float mMaxRotationX;\n  float mMaxHeadRotationY;\n  float mMaxDistance;\n  float mMaxSneakRange;\n  float mMaxSprintRange;\n  float mReachMultiplier;\n  float mSneakSpeedModifier;\n  float mSprintSpeedModifier;\n  float mWalkSpeedModifier;\n};\n\n")])])]),e("h3",{attrs:{id:"ocelotattackgoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ocelotattackgoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OcelotAttackGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OcelotAttackGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),e("h3",{attrs:{id:"ocelotsitonblockgoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ocelotsitonblockgoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("OcelotSitOnBlockGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OcelotSitOnBlockGoal : BaseMoveToBlockGoal\n{\n  Mob *mMob;\n};\n\n")])])]),e("h3",{attrs:{id:"ocelotsitonblockgoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ocelotsitonblockgoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OcelotSitOnBlockGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OcelotSitOnBlockGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n  bool (__fastcall *hasReachedTarget)(BaseMoveToGoal *this);\n  bool (__fastcall *isValidTarget)(BaseMoveToGoal *this, BlockSource *, const BlockPos *);\n  int (__fastcall *_nextStartTick)(BaseMoveToGoal *this);\n  bool (__fastcall *_canReach)(BaseMoveToGoal *this, const BlockPos *);\n  void (__fastcall *_moveToBlock)(BaseMoveToGoal *this);\n  Vec3 *(__fastcall *_getTargetPosition)(BaseMoveToGoal *this, Vec3 *result);\n  unsigned __int64 (__fastcall *_getRepathTime)(BaseMoveToGoal *this);\n  bool (__fastcall *findTargetBlock)(BaseMoveToBlockGoal *this);\n};\n\n")])])]),e("h3",{attrs:{id:"opendoorgoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opendoorgoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("OpenDoorGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OpenDoorGoal : DoorInteractGoal\n{\n  bool mCloseDoor;\n  int mForgetTime;\n  Mob *mMob;\n};\n\n")])])]),e("h3",{attrs:{id:"opendoorgoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opendoorgoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OpenDoorGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OpenDoorGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),e("h3",{attrs:{id:"ownerhurtbytargetgoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerhurtbytargetgoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerHurtByTargetGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnerHurtByTargetGoal : TargetGoal\n{\n  TempEPtr<Mob> mOwnerHurtBy;\n  Mob *mMob;\n};\n\n")])])]),e("h3",{attrs:{id:"ownerhurtbytargetgoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerhurtbytargetgoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerHurtByTargetGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OwnerHurtByTargetGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n  bool (__fastcall *_canAttack)(TargetGoal *this, Mob *, Actor *, bool, bool, const MobDescriptor **);\n};\n\n")])])]),e("h3",{attrs:{id:"ownerhurttargetgoal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerhurttargetgoal"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerHurtTargetGoal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OwnerHurtTargetGoal : TargetGoal\n{\n  TempEPtr<Mob> mLastOwnerHurt;\n  Mob *mMob;\n  int mTimestamp;\n};\n\n")])])]),e("h3",{attrs:{id:"ownerhurttargetgoal-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ownerhurttargetgoal-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnerHurtTargetGoal_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OwnerHurtTargetGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n  bool (__fastcall *_canAttack)(TargetGoal *this, Mob *, Actor *, bool, bool, const MobDescriptor **);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentstart"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentstart"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentStart")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OceanMonumentStart : StructureStart\n{\n  bool isCreated;\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentstart-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentstart-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentStart_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentStart_vtbl\n{\n  void (__fastcall *~StructureStart)(StructureStart *this);\n  bool (__fastcall *postProcess)(StructureStart *this, BlockSource *, Random *, const BoundingBox *);\n  bool (__fastcall *isValid)(StructureStart *this);\n  StructureFeatureType (__fastcall *getType)(StructureStart *this);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanruinstart"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanruinstart"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanRuinStart")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OceanRuinStart : StructureStart\n{\n  OceanRuinConfiguration mConfig;\n};\n\n")])])]),e("h3",{attrs:{id:"oceanruinstart-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanruinstart-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanRuinStart_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanRuinStart_vtbl\n{\n  void (__fastcall *~StructureStart)(StructureStart *this);\n  bool (__fastcall *postProcess)(StructureStart *this, BlockSource *, Random *, const BoundingBox *);\n  bool (__fastcall *isValid)(StructureStart *this);\n  StructureFeatureType (__fastcall *getType)(StructureStart *this);\n};\n\n")])])]),e("h3",{attrs:{id:"overworldgenerator-threaddata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overworldgenerator-threaddata"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverworldGenerator::ThreadData")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OverworldGenerator::ThreadData\n{\n  std::array<float,1024> buffer;\n  std::array<float,256> depthBuffer;\n  std::array<float,256> dataBuffer;\n  std::array<Block const *,32768> blockBuffer;\n  float *fi;\n  float *fis;\n  Random random;\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentfeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentfeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentFeature")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMonumentFeature : StructureFeature\n{\n  int mMonumentSpacing;\n  int mMinMonumentSeparation;\n  std::vector<int> allowedBiomes;\n  std::vector<int> allowedSpawnBiomes;\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentfeature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentfeature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentFeature_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentFeature_vtbl\n{\n  void (__fastcall *~StructureFeature)(StructureFeature *this);\n  bool (__fastcall *postProcess)(StructureFeature *this, BlockSource *, Random *, int, int);\n  bool (__fastcall *getNearestGeneratedFeature)(StructureFeature *this, Dimension *, BiomeSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *isFeatureChunk)(StructureFeature *this, const BiomeSource *, Random *, const ChunkPos *, unsigned int);\n  std::unique_ptr<StructureStart> *(__fastcall *createStructureStart)(StructureFeature *this, std::unique_ptr<StructureStart> *result, Dimension *, BiomeSource *, Random *, const ChunkPos *);\n  StructureStart *(__fastcall *getStructureAt)(StructureFeature *this, int, int, int);\n  std::vector<BlockPos> *(__fastcall *getGuesstimatedFeaturePositions)(StructureFeature *this, std::vector<BlockPos> *result);\n};\n\n")])])]),e("h3",{attrs:{id:"overworldgenerator"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overworldgenerator"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverworldGenerator")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OverworldGenerator : ChunkSource, WorldGenerator\n{\n  const bool legacyDevice;\n  BeardKernel mBeardKernel;\n  std::unique_ptr<PerlinNoise> minLimitPerlinNoise;\n  std::unique_ptr<PerlinNoise> maxLimitPerlinNoise;\n  std::unique_ptr<PerlinNoise> mainPerlinNoise;\n  std::unique_ptr<PerlinSimplexNoise> surfaceNoise;\n  std::unique_ptr<PerlinNoise> scaleNoise;\n  std::unique_ptr<PerlinNoise> depthNoise;\n  std::unique_ptr<PerlinNoise> forestNoise;\n  std::unique_ptr<PerlinSimplexNoise> mMaterialAdjNoise;\n  float biomeWeights[25];\n  __declspec(align(8)) Bedrock::Threading::InstancedThreadLocal<OverworldGenerator::ThreadData,std::allocator<OverworldGenerator::ThreadData> > generatorHelpersPool;\n  VillageFeature villageFeature;\n  StrongholdFeature strongholdFeature;\n  RandomScatteredLargeFeature scatteredFeature;\n  MineshaftFeature mineshaftFeature;\n  MonsterRoomFeature monsterRoomFeature;\n  OceanMonumentFeature oceanMonumentFeature;\n  OceanRuinFeature oceanRuinFeature;\n  WoodlandMansionFeature woodlandMansionFeature;\n  ShipwreckFeature shipwreckFeature;\n  RuinedPortalFeature ruinedPortalFeature;\n  BuriedTreasureFeature buriedChestFeature;\n  LargeCaveFeature caveFeature;\n  CanyonFeature canyonFeature;\n  UnderwaterLargeCaveFeature underwaterCaveFeature;\n  UnderwaterCanyonFeature underwaterCanyonFeature;\n  PillagerOutpostFeature pillagerOutpostFeature;\n  std::shared_ptr<Layer<Biome *> const > mBlockResolutionLayer;\n  std::shared_ptr<Layer<Biome *> const > m4x4ResolutionLayer;\n  std::shared_ptr<BiomeSourceGetBiomeCache> mBiomeSourceCache;\n  const Biome *mBiomeOverride;\n  std::shared_mutex mTryGetHeightMutex;\n  std::unordered_map<BlockPos,int> mHeightCache;\n};\n\n")])])]),e("h3",{attrs:{id:"oceanruinfeature"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanruinfeature"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanRuinFeature")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanRuinFeature : StructureFeature\n{\n  int mRuinSpacing;\n  int mMinRuinSeparation;\n  std::vector<int> allowedBiomes;\n  OverworldGenerator *mLevelSource;\n  OceanMonumentFeature *mMonument;\n};\n\n")])])]),e("h3",{attrs:{id:"oceanruinfeature-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanruinfeature-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanRuinFeature_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanRuinFeature_vtbl\n{\n  void (__fastcall *~StructureFeature)(StructureFeature *this);\n  bool (__fastcall *postProcess)(StructureFeature *this, BlockSource *, Random *, int, int);\n  bool (__fastcall *getNearestGeneratedFeature)(StructureFeature *this, Dimension *, BiomeSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *isFeatureChunk)(StructureFeature *this, const BiomeSource *, Random *, const ChunkPos *, unsigned int);\n  std::unique_ptr<StructureStart> *(__fastcall *createStructureStart)(StructureFeature *this, std::unique_ptr<StructureStart> *result, Dimension *, BiomeSource *, Random *, const ChunkPos *);\n  StructureStart *(__fastcall *getStructureAt)(StructureFeature *this, int, int, int);\n  std::vector<BlockPos> *(__fastcall *getGuesstimatedFeaturePositions)(StructureFeature *this, std::vector<BlockPos> *result);\n};\n\n")])])]),e("h3",{attrs:{id:"overworldgenerator-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overworldgenerator-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverworldGenerator_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OverworldGenerator_vtbl\n{\n  void (__fastcall *~ChunkSource)(ChunkSource *this);\n  void (__fastcall *shutdown)(ChunkSource *this);\n  bool (__fastcall *isShutdownDone)(ChunkSource *this);\n  std::shared_ptr<LevelChunk> *(__fastcall *getExistingChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, const ChunkPos *);\n  std::shared_ptr<LevelChunk> *(__fastcall *getRandomChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, Random *);\n  std::shared_ptr<LevelChunk> *(__fastcall *createNewChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, const ChunkPos *, ChunkSource::LoadMode);\n  std::shared_ptr<LevelChunk> *(__fastcall *getOrLoadChunk)(ChunkSource *this, std::shared_ptr<LevelChunk> *result, const ChunkPos *, ChunkSource::LoadMode);\n  bool (__fastcall *postProcess)(ChunkSource *this, ChunkViewSource *);\n  void (__fastcall *checkAndReplaceChunk)(ChunkSource *this, ChunkViewSource *, LevelChunk *);\n  void (__fastcall *loadChunk)(ChunkSource *this, LevelChunk *, bool);\n  void (__fastcall *postProcessMobsAt)(ChunkSource *this, BlockSource *, int, int, Random *);\n  bool (__fastcall *saveLiveChunk)(ChunkSource *this, LevelChunk *);\n  void (__fastcall *hintDiscardBatchBegin)(ChunkSource *this);\n  void (__fastcall *hintDiscardBatchEnd)(ChunkSource *this);\n  void (__fastcall *acquireDiscarded)(ChunkSource *this, std::unique_ptr<LevelChunk,LevelChunkFinalDeleter>);\n  void (__fastcall *compact)(ChunkSource *this);\n  void (__fastcall *flushPendingWrites)(ChunkSource *this);\n  bool (__fastcall *isWithinWorldLimit)(ChunkSource *this, const ChunkPos *);\n  const std::unordered_map<ChunkPos,std::weak_ptr<LevelChunk>> *(__fastcall *getChunkMap)(ChunkSource *this);\n  const std::unordered_map<ChunkPos,std::weak_ptr<LevelChunk>> *(__fastcall *getStorage)(ChunkSource *this);\n  void (__fastcall *clearDeletedEntities)(ChunkSource *this);\n  void (__fastcall *removeDimensionData)(ChunkSource *this, const std::unordered_set<AutomaticID<Dimension,int>> *);\n  bool (__fastcall *hasChunk)(ChunkSource *this, const ChunkPos *, AutomaticID<Dimension,int>);\n  bool (__fastcall *canCreateViews)(ChunkSource *this);\n};\n\n")])])]),e("h3",{attrs:{id:"overworlddimension"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overworlddimension"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverworldDimension")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OverworldDimension : Dimension\n{\n};\n\n")])])]),e("h3",{attrs:{id:"overworldbrightnessramp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overworldbrightnessramp"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverworldBrightnessRamp")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OverworldBrightnessRamp : DimensionBrightnessRamp\n{\n};\n\n")])])]),e("h3",{attrs:{id:"overworldbrightnessramp-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overworldbrightnessramp-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverworldBrightnessRamp_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OverworldBrightnessRamp_vtbl\n{\n  void (__fastcall *~DimensionBrightnessRamp)(DimensionBrightnessRamp *this);\n  void (__fastcall *buildBrightnessRamp)(DimensionBrightnessRamp *this);\n  float (__fastcall *getBaseAmbientValue)(DimensionBrightnessRamp *this);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentpiece"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentpiece"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentPiece")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMonumentPiece : StructurePiece\n{\n  bool mDoFill;\n  std::shared_ptr<RoomDefinition> mRoomDefinition;\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentpiece-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentpiece-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentPiece_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumententryroom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumententryroom"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentEntryRoom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMonumentEntryRoom : OceanMonumentPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumententryroom-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumententryroom-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentEntryRoom_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentEntryRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentsimpleroom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentsimpleroom"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentSimpleRoom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(8)) OceanMonumentSimpleRoom : OceanMonumentPiece\n{\n  int mMainDesign;\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentsimpleroom-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentsimpleroom-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentSimpleRoom_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentSimpleRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentsimpletoproom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentsimpletoproom"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentSimpleTopRoom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMonumentSimpleTopRoom : OceanMonumentPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentsimpletoproom-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentsimpletoproom-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentSimpleTopRoom_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentSimpleTopRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentdoubleyroom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentdoubleyroom"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentDoubleYRoom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMonumentDoubleYRoom : OceanMonumentPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentdoubleyroom-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentdoubleyroom-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentDoubleYRoom_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentDoubleYRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentdoublexroom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentdoublexroom"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentDoubleXRoom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMonumentDoubleXRoom : OceanMonumentPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentdoublexroom-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentdoublexroom-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentDoubleXRoom_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentDoubleXRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentdoublezroom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentdoublezroom"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentDoubleZRoom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMonumentDoubleZRoom : OceanMonumentPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentdoublezroom-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentdoublezroom-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentDoubleZRoom_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentDoubleZRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentdoublexyroom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentdoublexyroom"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentDoubleXYRoom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMonumentDoubleXYRoom : OceanMonumentPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentdoublexyroom-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentdoublexyroom-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentDoubleXYRoom_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentDoubleXYRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentdoubleyzroom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentdoubleyzroom"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentDoubleYZRoom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMonumentDoubleYZRoom : OceanMonumentPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentdoubleyzroom-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentdoubleyzroom-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentDoubleYZRoom_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentDoubleYZRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentcoreroom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentcoreroom"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentCoreRoom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMonumentCoreRoom : OceanMonumentPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentcoreroom-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentcoreroom-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentCoreRoom_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentCoreRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentwingroom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentwingroom"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentWingRoom")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj __declspec(align(4)) OceanMonumentWingRoom : OceanMonumentPiece\n{\n  int mMainDesign;\n  bool mIsRightWing;\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentwingroom-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentwingroom-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentWingRoom_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentWingRoom_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentpenthouse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentpenthouse"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentPenthouse")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanMonumentPenthouse : OceanMonumentPiece\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oceanmonumentpenthouse-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanmonumentpenthouse-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanMonumentPenthouse_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanMonumentPenthouse_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n};\n\n")])])]),e("h3",{attrs:{id:"oceanruinpieces"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanruinpieces"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanRuinPieces")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanRuinPieces\n{\n};\n\n")])])]),e("h3",{attrs:{id:"oceanruinpieces-oceanruinpiece"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanruinpieces-oceanruinpiece"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanRuinPieces::OceanRuinPiece")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OceanRuinPieces::OceanRuinPiece : TemplateStructurePiece\n{\n  StructureManager *mStructureManager;\n  std::string mTemplateName;\n  OceanTempCategory mBiomeType;\n  float mIntegrity;\n  bool mIsLarge;\n  Rotation mRotation;\n  BlockPos mPosition;\n};\n\n")])])]),e("h3",{attrs:{id:"oceanruinpieces-oceanruinpiece-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oceanruinpieces-oceanruinpiece-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OceanRuinPieces::OceanRuinPiece_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OceanRuinPieces::OceanRuinPiece_vtbl\n{\n  void (__fastcall *~StructurePiece)(StructurePiece *this);\n  void (__fastcall *moveBoundingBox)(StructurePiece *this, int, int, int);\n  PoolElementStructurePiece *(__fastcall *asPoolElement)(StructurePiece *this);\n  StructurePieceType (__fastcall *getType)(StructurePiece *this);\n  void (__fastcall *addChildren)(StructurePiece *this, StructurePiece *, std::vector<std::unique_ptr<StructurePiece>> *, Random *);\n  bool (__fastcall *postProcess)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  void (__fastcall *postProcessMobsAt)(StructurePiece *this, BlockSource *, Random *, const BoundingBox *);\n  int (__fastcall *getWorldX)(StructurePiece *this, int, int);\n  int (__fastcall *getWorldZ)(StructurePiece *this, int, int);\n  void (__fastcall *placeBlock)(StructurePiece *this, BlockSource *, const Block *, int, int, int, const BoundingBox *);\n  void (__fastcall *generateBox)(StructurePiece *this, BlockSource *, const BoundingBox *, int, int, int, int, int, int, const Block *, const Block *, bool);\n  void (__fastcall *addHardcodedSpawnAreas)(StructurePiece *this, LevelChunk *);\n  void (__fastcall *_handleDataMarker)(TemplateStructurePiece *this, const std::string *, const BlockPos *, BlockSource *, Random *, const BoundingBox *);\n};\n\n")])])]),e("h3",{attrs:{id:"oobject"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oobject"}},[t._v("#")]),t._v(" "),e("code",[t._v("Oobject")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __declspec(align(8)) Oobject\n{\n  __int64 ob_refcnt;\n  _typeobject *ob_type;\n  char *buf;\n  __int64 pos;\n  __int64 string_size;\n  __int64 buf_size;\n  int softspace;\n};\n\n")])])]),e("h3",{attrs:{id:"options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a-l2-lambda-d80c656ec8d59dbc8c64dfb75c527a17"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a-l2-lambda-d80c656ec8d59dbc8c64dfb75c527a17"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_loadSpecialOptions::__l2::<lambda_7bb255bdacde2a2b702d5f80ab936b7a>::()::__l2::<lambda_d80c656ec8d59dbc8c64dfb75c527a17>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_loadSpecialOptions::__l2::<lambda_7bb255bdacde2a2b702d5f80ab936b7a>::()::__l2::<lambda_d80c656ec8d59dbc8c64dfb75c527a17>\n{\n  std::map<std::string,std::string> *propertyMap;\n  VRHUDPosition *newValue;\n  bool *oldValueFound;\n};\n\n")])])]),e("h3",{attrs:{id:"options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_loadSpecialOptions::__l2::<lambda_7bb255bdacde2a2b702d5f80ab936b7a>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_loadSpecialOptions::__l2::<lambda_7bb255bdacde2a2b702d5f80ab936b7a>\n{\n  Options *const __this;\n  std::map<std::string,std::string> *propertyMap;\n};\n\n")])])]),e("h3",{attrs:{id:"options-loadspecialoptions-l2-lambda-5f5d8b8987f054e6094d54779a8bba1c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-loadspecialoptions-l2-lambda-5f5d8b8987f054e6094d54779a8bba1c"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_loadSpecialOptions::__l2::<lambda_5f5d8b8987f054e6094d54779a8bba1c>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_loadSpecialOptions::__l2::<lambda_5f5d8b8987f054e6094d54779a8bba1c>\n{\n  Options *const __this;\n  std::map<std::string,std::string> *propertyMap;\n};\n\n")])])]),e("h3",{attrs:{id:"options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a-l2-lambda-e1c73b97ad6c18a48e39f5468b8a33d5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-loadspecialoptions-l2-lambda-7bb255bdacde2a2b702d5f80ab936b7a-l2-lambda-e1c73b97ad6c18a48e39f5468b8a33d5"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_loadSpecialOptions::__l2::<lambda_7bb255bdacde2a2b702d5f80ab936b7a>::()::__l2::<lambda_e1c73b97ad6c18a48e39f5468b8a33d5>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_loadSpecialOptions::__l2::<lambda_7bb255bdacde2a2b702d5f80ab936b7a>::()::__l2::<lambda_e1c73b97ad6c18a48e39f5468b8a33d5>\n{\n  std::map<std::string,std::string> *propertyMap;\n  VRStickyMining *newValue;\n  bool *oldValueFound;\n};\n\n")])])]),e("h3",{attrs:{id:"options-saveinputmapping-l2-lambda-065485d2bbf015adaf440567a3df3aed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-saveinputmapping-l2-lambda-065485d2bbf015adaf440567a3df3aed"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_saveInputMapping::__l2::<lambda_065485d2bbf015adaf440567a3df3aed>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_saveInputMapping::__l2::<lambda_065485d2bbf015adaf440567a3df3aed>\n{\n  std::vector<std::pair<std::string,std::string >> *settingsVec;\n};\n\n")])])]),e("h3",{attrs:{id:"options-registeroptions-l2-lambda-e2061f6fc1dbebba1e5f7aa7386008ab"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options-registeroptions-l2-lambda-e2061f6fc1dbebba1e5f7aa7386008ab"}},[t._v("#")]),t._v(" "),e("code",[t._v("Options::_registerOptions::__l2::<lambda_e2061f6fc1dbebba1e5f7aa7386008ab>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Options::_registerOptions::__l2::<lambda_e2061f6fc1dbebba1e5f7aa7386008ab>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"owneddurablespagingcache-performbatchedsearch-l2-lambda-0c82040d1ea396f7bd80ce9a5fa8db51"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#owneddurablespagingcache-performbatchedsearch-l2-lambda-0c82040d1ea396f7bd80ce9a5fa8db51"}},[t._v("#")]),t._v(" "),e("code",[t._v("OwnedDurablesPagingCache::_performBatchedSearch::__l2::<lambda_0c82040d1ea396f7bd80ce9a5fa8db51>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OwnedDurablesPagingCache::_performBatchedSearch::__l2::<lambda_0c82040d1ea396f7bd80ce9a5fa8db51>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onuseonitemcomponent-useon-l2-lambda-617c656cd3c75210e2a62aa9582f3625-l2-literal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onuseonitemcomponent-useon-l2-lambda-617c656cd3c75210e2a62aa9582f3625-l2-literal"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnUseOnItemComponent::useOn::__l2::<lambda_617c656cd3c75210e2a62aa9582f3625>::()::__l2::Literal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnUseOnItemComponent::useOn::__l2::<lambda_617c656cd3c75210e2a62aa9582f3625>::()::__l2::Literal\n{\n};\n\n")])])]),e("h3",{attrs:{id:"onuseonitemcomponent-useon-l2-lambda-617c656cd3c75210e2a62aa9582f3625"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onuseonitemcomponent-useon-l2-lambda-617c656cd3c75210e2a62aa9582f3625"}},[t._v("#")]),t._v(" "),e("code",[t._v("OnUseOnItemComponent::useOn::__l2::<lambda_617c656cd3c75210e2a62aa9582f3625>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OnUseOnItemComponent::useOn::__l2::<lambda_617c656cd3c75210e2a62aa9582f3625>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"ocelot-updateentityspecificmolangvariables-l2-lambda-d37c0c731b3f334c5f417233dbc1aa03-l2-literal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ocelot-updateentityspecificmolangvariables-l2-lambda-d37c0c731b3f334c5f417233dbc1aa03-l2-literal"}},[t._v("#")]),t._v(" "),e("code",[t._v("Ocelot::updateEntitySpecificMolangVariables::__l2::<lambda_d37c0c731b3f334c5f417233dbc1aa03>::()::__l2::Literal")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Ocelot::updateEntitySpecificMolangVariables::__l2::<lambda_d37c0c731b3f334c5f417233dbc1aa03>::()::__l2::Literal\n{\n};\n\n")])])]),e("h3",{attrs:{id:"ocelot-updateentityspecificmolangvariables-l2-lambda-d37c0c731b3f334c5f417233dbc1aa03"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ocelot-updateentityspecificmolangvariables-l2-lambda-d37c0c731b3f334c5f417233dbc1aa03"}},[t._v("#")]),t._v(" "),e("code",[t._v("Ocelot::updateEntitySpecificMolangVariables::__l2::<lambda_d37c0c731b3f334c5f417233dbc1aa03>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj Ocelot::updateEntitySpecificMolangVariables::__l2::<lambda_d37c0c731b3f334c5f417233dbc1aa03>\n{\n};\n\n")])])]),e("h3",{attrs:{id:"overworldgenerator-makelayers-l2-lambda-00d2029390727aff6abfa69bf88b314f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overworldgenerator-makelayers-l2-lambda-00d2029390727aff6abfa69bf88b314f"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverworldGenerator::_makeLayers::__l2::<lambda_00d2029390727aff6abfa69bf88b314f>")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct __cppobj OverworldGenerator::_makeLayers::__l2::<lambda_00d2029390727aff6abfa69bf88b314f>\n{\n  const BiomeRegistry *biomeRegistry;\n  const AutomaticID<Dimension,int> *id;\n};\n\n")])])]),e("h3",{attrs:{id:"ocelot-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ocelot-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("Ocelot_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ Ocelot_vtbl\n{\n  bool (__fastcall *hasComponent)(Actor *this, const HashedString *);\n  void (__fastcall *reloadHardcoded)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadHardcodedClient)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *initializeComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *reloadComponents)(Actor *this, Actor::InitializationMethod, const VariantParameterList *);\n  void (__fastcall *_serverInitItemStackIds)(Actor *this);\n  void (__fastcall *_doInitialMove)(Actor *this);\n  bool (__fastcall *checkAllSensitiveWords)(Actor *this);\n  bool (__fastcall *checkNameTag)(Actor *this);\n  void (__fastcall *~Actor)(Actor *this);\n  void (__fastcall *reset)(Actor *this);\n  int (__fastcall *getOnDeathExperience)(Actor *this);\n  ActorType (__fastcall *getOwnerEntityType)(Actor *this);\n  void (__fastcall *remove)(Actor *this);\n  void (__fastcall *setPos)(Actor *this, const Vec3 *);\n  const PredictedMovementValues *(__fastcall *getPredictedMovementValues)(Actor *this);\n  const Vec3 *(__fastcall *getPos)(Actor *this);\n  const Vec3 *(__fastcall *getPosOld)(Actor *this);\n  const Vec3 *(__fastcall *getPosExtrapolated)(Actor *this, const Vec3 *result, float);\n  Vec3 *(__fastcall *getAttachPos)(Actor *this, Vec3 *result, ActorLocation, float);\n  Vec3 *(__fastcall *getFiringPos)(Actor *this, Vec3 *result);\n  void (__fastcall *setRot)(Actor *this, const Vec2 *);\n  void (__fastcall *move)(Actor *this, IActorMovementProxy *, const Vec3 *);\n  void (__fastcall *move)(Actor *this, const Vec3 *);\n  Vec3 *(__fastcall *getInterpolatedRidingPosition)(Actor *this, Vec3 *result, float);\n  float (__fastcall *getInterpolatedBodyRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedHeadRot)(Actor *this, float);\n  float (__fastcall *getInterpolatedBodyYaw)(Actor *this, float);\n  float (__fastcall *getYawSpeedInDegreesPerSecond)(Actor *this);\n  float (__fastcall *getInterpolatedWalkAnimSpeed)(Actor *this, float);\n  Vec3 *(__fastcall *getInterpolatedRidingOffset)(Actor *this, Vec3 *result, float);\n  void (__fastcall *checkBlockCollisions)(Actor *this);\n  void (__fastcall *checkBlockCollisions)(Actor *this, const AABB *, std::function<void __cdecl(BlockSource &,Block const &,BlockPos const &,Actor &)>);\n  bool (__fastcall *isFireImmune)(Actor *this);\n  bool (__fastcall *breaksFallingBlocks)(Actor *this);\n  void (__fastcall *blockedByShield)(Actor *this, const ActorDamageSource *, Actor *);\n  void (__fastcall *teleportTo)(Actor *this, const Vec3 *, bool, int, int, const ActorUniqueID *);\n  bool (__fastcall *tryTeleportTo)(Actor *this, const Vec3 *, bool, bool, int, int);\n  void (__fastcall *chorusFruitTeleport)(Actor *this, Vec3 *);\n  void (__fastcall *lerpTo)(Actor *this, const Vec3 *, const Vec2 *, int);\n  void (__fastcall *lerpMotion)(Actor *this, const Vec3 *);\n  std::unique_ptr<AddActorBasePacket> *(__fastcall *getAddPacket)(Actor *this, std::unique_ptr<AddActorBasePacket> *result);\n  void (__fastcall *normalTick)(Actor *this);\n  void (__fastcall *baseTick)(Actor *this);\n  void (__fastcall *rideTick)(Actor *this);\n  void (__fastcall *positionRider)(Actor *this, Actor *, float);\n  float (__fastcall *getRidingHeight)(Actor *this);\n  bool (__fastcall *startRiding)(Actor *this, Actor *);\n  void (__fastcall *addRider)(Actor *this, Actor *);\n  void (__fastcall *flagRiderToRemove)(Actor *this, Actor *);\n  std::string *(__fastcall *getExitTip)(Actor *this, std::string *result, const std::string *, InputMode);\n  bool (__fastcall *intersects)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *);\n  bool (__fastcall *isFree)(Actor *this, const Vec3 *, float);\n  bool (__fastcall *isInWall)(Actor *this);\n  bool (__fastcall *isInvisible)(Actor *this);\n  bool (__fastcall *canShowNameTag)(Actor *this);\n  bool (__fastcall *canExistInPeaceful)(Actor *this);\n  void (__fastcall *setNameTagVisible)(Actor *this, bool);\n  const std::string *(__fastcall *getNameTag)(Actor *this);\n  unsigned __int64 (__fastcall *getNameTagAsHash)(Actor *this);\n  std::string *(__fastcall *getFormattedNameTag)(Actor *this, std::string *result);\n  void (__fastcall *filterFormattedNameTag)(Actor *this, const UIProfanityContext *);\n  void (__fastcall *setNameTag)(Actor *this, const std::string *);\n  bool (__fastcall *getAlwaysShowNameTag)(Actor *this);\n  void (__fastcall *setScoreTag)(Actor *this, const std::string *);\n  const std::string *(__fastcall *getScoreTag)(Actor *this);\n  bool (__fastcall *isInWater)(Actor *this);\n  bool (__fastcall *hasEnteredWater)(Actor *this);\n  bool (__fastcall *isImmersedInWater)(Actor *this);\n  bool (__fastcall *isInWaterOrRain)(Actor *this);\n  bool (__fastcall *isInLava)(Actor *this);\n  bool (__fastcall *isUnderLiquid)(Actor *this, MaterialType);\n  bool (__fastcall *isOverWater)(Actor *this);\n  void (__fastcall *makeStuckInBlock)(Actor *this, const Vec3 *);\n  float (__fastcall *getCameraOffset)(Actor *this);\n  float (__fastcall *getShadowHeightOffs)(Actor *this);\n  float (__fastcall *getShadowRadius)(Actor *this);\n  Vec3 *(__fastcall *getHeadLookVector)(Actor *this, Vec3 *result, float);\n  bool (__fastcall *canSeeInvisible)(Actor *this);\n  bool (__fastcall *canSee)(Actor *this, const Vec3 *);\n  bool (__fastcall *canSee)(Actor *this, const Actor *);\n  bool (__fastcall *isSkyLit)(Actor *this, float);\n  float (__fastcall *getBrightness)(Actor *this, float);\n  bool (__fastcall *interactPreventDefault)(Actor *this);\n  void (__fastcall *playerTouch)(Actor *this, Player *);\n  void (__fastcall *onAboveBubbleColumn)(Actor *this, const bool);\n  void (__fastcall *onInsideBubbleColumn)(Actor *this, const bool);\n  bool (__fastcall *isImmobile)(Actor *this);\n  bool (__fastcall *isSilent)(Actor *this);\n  bool (__fastcall *isPickable)(Actor *this);\n  bool (__fastcall *isFishable)(Actor *this);\n  bool (__fastcall *isSleeping)(Actor *this);\n  bool (__fastcall *isShootable)(Actor *this);\n  void (__fastcall *setSneaking)(Actor *this, bool);\n  bool (__fastcall *isBlocking)(Actor *this);\n  bool (__fastcall *isDamageBlocked)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *isAlive)(Actor *this);\n  bool (__fastcall *isOnFire)(Actor *this);\n  bool (__fastcall *isOnHotBlock)(Actor *this);\n  bool (__fastcall *isCreativeModeAllowed)(Actor *this);\n  bool (__fastcall *isSurfaceMob)(Actor *this);\n  bool (__fastcall *isTargetable)(Actor *this);\n  bool (__fastcall *isLocalPlayer)(Actor *this);\n  bool (__fastcall *isPlayer)(Actor *this);\n  bool (__fastcall *canAttack)(Actor *this, Actor *, bool);\n  void (__fastcall *setTarget)(Actor *this, Actor *);\n  Actor *(__fastcall *findAttackTarget)(Actor *this);\n  bool (__fastcall *isValidTarget)(Actor *this, Actor *);\n  bool (__fastcall *attack)(Actor *this, Actor *);\n  void (__fastcall *performRangedAttack)(Actor *this, Actor *, float);\n  void (__fastcall *adjustDamageAmount)(Actor *this, int *);\n  int (__fastcall *getEquipmentCount)(Actor *this);\n  void (__fastcall *setOwner)(Actor *this, const ActorUniqueID);\n  void (__fastcall *setSitting)(Actor *this, bool);\n  void (__fastcall *onTame)(Actor *this);\n  void (__fastcall *onFailedTame)(Actor *this);\n  int (__fastcall *getInventorySize)(Actor *this);\n  int (__fastcall *getEquipSlots)(Actor *this);\n  int (__fastcall *getChestSlots)(Actor *this);\n  void (__fastcall *setStanding)(Actor *this, bool);\n  bool (__fastcall *canPowerJump)(Actor *this);\n  void (__fastcall *setCanPowerJump)(Actor *this, bool);\n  bool (__fastcall *isJumping)(Actor *this);\n  bool (__fastcall *isEnchanted)(Actor *this);\n  void (__fastcall *rideJumped)(Actor *this);\n  void (__fastcall *rideLanded)(Actor *this, const Vec3 *, const Vec3 *);\n  bool (__fastcall *shouldRender)(Actor *this);\n  bool (__fastcall *isInvulnerableTo)(Actor *this, const ActorDamageSource *);\n  ActorDamageCause (__fastcall *getBlockDamageCause)(Actor *this, const Block *);\n  void (__fastcall *actuallyHurt)(Actor *this, int, const ActorDamageSource *, bool);\n  void (__fastcall *animateHurt)(Actor *this);\n  bool (__fastcall *doFireHurt)(Actor *this, int);\n  void (__fastcall *onLightningHit)(Actor *this);\n  void (__fastcall *onBounceStarted)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *feed)(Actor *this, int);\n  void (__fastcall *handleEntityEvent)(Actor *this, ActorEvent, int);\n  float (__fastcall *getPickRadius)(Actor *this);\n  const HashedString *(__fastcall *getActorRendererId)(Actor *this);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const ItemStack *, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, const Block *, int);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int, float);\n  ItemActor *(__fastcall *spawnAtLocation)(Actor *this, int, int);\n  void (__fastcall *despawn)(Actor *this);\n  void (__fastcall *killed)(Actor *this, Actor *);\n  void (__fastcall *awardKillScore)(Actor *this, Actor *, int);\n  void (__fastcall *setArmor)(Actor *this, ArmorSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getArmor)(Actor *this, ArmorSlot);\n  ArmorMaterialType (__fastcall *getArmorMaterialTypeInSlot)(Actor *this, ArmorSlot);\n  ArmorTextureType (__fastcall *getArmorMaterialTextureTypeInSlot)(Actor *this, ArmorSlot);\n  float (__fastcall *getArmorColorInSlot)(Actor *this, ArmorSlot, int);\n  const ItemStack *(__fastcall *getEquippedSlot)(Actor *this, EquipmentSlot);\n  void (__fastcall *setEquippedSlot)(Actor *this, EquipmentSlot, const ItemStack *);\n  const ItemStack *(__fastcall *getCarriedItem)(Actor *this);\n  void (__fastcall *setCarriedItem)(Actor *this, const ItemStack *);\n  void (__fastcall *setOffhandSlot)(Actor *this, const ItemStack *);\n  const ItemStack *(__fastcall *getEquippedTotem)(Actor *this);\n  bool (__fastcall *consumeTotem)(Actor *this);\n  bool (__fastcall *save)(Actor *this, CompoundTag *);\n  void (__fastcall *saveWithoutId)(Actor *this, CompoundTag *);\n  bool (__fastcall *load)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *loadLinks)(Actor *this, const CompoundTag *, std::vector<ActorLink> *, DataLoadHelper *);\n  ActorType (__fastcall *getEntityTypeId)(Actor *this);\n  const HashedString *(__fastcall *queryEntityRenderer)(Actor *this);\n  ActorUniqueID *(__fastcall *getSourceUniqueID)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *setOnFire)(Actor *this, int);\n  AABB *(__fastcall *getHandleWaterAABB)(Actor *this, AABB *result);\n  void (__fastcall *handleInsidePortal)(Actor *this, const BlockPos *);\n  int (__fastcall *getPortalCooldown)(Actor *this);\n  int (__fastcall *getPortalWaitTime)(Actor *this);\n  AutomaticID<Dimension,int> *(__fastcall *getDimensionId)(Actor *this, AutomaticID<Dimension,int> *result);\n  bool (__fastcall *canChangeDimensions)(Actor *this);\n  void (__fastcall *changeDimension)(Actor *this, const ChangeDimensionPacket *);\n  void (__fastcall *changeDimension)(Actor *this, AutomaticID<Dimension,int>, bool);\n  ActorUniqueID *(__fastcall *getControllingPlayer)(Actor *this, ActorUniqueID *result);\n  void (__fastcall *checkFallDamage)(Actor *this, float, bool);\n  void (__fastcall *causeFallDamage)(Actor *this, float);\n  void (__fastcall *handleFallDistanceOnServer)(Actor *this, float, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, int, bool);\n  void (__fastcall *playSynchronizedSound)(Actor *this, LevelSoundEvent, const Vec3 *, const Block *, bool);\n  void (__fastcall *onSynchedDataUpdate)(Actor *this, int);\n  bool (__fastcall *canAddRider)(Actor *this, Actor *);\n  bool (__fastcall *canPickupItem)(Actor *this, const ItemStack *);\n  bool (__fastcall *canBePulledIntoVehicle)(Actor *this);\n  bool (__fastcall *inCaravan)(Actor *this);\n  bool (__fastcall *isLeashableType)(Actor *this);\n  void (__fastcall *tickLeash)(Actor *this);\n  void (__fastcall *sendMotionPacketIfNeeded)(Actor *this);\n  bool (__fastcall *canSynchronizeNewEntity)(Actor *this);\n  bool (__fastcall *stopRiding)(Actor *this, bool, bool, bool, bool);\n  void (__fastcall *startSwimming)(Actor *this);\n  void (__fastcall *stopSwimming)(Actor *this);\n  void (__fastcall *buildDebugInfo)(Actor *this, std::string *);\n  CommandPermissionLevel (__fastcall *getCommandPermissionLevel)(Actor *this);\n  AttributeInstance *(__fastcall *getMutableAttribute)(Actor *this, const Attribute *);\n  const AttributeInstance *(__fastcall *getAttribute)(Actor *this, const Attribute *);\n  int (__fastcall *getDeathTime)(Actor *this);\n  void (__fastcall *heal)(Actor *this, int);\n  bool (__fastcall *isInvertedHealAndHarm)(Actor *this);\n  bool (__fastcall *canBeAffected)(Actor *this, const MobEffectInstance *);\n  bool (__fastcall *canBeAffected)(Actor *this, int);\n  bool (__fastcall *canBeAffectedByArrow)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectAdded)(Actor *this, MobEffectInstance *);\n  void (__fastcall *onEffectUpdated)(Actor *this, const MobEffectInstance *);\n  void (__fastcall *onEffectRemoved)(Actor *this, MobEffectInstance *);\n  AnimationComponent *(__fastcall *getAnimationComponent)(Actor *this);\n  void (__fastcall *openContainerComponent)(Actor *this, Player *);\n  void (__fastcall *swing)(Actor *this);\n  void (__fastcall *useItem)(Actor *this, ItemStackBase *, ItemUseMethod, bool);\n  bool (__fastcall *hasOutputSignal)(Actor *this, unsigned __int8);\n  int (__fastcall *getOutputSignal)(Actor *this);\n  void (__fastcall *getDebugText)(Actor *this, std::vector<std::string> *);\n  float (__fastcall *getMapDecorationRotation)(Actor *this);\n  float (__fastcall *getRiderYRotation)(Actor *this, const Actor *);\n  float (__fastcall *getYHeadRot)(Actor *this);\n  bool (__fastcall *isWorldBuilder)(Actor *this);\n  bool (__fastcall *isCreative)(Actor *this);\n  bool (__fastcall *isAdventure)(Actor *this);\n  bool (__fastcall *add)(Actor *this, ItemStack *);\n  bool (__fastcall *drop)(Actor *this, const ItemStack *, bool);\n  bool (__fastcall *getInteraction)(Actor *this, Player *, ActorInteraction *, const Vec3 *);\n  bool (__fastcall *canDestroyBlock)(Actor *this, const Block *);\n  void (__fastcall *setAuxValue)(Actor *this, int);\n  void (__fastcall *setSize)(Actor *this, float, float);\n  int (__fastcall *getLifeSpan)(Actor *this);\n  void (__fastcall *onOrphan)(Actor *this);\n  void (__fastcall *wobble)(Actor *this);\n  bool (__fastcall *wasHurt)(Actor *this);\n  void (__fastcall *startSpinAttack)(Actor *this);\n  void (__fastcall *stopSpinAttack)(Actor *this);\n  void (__fastcall *setDamageNearbyMobs)(Actor *this, bool);\n  bool (__fastcall *hasCritBox)(Actor *this);\n  bool (__fastcall *isCritHit)(Actor *this);\n  void (__fastcall *renderDebugServerState)(Actor *this, const Options *);\n  void (__fastcall *reloadLootTable)(Actor *this, const EquipmentTableDefinition *);\n  void (__fastcall *reloadLootTable)(Actor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(Actor *this);\n  void (__fastcall *kill)(Actor *this);\n  void (__fastcall *die)(Actor *this, const ActorDamageSource *);\n  bool (__fastcall *shouldTick)(Actor *this);\n  std::shared_ptr<IActorMovementProxy> *(__fastcall *createMovementProxy)(Actor *this, std::shared_ptr<IActorMovementProxy> *result);\n  void (__fastcall *updateEntitySpecificMolangVariables)(Actor *this, RenderParams *);\n  bool (__fastcall *shouldTryMakeStepSound)(Actor *this);\n  float (__fastcall *getNextStep)(Actor *this, const float);\n  bool (__fastcall *canMakeStepSound)(Actor *this);\n  void (__fastcall *outOfWorld)(Actor *this);\n  bool (__fastcall *_hurt)(Actor *this, const ActorDamageSource *, int, bool, bool);\n  void (__fastcall *markHurt)(Actor *this);\n  void (__fastcall *readAdditionalSaveData)(Actor *this, const CompoundTag *, DataLoadHelper *);\n  void (__fastcall *addAdditionalSaveData)(Actor *this, CompoundTag *);\n  void (__fastcall *_playStepSound)(Actor *this, const BlockPos *, const Block *);\n  void (__fastcall *_playFlySound)(Actor *this, const BlockPos *, const Block *);\n  bool (__fastcall *_makeFlySound)(Actor *this);\n  void (__fastcall *checkInsideBlocks)(Actor *this, float);\n  void (__fastcall *pushOutOfBlocks)(Actor *this, const Vec3 *);\n  bool (__fastcall *updateWaterState)(Actor *this);\n  void (__fastcall *doWaterSplashEffect)(Actor *this);\n  void (__fastcall *spawnTrailBubbles)(Actor *this);\n  void (__fastcall *updateInsideBlock)(Actor *this);\n  LootTable *(__fastcall *getLootTable)(Actor *this);\n  LootTable *(__fastcall *getDefaultLootTable)(Actor *this);\n  void (__fastcall *_removeRider)(Actor *this, const ActorUniqueID *, bool, bool, bool);\n  void (__fastcall *_onSizeUpdated)(Actor *this);\n  void (__fastcall *_doAutoAttackOnTouch)(Actor *this, Actor *);\n  void (__fastcall *knockback)(Mob *this, Actor *, int, float, float, float, float, float);\n  void (__fastcall *resolveDeathLoot)(Mob *this, int, const ActorDamageSource *);\n  void (__fastcall *spawnAnim)(Mob *this);\n  void (__fastcall *setSleeping)(Mob *this, bool);\n  void (__fastcall *setSprinting)(Mob *this, bool);\n  void (__fastcall *playAmbientSound)(Mob *this);\n  LevelSoundEvent (__fastcall *getAmbientSound)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicks)(Mob *this);\n  int (__fastcall *getAmbientSoundPostponeTicksRange)(Mob *this);\n  const TextureUVCoordinateSet *(__fastcall *getItemInHandIcon)(Mob *this, const ItemStack *, int);\n  float (__fastcall *getSpeed)(Mob *this);\n  void (__fastcall *setSpeed)(Mob *this, float);\n  float (__fastcall *getJumpPower)(Mob *this);\n  bool (__fastcall *hurtEffects)(Mob *this, const ActorDamageSource *, int, bool, bool);\n  int (__fastcall *getMeleeWeaponDamageBonus)(Mob *this, Mob *);\n  int (__fastcall *getMeleeKnockbackBonus)(Mob *this);\n  void (__fastcall *travel)(Mob *this, IMobMovementProxy *, float, float, float);\n  void (__fastcall *travel)(Mob *this, float, float, float);\n  void (__fastcall *applyFinalFriction)(Mob *this, float, bool);\n  void (__fastcall *updateWalkAnim)(Mob *this);\n  void (__fastcall *aiStep)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *aiStep)(Mob *this);\n  void (__fastcall *pushActors)(Mob *this);\n  void (__fastcall *lookAt)(Mob *this, Actor *, float, float);\n  bool (__fastcall *isLookingAtAnEntity)(Mob *this);\n  bool (__fastcall *checkSpawnRules)(Mob *this, bool);\n  bool (__fastcall *checkSpawnObstruction)(Mob *this);\n  float (__fastcall *getAttackAnim)(Mob *this, float);\n  int (__fastcall *getItemUseDuration)(Mob *this);\n  float (__fastcall *getItemUseStartupProgress)(Mob *this);\n  float (__fastcall *getItemUseIntervalProgress)(Mob *this);\n  int (__fastcall *getItemuseIntervalAxis)(Mob *this);\n  int (__fastcall *getTimeAlongSwing)(Mob *this);\n  void (__fastcall *ate)(Mob *this);\n  float (__fastcall *getMaxHeadXRot)(Mob *this);\n  Mob *(__fastcall *getLastHurtByMob)(Mob *this);\n  void (__fastcall *setLastHurtByMob)(Mob *this, Mob *);\n  Player *(__fastcall *getLastHurtByPlayer)(Mob *this);\n  void (__fastcall *setLastHurtByPlayer)(Mob *this, Player *);\n  Mob *(__fastcall *getLastHurtMob)(Mob *this);\n  void (__fastcall *setLastHurtMob)(Mob *this, Actor *);\n  bool (__fastcall *isAlliedTo)(Mob *this, Mob *);\n  bool (__fastcall *doHurtTarget)(Mob *this, Actor *);\n  bool (__fastcall *canBeControlledByRider)(Mob *this);\n  void (__fastcall *leaveCaravan)(Mob *this);\n  void (__fastcall *joinCaravan)(Mob *this, Mob *);\n  bool (__fastcall *hasCaravanTail)(Mob *this);\n  ActorUniqueID *(__fastcall *getCaravanHead)(Mob *this, ActorUniqueID *result);\n  int (__fastcall *getArmorValue)(Mob *this);\n  float (__fastcall *getArmorCoverPercentage)(Mob *this);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int, const std::bitset<4> *);\n  void (__fastcall *hurtArmor)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *hurtArmorSlot)(Mob *this, const ActorDamageSource *, int, ArmorSlot);\n  void (__fastcall *setDamagedArmor)(Mob *this, ArmorSlot, const ItemStack *);\n  void (__fastcall *sendArmorDamage)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *sendArmor)(Mob *this, const std::bitset<4> *);\n  void (__fastcall *containerChanged)(Mob *this, int);\n  void (__fastcall *updateEquipment)(Mob *this);\n  int (__fastcall *clearEquipment)(Mob *this);\n  std::vector<ItemStack const *> *(__fastcall *getAllArmor)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<int> *(__fastcall *getAllArmorID)(Mob *this, std::vector<int> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllHand)(Mob *this, std::vector<ItemStack const *> *result);\n  std::vector<ItemStack const *> *(__fastcall *getAllEquipment)(Mob *this, std::vector<ItemStack const *> *result);\n  int (__fastcall *getArmorTypeHash)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this);\n  void (__fastcall *dropEquipmentOnDeath)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *clearVanishEnchantedItemsOnDeath)(Mob *this);\n  void (__fastcall *sendInventory)(Mob *this, bool);\n  int (__fastcall *getDamageAfterMagicAbsorb)(Mob *this, const ActorDamageSource *, int);\n  bool (__fastcall *createAIGoals)(Mob *this);\n  void (__fastcall *onBorn)(Mob *this, Actor *, Actor *);\n  bool (__fastcall *setItemSlot)(Mob *this, EquipmentSlot, const ItemStack *);\n  void (__fastcall *setTransitioningSitting)(Mob *this, bool);\n  void (__fastcall *attackAnimation)(Mob *this, Actor *, float);\n  int (__fastcall *getAttackTime)(Mob *this);\n  float (__fastcall *_getWalkTargetValue)(Mob *this, const BlockPos *);\n  bool (__fastcall *canExistWhenDisallowMob)(Mob *this);\n  bool (__fastcall *useNewAi)(Mob *this);\n  void (__fastcall *ascendLadder)(Mob *this);\n  void (__fastcall *ascendScaffolding)(Mob *this);\n  void (__fastcall *descendScaffolding)(Mob *this);\n  void (__fastcall *dropContainer)(Mob *this);\n  std::unique_ptr<BodyControl> *(__fastcall *initBodyControl)(Mob *this, std::unique_ptr<BodyControl> *result);\n  void (__fastcall *jumpFromGround)(Mob *this, IMobMovementProxy *);\n  void (__fastcall *jumpFromGround)(Mob *this);\n  void (__fastcall *updateAi)(Mob *this);\n  void (__fastcall *newServerAiStep)(Mob *this);\n  void (__fastcall *_serverAiMobStep)(Mob *this);\n  int (__fastcall *getDamageAfterEnchantReduction)(Mob *this, const ActorDamageSource *, int);\n  int (__fastcall *getDamageAfterArmorAbsorb)(Mob *this, const ActorDamageSource *, int);\n  void (__fastcall *dropBags)(Mob *this);\n  void (__fastcall *tickDeath)(Mob *this);\n  void (__fastcall *updateGliding)(Mob *this);\n  bool (__fastcall *_allowAscendingScaffolding)(Mob *this);\n};\n\n")])])]),e("h3",{attrs:{id:"overworlddimension-vtbl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overworlddimension-vtbl"}},[t._v("#")]),t._v(" "),e("code",[t._v("OverworldDimension_vtbl")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("struct /*VFT*/ OverworldDimension_vtbl\n{\n  void (__fastcall *~BlockSourceListener)(BlockSourceListener *this);\n  void (__fastcall *onSourceCreated)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onSourceDestroyed)(BlockSourceListener *this, BlockSource *);\n  void (__fastcall *onAreaChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, const BlockPos *);\n  void (__fastcall *onBlockChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *, unsigned int, const Block *, const Block *, int, const ActorBlockSyncMessage *);\n  void (__fastcall *onBrightnessChanged)(BlockSourceListener *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onBlockEntityChanged)(BlockSourceListener *this, BlockSource *, BlockActor *);\n  void (__fastcall *onBlockEntityAboutToBeRemoved)(BlockSourceListener *this, BlockSource *, std::shared_ptr<BlockActor>);\n  void (__fastcall *onEntityChanged)(BlockSourceListener *this, BlockSource *, Actor *);\n  void (__fastcall *onBlockEvent)(BlockSourceListener *this, BlockSource *, int, int, int, int, int);\n  void (__fastcall *allChanged)(LevelListener *this);\n  Particle *(__fastcall *addParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int, const CompoundTag *, bool);\n  void (__fastcall *sendServerLegacyParticle)(LevelListener *this, ParticleType, const Vec3 *, const Vec3 *, int);\n  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Actor *, const HashedString *, const Vec3 *, const MolangVariableMap *);\n  void (__fastcall *addParticleEffect)(LevelListener *this, const HashedString *, const Vec3 *, const MolangVariableMap *);\n  void (__fastcall *addTerrainParticleEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);\n  void (__fastcall *addTerrainSlideEffect)(LevelListener *this, const BlockPos *, const Block *, const Vec3 *, float, float, float);\n  void (__fastcall *addBreakingItemParticleEffect)(LevelListener *this, const Vec3 *, ParticleType, const TextureUVCoordinateSet *, bool);\n  void (__fastcall *playMusic)(LevelListener *this, const std::string *, const Vec3 *, float, float);\n  void (__fastcall *playStreamingMusic)(LevelListener *this, const std::string *, int, int, int);\n  void (__fastcall *onEntityAdded)(LevelListener *this, Actor *);\n  void (__fastcall *onEntityRemoved)(LevelListener *this, Actor *);\n  void (__fastcall *onChunkLoaded)(LevelListener *this, ChunkSource *, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(LevelListener *this, LevelChunk *);\n  void (__fastcall *onLevelDestruction)(LevelListener *this, const std::string *);\n  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const CompoundTag *);\n  void (__fastcall *levelEvent)(LevelListener *this, LevelEvent, const Vec3 *, int);\n  void (__fastcall *levelSoundEvent)(LevelListener *this, const std::string *, const Vec3 *, float, float);\n  void (__fastcall *levelSoundEvent)(LevelListener *this, LevelSoundEvent, const Vec3 *, int, const ActorDefinitionIdentifier *, bool, bool);\n  void (__fastcall *stopSoundEvent)(LevelListener *this, const std::string *);\n  void (__fastcall *stopAllSounds)(LevelListener *this);\n  void (__fastcall *takePicture)(LevelListener *this, cg::ImageBuffer *, Actor *, Actor *, ScreenshotOptions *);\n  void (__fastcall *playerListChanged)(LevelListener *this);\n  void (__fastcall *init)(Dimension *this);\n  void (__fastcall *tick)(Dimension *this);\n  void (__fastcall *tickRedstone)(Dimension *this);\n  std::tuple<std::unique_ptr<ChunkSource>,WorldGenerator *> *(__fastcall *createGenerator)(Dimension *this, std::tuple<std::unique_ptr<ChunkSource>,WorldGenerator *> *result);\n  void (__fastcall *upgradeLevelChunk)(Dimension *this, ChunkSource *, LevelChunk *);\n  void (__fastcall *fixWallChunk)(Dimension *this, ChunkSource *, LevelChunk *);\n  bool (__fastcall *isNaturalDimension)(Dimension *this);\n  bool (__fastcall *isValidSpawn)(Dimension *this, int, int);\n  mce::Color *(__fastcall *getBrightnessDependentFogColor)(Dimension *this, mce::Color *result, const mce::Color *, float);\n  float (__fastcall *getMaxFogEnd)(Dimension *this);\n  float (__fastcall *getMaxFogStart)(Dimension *this);\n  bool (__fastcall *isFoggyAt)(Dimension *this, int, int);\n  __int16 (__fastcall *getCloudHeight)(Dimension *this);\n  int (__fastcall *getDefaultBiome)(Dimension *this);\n  bool (__fastcall *mayRespawnViaBed)(Dimension *this);\n  bool (__fastcall *hasGround)(Dimension *this);\n  BlockPos *(__fastcall *getSpawnPos)(Dimension *this, BlockPos *result);\n  int (__fastcall *getSpawnYPosition)(Dimension *this);\n  bool (__fastcall *hasBedrockFog)(Dimension *this);\n  float (__fastcall *getClearColorScale)(Dimension *this);\n  bool (__fastcall *showSky)(Dimension *this);\n  bool (__fastcall *isDay)(Dimension *this);\n  float (__fastcall *getTimeOfDay)(Dimension *this, int, float);\n  float (__fastcall *getSunIntensity)(Dimension *this, float, const Vec3 *, float);\n  bool (__fastcall *forceCheckAllNeighChunkSavedStat)(Dimension *this);\n  Vec3 *(__fastcall *translatePosAcrossDimension)(Dimension *this, Vec3 *result, const Vec3 *, AutomaticID<Dimension,int>);\n  void (__fastcall *sendBroadcast)(Dimension *this, const Packet *, Player *);\n  bool (__fastcall *is2DPositionRelevantForPlayer)(Dimension *this, const BlockPos *, Player *);\n  bool (__fastcall *isEntityRelevantForPlayer)(Dimension *this, Player *, const Actor *);\n  BaseLightTextureImageBuilder *(__fastcall *getLightTextureImageBuilder)(Dimension *this);\n  const DimensionBrightnessRamp *(__fastcall *getBrightnessRamp)(Dimension *this);\n  void (__fastcall *startLeaveGame)(Dimension *this);\n  std::unique_ptr<ChunkBuildOrderPolicyBase> *(__fastcall *_createChunkBuildOrderPolicy)(Dimension *this, std::unique_ptr<ChunkBuildOrderPolicyBase> *result);\n  void (__fastcall *_upgradeOldLimboEntity)(Dimension *this, CompoundTag *, LimboEntitiesVersion);\n  std::unique_ptr<ChunkSource> *(__fastcall *_wrapStorageForVersionCompatibility)(Dimension *this, std::unique_ptr<ChunkSource> *result, std::unique_ptr<ChunkSource>, StorageVersion);\n};\n\n")])])])])}),[],!1,null,null,null);e.default=c.exports}}]);