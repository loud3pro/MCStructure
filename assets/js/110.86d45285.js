(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{420:function(t,c,a){"use strict";a.r(c);var o=a(27),e=Object(o.a)({},(function(){var t=this,c=t._self._c;return c("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[c("h1",{attrs:{id:"c-2"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#c-2"}},[t._v("#")]),t._v(" C~2")]),t._v(" "),c("h3",{attrs:{id:"core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-vertexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-vertexbufferhandletypekey-unsigned-int64-2-container-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-vertexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-vertexbufferhandletypekey-unsigned-int64-2-container-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::SharedMemoryTracker::SharedMemoryTrackerImpl<")]),t._v("mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame<dragon::mesh::VertexBufferResourceManager,std::optional<dragon::rendering::details::BufferHandleTypeWrapper<dragon::mesh::details::VertexBufferHandleTypeKey,unsigned __int64> > >'::"),c("code",[t._v("2'::Container>_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ Core::SharedMemoryTracker::SharedMemoryTrackerImpl<`mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame<dragon::mesh::VertexBufferResourceManager,std::optional<dragon::rendering::details::BufferHandleTypeWrapper<dragon::mesh::details::VertexBufferHandleTypeKey,unsigned __int64> > >'::`2'::Container>_vtbl\n{\n  void (__fastcall *~SharedMemoryTrackerBase)(Core::SharedMemoryTracker::SharedMemoryTrackerBase *this);\n};\n\n")])])]),c("h3",{attrs:{id:"core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-indexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-indexbufferhandletypekey-unsigned-int64-2-container"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-indexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-indexbufferhandletypekey-unsigned-int64-2-container"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::SharedMemoryTracker::SharedMemoryTrackerImpl<")]),t._v("mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame<dragon::mesh::IndexBufferResourceManager,std::optional<dragon::rendering::details::BufferHandleTypeWrapper<dragon::mesh::details::IndexBufferHandleTypeKey,unsigned __int64> > >'::"),c("code",[t._v("2'::Container>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::SharedMemoryTracker::SharedMemoryTrackerImpl<`mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame<dragon::mesh::IndexBufferResourceManager,std::optional<dragon::rendering::details::BufferHandleTypeWrapper<dragon::mesh::details::IndexBufferHandleTypeKey,unsigned __int64> > >'::`2'::Container> : Core::SharedMemoryTracker::SharedMemoryTrackerBase\n{\n  const std::shared_ptr<`mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame<dragon::mesh::IndexBufferResourceManager,std::optional<dragon::rendering::details::BufferHandleTypeWrapper<dragon::mesh::details::IndexBufferHandleTypeKey,unsigned __int64> > >'::`2'::Container> mInstance;\n};\n\n")])])]),c("h3",{attrs:{id:"core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-indexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-indexbufferhandletypekey-unsigned-int64-2-container-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-sharedmemorytracker-sharedmemorytrackerimpl-mce-framebuilder-bgfxbridge-meshutils-details-tietoframe-dragon-mesh-indexbufferresourcemanager-std-optional-dragon-rendering-details-bufferhandletypewrapper-dragon-mesh-details-indexbufferhandletypekey-unsigned-int64-2-container-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::SharedMemoryTracker::SharedMemoryTrackerImpl<")]),t._v("mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame<dragon::mesh::IndexBufferResourceManager,std::optional<dragon::rendering::details::BufferHandleTypeWrapper<dragon::mesh::details::IndexBufferHandleTypeKey,unsigned __int64> > >'::"),c("code",[t._v("2'::Container>_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ Core::SharedMemoryTracker::SharedMemoryTrackerImpl<`mce::framebuilder::bgfxbridge::meshutils::details::_tieToFrame<dragon::mesh::IndexBufferResourceManager,std::optional<dragon::rendering::details::BufferHandleTypeWrapper<dragon::mesh::details::IndexBufferHandleTypeKey,unsigned __int64> > >'::`2'::Container>_vtbl\n{\n  void (__fastcall *~SharedMemoryTrackerBase)(Core::SharedMemoryTracker::SharedMemoryTrackerBase *this);\n};\n\n")])])]),c("h3",{attrs:{id:"core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::CpuRingBufferAllocator<dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer<2,0> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::CpuRingBufferAllocator<dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer<2,0> >\n{\n  Core::CheckedRingBuffer<2,0> *mBufferInstance;\n};\n\n")])])]),c("h3",{attrs:{id:"core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0-rebind-dragon-frameobject-preparedblits"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0-rebind-dragon-frameobject-preparedblits"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::CpuRingBufferAllocator<dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer<2,0> >::rebind<dragon::frameobject::PreparedBlits>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::CpuRingBufferAllocator<dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer<2,0> >::rebind<dragon::frameobject::PreparedBlits>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-cpuringbufferallocator-dragon-frameobject-preparedblits-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::CpuRingBufferAllocator<dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer<2,0> >::rebind<std::_Container_proxy>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::CpuRingBufferAllocator<dragon::frameobject::PreparedBlits,2,0,Core::CheckedRingBuffer<2,0> >::rebind<std::_Container_proxy>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::CpuRingBufferAllocator<dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer<2,0> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::CpuRingBufferAllocator<dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer<2,0> >\n{\n  Core::CheckedRingBuffer<2,0> *mBufferInstance;\n};\n\n")])])]),c("h3",{attrs:{id:"core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0-rebind-dragon-frameobject-blitableentity"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0-rebind-dragon-frameobject-blitableentity"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::CpuRingBufferAllocator<dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer<2,0> >::rebind<dragon::frameobject::BlitableEntity>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::CpuRingBufferAllocator<dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer<2,0> >::rebind<dragon::frameobject::BlitableEntity>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-cpuringbufferallocator-dragon-frameobject-blitableentity-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::CpuRingBufferAllocator<dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer<2,0> >::rebind<std::_Container_proxy>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::CpuRingBufferAllocator<dragon::frameobject::BlitableEntity,2,0,Core::CheckedRingBuffer<2,0> >::rebind<std::_Container_proxy>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"core-cpuringbufferallocator-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-sortable-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-cpuringbufferallocator-dragon-platform-registry-basicrenderregistry-dragon-frameobject-components-computedispatch-dragon-frameobject-components-viewsetid-dragon-frameobject-components-defaultpasses-alphatest-dragon-frameobject-components-defaultpasses-blit-dragon-frameobject-components-defaultpasses-opaque-dragon-frameobject-components-defaultpasses-stencilwrite-dragon-frameobject-components-defaultpasses-transparent-dragon-frameobject-components-defaultpasses-postfx-dragon-frameobject-components-defaultpasses-ui-dragon-frameobject-components-lightparameters-dragon-frameobject-components-directionallight-dragon-frameobject-components-ambientlight-dragon-frameobject-components-pointlight-dragon-frameobject-components-meshfilter-dragon-frameobject-components-materialfilter-dragon-frameobject-components-particleobject-dragon-frameobject-components-passstate-dragon-frameobject-components-posteffect-dragon-frameobject-components-rendertarget-dragon-frameobject-components-sceneobject-dragon-frameobject-components-sceneoverlayobject-dragon-frameobject-components-scenesky-dragon-frameobject-components-sceneskyobject-dragon-frameobject-components-selectionoverlayobject-dragon-frameobject-components-cubemap-dragon-frameobject-components-shadowsource-dragon-frameobject-components-shadowcaster-dragon-frameobject-components-shadowoverlay-dragon-frameobject-components-shadowvolume-dragon-frameobject-components-sortindex-dragon-frameobject-components-sortorigin-dragon-frameobject-components-transform-dragon-frameobject-components-uielement-dragon-frameobject-components-forcerasterization-dragon-frameobject-components-forcerasterizationwithmultiply-dragon-frameobject-components-raytraceobject-mce-framebuilder-gamecomponents-alphatestcracks-mce-framebuilder-gamecomponents-atmosphere-mce-framebuilder-gamecomponents-blendedcracksobject-mce-framebuilder-gamecomponents-environmentaltext-mce-framebuilder-gamecomponents-gameface-mce-framebuilder-gamecomponents-inlevelcubemapobject-mce-framebuilder-gamecomponents-iteminhandobject-mce-framebuilder-gamecomponents-sceneobjectactors-mce-framebuilder-gamecomponents-transparentiteminworldobject-mce-framebuilder-gamecomponents-waterholeobject-mce-framebuilder-gamecomponents-playerui-mce-framebuilder-gamecomponents-playervision-mce-framebuilder-gamecomponents-overlayui-mce-framebuilder-gamecomponents-vrconfiguration-mce-framebuilder-gamecomponents-vrpresenceobject-mce-framebuilder-gamecomponents-livingroomviewfilter-mce-framebuilder-gamecomponents-livingroomtransitionfilter-mce-framebuilder-gamecomponents-livingroomsceneobject-mce-framebuilder-gamecomponents-vrfloatinguiquad-mce-framebuilder-gamecomponents-fadetoblackeffect-mce-framebuilder-bgfxbridge-rtxminecraftframerendererresources-mce-framebuilder-bgfxbridge-vanillaminecraftframerendererresources-mce-framebuilder-bgfxbridge-holographicminecraftframerendererresources-sortedview-sortable-2-0-core-checkedringbuffer-2-0-rebind-std-container-proxy"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::CpuRingBufferAllocator<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget,dragon::frameobject::components::SceneObject,dragon::frameobject::components::SceneOverlayObject,dragon::frameobject::components::SceneSky,dragon::frameobject::components::SceneSkyObject,dragon::frameobject::components::SelectionOverlayObject,dragon::frameobject::components::Cubemap,dragon::frameobject::components::ShadowSource,dragon::frameobject::components::ShadowCaster,dragon::frameobject::components::ShadowOverlay,dragon::frameobject::components::ShadowVolume,dragon::frameobject::components::SortIndex,dragon::frameobject::components::SortOrigin,dragon::frameobject::components::Transform,dragon::frameobject::components::UIElement,dragon::frameobject::components::ForceRasterization,dragon::frameobject::components::ForceRasterizationWithMultiply,dragon::frameobject::components::RaytraceObject,mce::framebuilder::gamecomponents::AlphaTestCracks,mce::framebuilder::gamecomponents::Atmosphere,mce::framebuilder::gamecomponents::BlendedCracksObject,mce::framebuilder::gamecomponents::EnvironmentalText,mce::framebuilder::gamecomponents::Gameface,mce::framebuilder::gamecomponents::InLevelCubeMapObject,mce::framebuilder::gamecomponents::ItemInHandObject,mce::framebuilder::gamecomponents::SceneObjectActors,mce::framebuilder::gamecomponents::TransparentItemInWorldObject,mce::framebuilder::gamecomponents::WaterHoleObject,mce::framebuilder::gamecomponents::PlayerUI,mce::framebuilder::gamecomponents::PlayerVision,mce::framebuilder::gamecomponents::OverlayUI,mce::framebuilder::gamecomponents::VrConfiguration,mce::framebuilder::gamecomponents::VrPresenceObject,mce::framebuilder::gamecomponents::LivingRoomViewFilter,mce::framebuilder::gamecomponents::LivingRoomTransitionFilter,mce::framebuilder::gamecomponents::LivingRoomSceneObject,mce::framebuilder::gamecomponents::VrFloatingUiQuad,mce::framebuilder::gamecomponents::FadeToBlackEffect,mce::framebuilder::bgfxbridge::RTXMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::VanillaMinecraftFrameRendererResources,mce::framebuilder::bgfxbridge::HolographicMinecraftFrameRendererResources>::SortedView::Sortable,2,0,Core::CheckedRingBuffer<2,0> >::rebind<std::_Container_proxy>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::CpuRingBufferAllocator<dragon::platform::registry::BasicRenderRegistry<dragon::frameobject::components::ComputeDispatch,dragon::frameobject::components::ViewSetId,dragon::frameobject::components::defaultpasses::AlphaTest,dragon::frameobject::components::defaultpasses::Blit,dragon::frameobject::components::defaultpasses::Opaque,dragon::frameobject::components::defaultpasses::StencilWrite,dragon::frameobject::components::defaultpasses::Transparent,dragon::frameobject::components::defaultpasses::PostFX,dragon::frameobject::components::defaultpasses::UI,dragon::frameobject::components::LightParameters,dragon::frameobject::components::DirectionalLight,dragon::frameobject::components::AmbientLight,dragon::frameobject::components::PointLight,dragon::frameobject::components::MeshFilter,dragon::frameobject::components::MaterialFilter,dragon::frameobject::components::ParticleObject,dragon::frameobject::components::PassState,dragon::frameobject::components::PostEffect,dragon::frameobject::components::RenderTarget\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-dependencybuilder"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-dependencybuilder"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::DependencyBuilder<>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::DependencyBuilder<>\n{\n  std::tuple<> mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> > : cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void>\n{\n  cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >\n{\n  std::tuple<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >\n{\n  std::tuple<dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > : cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void>\n{\n  cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-taskbuilderwithaction-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext> : cg::taskorder::TaskBuilder<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> >\n{\n  dragon::rendering::modules::DrawTaskContext mContext;\n  std::function<void __cdecl(dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext> const &,dragon::rendering::modules::DrawTaskContext const &)> mAction;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> > : cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext>\n{\n  cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> > : cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext>\n{\n  cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-dragon-rendering-modules-drawtaskcontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext> > : cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,dragon::rendering::modules::DrawTaskContext>\n{\n  cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >\n{\n  std::tuple<dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >\n{\n  std::tuple<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindframebuffercolor-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > : cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void>\n{\n  cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindFramebufferColor<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-dependencybuilder-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >\n{\n  std::tuple<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > : cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void>\n{\n  cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext>,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"core-cpuringbufferallocator-bgfx-rtlightinfo-2-0-core-checkedringbuffer-2-0"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-cpuringbufferallocator-bgfx-rtlightinfo-2-0-core-checkedringbuffer-2-0"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::CpuRingBufferAllocator<bgfx::RtLightInfo,2,0,Core::CheckedRingBuffer<2,0> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::CpuRingBufferAllocator<bgfx::RtLightInfo,2,0,Core::CheckedRingBuffer<2,0> >\n{\n  Core::CheckedRingBuffer<2,0> *mBufferInstance;\n};\n\n")])])]),c("h3",{attrs:{id:"core-cpuringbufferallocator-unsigned-int-2-0-core-checkedringbuffer-2-0"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-cpuringbufferallocator-unsigned-int-2-0-core-checkedringbuffer-2-0"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::CpuRingBufferAllocator<unsigned int,2,0,Core::CheckedRingBuffer<2,0> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::CpuRingBufferAllocator<unsigned int,2,0,Core::CheckedRingBuffer<2,0> >\n{\n  Core::CheckedRingBuffer<2,0> *mBufferInstance;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindframebufferdepth-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext> > : cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void>\n{\n  cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindFramebufferDepth<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cg-taskorder-taskbuilderwithactionanddependencies-dragon-framegraph-executioncontext-dragon-rendering-rendercontext-void-dragon-framegraph-dependency-bindmaterialtexture-dragon-rendering-rendercontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj cg::taskorder::TaskBuilderWithActionAndDependencies<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void,dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > : cg::taskorder::TaskBuilderWithAction<dragon::framegraph::ExecutionContext<dragon::rendering::RenderContext>,void>\n{\n  cg::taskorder::DependencyBuilder<dragon::framegraph::dependency::BindMaterialTexture<dragon::rendering::RenderContext> > mDependencies;\n};\n\n")])])]),c("h3",{attrs:{id:"core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0-startnewscope-l2-lambda-50d2638b4de85edd403aa2ef73ce482e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-ringallocatorcontainer-unsigned-char-2-0-core-checkedringbuffer-2-0-startnewscope-l2-lambda-50d2638b4de85edd403aa2ef73ce482e"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::RingAllocatorContainer<unsigned char,2,0,Core::CheckedRingBuffer<2,0> >::startNewScope::__l2::<lambda_50d2638b4de85edd403aa2ef73ce482e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::RingAllocatorContainer<unsigned char,2,0,Core::CheckedRingBuffer<2,0> >::startNewScope::__l2::<lambda_50d2638b4de85edd403aa2ef73ce482e>\n{\n  unsigned __int64 fence;\n  std::atomic<unsigned __int64> *lastCompleted;\n  std::atomic<bool> *hasLastCompleted;\n};\n\n")])])]),c("h3",{attrs:{id:"chunkrenderobjectcollection-addtochunkqueue-l2-lambda-fbe26c8e4f7c9bae2f810aaf7646b609"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chunkrenderobjectcollection-addtochunkqueue-l2-lambda-fbe26c8e4f7c9bae2f810aaf7646b609"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChunkRenderObjectCollection::addToChunkQueue::__l2::<lambda_fbe26c8e4f7c9bae2f810aaf7646b609>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChunkRenderObjectCollection::addToChunkQueue::__l2::<lambda_fbe26c8e4f7c9bae2f810aaf7646b609>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"conditionalbandwidthoptimizationdefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#conditionalbandwidthoptimizationdefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConditionalBandwidthOptimizationDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ConditionalBandwidthOptimizationDefinition\n{\n  ConditionalBandwidthOptimization mDefaultValues;\n  std::vector<ConditionalBandwidthOptimization> mConditionalValues;\n};\n\n")])])]),c("h3",{attrs:{id:"clientreplaystatepolicy"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientreplaystatepolicy"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientReplayStatePolicy")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientReplayStatePolicy : IReplayStatePolicy\n{\n  unsigned __int64 mLastValidatedFrame;\n  unsigned __int64 mLastUnsupportedFrame;\n  ReplayStateConfig mConfig;\n};\n\n")])])]),c("h3",{attrs:{id:"clientreplaystatepolicy-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientreplaystatepolicy-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientReplayStatePolicy_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ClientReplayStatePolicy_vtbl\n{\n  void (__fastcall *~IReplayStatePolicy)(IReplayStatePolicy *this);\n  bool (__fastcall *isReplayNeeded)(IReplayStatePolicy *this, AdvanceFrameResult);\n  bool (__fastcall *canRewindToFrame)(IReplayStatePolicy *this, IActorMovementProxy *, unsigned __int64, unsigned __int64);\n  MovementCorrection *(__fastcall *shouldCorrectMovement)(IReplayStatePolicy *this, MovementCorrection *result, IActorMovementProxy *, const PlayerAuthInputPacket *, unsigned __int64);\n  void (__fastcall *flagUnsupportedMovement)(IReplayStatePolicy *this, unsigned __int64);\n};\n\n")])])]),c("h3",{attrs:{id:"camerashakesystem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#camerashakesystem"}},[t._v("#")]),t._v(" "),c("code",[t._v("CameraShakeSystem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CameraShakeSystem : ITickingSystem\n{\n};\n\n")])])]),c("h3",{attrs:{id:"camerashakesystem-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#camerashakesystem-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CameraShakeSystem_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CameraShakeSystem_vtbl\n{\n  void (__fastcall *~ITickingSystem)(ITickingSystem *this);\n  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);\n};\n\n")])])]),c("h3",{attrs:{id:"commandselector-player"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandselector-player"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandSelector<Player>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandSelector<Player> : CommandSelectorBase\n{\n};\n\n")])])]),c("h3",{attrs:{id:"camerashakecommand"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#camerashakecommand"}},[t._v("#")]),t._v(" "),c("code",[t._v("CameraShakeCommand")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CameraShakeCommand : Command\n{\n  _BYTE mShakeAction[1];\n  CameraShakeType mShakeType;\n  __declspec(align(8)) CommandSelector<Player> mTargets;\n  float mIntensity;\n  float mSeconds;\n};\n\n")])])]),c("h3",{attrs:{id:"camerashakecommand-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#camerashakecommand-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CameraShakeCommand_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CameraShakeCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-camerashakecommand-camerashakeaction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-camerashakecommand-camerashakeaction"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum CameraShakeCommand::CameraShakeAction>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum CameraShakeCommand::CameraShakeAction>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-camerashaketype"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-camerashaketype"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum CameraShakeType>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum CameraShakeType>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clearspawnpointcommand"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clearspawnpointcommand"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClearSpawnPointCommand")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClearSpawnPointCommand : Command\n{\n  CommandSelector<Player> mTargets;\n};\n\n")])])]),c("h3",{attrs:{id:"clearspawnpointcommand-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clearspawnpointcommand-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClearSpawnPointCommand_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ClearSpawnPointCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-eventcommand-eventaction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-eventcommand-eventaction"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum EventCommand::EventAction>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum EventCommand::EventAction>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-fogcommand-mode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-fogcommand-mode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum FogCommand::Mode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum FogCommand::Mode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-musiccommand-action"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-musiccommand-action"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum MusicCommand::Action>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum MusicCommand::Action>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-musicrepeatmode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-musicrepeatmode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum MusicRepeatMode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum MusicRepeatMode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-ridecommand-rideaction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-ridecommand-rideaction"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum RideCommand::RideAction>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum RideCommand::RideAction>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-ridecommand-ridefilltype"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-ridecommand-ridefilltype"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum RideCommand::RideFillType>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum RideCommand::RideFillType>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-ridecommand-teleportrules"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-ridecommand-teleportrules"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum RideCommand::TeleportRules>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum RideCommand::TeleportRules>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-ridecommand-riderules"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-ridecommand-riderules"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum RideCommand::RideRules>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum RideCommand::RideRules>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandfilepath"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandfilepath"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandFilePath")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandFilePath\n{\n  std::string mText;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-schedulecommand-scheduleaction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-schedulecommand-scheduleaction"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum ScheduleCommand::ScheduleAction>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum ScheduleCommand::ScheduleAction>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-schedulecommand-onarealoadedaction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-schedulecommand-onarealoadedaction"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum ScheduleCommand::OnAreaLoadedAction>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum ScheduleCommand::OnAreaLoadedAction>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-areatype"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-areatype"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum AreaType>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum AreaType>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-structureblocktype"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-structureblocktype"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum StructureBlockType>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum StructureBlockType>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-structureredstonesavemode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-structureredstonesavemode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum StructureRedstoneSaveMode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum StructureRedstoneSaveMode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-mirror"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-mirror"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum Mirror>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum Mirror>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-animationmode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-animationmode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum AnimationMode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum AnimationMode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandresponse"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandresponse"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandResponse")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) CommandResponse : EventResponse\n{\n  CurrentCmdVersion mCommandVersion;\n  std::vector<HashedString> mRawCommands;\n  _BYTE mTarget[2];\n  std::vector<Command *> mCompiledCommands;\n  bool mIsCompiled;\n  bool mSuccess;\n};\n\n")])])]),c("h3",{attrs:{id:"commandresponse-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandresponse-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandResponse_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CommandResponse_vtbl\n{\n  void (__fastcall *~EventResponse)(EventResponse *this);\n  const std::string *(__fastcall *getName)(EventResponse *this);\n  void (__fastcall *executeAction)(EventResponse *this, RenderParams *);\n  void (__fastcall *buildSchema)(EventResponse *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,EventResponseCollection> > *, const Factory<EventResponse> *);\n};\n\n")])])]),c("h3",{attrs:{id:"commongamemodemessenger"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commongamemodemessenger"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommonGameModeMessenger")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommonGameModeMessenger : IGameModeMessenger\n{\n  Player *mPlayer;\n};\n\n")])])]),c("h3",{attrs:{id:"clientgamemodemessenger"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientgamemodemessenger"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientGameModeMessenger")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientGameModeMessenger : CommonGameModeMessenger\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commongamemodemessenger-createblockbreakcapturescope-l2-lambda-66c7794cb235487fc6a2b9c057229d38"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commongamemodemessenger-createblockbreakcapturescope-l2-lambda-66c7794cb235487fc6a2b9c057229d38"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommonGameModeMessenger::createBlockBreakCaptureScope::__l2::<lambda_66c7794cb235487fc6a2b9c057229d38>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommonGameModeMessenger::createBlockBreakCaptureScope::__l2::<lambda_66c7794cb235487fc6a2b9c057229d38>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clientgamemodetimer"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientgamemodetimer"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientGameModeTimer")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientGameModeTimer : ServerGameModeTimer\n{\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlerbase"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlerbase"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerBase")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) CraftHandlerBase\n{\n  CraftHandlerBase_vtbl *__vftable /*VFT*/;\n  ItemStackRequestActionCraftHandler *mCraftRequestHandler;\n  SparseContainer *mInputSparseContainer;\n  _BYTE mCraftActionType[1];\n  bool mNonImplementedTrustClientResults;\n  std::vector<CraftHandlerBase::ExpectedSlotConsume> mExpectedSlotConsumes;\n  std::vector<ItemStack> mExpectedAnywhereConsumes;\n  std::vector<CraftHandlerBase::AllowedAnywhereConsume> mAllowedAnywhereConsumes;\n  bool mIsCraftRequest;\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlerbase-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlerbase-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerBase_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftHandlerBase_vtbl\n{\n  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);\n  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);\n  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);\n  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlerbase-expectedslotconsume"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlerbase-expectedslotconsume"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerBase::ExpectedSlotConsume")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftHandlerBase::ExpectedSlotConsume\n{\n  const ContainerEnumName mOpenContainerNetId;\n  const unsigned __int8 mSlot;\n  ItemStack mItem;\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlerbase-allowedanywhereconsume"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlerbase-allowedanywhereconsume"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerBase::AllowedAnywhereConsume")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftHandlerBase::AllowedAnywhereConsume\n{\n  const ContainerEnumName mOpenContainerNetId;\n  const unsigned __int8 mMinSlot;\n  const unsigned __int8 mMaxSlot;\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandleranvil"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandleranvil"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerAnvil")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftHandlerAnvil : CraftHandlerBase\n{\n  Player *mPlayer;\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandleranvil-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandleranvil-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerAnvil_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftHandlerAnvil_vtbl\n{\n  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);\n  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);\n  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);\n  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlermap"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlermap"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerMap")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftHandlerMap : CraftHandlerBase\n{\n  Player *mPlayer;\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlermap-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlermap-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerMap_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftHandlerMap_vtbl\n{\n  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);\n  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);\n  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);\n  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-constructor"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-constructor"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::Constructor")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::Constructor\n{\n  std::function<entt::meta_any __cdecl(void)> construct;\n  std::function<entt::meta_any __cdecl(void *)> getAny;\n  std::function<entt::meta_type __cdecl(void)> getType;\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-06719c6a2c3b5d51959bc3a07ea538ca"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-06719c6a2c3b5d51959bc3a07ea538ca"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_06719c6a2c3b5d51959bc3a07ea538ca>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_06719c6a2c3b5d51959bc3a07ea538ca>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-2f2f706bcb3a0bf3e5f2a3c955f48295"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-2f2f706bcb3a0bf3e5f2a3c955f48295"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_2f2f706bcb3a0bf3e5f2a3c955f48295>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_2f2f706bcb3a0bf3e5f2a3c955f48295>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-5c6573b26e033d881519e3b9f4f05715"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-5c6573b26e033d881519e3b9f4f05715"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_5c6573b26e033d881519e3b9f4f05715>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_5c6573b26e033d881519e3b9f4f05715>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l6-lambda-ddbcbce84c840368bbdc237120389e41"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l6-lambda-ddbcbce84c840368bbdc237120389e41"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l6::<lambda_ddbcbce84c840368bbdc237120389e41>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l6::<lambda_ddbcbce84c840368bbdc237120389e41>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-d595495a43e94c05236da4b389810349"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-d595495a43e94c05236da4b389810349"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_d595495a43e94c05236da4b389810349>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_d595495a43e94c05236da4b389810349>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-38eb25fea691ab1406c1acf589edd873"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-38eb25fea691ab1406c1acf589edd873"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_38eb25fea691ab1406c1acf589edd873>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_38eb25fea691ab1406c1acf589edd873>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-175802e7894a92641c534a19c33e6c10"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-175802e7894a92641c534a19c33e6c10"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_175802e7894a92641c534a19c33e6c10>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_175802e7894a92641c534a19c33e6c10>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-02aae47743cbb042add0642122d8874f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-02aae47743cbb042add0642122d8874f"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_02aae47743cbb042add0642122d8874f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_02aae47743cbb042add0642122d8874f>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-691fbb34a5d50a8ceff68ca6921f75b0"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-691fbb34a5d50a8ceff68ca6921f75b0"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_691fbb34a5d50a8ceff68ca6921f75b0>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_691fbb34a5d50a8ceff68ca6921f75b0>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-f4f9b1f7bb6b4cff9a073b26ea933c62"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-f4f9b1f7bb6b4cff9a073b26ea933c62"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_f4f9b1f7bb6b4cff9a073b26ea933c62>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_f4f9b1f7bb6b4cff9a073b26ea933c62>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-7f04d6eadcd817e72270603a73970837"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-7f04d6eadcd817e72270603a73970837"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_7f04d6eadcd817e72270603a73970837>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_7f04d6eadcd817e72270603a73970837>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-63390f89c85397294c20dc5febc0fd07"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-63390f89c85397294c20dc5febc0fd07"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_63390f89c85397294c20dc5febc0fd07>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_63390f89c85397294c20dc5febc0fd07>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l5-lambda-45ba7706ae68db39b00540d8e8b07001"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l5-lambda-45ba7706ae68db39b00540d8e8b07001"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l5::<lambda_45ba7706ae68db39b00540d8e8b07001>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l5::<lambda_45ba7706ae68db39b00540d8e8b07001>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l5-lambda-47d4656d06b81b5d646e9f09e5a91cca"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l5-lambda-47d4656d06b81b5d646e9f09e5a91cca"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l5::<lambda_47d4656d06b81b5d646e9f09e5a91cca>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l5::<lambda_47d4656d06b81b5d646e9f09e5a91cca>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-18ba5b6c5d2ef7335fd7c0944ae1663c"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-18ba5b6c5d2ef7335fd7c0944ae1663c"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_18ba5b6c5d2ef7335fd7c0944ae1663c>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_18ba5b6c5d2ef7335fd7c0944ae1663c>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-68857b4446a180a9dd9377d70bb1decc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-68857b4446a180a9dd9377d70bb1decc"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_68857b4446a180a9dd9377d70bb1decc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_68857b4446a180a9dd9377d70bb1decc>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-f988d10cfe0adfd929abf86d1ed55814"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-f988d10cfe0adfd929abf86d1ed55814"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_f988d10cfe0adfd929abf86d1ed55814>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_f988d10cfe0adfd929abf86d1ed55814>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-83c5c68eb639a0276c8bdd2cc39e4b85"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-83c5c68eb639a0276c8bdd2cc39e4b85"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_83c5c68eb639a0276c8bdd2cc39e4b85>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_83c5c68eb639a0276c8bdd2cc39e4b85>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-595f5c6129412d68260c12d9dc061a20"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-595f5c6129412d68260c12d9dc061a20"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_595f5c6129412d68260c12d9dc061a20>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_595f5c6129412d68260c12d9dc061a20>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-bed6047fd0b105f88228decca5833859"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-bed6047fd0b105f88228decca5833859"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_bed6047fd0b105f88228decca5833859>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_bed6047fd0b105f88228decca5833859>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-32c11f6cbe6cbb01b97d5d3b7fb8f38d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-32c11f6cbe6cbb01b97d5d3b7fb8f38d"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_32c11f6cbe6cbb01b97d5d3b7fb8f38d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_32c11f6cbe6cbb01b97d5d3b7fb8f38d>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-dcf311d7ddfc638357cf584c349eb24b"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-dcf311d7ddfc638357cf584c349eb24b"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_dcf311d7ddfc638357cf584c349eb24b>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_dcf311d7ddfc638357cf584c349eb24b>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-b15cfde9356f80666ac379f076c67168"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-b15cfde9356f80666ac379f076c67168"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_b15cfde9356f80666ac379f076c67168>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_b15cfde9356f80666ac379f076c67168>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-39c57b403cacb9c9123dea5d9ec345ea"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-39c57b403cacb9c9123dea5d9ec345ea"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_39c57b403cacb9c9123dea5d9ec345ea>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_39c57b403cacb9c9123dea5d9ec345ea>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l4-lambda-9e5269047ca309f62857c34b50ac0adc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l4-lambda-9e5269047ca309f62857c34b50ac0adc"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l4::<lambda_9e5269047ca309f62857c34b50ac0adc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l4::<lambda_9e5269047ca309f62857c34b50ac0adc>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l3-lambda-cd737d31e8e90d818a7f3f7365055e81"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l3-lambda-cd737d31e8e90d818a7f3f7365055e81"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l3::<lambda_cd737d31e8e90d818a7f3f7365055e81>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l3::<lambda_cd737d31e8e90d818a7f3f7365055e81>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"componentitem-builditemsfileschema-l3-lambda-90a6baf7857883a194ebe77b1cedf1a3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#componentitem-builditemsfileschema-l3-lambda-90a6baf7857883a194ebe77b1cedf1a3"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComponentItem::_buildItemsFileSchema::__l3::<lambda_90a6baf7857883a194ebe77b1cedf1a3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComponentItem::_buildItemsFileSchema::__l3::<lambda_90a6baf7857883a194ebe77b1cedf1a3>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-274ac7a05a64284cd76bbdba2c7f8818"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-274ac7a05a64284cd76bbdba2c7f8818"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_274ac7a05a64284cd76bbdba2c7f8818>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_274ac7a05a64284cd76bbdba2c7f8818>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-f2b378848c598de273abc9c9fc78bd8a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-f2b378848c598de273abc9c9fc78bd8a"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_f2b378848c598de273abc9c9fc78bd8a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_f2b378848c598de273abc9c9fc78bd8a>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-068c29d7af14898cc0fe025dba9cd80d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-068c29d7af14898cc0fe025dba9cd80d"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_068c29d7af14898cc0fe025dba9cd80d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_068c29d7af14898cc0fe025dba9cd80d>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-13e46b31aebc5784575abe801e3af68a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-13e46b31aebc5784575abe801e3af68a"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_13e46b31aebc5784575abe801e3af68a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_13e46b31aebc5784575abe801e3af68a>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-df3e8be3050a2aaa62dd5a501ac25eab"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-df3e8be3050a2aaa62dd5a501ac25eab"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_df3e8be3050a2aaa62dd5a501ac25eab>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_df3e8be3050a2aaa62dd5a501ac25eab>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-a33d55fb459f2ffc1340888587c29201"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-a33d55fb459f2ffc1340888587c29201"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_a33d55fb459f2ffc1340888587c29201>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_a33d55fb459f2ffc1340888587c29201>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-ab71e30ee4148f3f451eec67bf750a2a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-ab71e30ee4148f3f451eec67bf750a2a"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_ab71e30ee4148f3f451eec67bf750a2a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_ab71e30ee4148f3f451eec67bf750a2a>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-674fedb7f8f19d87e68157e57807c141"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-674fedb7f8f19d87e68157e57807c141"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_674fedb7f8f19d87e68157e57807c141>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_674fedb7f8f19d87e68157e57807c141>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-fbfcad4341a57d7201e8e716822f68fd"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-fbfcad4341a57d7201e8e716822f68fd"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_fbfcad4341a57d7201e8e716822f68fd>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_fbfcad4341a57d7201e8e716822f68fd>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-180f5e3485a6ae91a471e500c4b06386"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-180f5e3485a6ae91a471e500c4b06386"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_180f5e3485a6ae91a471e500c4b06386>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_180f5e3485a6ae91a471e500c4b06386>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-0466c3aa4f74f39cd825466c6b6232bb"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-0466c3aa4f74f39cd825466c6b6232bb"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_0466c3aa4f74f39cd825466c6b6232bb>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_0466c3aa4f74f39cd825466c6b6232bb>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-d1ecf083316e883ec51605168a7eebd9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-d1ecf083316e883ec51605168a7eebd9"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_d1ecf083316e883ec51605168a7eebd9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_d1ecf083316e883ec51605168a7eebd9>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-7d6ae913546175ea9e8c64323acc6b29"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-7d6ae913546175ea9e8c64323acc6b29"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_7d6ae913546175ea9e8c64323acc6b29>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_7d6ae913546175ea9e8c64323acc6b29>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-18868e8156d02ca320cabd997fadca4d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-18868e8156d02ca320cabd997fadca4d"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_18868e8156d02ca320cabd997fadca4d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_18868e8156d02ca320cabd997fadca4d>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-18dbba7b3937e5501854c33ea46448cd"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-18dbba7b3937e5501854c33ea46448cd"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_18dbba7b3937e5501854c33ea46448cd>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_18dbba7b3937e5501854c33ea46448cd>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-978b09f9bb260f3641dbc8ad330d16a6"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-978b09f9bb260f3641dbc8ad330d16a6"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_978b09f9bb260f3641dbc8ad330d16a6>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_978b09f9bb260f3641dbc8ad330d16a6>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-32c4955083c8066406161e037bbdcabf"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-32c4955083c8066406161e037bbdcabf"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_32c4955083c8066406161e037bbdcabf>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_32c4955083c8066406161e037bbdcabf>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-219706fd4ead95d36c08ec2e1a4b52d4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-219706fd4ead95d36c08ec2e1a4b52d4"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_219706fd4ead95d36c08ec2e1a4b52d4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_219706fd4ead95d36c08ec2e1a4b52d4>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-7ec79a3048194f193f9f4c10479687d3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-7ec79a3048194f193f9f4c10479687d3"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_7ec79a3048194f193f9f4c10479687d3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_7ec79a3048194f193f9f4c10479687d3>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-e796f74887e92174f98aa55bfcc84fcc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-e796f74887e92174f98aa55bfcc84fcc"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_e796f74887e92174f98aa55bfcc84fcc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_e796f74887e92174f98aa55bfcc84fcc>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-df89224ccc15be7f98b4780aadd49e98"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-df89224ccc15be7f98b4780aadd49e98"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_df89224ccc15be7f98b4780aadd49e98>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_df89224ccc15be7f98b4780aadd49e98>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-887e0dd9da64b3537ec167baeeba1337"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-887e0dd9da64b3537ec167baeeba1337"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_887e0dd9da64b3537ec167baeeba1337>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_887e0dd9da64b3537ec167baeeba1337>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-e7f83d2a8adfecc1c5879c15f8835d5a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-e7f83d2a8adfecc1c5879c15f8835d5a"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_e7f83d2a8adfecc1c5879c15f8835d5a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_e7f83d2a8adfecc1c5879c15f8835d5a>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-90ba4857f30320eb34346e7df3764bd9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-90ba4857f30320eb34346e7df3764bd9"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_90ba4857f30320eb34346e7df3764bd9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_90ba4857f30320eb34346e7df3764bd9>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-7f8ddde45b73dfa86374548a1a80a997"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-7f8ddde45b73dfa86374548a1a80a997"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_7f8ddde45b73dfa86374548a1a80a997>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_7f8ddde45b73dfa86374548a1a80a997>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-3522edb357a5909e1bb6b517ae8cb533"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-3522edb357a5909e1bb6b517ae8cb533"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_3522edb357a5909e1bb6b517ae8cb533>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_3522edb357a5909e1bb6b517ae8cb533>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-8a353af2dd3dc6319cbbc0c7b0a3766b"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-8a353af2dd3dc6319cbbc0c7b0a3766b"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_8a353af2dd3dc6319cbbc0c7b0a3766b>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_8a353af2dd3dc6319cbbc0c7b0a3766b>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-9b7c706e28804ad377d0ee8443947800"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-9b7c706e28804ad377d0ee8443947800"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_9b7c706e28804ad377d0ee8443947800>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_9b7c706e28804ad377d0ee8443947800>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-ac4ba6fc863681825fa4db0d35c671d7"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-ac4ba6fc863681825fa4db0d35c671d7"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_ac4ba6fc863681825fa4db0d35c671d7>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_ac4ba6fc863681825fa4db0d35c671d7>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-aba81f1d54d3bb08fee2ed02ad6fffae"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-aba81f1d54d3bb08fee2ed02ad6fffae"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_aba81f1d54d3bb08fee2ed02ad6fffae>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_aba81f1d54d3bb08fee2ed02ad6fffae>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-4186695952b7d78e695ff84e2652712d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-4186695952b7d78e695ff84e2652712d"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_4186695952b7d78e695ff84e2652712d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_4186695952b7d78e695ff84e2652712d>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-daa59455bd683dd97d2f167f0ad58c7b"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-daa59455bd683dd97d2f167f0ad58c7b"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_daa59455bd683dd97d2f167f0ad58c7b>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_daa59455bd683dd97d2f167f0ad58c7b>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-22c8de57e442c7d89b27727ba0838b01"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-22c8de57e442c7d89b27727ba0838b01"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_22c8de57e442c7d89b27727ba0838b01>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_22c8de57e442c7d89b27727ba0838b01>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-6816e2193b5ae4f55d9eb32466d75189"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-6816e2193b5ae4f55d9eb32466d75189"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_6816e2193b5ae4f55d9eb32466d75189>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_6816e2193b5ae4f55d9eb32466d75189>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-e4abdff3da922cda48729af424f6f86f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-e4abdff3da922cda48729af424f6f86f"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_e4abdff3da922cda48729af424f6f86f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_e4abdff3da922cda48729af424f6f86f>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-2beea1812a0d9e26506ca1bb96d659ef"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-2beea1812a0d9e26506ca1bb96d659ef"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_2beea1812a0d9e26506ca1bb96d659ef>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_2beea1812a0d9e26506ca1bb96d659ef>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-46270c3b5dc354e70ded28050f2ae6b3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-46270c3b5dc354e70ded28050f2ae6b3"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_46270c3b5dc354e70ded28050f2ae6b3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_46270c3b5dc354e70ded28050f2ae6b3>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-ad0e56c51b79d56ee7f8d1e4164e9b54"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-ad0e56c51b79d56ee7f8d1e4164e9b54"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_ad0e56c51b79d56ee7f8d1e4164e9b54>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_ad0e56c51b79d56ee7f8d1e4164e9b54>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-b3418fd18d79b5cc2a2bef911e213e16"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-b3418fd18d79b5cc2a2bef911e213e16"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_b3418fd18d79b5cc2a2bef911e213e16>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_b3418fd18d79b5cc2a2bef911e213e16>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-a15ce7828021ee33b0cd034b834f8cfa"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-a15ce7828021ee33b0cd034b834f8cfa"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_a15ce7828021ee33b0cd034b834f8cfa>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_a15ce7828021ee33b0cd034b834f8cfa>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-741c841a094c69589eb616a6110f5897"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-741c841a094c69589eb616a6110f5897"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_741c841a094c69589eb616a6110f5897>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_741c841a094c69589eb616a6110f5897>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cerealitemcomponentfactory-registercomponent-l2-lambda-f4c57fcb0432d7cf0fbaa82c6ed46045"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cerealitemcomponentfactory-registercomponent-l2-lambda-f4c57fcb0432d7cf0fbaa82c6ed46045"}},[t._v("#")]),t._v(" "),c("code",[t._v("CerealItemComponentFactory::registerComponent::__l2::<lambda_f4c57fcb0432d7cf0fbaa82c6ed46045>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CerealItemComponentFactory::registerComponent::__l2::<lambda_f4c57fcb0432d7cf0fbaa82c6ed46045>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"customitemregistry"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#customitemregistry"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomItemRegistry")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CustomItemRegistry\n{\n};\n\n")])])]),c("h3",{attrs:{id:"customcropblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#customcropblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomCropBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CustomCropBlock : BushBlock\n{\n  std::vector<std::string> mTargetLandBlocks;\n};\n\n")])])]),c("h3",{attrs:{id:"customcropblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#customcropblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomCropBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CustomCropBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);\n};\n\n")])])]),c("h3",{attrs:{id:"cappedsurfaceattributes-materiallayer"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cappedsurfaceattributes-materiallayer"}},[t._v("#")]),t._v(" "),c("code",[t._v("CappedSurfaceAttributes::MaterialLayer")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CappedSurfaceAttributes::MaterialLayer\n{\n  const Block *block;\n  std::unique_ptr<PerlinNoise> noise;\n};\n\n")])])]),c("h3",{attrs:{id:"chainblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chainblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChainBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChainBlock : RotatedPillarBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"chainblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chainblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChainBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ChainBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"craftingtabledescription-buildschema-l2-lambda-1773ea65163fe404c4642fa29c8a4c51"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingtabledescription-buildschema-l2-lambda-1773ea65163fe404c4642fa29c8a4c51"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingTableDescription::buildSchema::__l2::<lambda_1773ea65163fe404c4642fa29c8a4c51>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingTableDescription::buildSchema::__l2::<lambda_1773ea65163fe404c4642fa29c8a4c51>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingtabledescription-buildschema-l2-lambda-b763889acef0e918448df6dd9fd7b352"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingtabledescription-buildschema-l2-lambda-b763889acef0e918448df6dd9fd7b352"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingTableDescription::buildSchema::__l2::<lambda_b763889acef0e918448df6dd9fd7b352>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingTableDescription::buildSchema::__l2::<lambda_b763889acef0e918448df6dd9fd7b352>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingtabledescription-buildschema-l2-lambda-e2edea0adeb4357ae1bf2247cf9bdf67"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingtabledescription-buildschema-l2-lambda-e2edea0adeb4357ae1bf2247cf9bdf67"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingTableDescription::buildSchema::__l2::<lambda_e2edea0adeb4357ae1bf2247cf9bdf67>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingTableDescription::buildSchema::__l2::<lambda_e2edea0adeb4357ae1bf2247cf9bdf67>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingtabledescription-buildschema-l2-lambda-06044debff39258f61c94d740dbe2662"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingtabledescription-buildschema-l2-lambda-06044debff39258f61c94d740dbe2662"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingTableDescription::buildSchema::__l2::<lambda_06044debff39258f61c94d740dbe2662>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingTableDescription::buildSchema::__l2::<lambda_06044debff39258f61c94d740dbe2662>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cryingobsidianblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cryingobsidianblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("CryingObsidianBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CryingObsidianBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cryingobsidianblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cryingobsidianblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CryingObsidianBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CryingObsidianBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"chunkloadactionlist-tickrequests-l2-lambda-f0a922715729ac9e2b1311f233617b6a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chunkloadactionlist-tickrequests-l2-lambda-f0a922715729ac9e2b1311f233617b6a"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChunkLoadActionList::tickRequests::__l2::<lambda_f0a922715729ac9e2b1311f233617b6a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChunkLoadActionList::tickRequests::__l2::<lambda_f0a922715729ac9e2b1311f233617b6a>\n{\n  ChunkLoadActionList *const __this;\n  ServerLevel *serverLevel;\n  Dimension *dimension;\n  const unsigned __int64 currentTick;\n};\n\n")])])]),c("h3",{attrs:{id:"chunkloadactionlist-loadrequests-l2-lambda-c3a549743ae164c4a4c4097772148871"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chunkloadactionlist-loadrequests-l2-lambda-c3a549743ae164c4a4c4097772148871"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChunkLoadActionList::_loadRequests::__l2::<lambda_c3a549743ae164c4a4c4097772148871>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChunkLoadActionList::_loadRequests::__l2::<lambda_c3a549743ae164c4a4c4097772148871>\n{\n  ChunkLoadActionList *const __this;\n  const std::string *dimensionPrefix;\n};\n\n")])])]),c("h3",{attrs:{id:"chunkloadedactionloader"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chunkloadedactionloader"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChunkLoadedActionLoader")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChunkLoadedActionLoader\n{\n};\n\n")])])]),c("h3",{attrs:{id:"chunkloadpriority"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chunkloadpriority"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChunkLoadPriority")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChunkLoadPriority\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandresponse-compilecommands-l2-lambda-f50b98393645becdcdd14a0f2234d9a9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandresponse-compilecommands-l2-lambda-f50b98393645becdcdd14a0f2234d9a9"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandResponse::_compileCommands::__l2::<lambda_f50b98393645becdcdd14a0f2234d9a9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandResponse::_compileCommands::__l2::<lambda_f50b98393645becdcdd14a0f2234d9a9>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandresponse-buildschema-l2-lambda-20a26bb05a82189a789594e7341fca1d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandresponse-buildschema-l2-lambda-20a26bb05a82189a789594e7341fca1d"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandResponse::buildSchema::__l2::<lambda_20a26bb05a82189a789594e7341fca1d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandResponse::buildSchema::__l2::<lambda_20a26bb05a82189a789594e7341fca1d>\n{\n  const Factory<EventResponse> *factory;\n};\n\n")])])]),c("h3",{attrs:{id:"classid"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#classid"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClassID")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClassID\n{\n};\n\n")])])]),c("h3",{attrs:{id:"celebratehuntdefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#celebratehuntdefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("CelebrateHuntDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CelebrateHuntDefinition\n{\n  bool mBroadcast;\n  float mRadius;\n  int mDuration;\n  ActorFilterGroup mCelebrationTargets;\n  std::string mCelebrateSound;\n  FloatRange mSoundInterval;\n};\n\n")])])]),c("h3",{attrs:{id:"celebratehuntcomponent"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#celebratehuntcomponent"}},[t._v("#")]),t._v(" "),c("code",[t._v("CelebrateHuntComponent")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CelebrateHuntComponent : IEntityComponent\n{\n  bool mCelebrating;\n  Tick mCelebrateUntil;\n  Tick mNextSoundEventTick;\n};\n\n")])])]),c("h3",{attrs:{id:"campfireblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#campfireblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("CampfireBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) CampfireBlock : ActorBlock\n{\n  bool mSpawnRandomParticles;\n};\n\n")])])]),c("h3",{attrs:{id:"campfireblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#campfireblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CampfireBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CampfireBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),c("h3",{attrs:{id:"catchfiresubcomponent-doonhiteffect-l32-lambda-98d1a10c913b18fb7c66b4e14b62149d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#catchfiresubcomponent-doonhiteffect-l32-lambda-98d1a10c913b18fb7c66b4e14b62149d"}},[t._v("#")]),t._v(" "),c("code",[t._v("CatchFireSubcomponent::doOnHitEffect::__l32::<lambda_98d1a10c913b18fb7c66b4e14b62149d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CatchFireSubcomponent::doOnHitEffect::__l32::<lambda_98d1a10c913b18fb7c66b4e14b62149d>\n{\n  Actor **projectileSourceActor;\n  BlockPos *blockPos;\n  BlockSource *region;\n};\n\n")])])]),c("h3",{attrs:{id:"contextaccessor-typederived-entitycontext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#contextaccessor-typederived-entitycontext"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContextAccessor::TypeDerived<EntityContext>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContextAccessor::TypeDerived<EntityContext> : ContextAccessor::TypeBase\n{\n  EntityContext mData;\n};\n\n")])])]),c("h3",{attrs:{id:"contextaccessor-typederived-entitycontext-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#contextaccessor-typederived-entitycontext-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContextAccessor::TypeDerived<EntityContext>_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ContextAccessor::TypeDerived<EntityContext>_vtbl\n{\n  void (__fastcall *~TypeBase)(ContextAccessor::TypeBase *this);\n};\n\n")])])]),c("h3",{attrs:{id:"celebratehuntsystem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#celebratehuntsystem"}},[t._v("#")]),t._v(" "),c("code",[t._v("CelebrateHuntSystem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CelebrateHuntSystem : ITickingSystem\n{\n};\n\n")])])]),c("h3",{attrs:{id:"celebratehuntsystem-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#celebratehuntsystem-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CelebrateHuntSystem_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CelebrateHuntSystem_vtbl\n{\n  void (__fastcall *~ITickingSystem)(ITickingSystem *this);\n  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);\n};\n\n")])])]),c("h3",{attrs:{id:"commandblocksystem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandblocksystem"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandBlockSystem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandBlockSystem : ITickingSystem\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandblocksystem-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandblocksystem-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandBlockSystem_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CommandBlockSystem_vtbl\n{\n  void (__fastcall *~ITickingSystem)(ITickingSystem *this);\n  void (__fastcall *tick)(ITickingSystem *this, EntityRegistry *);\n};\n\n")])])]),c("h3",{attrs:{id:"cropblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cropblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("CropBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CropBlock : BushBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cropblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cropblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CropBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CropBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);\n  const ItemInstance *(__fastcall *getBaseSeed)(CropBlock *this, const ItemInstance *result);\n  const ItemInstance *(__fastcall *getBaseCrop)(CropBlock *this, const ItemInstance *result);\n  int (__fastcall *getSeedNum)(CropBlock *this, Random *, int, int, bool);\n  int (__fastcall *getCropNum)(CropBlock *this, Random *, int, int, bool);\n};\n\n")])])]),c("h3",{attrs:{id:"core-memoryfilesystementry"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-memoryfilesystementry"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::MemoryFileSystemEntry")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::MemoryFileSystemEntry\n{\n  Core::MemoryFileSystemEntry_vtbl *__vftable /*VFT*/;\n  _BYTE mFileType[4];\n  Core::MemoryFileSystemEntryDir *mpParentDir;\n  Core::PathBuffer<std::string > mName;\n};\n\n")])])]),c("h3",{attrs:{id:"core-memoryfilesystementry-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-memoryfilesystementry-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::MemoryFileSystemEntry_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ Core::MemoryFileSystemEntry_vtbl\n{\n  void (__fastcall *~MemoryFileSystemEntry)(Core::MemoryFileSystemEntry *this);\n  unsigned __int64 (__fastcall *getNumOpenFiles)(Core::MemoryFileSystemEntry *this);\n  Core::Result *(__fastcall *canRemove)(Core::MemoryFileSystemEntry *this, Core::Result *result);\n  unsigned __int64 (__fastcall *getSize)(Core::MemoryFileSystemEntry *this);\n};\n\n")])])]),c("h3",{attrs:{id:"core-memoryfilesystementrydir-memoryfilesystementryitem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-memoryfilesystementrydir-memoryfilesystementryitem"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::MemoryFileSystemEntryDir::MemoryFileSystemEntryItem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::MemoryFileSystemEntryDir::MemoryFileSystemEntryItem\n{\n  unsigned int entryId;\n  std::unique_ptr<Core::MemoryFileSystemEntry> entry;\n};\n\n")])])]),c("h3",{attrs:{id:"core-memoryfilesystementrydir"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-memoryfilesystementrydir"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::MemoryFileSystemEntryDir")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) Core::MemoryFileSystemEntryDir : Core::MemoryFileSystemEntry\n{\n  std::vector<std::shared_ptr<Core::MemoryFileSystemEntryDir::MemoryFileSystemEntryItem>> mEntryItems;\n  unsigned int mOpenFileCount;\n};\n\n")])])]),c("h3",{attrs:{id:"core-memoryfilesystementrydir-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-memoryfilesystementrydir-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::MemoryFileSystemEntryDir_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ Core::MemoryFileSystemEntryDir_vtbl\n{\n  void (__fastcall *~MemoryFileSystemEntry)(Core::MemoryFileSystemEntry *this);\n  unsigned __int64 (__fastcall *getNumOpenFiles)(Core::MemoryFileSystemEntry *this);\n  Core::Result *(__fastcall *canRemove)(Core::MemoryFileSystemEntry *this, Core::Result *result);\n  unsigned __int64 (__fastcall *getSize)(Core::MemoryFileSystemEntry *this);\n};\n\n")])])]),c("h3",{attrs:{id:"core-memoryfilesystementryfile"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-memoryfilesystementryfile"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::MemoryFileSystemEntryFile")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::MemoryFileSystemEntryFile : Core::MemoryFileSystemEntry\n{\n  std::vector<char> mData;\n  std::vector<Core::MemoryFileSystemFile *> mOpenFiles;\n};\n\n")])])]),c("h3",{attrs:{id:"core-memoryfilesystemfile"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-memoryfilesystemfile"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::MemoryFileSystemFile")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) Core::MemoryFileSystemFile : Core::FileImpl\n{\n  Core::MemoryFileSystemEntryFile *mpEntry;\n  unsigned __int64 mPosition;\n  Core::FileOpenMode mFileOpenMode;\n};\n\n")])])]),c("h3",{attrs:{id:"core-memoryfilesystemfile-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-memoryfilesystemfile-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::MemoryFileSystemFile_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ Core::MemoryFileSystemFile_vtbl\n{\n  void (__fastcall *~FileImpl)(Core::FileImpl *this);\n  Core::PathBuffer<std::string > *(__fastcall *_getPath)(Core::FileImpl *this, Core::PathBuffer<std::string > *result);\n  unsigned __int64 (__fastcall *_getBlockSize)(Core::FileImpl *this);\n  bool (__fastcall *_isOpen)(Core::FileImpl *this);\n  Core::Result *(__fastcall *_close)(Core::FileImpl *this, Core::Result *result);\n  Core::Result *(__fastcall *_read)(Core::FileImpl *this, Core::Result *result, void *, unsigned __int64, unsigned __int64 *);\n  Core::Result *(__fastcall *_readExactly)(Core::FileImpl *this, Core::Result *result, void *, unsigned __int64);\n  Core::Result *(__fastcall *_skip)(Core::FileImpl *this, Core::Result *result, unsigned __int64);\n  Core::Result *(__fastcall *_readAtPosition)(Core::FileImpl *this, Core::Result *result, unsigned __int64, void *, unsigned __int64, unsigned __int64 *);\n  Core::Result *(__fastcall *_getPosition)(Core::FileImpl *this, Core::Result *result, unsigned __int64 *);\n  Core::Result *(__fastcall *_setPosition)(Core::FileImpl *this, Core::Result *result, unsigned __int64);\n  Core::Result *(__fastcall *_write)(Core::FileImpl *this, Core::Result *result, const void *, unsigned __int64);\n  Core::Result *(__fastcall *_flush)(Core::FileImpl *this, Core::Result *result);\n  Core::Result *(__fastcall *_getSize)(Core::FileImpl *this, Core::Result *result, unsigned __int64 *);\n  Core::Result *(__fastcall *_getRemainingSize)(Core::FileImpl *this, Core::Result *result, unsigned __int64 *);\n};\n\n")])])]),c("h3",{attrs:{id:"core-memoryfilesystementryfile-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-memoryfilesystementryfile-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::MemoryFileSystemEntryFile_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ Core::MemoryFileSystemEntryFile_vtbl\n{\n  void (__fastcall *~MemoryFileSystemEntry)(Core::MemoryFileSystemEntry *this);\n  unsigned __int64 (__fastcall *getNumOpenFiles)(Core::MemoryFileSystemEntry *this);\n  Core::Result *(__fastcall *canRemove)(Core::MemoryFileSystemEntry *this, Core::Result *result);\n  unsigned __int64 (__fastcall *getSize)(Core::MemoryFileSystemEntry *this);\n};\n\n")])])]),c("h3",{attrs:{id:"core-memoryfilesystem-writeop"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-memoryfilesystem-writeop"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::MemoryFileSystem::WriteOp")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::MemoryFileSystem::WriteOp\n{\n  Core::PathBuffer<std::string > writePath;\n  unsigned __int64 writeSize;\n};\n\n")])])]),c("h3",{attrs:{id:"core-memoryfilesystem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-memoryfilesystem"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::MemoryFileSystem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::MemoryFileSystem : Core::FileSystemImpl\n{\n  std::recursive_mutex mMutex;\n  Core::MemoryFileSystemEntryDir mRootDir;\n  std::mutex mWriteOpMutex;\n  std::vector<Core::MemoryFileSystem::WriteOp> mWriteOps;\n  std::vector<Core::PathBuffer<std::string >> mFilesMarkedForRemoval;\n};\n\n")])])]),c("h3",{attrs:{id:"controlleddiskaccess-core-filesystem-windows-controlleddiskaccessentry"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#controlleddiskaccess-core-filesystem-windows-controlleddiskaccessentry"}},[t._v("#")]),t._v(" "),c("code",[t._v("ControlledDiskAccess<Core::FileSystem_windows>::ControlledDiskAccessEntry")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ControlledDiskAccess<Core::FileSystem_windows>::ControlledDiskAccessEntry\n{\n  unsigned int priority;\n  ControlledDiskAccess<Core::FileSystem_windows>::CDA_Command command;\n  Core::PathBuffer<std::string > sourcePath;\n  Core::PathBuffer<std::string > targetPath;\n};\n\n")])])]),c("h3",{attrs:{id:"controlleddiskaccess-core-filesystem-windows"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#controlleddiskaccess-core-filesystem-windows"}},[t._v("#")]),t._v(" "),c("code",[t._v("ControlledDiskAccess<Core::FileSystem_windows>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ControlledDiskAccess<Core::FileSystem_windows>\n{\n  unsigned __int64 mMaxWriteAmountPerSecond;\n  unsigned int mMaxNumberOfWritesPerMinute;\n  Core::MemoryFileSystem *mFSSource;\n  Core::FileSystemImpl *mFSTarget;\n  std::atomic<bool> mCommandExecutionInProgress;\n  std::unique_ptr<TaskGroup> mIOTaskGroup;\n  bool mPartialFileWrite;\n  unsigned __int64 mPartialFilePosition;\n  std::mutex mMutex;\n  std::queue<std::unique_ptr<ControlledDiskAccess<Core::FileSystem_windows>::ControlledDiskAccessEntry,std::default_delete<ControlledDiskAccess<Core::FileSystem_windows>::ControlledDiskAccessEntry> >> mQueue;\n  std::unique_ptr<ControlledDiskAccess<Core::FileSystem_windows>::ControlledDiskAccessEntry,std::default_delete<ControlledDiskAccess<Core::FileSystem_windows>::ControlledDiskAccessEntry> > mCurrentEntry;\n  std::shared_ptr<Core::ZipUtils::ZipProgress> mProgressTracker;\n};\n\n")])])]),c("h3",{attrs:{id:"core-storagebackedmemoryfilesystem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-storagebackedmemoryfilesystem"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::StorageBackedMemoryFileSystem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) Core::StorageBackedMemoryFileSystem : Core::FileSystemImpl\n{\n  std::unique_ptr<Core::FileSystem_windows> mFileSystem;\n  std::unique_ptr<Core::MemoryFileSystem> mMemoryFileSystem;\n  std::shared_ptr<ControlledDiskAccess<Core::FileSystem_windows> > mControlledDiskAccess;\n  bool mShouldFlushToDisk;\n  std::atomic<bool> mShouldCommit;\n  unsigned __int64 mWriteVolumeLimitInBytesPerSecond;\n  unsigned int mWriteQuantityLimitInCountPerMinute;\n};\n\n")])])]),c("h3",{attrs:{id:"core-storagebackedmemoryfilesystem-directoryitem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-storagebackedmemoryfilesystem-directoryitem"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::StorageBackedMemoryFileSystem::DirectoryItem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::StorageBackedMemoryFileSystem::DirectoryItem\n{\n  Core::PathBuffer<Core::StackString<char,1024> > fullPathStr;\n  unsigned __int64 fileSize;\n  _BYTE fileType[4];\n  Core::PathBuffer<Core::StackString<char,1024> > name;\n};\n\n")])])]),c("h3",{attrs:{id:"core-flatfileoperations"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-flatfileoperations"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::FlatFileOperations")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::FlatFileOperations\n{\n};\n\n")])])]),c("h3",{attrs:{id:"core-storagebackedmemoryfilesystem-iterateoverdirectory-l2-lambda-c6419e72899cf220491cef01ab66c9a5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-storagebackedmemoryfilesystem-iterateoverdirectory-l2-lambda-c6419e72899cf220491cef01ab66c9a5"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::StorageBackedMemoryFileSystem::_iterateOverDirectory::__l2::<lambda_c6419e72899cf220491cef01ab66c9a5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::StorageBackedMemoryFileSystem::_iterateOverDirectory::__l2::<lambda_c6419e72899cf220491cef01ab66c9a5>\n{\n  Core::DirectoryIterationFlags *flags;\n  std::vector<Core::StorageBackedMemoryFileSystem::DirectoryItem> *directoryItems;\n};\n\n")])])]),c("h3",{attrs:{id:"core-storagebackedmemoryfilesystemproxy"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-storagebackedmemoryfilesystemproxy"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::StorageBackedMemoryFileSystemProxy")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::StorageBackedMemoryFileSystemProxy : Core::FileSystemImpl\n{\n  std::shared_ptr<Core::FileSystemImpl> mImpl;\n  std::vector<Core::PathBuffer<std::string >> mOpenWrites;\n};\n\n")])])]),c("h3",{attrs:{id:"compressednetworkpeer"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compressednetworkpeer"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompressedNetworkPeer")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompressedNetworkPeer : NetworkPeer\n{\n  std::string mSendBuffer;\n  std::string mReceiveBuffer;\n};\n\n")])])]),c("h3",{attrs:{id:"compressednetworkpeer-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compressednetworkpeer-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompressedNetworkPeer_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CompressedNetworkPeer_vtbl\n{\n  void (__fastcall *~NetworkPeer)(NetworkPeer *this);\n  void (__fastcall *sendPacket)(NetworkPeer *this, const std::string *, NetworkPeer::Reliability, int, unsigned __int16, Compressibility);\n  NetworkPeer::DataStatus (__fastcall *receivePacket)(NetworkPeer *this, std::string *);\n  NetworkPeer::NetworkStatus *(__fastcall *getNetworkStatus)(NetworkPeer *this, NetworkPeer::NetworkStatus *result);\n  void (__fastcall *addIncomingData)(NetworkPeer *this, std::string);\n  void (__fastcall *update)(NetworkPeer *this);\n  void (__fastcall *flush)(NetworkPeer *this, std::function<void __cdecl(void)> *);\n};\n\n")])])]),c("h3",{attrs:{id:"crypto-hash-hash-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crypto-hash-hash-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("Crypto::Hash::Hash_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ Crypto::Hash::Hash_vtbl\n{\n  void (__fastcall *~IHash)(Crypto::Hash::IHash *this);\n  void (__fastcall *reset)(Crypto::Hash::IHash *this);\n  void (__fastcall *update)(Crypto::Hash::IHash *this, const void *, unsigned int);\n  void (__fastcall *final)(Crypto::Hash::IHash *this, unsigned __int8 *);\n  unsigned __int64 (__fastcall *resultSize)(Crypto::Hash::IHash *this);\n};\n\n")])])]),c("h3",{attrs:{id:"commandoutputpacket-read-l2-lambda-04a2fcb1d096da0a1dd9aa4cbad0e15c"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandoutputpacket-read-l2-lambda-04a2fcb1d096da0a1dd9aa4cbad0e15c"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandOutputPacket::read::__l2::<lambda_04a2fcb1d096da0a1dd9aa4cbad0e15c>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandOutputPacket::read::__l2::<lambda_04a2fcb1d096da0a1dd9aa4cbad0e15c>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandoutputpacket-read-l2-lambda-04a2fcb1d096da0a1dd9aa4cbad0e15c-l2-lambda-111bef47aba037e64e2de7ab058b2546"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandoutputpacket-read-l2-lambda-04a2fcb1d096da0a1dd9aa4cbad0e15c-l2-lambda-111bef47aba037e64e2de7ab058b2546"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandOutputPacket::read::__l2::<lambda_04a2fcb1d096da0a1dd9aa4cbad0e15c>::()::__l2::<lambda_111bef47aba037e64e2de7ab058b2546>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandOutputPacket::read::__l2::<lambda_04a2fcb1d096da0a1dd9aa4cbad0e15c>::()::__l2::<lambda_111bef47aba037e64e2de7ab058b2546>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandoutputpacket-write-l2-lambda-5c0d0a82998e37e66147a0d26f6f41e9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandoutputpacket-write-l2-lambda-5c0d0a82998e37e66147a0d26f6f41e9"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandOutputPacket::write::__l2::<lambda_5c0d0a82998e37e66147a0d26f6f41e9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandOutputPacket::write::__l2::<lambda_5c0d0a82998e37e66147a0d26f6f41e9>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandoutputpacket-write-l2-lambda-5c0d0a82998e37e66147a0d26f6f41e9-l2-lambda-08a2613ea832ae6e1c316072b3dcf92d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandoutputpacket-write-l2-lambda-5c0d0a82998e37e66147a0d26f6f41e9-l2-lambda-08a2613ea832ae6e1c316072b3dcf92d"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandOutputPacket::write::__l2::<lambda_5c0d0a82998e37e66147a0d26f6f41e9>::()::__l2::<lambda_08a2613ea832ae6e1c316072b3dcf92d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandOutputPacket::write::__l2::<lambda_5c0d0a82998e37e66147a0d26f6f41e9>::()::__l2::<lambda_08a2613ea832ae6e1c316072b3dcf92d>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clientboundmapitemdatapacket-write-l14-lambda-c1e7efae3b5dc21032bb93b639f0a656"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientboundmapitemdatapacket-write-l14-lambda-c1e7efae3b5dc21032bb93b639f0a656"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientboundMapItemDataPacket::write::__l14::<lambda_c1e7efae3b5dc21032bb93b639f0a656>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientboundMapItemDataPacket::write::__l14::<lambda_c1e7efae3b5dc21032bb93b639f0a656>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clientboundmapitemdatapacket-write-l11-lambda-461be92f04b6766159e2a14649e21c49"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientboundmapitemdatapacket-write-l11-lambda-461be92f04b6766159e2a14649e21c49"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientboundMapItemDataPacket::write::__l11::<lambda_461be92f04b6766159e2a14649e21c49>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientboundMapItemDataPacket::write::__l11::<lambda_461be92f04b6766159e2a14649e21c49>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clientboundmapitemdatapacket-write-l11-lambda-fac84794c48ef9a05c921b62900cfc23"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientboundmapitemdatapacket-write-l11-lambda-fac84794c48ef9a05c921b62900cfc23"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientboundMapItemDataPacket::write::__l11::<lambda_fac84794c48ef9a05c921b62900cfc23>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientboundMapItemDataPacket::write::__l11::<lambda_fac84794c48ef9a05c921b62900cfc23>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clientboundmapitemdatapacket-write-l5-lambda-b4233823788b03f84b72100ad9164053"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientboundmapitemdatapacket-write-l5-lambda-b4233823788b03f84b72100ad9164053"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientboundMapItemDataPacket::write::__l5::<lambda_b4233823788b03f84b72100ad9164053>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientboundMapItemDataPacket::write::__l5::<lambda_b4233823788b03f84b72100ad9164053>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clientboundmapitemdatapacket-read-l11-lambda-299406233ccff525293e6b278e5e2143"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientboundmapitemdatapacket-read-l11-lambda-299406233ccff525293e6b278e5e2143"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientboundMapItemDataPacket::read::__l11::<lambda_299406233ccff525293e6b278e5e2143>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientboundMapItemDataPacket::read::__l11::<lambda_299406233ccff525293e6b278e5e2143>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clientboundmapitemdatapacket-read-l11-lambda-4627a9aa0712be76211aa31f1c634fab"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientboundmapitemdatapacket-read-l11-lambda-4627a9aa0712be76211aa31f1c634fab"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientboundMapItemDataPacket::read::__l11::<lambda_4627a9aa0712be76211aa31f1c634fab>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientboundMapItemDataPacket::read::__l11::<lambda_4627a9aa0712be76211aa31f1c634fab>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clientboundmapitemdatapacket-read-l5-lambda-a6c59ce5d5173a7b49ebcbdb4d1edebc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientboundmapitemdatapacket-read-l5-lambda-a6c59ce5d5173a7b49ebcbdb4d1edebc"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientboundMapItemDataPacket::read::__l5::<lambda_a6c59ce5d5173a7b49ebcbdb4d1edebc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientboundMapItemDataPacket::read::__l5::<lambda_a6c59ce5d5173a7b49ebcbdb4d1edebc>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"creativecontentpacket-read-l2-lambda-96e9e64950119d68213f99866c7e0253"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#creativecontentpacket-read-l2-lambda-96e9e64950119d68213f99866c7e0253"}},[t._v("#")]),t._v(" "),c("code",[t._v("CreativeContentPacket::read::__l2::<lambda_96e9e64950119d68213f99866c7e0253>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CreativeContentPacket::read::__l2::<lambda_96e9e64950119d68213f99866c7e0253>\n{\n  unsigned int *i;\n};\n\n")])])]),c("h3",{attrs:{id:"creativecontentpacket-write-l5-lambda-45d3c2d0ca3ded40260607e2e7c69dc2"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#creativecontentpacket-write-l5-lambda-45d3c2d0ca3ded40260607e2e7c69dc2"}},[t._v("#")]),t._v(" "),c("code",[t._v("CreativeContentPacket::write::__l5::<lambda_45d3c2d0ca3ded40260607e2e7c69dc2>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CreativeContentPacket::write::__l5::<lambda_45d3c2d0ca3ded40260607e2e7c69dc2>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingeventpacket-read-l2-lambda-3623cfbc0b234474e5a7a6043a32091c"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingeventpacket-read-l2-lambda-3623cfbc0b234474e5a7a6043a32091c"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingEventPacket::read::__l2::<lambda_3623cfbc0b234474e5a7a6043a32091c>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingEventPacket::read::__l2::<lambda_3623cfbc0b234474e5a7a6043a32091c>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingeventpacket-read-l2-lambda-6b5d3f89745eb1b42b1abcdc2cfecf6e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingeventpacket-read-l2-lambda-6b5d3f89745eb1b42b1abcdc2cfecf6e"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingEventPacket::read::__l2::<lambda_6b5d3f89745eb1b42b1abcdc2cfecf6e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingEventPacket::read::__l2::<lambda_6b5d3f89745eb1b42b1abcdc2cfecf6e>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingeventpacket-write-l2-lambda-8d95ef7248562c60723dda14c08a47de"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingeventpacket-write-l2-lambda-8d95ef7248562c60723dda14c08a47de"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingEventPacket::write::__l2::<lambda_8d95ef7248562c60723dda14c08a47de>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingEventPacket::write::__l2::<lambda_8d95ef7248562c60723dda14c08a47de>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingeventpacket-write-l2-lambda-8cfbdd6deaa5624e9cb513c03578c983"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingeventpacket-write-l2-lambda-8cfbdd6deaa5624e9cb513c03578c983"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingEventPacket::write::__l2::<lambda_8cfbdd6deaa5624e9cb513c03578c983>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingEventPacket::write::__l2::<lambda_8cfbdd6deaa5624e9cb513c03578c983>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingdatapacket-read-l21-lambda-0281d7cf4dad9b4308c03ae95eb3a525"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingdatapacket-read-l21-lambda-0281d7cf4dad9b4308c03ae95eb3a525"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingDataPacket::read::__l21::<lambda_0281d7cf4dad9b4308c03ae95eb3a525>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingDataPacket::read::__l21::<lambda_0281d7cf4dad9b4308c03ae95eb3a525>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingdatapacket-read-l2-lambda-1b84a61e5063cd2a0e9cc8970d0b665a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingdatapacket-read-l2-lambda-1b84a61e5063cd2a0e9cc8970d0b665a"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingDataPacket::read::__l2::<lambda_1b84a61e5063cd2a0e9cc8970d0b665a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingDataPacket::read::__l2::<lambda_1b84a61e5063cd2a0e9cc8970d0b665a>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingdatapacket-read-l2-lambda-54bc7cd634b04089ec4ff322c27cddbb"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingdatapacket-read-l2-lambda-54bc7cd634b04089ec4ff322c27cddbb"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingDataPacket::read::__l2::<lambda_54bc7cd634b04089ec4ff322c27cddbb>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingDataPacket::read::__l2::<lambda_54bc7cd634b04089ec4ff322c27cddbb>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingdatapacket-read-l2-lambda-03aa26e243735ee9ece5930a778e19bb"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingdatapacket-read-l2-lambda-03aa26e243735ee9ece5930a778e19bb"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingDataPacket::read::__l2::<lambda_03aa26e243735ee9ece5930a778e19bb>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingDataPacket::read::__l2::<lambda_03aa26e243735ee9ece5930a778e19bb>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingdatapacket-write-l2-lambda-e5ff81a04513ae571fd2ed01ede86d57"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingdatapacket-write-l2-lambda-e5ff81a04513ae571fd2ed01ede86d57"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingDataPacket::write::__l2::<lambda_e5ff81a04513ae571fd2ed01ede86d57>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingDataPacket::write::__l2::<lambda_e5ff81a04513ae571fd2ed01ede86d57>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingdatapacket-write-l2-lambda-f66ca93671b251d3fd735aa0bf744948"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingdatapacket-write-l2-lambda-f66ca93671b251d3fd735aa0bf744948"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingDataPacket::write::__l2::<lambda_f66ca93671b251d3fd735aa0bf744948>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingDataPacket::write::__l2::<lambda_f66ca93671b251d3fd735aa0bf744948>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingdatapacket-write-l2-lambda-b8b5ea0a1f44ec41ec43cb7cf66d6afd"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingdatapacket-write-l2-lambda-b8b5ea0a1f44ec41ec43cb7cf66d6afd"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingDataPacket::write::__l2::<lambda_b8b5ea0a1f44ec41ec43cb7cf66d6afd>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingDataPacket::write::__l2::<lambda_b8b5ea0a1f44ec41ec43cb7cf66d6afd>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"craftingdatapacket-write-l2-lambda-f0c4f01fa12286088002e5b7913413d8"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingdatapacket-write-l2-lambda-f0c4f01fa12286088002e5b7913413d8"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingDataPacket::write::__l2::<lambda_f0c4f01fa12286088002e5b7913413d8>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingDataPacket::write::__l2::<lambda_f0c4f01fa12286088002e5b7913413d8>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"crypto-encryptedfileheader-unnamed-type-efheader"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crypto-encryptedfileheader-unnamed-type-efheader"}},[t._v("#")]),t._v(" "),c("code",[t._v("Crypto::encryptedFileHeader::<unnamed_type__efheader>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct Crypto::encryptedFileHeader::<unnamed_type__efheader>\n{\n  unsigned int _version;\n  Crypto::signatureValue _efsignature;\n  unsigned int _data1;\n  unsigned int _data2;\n  unsigned __int8 _IdSize;\n  char _IdName[239];\n};\n\n")])])]),c("h3",{attrs:{id:"compositepacksource-foreachpack-l6-lambda-367a75bf960abb288ec97e873c12428a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compositepacksource-foreachpack-l6-lambda-367a75bf960abb288ec97e873c12428a"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompositePackSource::forEachPack::__l6::<lambda_367a75bf960abb288ec97e873c12428a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompositePackSource::forEachPack::__l6::<lambda_367a75bf960abb288ec97e873c12428a>\n{\n  std::vector<PackIdVersion> *visitedPacks;\n  std::function<void __cdecl(Pack &)> *callback;\n};\n\n")])])]),c("h3",{attrs:{id:"compositepacksource-foreachpackconst-l6-lambda-559bc3fba05953cf51044a45a84dcf0d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compositepacksource-foreachpackconst-l6-lambda-559bc3fba05953cf51044a45a84dcf0d"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompositePackSource::forEachPackConst::__l6::<lambda_559bc3fba05953cf51044a45a84dcf0d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompositePackSource::forEachPackConst::__l6::<lambda_559bc3fba05953cf51044a45a84dcf0d>\n{\n  std::vector<PackIdVersion> *visitedPacks;\n  std::function<void __cdecl(Pack const &)> *callback;\n};\n\n")])])]),c("h3",{attrs:{id:"core-unzipinternals"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-unzipinternals"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::UnzipInternals")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::UnzipInternals\n{\n  void *mZipFile;\n};\n\n")])])]),c("h3",{attrs:{id:"commandmessage-messagecomponent"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandmessage-messagecomponent"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandMessage::MessageComponent")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandMessage::MessageComponent\n{\n  std::string string;\n  std::unique_ptr<CommandSelector<Actor>> selection;\n};\n\n")])])]),c("h3",{attrs:{id:"commandmessage"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandmessage"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandMessage")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandMessage\n{\n  std::vector<CommandMessage::MessageComponent> mData;\n};\n\n")])])]),c("h3",{attrs:{id:"commandrawtext"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandrawtext"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRawText")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRawText\n{\n  std::string mText;\n};\n\n")])])]),c("h3",{attrs:{id:"commandwildcardint"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandwildcardint"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandWildcardInt")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandWildcardInt\n{\n  bool mIsWildcard;\n  int mValue;\n};\n\n")])])]),c("h3",{attrs:{id:"clientautomationcommandorigin"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientautomationcommandorigin"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientAutomationCommandOrigin")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientAutomationCommandOrigin : CommandOrigin\n{\n  std::string mRequestId;\n};\n\n")])])]),c("h3",{attrs:{id:"clientautomationcommandorigin-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientautomationcommandorigin-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientAutomationCommandOrigin_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ClientAutomationCommandOrigin_vtbl\n{\n  void (__fastcall *~CommandOrigin)(CommandOrigin *this);\n  const std::string *(__fastcall *getRequestId)(CommandOrigin *this);\n  std::string *(__fastcall *getName)(CommandOrigin *this, std::string *result);\n  BlockPos *(__fastcall *getBlockPosition)(CommandOrigin *this, BlockPos *result);\n  Vec3 *(__fastcall *getWorldPosition)(CommandOrigin *this, Vec3 *result);\n  Level *(__fastcall *getLevel)(CommandOrigin *this);\n  Dimension *(__fastcall *getDimension)(CommandOrigin *this);\n  Actor *(__fastcall *getEntity)(CommandOrigin *this);\n  CommandPermissionLevel (__fastcall *getPermissionsLevel)(CommandOrigin *this);\n  std::unique_ptr<CommandOrigin> *(__fastcall *clone)(CommandOrigin *this, std::unique_ptr<CommandOrigin> *result);\n  std::optional<BlockPos> *(__fastcall *getCursorHitBlockPos)(CommandOrigin *this, std::optional<BlockPos> *result);\n  std::optional<Vec3> *(__fastcall *getCursorHitPos)(CommandOrigin *this, std::optional<Vec3> *result);\n  bool (__fastcall *hasChatPerms)(CommandOrigin *this);\n  bool (__fastcall *hasTellPerms)(CommandOrigin *this);\n  bool (__fastcall *canUseAbility)(CommandOrigin *this, AbilitiesIndex);\n  bool (__fastcall *isWorldBuilder)(CommandOrigin *this);\n  bool (__fastcall *canUseCommandsWithoutCheatsEnabled)(CommandOrigin *this);\n  bool (__fastcall *isSelectorExpansionAllowed)(CommandOrigin *this);\n  const NetworkIdentifier *(__fastcall *getSourceId)(CommandOrigin *this);\n  unsigned __int8 (__fastcall *getSourceSubId)(CommandOrigin *this);\n  const CommandOrigin *(__fastcall *getOutputReceiver)(CommandOrigin *this);\n  CommandOriginType (__fastcall *getOriginType)(CommandOrigin *this);\n  CommandOriginData *(__fastcall *toCommandOriginData)(CommandOrigin *this, CommandOriginData *result);\n  const mce::UUID *(__fastcall *getUUID)(CommandOrigin *this);\n  void (__fastcall *handleCommandOutputCallback)(CommandOrigin *this, Json::Value *);\n  void (__fastcall *_setUUID)(CommandOrigin *this, const mce::UUID *);\n};\n\n")])])]),c("h3",{attrs:{id:"clientblobcache-server-activetransfersmanager-rememberblob-l13-lambda-cbe0fac81da36102ba2c1cdce3ecd16e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientblobcache-server-activetransfersmanager-rememberblob-l13-lambda-cbe0fac81da36102ba2c1cdce3ecd16e"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientBlobCache::Server::ActiveTransfersManager::rememberBlob::__l13::<lambda_cbe0fac81da36102ba2c1cdce3ecd16e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientBlobCache::Server::ActiveTransfersManager::rememberBlob::__l13::<lambda_cbe0fac81da36102ba2c1cdce3ecd16e>\n{\n  ClientBlobCache::Server::ActiveTransfersManager *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"commandorigin-fromcommandorigindata-l5-lambda-c4f9d28d0d1549595c039f306673e27c"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandorigin-fromcommandorigindata-l5-lambda-c4f9d28d0d1549595c039f306673e27c"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandOrigin::fromCommandOriginData::__l5::<lambda_c4f9d28d0d1549595c039f306673e27c>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) CommandOrigin::fromCommandOriginData::__l5::<lambda_c4f9d28d0d1549595c039f306673e27c>\n{\n  const NetworkIdentifier *sourceId;\n  unsigned __int8 sourceSubId;\n};\n\n")])])]),c("h3",{attrs:{id:"commandareafactory-getarea-l23-lambda-0efece9ce348f4d9959d0fd4083ac376"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandareafactory-getarea-l23-lambda-0efece9ce348f4d9959d0fd4083ac376"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandAreaFactory::_getArea::__l23::<lambda_0efece9ce348f4d9959d0fd4083ac376>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandAreaFactory::_getArea::__l23::<lambda_0efece9ce348f4d9959d0fd4083ac376>\n{\n  ChunkPos *cp;\n};\n\n")])])]),c("h3",{attrs:{id:"commandareafactory-getarea-l2-lambda-2c28d13bbbdff35c73a055f9292bfe19"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandareafactory-getarea-l2-lambda-2c28d13bbbdff35c73a055f9292bfe19"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandAreaFactory::_getArea::__l2::<lambda_2c28d13bbbdff35c73a055f9292bfe19>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandAreaFactory::_getArea::__l2::<lambda_2c28d13bbbdff35c73a055f9292bfe19>\n{\n  const Bounds *requiredArea;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-commanditem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-commanditem"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<CommandItem>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<CommandItem>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-block-const"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-block-const"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<Block const *>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<Block const *>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-getautocompleteoptions-l2-lambda-08d88ad7b4a5d4fe270c8aaf4025af0d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-getautocompleteoptions-l2-lambda-08d88ad7b4a5d4fe270c8aaf4025af0d"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::getAutoCompleteOptions::__l2::<lambda_08d88ad7b4a5d4fe270c8aaf4025af0d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::getAutoCompleteOptions::__l2::<lambda_08d88ad7b4a5d4fe270c8aaf4025af0d>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-getautocompleteoptions-l2-lambda-54885e06ac509493fd3c71e97ba31bd5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-getautocompleteoptions-l2-lambda-54885e06ac509493fd3c71e97ba31bd5"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::getAutoCompleteOptions::__l2::<lambda_54885e06ac509493fd3c71e97ba31bd5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::getAutoCompleteOptions::__l2::<lambda_54885e06ac509493fd3c71e97ba31bd5>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-getautocompleteoptions-l2-lambda-ae8832d910885e324562d537f39d8b6e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-getautocompleteoptions-l2-lambda-ae8832d910885e324562d537f39d8b6e"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::getAutoCompleteOptions::__l2::<lambda_ae8832d910885e324562d537f39d8b6e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::getAutoCompleteOptions::__l2::<lambda_ae8832d910885e324562d537f39d8b6e>\n{\n  CommandRegistry::SemanticInfo *semanticInfo;\n  const CommandRegistry *const __this;\n  std::string *unparsedText;\n  bool *newWord;\n  const CommandOrigin *origin;\n  std::unique_ptr<AutoCompleteInformation> *result;\n  const CommandRegistry::ParseTable *table;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-parsetreevisitor-lambda-08d88ad7b4a5d4fe270c8aaf4025af0d-lambda-54885e06ac509493fd3c71e97ba31bd5-lambda-ae8832d910885e324562d537f39d8b6e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-parsetreevisitor-lambda-08d88ad7b4a5d4fe270c8aaf4025af0d-lambda-54885e06ac509493fd3c71e97ba31bd5-lambda-ae8832d910885e324562d537f39d8b6e"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::ParseTreeVisitor<<lambda_08d88ad7b4a5d4fe270c8aaf4025af0d>,<lambda_54885e06ac509493fd3c71e97ba31bd5>,<lambda_ae8832d910885e324562d537f39d8b6e> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::ParseTreeVisitor<<lambda_08d88ad7b4a5d4fe270c8aaf4025af0d>,<lambda_54885e06ac509493fd3c71e97ba31bd5>,<lambda_ae8832d910885e324562d537f39d8b6e> > : CommandRegistry::getAutoCompleteOptions::__l2::<lambda_08d88ad7b4a5d4fe270c8aaf4025af0d>, CommandRegistry::getAutoCompleteOptions::__l2::<lambda_54885e06ac509493fd3c71e97ba31bd5>, CommandRegistry::getAutoCompleteOptions::__l2::<lambda_ae8832d910885e324562d537f39d8b6e>\n{\n  _BYTE gap0;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-getoverloadsyntaxinformation-l5-lambda-0ee50b28ac559fb7167610861c82c3b8"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-getoverloadsyntaxinformation-l5-lambda-0ee50b28ac559fb7167610861c82c3b8"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::getOverloadSyntaxInformation::__l5::<lambda_0ee50b28ac559fb7167610861c82c3b8>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::getOverloadSyntaxInformation::__l5::<lambda_0ee50b28ac559fb7167610861c82c3b8>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-getoverloadsyntaxinformation-l5-lambda-19d920e626aebe51e6ca8191f97cc035"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-getoverloadsyntaxinformation-l5-lambda-19d920e626aebe51e6ca8191f97cc035"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::getOverloadSyntaxInformation::__l5::<lambda_19d920e626aebe51e6ca8191f97cc035>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::getOverloadSyntaxInformation::__l5::<lambda_19d920e626aebe51e6ca8191f97cc035>\n{\n  std::vector<OverloadSyntaxInformation> *possibilities;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-getoverloadsyntaxinformation-l5-lambda-0ce6a8587e76f234789878ea4f4227fa"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-getoverloadsyntaxinformation-l5-lambda-0ce6a8587e76f234789878ea4f4227fa"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::getOverloadSyntaxInformation::__l5::<lambda_0ce6a8587e76f234789878ea4f4227fa>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::getOverloadSyntaxInformation::__l5::<lambda_0ce6a8587e76f234789878ea4f4227fa>\n{\n  std::vector<OverloadSyntaxInformation> *possibilities;\n  const CommandRegistry *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-parsetreevisitor-lambda-0ee50b28ac559fb7167610861c82c3b8-lambda-19d920e626aebe51e6ca8191f97cc035-lambda-0ce6a8587e76f234789878ea4f4227fa"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-parsetreevisitor-lambda-0ee50b28ac559fb7167610861c82c3b8-lambda-19d920e626aebe51e6ca8191f97cc035-lambda-0ce6a8587e76f234789878ea4f4227fa"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::ParseTreeVisitor<<lambda_0ee50b28ac559fb7167610861c82c3b8>,<lambda_19d920e626aebe51e6ca8191f97cc035>,<lambda_0ce6a8587e76f234789878ea4f4227fa> >")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::ParseTreeVisitor<<lambda_0ee50b28ac559fb7167610861c82c3b8>,<lambda_19d920e626aebe51e6ca8191f97cc035>,<lambda_0ce6a8587e76f234789878ea4f4227fa> > : CommandRegistry::getOverloadSyntaxInformation::__l5::<lambda_0ee50b28ac559fb7167610861c82c3b8>, CommandRegistry::getOverloadSyntaxInformation::__l5::<lambda_19d920e626aebe51e6ca8191f97cc035>, CommandRegistry::getOverloadSyntaxInformation::__l5::<lambda_0ce6a8587e76f234789878ea4f4227fa>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"codebuildercommand"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#codebuildercommand"}},[t._v("#")]),t._v(" "),c("code",[t._v("CodeBuilderCommand")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CodeBuilderCommand : Command\n{\n  _BYTE mAction[4];\n  __declspec(align(8)) CommandSelector<Player> mPlayerTargets;\n  CommandRawText mURL;\n  bool mShouldOpenWindow;\n};\n\n")])])]),c("h3",{attrs:{id:"codebuildercommand-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#codebuildercommand-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CodeBuilderCommand_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CodeBuilderCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-gametype"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-gametype"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum GameType>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum GameType>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-bool"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-bool"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<bool>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<bool>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-int"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-int"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<int>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<int>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-agentcommands-direction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-agentcommands-direction"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum AgentCommands::Direction>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum AgentCommands::Direction>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-agentcommand-mode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-agentcommand-mode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum AgentCommand::Mode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum AgentCommand::Mode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-agentcommands-collectcommand-collectionspecification"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-agentcommands-collectcommand-collectionspecification"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum AgentCommands::CollectCommand::CollectionSpecification>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum AgentCommands::CollectCommand::CollectionSpecification>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-codebuildercommand-action"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-codebuildercommand-action"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum CodeBuilderCommand::Action>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum CodeBuilderCommand::Action>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandselectorbase-newresults-l54-lambda-22f7ffa562b6d789d635310378f0cdae"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandselectorbase-newresults-l54-lambda-22f7ffa562b6d789d635310378f0cdae"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandSelectorBase::newResults::__l54::<lambda_22f7ffa562b6d789d635310378f0cdae>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandSelectorBase::newResults::__l54::<lambda_22f7ffa562b6d789d635310378f0cdae>\n{\n  const CommandSelectorBase *const __this;\n  std::function<void __cdecl(Actor &)> *addEntity;\n};\n\n")])])]),c("h3",{attrs:{id:"commandselectorbase-newresults-l52-lambda-6f8eabf9af8392d984153e547b4fd261"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandselectorbase-newresults-l52-lambda-6f8eabf9af8392d984153e547b4fd261"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandSelectorBase::newResults::__l52::<lambda_6f8eabf9af8392d984153e547b4fd261>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandSelectorBase::newResults::__l52::<lambda_6f8eabf9af8392d984153e547b4fd261>\n{\n  const CommandSelectorBase *const __this;\n  std::function<void __cdecl(Actor &)> *addEntity;\n};\n\n")])])]),c("h3",{attrs:{id:"commandselectorbase-newresults-l44-lambda-70a396ffbdb6e1b92161cf002e1e6fae"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandselectorbase-newresults-l44-lambda-70a396ffbdb6e1b92161cf002e1e6fae"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandSelectorBase::newResults::__l44::<lambda_70a396ffbdb6e1b92161cf002e1e6fae>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandSelectorBase::newResults::__l44::<lambda_70a396ffbdb6e1b92161cf002e1e6fae>\n{\n  const CommandSelectorBase *const __this;\n  const CommandOrigin *origin;\n  std::function<void __cdecl(Actor &)> *addEntity;\n  const ActorUniqueID *originAgentID;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-ctor-l2-lambda-361045df7e3bde2e5a2028877afb9a53"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-ctor-l2-lambda-361045df7e3bde2e5a2028877afb9a53"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::{ctor}::__l2::<lambda_361045df7e3bde2e5a2028877afb9a53>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::{ctor}::__l2::<lambda_361045df7e3bde2e5a2028877afb9a53>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-ctor-l2-lambda-7f6b17ab23224a5d644798305b18dea4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-ctor-l2-lambda-7f6b17ab23224a5d644798305b18dea4"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::{ctor}::__l2::<lambda_7f6b17ab23224a5d644798305b18dea4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::{ctor}::__l2::<lambda_7f6b17ab23224a5d644798305b18dea4>\n{\n  const CommandRegistry::Symbol Arg;\n  const CommandRegistry::Symbol Args;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-ctor-l2-lambda-414f2af8519f0713a5e0c677db6bb898"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-ctor-l2-lambda-414f2af8519f0713a5e0c677db6bb898"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::{ctor}::__l2::<lambda_414f2af8519f0713a5e0c677db6bb898>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::{ctor}::__l2::<lambda_414f2af8519f0713a5e0c677db6bb898>\n{\n  const CommandRegistry::Symbol Arg;\n  const CommandRegistry::Symbol Comma;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-ctor-l5-lambda-cf1a3bc1337d755975289f3f698b3589"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-ctor-l5-lambda-cf1a3bc1337d755975289f3f698b3589"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::{ctor}::__l5::<lambda_cf1a3bc1337d755975289f3f698b3589>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::{ctor}::__l5::<lambda_cf1a3bc1337d755975289f3f698b3589>\n{\n  const CommandRegistry::Symbol OpenBrace;\n  const CommandRegistry::Symbol CloseBrace;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-ctor-l5-lambda-f5186b54b476c2be3f76bb2a1af8b06a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-ctor-l5-lambda-f5186b54b476c2be3f76bb2a1af8b06a"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::{ctor}::__l5::<lambda_f5186b54b476c2be3f76bb2a1af8b06a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::{ctor}::__l5::<lambda_f5186b54b476c2be3f76bb2a1af8b06a>\n{\n  const CommandRegistry::Symbol ScoresArg;\n  const CommandRegistry::Symbol Comma;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-ctor-l2-lambda-605018ec809aeceb683bc762484a9d96"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-ctor-l2-lambda-605018ec809aeceb683bc762484a9d96"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::{ctor}::__l2::<lambda_605018ec809aeceb683bc762484a9d96>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::{ctor}::__l2::<lambda_605018ec809aeceb683bc762484a9d96>\n{\n  std::vector<std::pair<std::string,int>> *typeNames;\n  std::vector<enum ActorType> *invalidEntities;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-parseselector-l249-lambda-d62e97e7a0676903544f97c1fc2704a6"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-parseselector-l249-lambda-d62e97e7a0676903544f97c1fc2704a6"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::parseSelector::__l249::<lambda_d62e97e7a0676903544f97c1fc2704a6>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::parseSelector::__l249::<lambda_d62e97e7a0676903544f97c1fc2704a6>\n{\n  std::pair<int,int> level;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-parseselector-l246-lambda-28bcc386864748a0e234273411c43c59"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-parseselector-l246-lambda-28bcc386864748a0e234273411c43c59"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::parseSelector::__l246::<lambda_28bcc386864748a0e234273411c43c59>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::parseSelector::__l246::<lambda_28bcc386864748a0e234273411c43c59>\n{\n  std::pair<float,float> yRotation;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-parseselector-l237-lambda-63db28ceedc03525f27c514cb8cf71ac"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-parseselector-l237-lambda-63db28ceedc03525f27c514cb8cf71ac"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::parseSelector::__l237::<lambda_63db28ceedc03525f27c514cb8cf71ac>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::parseSelector::__l237::<lambda_63db28ceedc03525f27c514cb8cf71ac>\n{\n  CommandIntegerRange range;\n  std::string objName;\n  const std::function<int __cdecl(bool &,std::string const &,Actor const &)> *callback;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-parseselector-l67-lambda-4e234e3626d90af13bf77dbb36bd4669"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-parseselector-l67-lambda-4e234e3626d90af13bf77dbb36bd4669"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::parseSelector::__l67::<lambda_4e234e3626d90af13bf77dbb36bd4669>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(4)) CommandRegistry::parseSelector::__l67::<lambda_4e234e3626d90af13bf77dbb36bd4669>\n{\n  GameType type;\n  bool inverted;\n};\n\n")])])]),c("h3",{attrs:{id:"commandoutputsender-sendtoadmins-l23-lambda-038d1a6e7bb914ec0d3b2509a54419db"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandoutputsender-sendtoadmins-l23-lambda-038d1a6e7bb914ec0d3b2509a54419db"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandOutputSender::sendToAdmins::__l23::<lambda_038d1a6e7bb914ec0d3b2509a54419db>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) CommandOutputSender::sendToAdmins::__l23::<lambda_038d1a6e7bb914ec0d3b2509a54419db>\n{\n  TextObjectRoot *textObjectRoot;\n  ActorUniqueID *playerId;\n  _BYTE opPermLevel[1];\n};\n\n")])])]),c("h3",{attrs:{id:"commandoutputsender-sendtoadmins-l26-lambda-3349d776e79858640ef0ba11afaa57fd"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandoutputsender-sendtoadmins-l26-lambda-3349d776e79858640ef0ba11afaa57fd"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandOutputSender::sendToAdmins::__l26::<lambda_3349d776e79858640ef0ba11afaa57fd>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandOutputSender::sendToAdmins::__l26::<lambda_3349d776e79858640ef0ba11afaa57fd>\n{\n  const CommandOutputMessage *message;\n};\n\n")])])]),c("h3",{attrs:{id:"commandoutputsender-send-l20-lambda-2ce2c90252fa1240d87f82a6879ddf14"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandoutputsender-send-l20-lambda-2ce2c90252fa1240d87f82a6879ddf14"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandOutputSender::send::__l20::<lambda_2ce2c90252fa1240d87f82a6879ddf14>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandOutputSender::send::__l20::<lambda_2ce2c90252fa1240d87f82a6879ddf14>\n{\n  const CommandOutputMessage *message;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-visitcommandparsetree-l38-lambda-392e9dd357a2416c9c1270d21bdf5be7"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-visitcommandparsetree-l38-lambda-392e9dd357a2416c9c1270d21bdf5be7"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::_visitCommandParseTree::__l38::<lambda_392e9dd357a2416c9c1270d21bdf5be7>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::_visitCommandParseTree::__l38::<lambda_392e9dd357a2416c9c1270d21bdf5be7>\n{\n  const CommandRegistry *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-visitcommandparsetree-l36-lambda-05f2e04d42b55be64a3cf7612824c8db"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-visitcommandparsetree-l36-lambda-05f2e04d42b55be64a3cf7612824c8db"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::_visitCommandParseTree::__l36::<lambda_05f2e04d42b55be64a3cf7612824c8db>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::_visitCommandParseTree::__l36::<lambda_05f2e04d42b55be64a3cf7612824c8db>\n{\n  const CommandRegistry *const __this;\n  const CommandRegistry::ParseTreeVisitor<<lambda_0ee50b28ac559fb7167610861c82c3b8>,<lambda_19d920e626aebe51e6ca8191f97cc035>,<lambda_0ce6a8587e76f234789878ea4f4227fa> > *visitor;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-visitcommandparsetree-l24-lambda-edd84d20487ee55e23e25db858881012"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-visitcommandparsetree-l24-lambda-edd84d20487ee55e23e25db858881012"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::_visitCommandParseTree::__l24::<lambda_edd84d20487ee55e23e25db858881012>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::_visitCommandParseTree::__l24::<lambda_edd84d20487ee55e23e25db858881012>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-visitcommandparsetree-l38-lambda-617a76d12e6d2a53077fb1597f7a3dd1"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-visitcommandparsetree-l38-lambda-617a76d12e6d2a53077fb1597f7a3dd1"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::_visitCommandParseTree::__l38::<lambda_617a76d12e6d2a53077fb1597f7a3dd1>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::_visitCommandParseTree::__l38::<lambda_617a76d12e6d2a53077fb1597f7a3dd1>\n{\n  const CommandRegistry *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-visitcommandparsetree-l36-lambda-1b330ce45f34653cad8c98af9609e36a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-visitcommandparsetree-l36-lambda-1b330ce45f34653cad8c98af9609e36a"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::_visitCommandParseTree::__l36::<lambda_1b330ce45f34653cad8c98af9609e36a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::_visitCommandParseTree::__l36::<lambda_1b330ce45f34653cad8c98af9609e36a>\n{\n  const CommandRegistry *const __this;\n  const CommandRegistry::ParseTreeVisitor<<lambda_08d88ad7b4a5d4fe270c8aaf4025af0d>,<lambda_54885e06ac509493fd3c71e97ba31bd5>,<lambda_ae8832d910885e324562d537f39d8b6e> > *visitor;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-visitcommandparsetree-l24-lambda-a600244a6bf1c54ab33531b7c0f5fcee"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-visitcommandparsetree-l24-lambda-a600244a6bf1c54ab33531b7c0f5fcee"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::_visitCommandParseTree::__l24::<lambda_a600244a6bf1c54ab33531b7c0f5fcee>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::_visitCommandParseTree::__l24::<lambda_a600244a6bf1c54ab33531b7c0f5fcee>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandselectorbase-newresults-l46-lambda-c263e4b3886672215959338cc46972af"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandselectorbase-newresults-l46-lambda-c263e4b3886672215959338cc46972af"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandSelectorBase::newResults::__l46::<lambda_c263e4b3886672215959338cc46972af>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandSelectorBase::newResults::__l46::<lambda_c263e4b3886672215959338cc46972af>\n{\n  std::function<void __cdecl(Actor &)> *addEntity;\n};\n\n")])])]),c("h3",{attrs:{id:"commandselectorbase-newresults-l41-lambda-48a585b10008cbd8b875398ee88491b1"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandselectorbase-newresults-l41-lambda-48a585b10008cbd8b875398ee88491b1"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandSelectorBase::newResults::__l41::<lambda_48a585b10008cbd8b875398ee88491b1>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandSelectorBase::newResults::__l41::<lambda_48a585b10008cbd8b875398ee88491b1>\n{\n  const CommandSelectorBase *const __this;\n  Vec3 source;\n  const CommandOrigin *origin;\n  std::set<std::pair<float,Actor *>> *entities;\n  unsigned __int64 *count;\n};\n\n")])])]),c("h3",{attrs:{id:"commandselectorbase-newresults-l39-lambda-c1528fafb0866bfed861d2fb0d691fd4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandselectorbase-newresults-l39-lambda-c1528fafb0866bfed861d2fb0d691fd4"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandSelectorBase::newResults::__l39::<lambda_c1528fafb0866bfed861d2fb0d691fd4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandSelectorBase::newResults::__l39::<lambda_c1528fafb0866bfed861d2fb0d691fd4>\n{\n  const CommandSelectorBase *const __this;\n  std::vector<Actor *> *entitiesFlat;\n  const CommandOrigin *origin;\n};\n\n")])])]),c("h3",{attrs:{id:"commandselectorbase-newresults-l37-lambda-3273758fa95c626e53ac475073e44526"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandselectorbase-newresults-l37-lambda-3273758fa95c626e53ac475073e44526"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandSelectorBase::newResults::__l37::<lambda_3273758fa95c626e53ac475073e44526>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandSelectorBase::newResults::__l37::<lambda_3273758fa95c626e53ac475073e44526>\n{\n  const CommandSelectorBase *const __this;\n  Vec3 source;\n  std::vector<Actor *> *entitiesFlat;\n  const CommandOrigin *origin;\n};\n\n")])])]),c("h3",{attrs:{id:"commanddispatcher"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commanddispatcher"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandDispatcher")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandDispatcher : ICommandDispatcher\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commanddispatcher-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commanddispatcher-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandDispatcher_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CommandDispatcher_vtbl\n{\n  void (__fastcall *~ICommandDispatcher)(ICommandDispatcher *this);\n  int (__fastcall *performCommand)(ICommandDispatcher *this, const CommandOrigin *, Command *);\n};\n\n")])])]),c("h3",{attrs:{id:"commandfunctionentry"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandfunctionentry"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandFunctionEntry")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandFunctionEntry : IFunctionEntry\n{\n  std::unique_ptr<Command> mCommand;\n};\n\n")])])]),c("h3",{attrs:{id:"commandfunctionentry-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandfunctionentry-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandFunctionEntry_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CommandFunctionEntry_vtbl\n{\n  void (__fastcall *~IFunctionEntry)(IFunctionEntry *this);\n  void (__fastcall *execute)(IFunctionEntry *this, FunctionManager *, const CommandOrigin *);\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-ifeature-const"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-ifeature-const"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<IFeature const *>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<IFeature const *>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-actordefinitionidentifier-const"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-actordefinitionidentifier-const"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<ActorDefinitionIdentifier const *>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<ActorDefinitionIdentifier const *>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-structurefeaturetype"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-structurefeaturetype"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum StructureFeatureType>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum StructureFeatureType>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-enchant-type"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-enchant-type"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum Enchant::Type>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum Enchant::Type>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clearcommand"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clearcommand"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClearCommand")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClearCommand : Command\n{\n  CommandSelector<Player> mTargets;\n  CommandItem mItem;\n  int mData;\n  int mMaxCount;\n};\n\n")])])]),c("h3",{attrs:{id:"clearcommand-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clearcommand-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClearCommand_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ClearCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),c("h3",{attrs:{id:"clonecommand"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clonecommand"}},[t._v("#")]),t._v(" "),c("code",[t._v("CloneCommand")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) CloneCommand : Command\n{\n  CommandPosition mBegin;\n  CommandPosition mEnd;\n  CommandPosition mDestination;\n  CloneCommand::MaskMode mMaskMode;\n  CloneCommand::CloneMode mCloneMode;\n  const Block *mBlock;\n  int mData;\n};\n\n")])])]),c("h3",{attrs:{id:"clonecommand-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clonecommand-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CloneCommand_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CloneCommand_vtbl\n{\n  void (__fastcall *~Command)(Command *this);\n  void (__fastcall *execute)(Command *this, const CommandOrigin *, CommandOutput *);\n};\n\n")])])]),c("h3",{attrs:{id:"commandpositionfloat"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandpositionfloat"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandPositionFloat")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandPositionFloat : CommandPosition\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-rotation"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-rotation"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum Rotation>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum Rotation>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-bossbarcommand-bossbaraction"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-bossbarcommand-bossbaraction"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum BossbarCommand::BossbarAction>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum BossbarCommand::BossbarAction>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-bossbarcommand-bossbargetoption"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-bossbarcommand-bossbargetoption"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum BossbarCommand::BossbarGetOption>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum BossbarCommand::BossbarGetOption>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-bossbarcommand-bossbarsetoption"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-bossbarcommand-bossbarsetoption"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum BossbarCommand::BossbarSetOption>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum BossbarCommand::BossbarSetOption>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-bossbarcolor"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-bossbarcolor"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum BossBarColor>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum BossBarColor>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-clonecommand-maskmode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-clonecommand-maskmode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum CloneCommand::MaskMode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum CloneCommand::MaskMode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-clonecommand-clonemode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-clonecommand-clonemode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum CloneCommand::CloneMode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum CloneCommand::CloneMode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-difficulty"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-difficulty"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum Difficulty>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum Difficulty>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-effectcommand-mode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-effectcommand-mode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum EffectCommand::Mode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum EffectCommand::Mode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-mobeffect-const"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-mobeffect-const"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<MobEffect const *>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<MobEffect const *>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-executecommand-mode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-executecommand-mode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum ExecuteCommand::Mode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum ExecuteCommand::Mode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-fillcommand-fillmode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-fillcommand-fillmode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum FillCommand::FillMode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum FillCommand::FillMode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clearcommand-execute-l24-lambda-a1fc2660f4ed9e2cc3d3b9bb3bd21c50"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clearcommand-execute-l24-lambda-a1fc2660f4ed9e2cc3d3b9bb3bd21c50"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClearCommand::execute::__l24::<lambda_a1fc2660f4ed9e2cc3d3b9bb3bd21c50>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) ClearCommand::execute::__l24::<lambda_a1fc2660f4ed9e2cc3d3b9bb3bd21c50>\n{\n  const ItemDescriptor *descriptor;\n  const __int16 damage;\n  const bool compareDamageValue;\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-listdcommand-detailmode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-listdcommand-detailmode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum ListDCommand::DetailMode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum ListDCommand::DetailMode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-permissioncommand-action"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-permissioncommand-action"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum PermissionCommand::Action>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum PermissionCommand::Action>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-permissioncommand-availablecommandpermissionpresets"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-permissioncommand-availablecommandpermissionpresets"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum PermissionCommand::AvailableCommandPermissionPresets>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum PermissionCommand::AvailableCommandPermissionPresets>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-blockslot"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-blockslot"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum BlockSlot>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum BlockSlot>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-equipmentslot"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-equipmentslot"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum EquipmentSlot>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum EquipmentSlot>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-replaceitemcommand-targettype"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-replaceitemcommand-targettype"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum ReplaceItemCommand::TargetType>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum ReplaceItemCommand::TargetType>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-replaceitemcommand-replacemode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-replaceitemcommand-replacemode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum ReplaceItemCommand::ReplaceMode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum ReplaceItemCommand::ReplaceMode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-scoreboardcommand-category"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-scoreboardcommand-category"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum ScoreboardCommand::Category>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum ScoreboardCommand::Category>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-scoreboardcommand-action"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-scoreboardcommand-action"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum ScoreboardCommand::Action>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum ScoreboardCommand::Action>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-objectivesortorder"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-objectivesortorder"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum ObjectiveSortOrder>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum ObjectiveSortOrder>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-setblockcommand-setblockmode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-setblockcommand-setblockmode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum SetBlockCommand::SetBlockMode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum SetBlockCommand::SetBlockMode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-tagcommand-action"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-tagcommand-action"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum TagCommand::Action>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum TagCommand::Action>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-teleportcommand-facingresult"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-teleportcommand-facingresult"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum TeleportCommand::FacingResult>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum TeleportCommand::FacingResult>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-testforblockscommand-mode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-testforblockscommand-mode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum TestForBlocksCommand::Mode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum TestForBlocksCommand::Mode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-tickingareacommand-mode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-tickingareacommand-mode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum TickingAreaCommand::Mode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum TickingAreaCommand::Mode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-tickingareacommand-addareatype"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-tickingareacommand-addareatype"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum TickingAreaCommand::AddAreaType>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum TickingAreaCommand::AddAreaType>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-tickingareacommand-targetdimensions"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-tickingareacommand-targetdimensions"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum TickingAreaCommand::TargetDimensions>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum TickingAreaCommand::TargetDimensions>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-timecommand-mode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-timecommand-mode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum TimeCommand::Mode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum TimeCommand::Mode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-timecommand-query"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-timecommand-query"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum TimeCommand::Query>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum TimeCommand::Query>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-timecommand-timespec"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-timecommand-timespec"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum TimeCommand::TimeSpec>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum TimeCommand::TimeSpec>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-titlecommand-mode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-titlecommand-mode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum TitleCommand::Mode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum TitleCommand::Mode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-titlerawcommand-mode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-titlerawcommand-mode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum TitleRawCommand::Mode>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum TitleRawCommand::Mode>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-weathercommand-weathertype"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-weathercommand-weathertype"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum WeatherCommand::WeatherType>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum WeatherCommand::WeatherType>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"commandregistry-defaultidconverter-enum-weathercommand-weatherrequest"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandregistry-defaultidconverter-enum-weathercommand-weatherrequest"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandRegistry::DefaultIdConverter<enum WeatherCommand::WeatherRequest>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandRegistry::DefaultIdConverter<enum WeatherCommand::WeatherRequest>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"contentkeysfile"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#contentkeysfile"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContentKeysFile")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContentKeysFile\n{\n  const Core::PathBuffer<std::string > mFilePath;\n  std::unordered_map<std::string,std::string> mKeyMap;\n};\n\n")])])]),c("h3",{attrs:{id:"core-profile-profilethread"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#core-profile-profilethread"}},[t._v("#")]),t._v(" "),c("code",[t._v("Core::Profile::ProfileThread")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Core::Profile::ProfileThread\n{\n};\n\n")])])]),c("h3",{attrs:{id:"common-buildinfo"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#common-buildinfo"}},[t._v("#")]),t._v(" "),c("code",[t._v("Common::BuildInfo")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Common::BuildInfo\n{\n  std::string mBuildId;\n  std::string mCommitId;\n  std::string mBranchId;\n  std::string mFlavor;\n};\n\n")])])]),c("h3",{attrs:{id:"chanceinformation"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chanceinformation"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChanceInformation")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChanceInformation\n{\n  std::variant<float,std::pair<unsigned int,unsigned int> > mChance;\n};\n\n")])])]),c("h3",{attrs:{id:"crcdatainput"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crcdatainput"}},[t._v("#")]),t._v(" "),c("code",[t._v("CRCDataInput")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CRCDataInput : ICRCDataInput\n{\n  unsigned int mCrc;\n  std::unique_ptr<IDataInput> mStream;\n};\n\n")])])]),c("h3",{attrs:{id:"crcdatainput-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crcdatainput-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CRCDataInput_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CRCDataInput_vtbl\n{\n  void (__fastcall *~IDataInput)(IDataInput *this);\n  std::string *(__fastcall *readString)(IDataInput *this, std::string *result);\n  std::string *(__fastcall *readLongString)(IDataInput *this, std::string *result);\n  float (__fastcall *readFloat)(IDataInput *this);\n  long double (__fastcall *readDouble)(IDataInput *this);\n  char (__fastcall *readByte)(IDataInput *this);\n  __int16 (__fastcall *readShort)(IDataInput *this);\n  int (__fastcall *readInt)(IDataInput *this);\n  __int64 (__fastcall *readLongLong)(IDataInput *this);\n  bool (__fastcall *readBytes)(IDataInput *this, void *, unsigned __int64);\n  unsigned __int64 (__fastcall *numBytesLeft)(IDataInput *this);\n  bool (__fastcall *isOk)(IDataInput *this);\n  bool (__fastcall *seek)(IDataInput *this, unsigned __int64);\n  unsigned int (__fastcall *getCRC)(ICRCDataInput *this);\n};\n\n")])])]),c("h3",{attrs:{id:"crcdataoutput"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crcdataoutput"}},[t._v("#")]),t._v(" "),c("code",[t._v("CRCDataOutput")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) CRCDataOutput : ICRCDataOutput\n{\n  std::unique_ptr<IDataOutput> mStream;\n  unsigned int mCrc;\n};\n\n")])])]),c("h3",{attrs:{id:"crcdataoutput-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crcdataoutput-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CRCDataOutput_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CRCDataOutput_vtbl\n{\n  void (__fastcall *~IDataOutput)(IDataOutput *this);\n  void (__fastcall *writeString)(IDataOutput *this, gsl::basic_string_span<char const ,-1>);\n  void (__fastcall *writeLongString)(IDataOutput *this, gsl::basic_string_span<char const ,-1>);\n  void (__fastcall *writeFloat)(IDataOutput *this, float);\n  void (__fastcall *writeDouble)(IDataOutput *this, long double);\n  void (__fastcall *writeByte)(IDataOutput *this, char);\n  void (__fastcall *writeShort)(IDataOutput *this, __int16);\n  void (__fastcall *writeInt)(IDataOutput *this, int);\n  void (__fastcall *writeLongLong)(IDataOutput *this, __int64);\n  void (__fastcall *writeBytes)(IDataOutput *this, const void *, unsigned __int64);\n  bool (__fastcall *isOk)(IDataOutput *this);\n  unsigned int (__fastcall *getCRC)(ICRCDataOutput *this);\n  void (__fastcall *setCRCSeed)(ICRCDataOutput *this, unsigned int);\n};\n\n")])])]),c("h3",{attrs:{id:"compoundtagupdaterbuilder-rename-l2-lambda-d106db2de3b6b6e6de326311fa5fb1d9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compoundtagupdaterbuilder-rename-l2-lambda-d106db2de3b6b6e6de326311fa5fb1d9"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompoundTagUpdaterBuilder::rename::__l2::<lambda_d106db2de3b6b6e6de326311fa5fb1d9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompoundTagUpdaterBuilder::rename::__l2::<lambda_d106db2de3b6b6e6de326311fa5fb1d9>\n{\n  const std::string tagName;\n};\n\n")])])]),c("h3",{attrs:{id:"compoundtagupdaterbuilder-remove-l2-lambda-34a013135a39fc1d9dd5a5b78a6ccc8a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compoundtagupdaterbuilder-remove-l2-lambda-34a013135a39fc1d9dd5a5b78a6ccc8a"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompoundTagUpdaterBuilder::remove::__l2::<lambda_34a013135a39fc1d9dd5a5b78a6ccc8a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompoundTagUpdaterBuilder::remove::__l2::<lambda_34a013135a39fc1d9dd5a5b78a6ccc8a>\n{\n  const std::string tagName;\n};\n\n")])])]),c("h3",{attrs:{id:"compoundtagupdaterbuilder-remove-l2-lambda-9bf85ca8f27b27e71d561c4189565661"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compoundtagupdaterbuilder-remove-l2-lambda-9bf85ca8f27b27e71d561c4189565661"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompoundTagUpdaterBuilder::remove::__l2::<lambda_9bf85ca8f27b27e71d561c4189565661>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompoundTagUpdaterBuilder::remove::__l2::<lambda_9bf85ca8f27b27e71d561c4189565661>\n{\n  const std::string tagName;\n};\n\n")])])]),c("h3",{attrs:{id:"compoundtagupdaterbuilder-edit-l2-lambda-bad5b299bb6422fa44f16a14d28fd631"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compoundtagupdaterbuilder-edit-l2-lambda-bad5b299bb6422fa44f16a14d28fd631"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompoundTagUpdaterBuilder::edit::__l2::<lambda_bad5b299bb6422fa44f16a14d28fd631>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompoundTagUpdaterBuilder::edit::__l2::<lambda_bad5b299bb6422fa44f16a14d28fd631>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"compoundtagupdaterbuilder-edit-l2-lambda-4566ce3f28a6fca1a020328f1b5bf986"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compoundtagupdaterbuilder-edit-l2-lambda-4566ce3f28a6fca1a020328f1b5bf986"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompoundTagUpdaterBuilder::edit::__l2::<lambda_4566ce3f28a6fca1a020328f1b5bf986>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompoundTagUpdaterBuilder::edit::__l2::<lambda_4566ce3f28a6fca1a020328f1b5bf986>\n{\n  const std::string tagName;\n};\n\n")])])]),c("h3",{attrs:{id:"compoundtagupdaterbuilder-edit-l2-lambda-f5f8445f343ec4ca9f1ae6c366fde01d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compoundtagupdaterbuilder-edit-l2-lambda-f5f8445f343ec4ca9f1ae6c366fde01d"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompoundTagUpdaterBuilder::edit::__l2::<lambda_f5f8445f343ec4ca9f1ae6c366fde01d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompoundTagUpdaterBuilder::edit::__l2::<lambda_f5f8445f343ec4ca9f1ae6c366fde01d>\n{\n  const std::string tagName;\n};\n\n")])])]),c("h3",{attrs:{id:"compoundtagupdaterbuilder-popvisit-l2-lambda-982407142d7d5112fbad9f0663beebac"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compoundtagupdaterbuilder-popvisit-l2-lambda-982407142d7d5112fbad9f0663beebac"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompoundTagUpdaterBuilder::popVisit::__l2::<lambda_982407142d7d5112fbad9f0663beebac>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompoundTagUpdaterBuilder::popVisit::__l2::<lambda_982407142d7d5112fbad9f0663beebac>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"compoundtagupdaterbuilder-popvisit-l2-lambda-2d39432ab1e8c62c46cf985cf99723dd"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compoundtagupdaterbuilder-popvisit-l2-lambda-2d39432ab1e8c62c46cf985cf99723dd"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompoundTagUpdaterBuilder::popVisit::__l2::<lambda_2d39432ab1e8c62c46cf985cf99723dd>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompoundTagUpdaterBuilder::popVisit::__l2::<lambda_2d39432ab1e8c62c46cf985cf99723dd>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"compoundtagupdaterbuilder-visit-l2-lambda-1b95be20721d5b0d9ad9446ef678356b"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compoundtagupdaterbuilder-visit-l2-lambda-1b95be20721d5b0d9ad9446ef678356b"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompoundTagUpdaterBuilder::visit::__l2::<lambda_1b95be20721d5b0d9ad9446ef678356b>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompoundTagUpdaterBuilder::visit::__l2::<lambda_1b95be20721d5b0d9ad9446ef678356b>\n{\n  const std::string tagName;\n};\n\n")])])]),c("h3",{attrs:{id:"compoundtagupdaterbuilder-visit-l2-lambda-a2ba0478e2148f8507ead2b53b60900f"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compoundtagupdaterbuilder-visit-l2-lambda-a2ba0478e2148f8507ead2b53b60900f"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompoundTagUpdaterBuilder::visit::__l2::<lambda_a2ba0478e2148f8507ead2b53b60900f>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompoundTagUpdaterBuilder::visit::__l2::<lambda_a2ba0478e2148f8507ead2b53b60900f>\n{\n  const std::string tagName;\n};\n\n")])])]),c("h3",{attrs:{id:"colordefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#colordefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("ColorDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ColorDefinition\n{\n  _BYTE mColorChoice[1];\n};\n\n")])])]),c("h3",{attrs:{id:"color2definition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#color2definition"}},[t._v("#")]),t._v(" "),c("code",[t._v("Color2Definition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Color2Definition : ColorDefinition\n{\n};\n\n")])])]),c("h3",{attrs:{id:"canclimbdefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#canclimbdefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("CanClimbDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CanClimbDefinition\n{\n};\n\n")])])]),c("h3",{attrs:{id:"canflydefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#canflydefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("CanFlyDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CanFlyDefinition\n{\n};\n\n")])])]),c("h3",{attrs:{id:"canpowerjumpdefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#canpowerjumpdefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("CanPowerJumpDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CanPowerJumpDefinition\n{\n};\n\n")])])]),c("h3",{attrs:{id:"collisionboxdefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#collisionboxdefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("CollisionBoxDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CollisionBoxDefinition\n{\n  Vec2 mBBDim;\n};\n\n")])])]),c("h3",{attrs:{id:"cavespider"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cavespider"}},[t._v("#")]),t._v(" "),c("code",[t._v("CaveSpider")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CaveSpider : Spider\n{\n};\n\n")])])]),c("h3",{attrs:{id:"customentitytypecomponent"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#customentitytypecomponent"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomEntityTypeComponent")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CustomEntityTypeComponent\n{\n  Actor *mEntity;\n  std::string mCustomEntityType;\n};\n\n")])])]),c("h3",{attrs:{id:"chargehelditemdefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chargehelditemdefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChargeHeldItemDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChargeHeldItemDefinition : BaseGoalDefinition\n{\n  std::vector<ItemDescriptor> mChargeItemList;\n};\n\n")])])]),c("h3",{attrs:{id:"chargehelditemdefinition-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chargehelditemdefinition-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChargeHeldItemDefinition_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ChargeHeldItemDefinition_vtbl\n{\n  void (__fastcall *~BaseGoalDefinition)(BaseGoalDefinition *this);\n  bool (__fastcall *validateMobType)(BaseGoalDefinition *this, Mob *);\n  bool (__fastcall *validate)(BaseGoalDefinition *this, Mob *);\n};\n\n")])])]),c("h3",{attrs:{id:"chargehelditemgoal"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chargehelditemgoal"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChargeHeldItemGoal")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChargeHeldItemGoal : Goal\n{\n  Mob *mMob;\n  int mUsingTime;\n  std::vector<ItemDescriptor> mChargeItemList;\n};\n\n")])])]),c("h3",{attrs:{id:"chargehelditemgoal-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chargehelditemgoal-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChargeHeldItemGoal_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ChargeHeldItemGoal_vtbl\n{\n  void (__fastcall *~Goal)(Goal *this);\n  bool (__fastcall *canUse)(Goal *this);\n  bool (__fastcall *canContinueToUse)(Goal *this);\n  bool (__fastcall *canBeInterrupted)(Goal *this);\n  void (__fastcall *start)(Goal *this);\n  void (__fastcall *stop)(Goal *this);\n  void (__fastcall *tick)(Goal *this);\n  void (__fastcall *appendDebugInfo)(Goal *this, std::string *);\n  bool (__fastcall *isTargetGoal)(Goal *this);\n  void (__fastcall *onPlayerDimensionChanged)(Goal *this, Player *, AutomaticID<Dimension,int>);\n};\n\n")])])]),c("h3",{attrs:{id:"chargehelditemdefinition-buildschema-l2-lambda-d321ada88c0fdca2ff94e3a1fa49eb64"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chargehelditemdefinition-buildschema-l2-lambda-d321ada88c0fdca2ff94e3a1fa49eb64"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChargeHeldItemDefinition::buildSchema::__l2::<lambda_d321ada88c0fdca2ff94e3a1fa49eb64>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChargeHeldItemDefinition::buildSchema::__l2::<lambda_d321ada88c0fdca2ff94e3a1fa49eb64>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"chargehelditemdefinition-buildschema-l2-lambda-2b6125119ea09ae250fa822690004f9d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chargehelditemdefinition-buildschema-l2-lambda-2b6125119ea09ae250fa822690004f9d"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChargeHeldItemDefinition::buildSchema::__l2::<lambda_2b6125119ea09ae250fa822690004f9d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChargeHeldItemDefinition::buildSchema::__l2::<lambda_2b6125119ea09ae250fa822690004f9d>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cat"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cat"}},[t._v("#")]),t._v(" "),c("code",[t._v("Cat")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Cat : Animal\n{\n  float mLieDownAmount;\n  float mLieDownAmountLast;\n  float mLieDownAmountTail;\n  float mLieDownAmountTailLast;\n};\n\n")])])]),c("h3",{attrs:{id:"chicken"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chicken"}},[t._v("#")]),t._v(" "),c("code",[t._v("Chicken")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) Chicken : Animal\n{\n  float mFlap;\n  float mOFlap;\n  float mFlapSpeed;\n  float mOFlapSpeed;\n  float mFlapping;\n};\n\n")])])]),c("h3",{attrs:{id:"compositedefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compositedefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompositeDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompositeDefinition : BehaviorDefinition\n{\n  std::vector<std::unique_ptr<BehaviorDefinition>> mChildren;\n};\n\n")])])]),c("h3",{attrs:{id:"compositedefinition-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compositedefinition-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompositeDefinition_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CompositeDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),c("h3",{attrs:{id:"consumeitemnode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#consumeitemnode"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConsumeItemNode")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) ConsumeItemNode : BehaviorNode\n{\n  bool mRightMouseDown;\n  int mDelayTicks;\n  int mDelayCounter;\n};\n\n")])])]),c("h3",{attrs:{id:"consumeitemnode-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#consumeitemnode-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConsumeItemNode_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ConsumeItemNode_vtbl\n{\n  void (__fastcall *~BehaviorNode)(BehaviorNode *this);\n  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);\n  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);\n};\n\n")])])]),c("h3",{attrs:{id:"consumeitemdefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#consumeitemdefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConsumeItemDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ConsumeItemDefinition : BehaviorDefinition\n{\n};\n\n")])])]),c("h3",{attrs:{id:"consumeitemdefinition-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#consumeitemdefinition-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConsumeItemDefinition_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ConsumeItemDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),c("h3",{attrs:{id:"checkdistnode"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#checkdistnode"}},[t._v("#")]),t._v(" "),c("code",[t._v("CheckDistNode")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CheckDistNode : BehaviorNode\n{\n  std::string mOperation;\n  float mDist;\n  Vec3 mTargetPos;\n};\n\n")])])]),c("h3",{attrs:{id:"checkdistnode-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#checkdistnode-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CheckDistNode_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CheckDistNode_vtbl\n{\n  void (__fastcall *~BehaviorNode)(BehaviorNode *this);\n  BehaviorStatus (__fastcall *tick)(BehaviorNode *this, Actor *);\n  void (__fastcall *initializeFromDefinition)(BehaviorNode *this, Actor *);\n};\n\n")])])]),c("h3",{attrs:{id:"checkdistdefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#checkdistdefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("CheckDistDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CheckDistDefinition : BehaviorDefinition\n{\n  std::string mOperation;\n  std::string mOperationId;\n  float mDist;\n  std::string mDistId;\n  Vec3 mTargetPos;\n  std::string mTargetPosId;\n};\n\n")])])]),c("h3",{attrs:{id:"checkdistdefinition-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#checkdistdefinition-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CheckDistDefinition_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CheckDistDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),c("h3",{attrs:{id:"checkharvestconditiondefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#checkharvestconditiondefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("CheckHarvestConditionDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CheckHarvestConditionDefinition : BehaviorDefinition\n{\n  std::string mBlockName;\n  std::string mBlockNameId;\n};\n\n")])])]),c("h3",{attrs:{id:"checkharvestconditiondefinition-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#checkharvestconditiondefinition-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CheckHarvestConditionDefinition_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CheckHarvestConditionDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),c("h3",{attrs:{id:"craftitemdefinition"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftitemdefinition"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftItemDefinition")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftItemDefinition : BehaviorDefinition\n{\n  std::string mItemName;\n  std::string mItemNameId;\n};\n\n")])])]),c("h3",{attrs:{id:"craftitemdefinition-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftitemdefinition-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftItemDefinition_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftItemDefinition_vtbl\n{\n  void (__fastcall *~BehaviorDefinition)(BehaviorDefinition *this);\n  void (__fastcall *load)(BehaviorDefinition *this, Json::Value, const BehaviorFactory *);\n  std::unique_ptr<BehaviorNode> *(__fastcall *createNode)(BehaviorDefinition *this, std::unique_ptr<BehaviorNode> *result, Actor *, const BehaviorFactory *, BehaviorNode *, BehaviorData *);\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainercontroller"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainercontroller"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerController")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerController : ContainerController\n{\n  const Recipe *mCurrentRecipe;\n  int mGridSize;\n  bool mDisplayOnlyGhostItems;\n  std::vector<ItemInstance> mGhostItems;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainercontroller-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainercontroller-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerController_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftingContainerController_vtbl\n{\n  void (__fastcall *~ContainerController)(ContainerController *this);\n  bool (__fastcall *canRemove)(ContainerController *this, int, int);\n  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);\n  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);\n  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);\n  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);\n  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);\n  bool (__fastcall *_canRemove)(ContainerController *this, int, int);\n  void (__fastcall *_onItemChanged)(ContainerController *this, int);\n  void (__fastcall *onRecipeSelected)(CraftingContainerController *this, const Recipe *, unsigned __int64, bool);\n  const ItemInstance *(__fastcall *getRecipeItem)(CraftingContainerController *this, int);\n  void (__fastcall *clearSelectedRecipe)(CraftingContainerController *this);\n  const Recipe *(__fastcall *getSelectedRecipe)(CraftingContainerController *this);\n  void (__fastcall *setGhostItem)(CraftingContainerController *this, const ItemInstance *, int, bool);\n  const ItemInstance *(__fastcall *getGhostItem)(CraftingContainerController *this, int);\n};\n\n")])])]),c("h3",{attrs:{id:"craftinginputcontainercontroller"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftinginputcontainercontroller"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingInputContainerController")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingInputContainerController : CraftingContainerController\n{\n  std::vector<ItemInstance> mRecipeItems;\n};\n\n")])])]),c("h3",{attrs:{id:"craftinginputcontainercontroller-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftinginputcontainercontroller-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingInputContainerController_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftingInputContainerController_vtbl\n{\n  void (__fastcall *~ContainerController)(ContainerController *this);\n  bool (__fastcall *canRemove)(ContainerController *this, int, int);\n  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);\n  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);\n  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);\n  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);\n  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);\n  bool (__fastcall *_canRemove)(ContainerController *this, int, int);\n  void (__fastcall *_onItemChanged)(ContainerController *this, int);\n  void (__fastcall *onRecipeSelected)(CraftingContainerController *this, const Recipe *, unsigned __int64, bool);\n  const ItemInstance *(__fastcall *getRecipeItem)(CraftingContainerController *this, int);\n  void (__fastcall *clearSelectedRecipe)(CraftingContainerController *this);\n  const Recipe *(__fastcall *getSelectedRecipe)(CraftingContainerController *this);\n  void (__fastcall *setGhostItem)(CraftingContainerController *this, const ItemInstance *, int, bool);\n  const ItemInstance *(__fastcall *getGhostItem)(CraftingContainerController *this, int);\n};\n\n")])])]),c("h3",{attrs:{id:"craftingoutputcontainercontroller"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingoutputcontainercontroller"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingOutputContainerController")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) CraftingOutputContainerController : CraftingContainerController\n{\n  ItemInstance mRecipeItem;\n  bool mIsRecipeCraftable;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingoutputcontainercontroller-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingoutputcontainercontroller-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingOutputContainerController_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftingOutputContainerController_vtbl\n{\n  void (__fastcall *~ContainerController)(ContainerController *this);\n  bool (__fastcall *canRemove)(ContainerController *this, int, int);\n  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);\n  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);\n  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);\n  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);\n  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);\n  bool (__fastcall *_canRemove)(ContainerController *this, int, int);\n  void (__fastcall *_onItemChanged)(ContainerController *this, int);\n  void (__fastcall *onRecipeSelected)(CraftingContainerController *this, const Recipe *, unsigned __int64, bool);\n  const ItemInstance *(__fastcall *getRecipeItem)(CraftingContainerController *this, int);\n  void (__fastcall *clearSelectedRecipe)(CraftingContainerController *this);\n  const Recipe *(__fastcall *getSelectedRecipe)(CraftingContainerController *this);\n  void (__fastcall *setGhostItem)(CraftingContainerController *this, const ItemInstance *, int, bool);\n  const ItemInstance *(__fastcall *getGhostItem)(CraftingContainerController *this, int);\n};\n\n")])])]),c("h3",{attrs:{id:"creativecontainercontroller"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#creativecontainercontroller"}},[t._v("#")]),t._v(" "),c("code",[t._v("CreativeContainerController")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CreativeContainerController : CraftingContainerController\n{\n};\n\n")])])]),c("h3",{attrs:{id:"creativecontainercontroller-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#creativecontainercontroller-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CreativeContainerController_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CreativeContainerController_vtbl\n{\n  void (__fastcall *~ContainerController)(ContainerController *this);\n  bool (__fastcall *canRemove)(ContainerController *this, int, int);\n  bool (__fastcall *isItemAllowed)(ContainerController *this, const ItemStackBase *);\n  bool (__fastcall *isItemFiltered)(ContainerController *this, const Recipes *, const ItemStackBase *);\n  int (__fastcall *getBackgroundStyle)(ContainerController *this, int, bool);\n  ItemSetType (__fastcall *_canSet)(ContainerController *this, int, const ItemStackBase *, ItemTransferAmount);\n  int (__fastcall *_getAvailableSetCount)(ContainerController *this, int, const ItemStackBase *);\n  bool (__fastcall *_canRemove)(ContainerController *this, int, int);\n  void (__fastcall *_onItemChanged)(ContainerController *this, int);\n  void (__fastcall *onRecipeSelected)(CraftingContainerController *this, const Recipe *, unsigned __int64, bool);\n  const ItemInstance *(__fastcall *getRecipeItem)(CraftingContainerController *this, int);\n  void (__fastcall *clearSelectedRecipe)(CraftingContainerController *this);\n  const Recipe *(__fastcall *getSelectedRecipe)(CraftingContainerController *this);\n  void (__fastcall *setGhostItem)(CraftingContainerController *this, const ItemInstance *, int, bool);\n  const ItemInstance *(__fastcall *getGhostItem)(CraftingContainerController *this, int);\n};\n\n")])])]),c("h3",{attrs:{id:"compounditem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#compounditem"}},[t._v("#")]),t._v(" "),c("code",[t._v("CompoundItem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CompoundItem : ChemistryItem\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignallowedincontainerdelegate-l4-lambda-ca14cee2759167866a14f98c13ae1b05"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignallowedincontainerdelegate-l4-lambda-ca14cee2759167866a14f98c13ae1b05"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::_assignAllowedInContainerDelegate::__l4::<lambda_ca14cee2759167866a14f98c13ae1b05>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::_assignAllowedInContainerDelegate::__l4::<lambda_ca14cee2759167866a14f98c13ae1b05>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-a94226eda5fc26b1cbfbc88e36506e72"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-a94226eda5fc26b1cbfbc88e36506e72"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_a94226eda5fc26b1cbfbc88e36506e72>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_a94226eda5fc26b1cbfbc88e36506e72>\n{\n  const ContainerScreenContext screenContext;\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-d5ee424f0847ea65030b7c6f6c1b586d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-d5ee424f0847ea65030b7c6f6c1b586d"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_d5ee424f0847ea65030b7c6f6c1b586d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_d5ee424f0847ea65030b7c6f6c1b586d>\n{\n  const ContainerScreenContext screenContext;\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l18-lambda-0ebe49e2c95965dee3ca7618c3b9009e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l18-lambda-0ebe49e2c95965dee3ca7618c3b9009e"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l18::<lambda_0ebe49e2c95965dee3ca7618c3b9009e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l18::<lambda_0ebe49e2c95965dee3ca7618c3b9009e>\n{\n  HorseEquipValidationState state;\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-13fb63bd1fb91e659eed4da5282b6372"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-13fb63bd1fb91e659eed4da5282b6372"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_13fb63bd1fb91e659eed4da5282b6372>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_13fb63bd1fb91e659eed4da5282b6372>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-e569b0479cf2828d4244f0b5c7303b23"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-e569b0479cf2828d4244f0b5c7303b23"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_e569b0479cf2828d4244f0b5c7303b23>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_e569b0479cf2828d4244f0b5c7303b23>\n{\n  const ContainerScreenContext screenContext;\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-ff26520e30a38044df172b5778af010a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-ff26520e30a38044df172b5778af010a"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_ff26520e30a38044df172b5778af010a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_ff26520e30a38044df172b5778af010a>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-d032c3e0a9f5cb65ef6b2067239804b5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-d032c3e0a9f5cb65ef6b2067239804b5"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_d032c3e0a9f5cb65ef6b2067239804b5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_d032c3e0a9f5cb65ef6b2067239804b5>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-571cf091bef6dba301b8f8dc63bbd974"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-571cf091bef6dba301b8f8dc63bbd974"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_571cf091bef6dba301b8f8dc63bbd974>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_571cf091bef6dba301b8f8dc63bbd974>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-29b95d068c06a7e703fe9d21cb73de5e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-29b95d068c06a7e703fe9d21cb73de5e"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_29b95d068c06a7e703fe9d21cb73de5e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_29b95d068c06a7e703fe9d21cb73de5e>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-9b3a8e0d18f88b6b2f36e5ab819ecc64"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-9b3a8e0d18f88b6b2f36e5ab819ecc64"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_9b3a8e0d18f88b6b2f36e5ab819ecc64>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_9b3a8e0d18f88b6b2f36e5ab819ecc64>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-c57785192ac75762ce53fbae61c013ae"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-c57785192ac75762ce53fbae61c013ae"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_c57785192ac75762ce53fbae61c013ae>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_c57785192ac75762ce53fbae61c013ae>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-18bb92ef1ae5f58703be325415154ee1"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-18bb92ef1ae5f58703be325415154ee1"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_18bb92ef1ae5f58703be325415154ee1>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_18bb92ef1ae5f58703be325415154ee1>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-015afaa8d4ac12f7081f67fc3327889e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-015afaa8d4ac12f7081f67fc3327889e"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_015afaa8d4ac12f7081f67fc3327889e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_015afaa8d4ac12f7081f67fc3327889e>\n{\n  const ContainerScreenContext screenContext;\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-28c1d666805352606ecc6aa691bede5a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-28c1d666805352606ecc6aa691bede5a"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_28c1d666805352606ecc6aa691bede5a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_28c1d666805352606ecc6aa691bede5a>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-3737fd909942acaf574821aaa99cf1ad"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-3737fd909942acaf574821aaa99cf1ad"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_3737fd909942acaf574821aaa99cf1ad>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_3737fd909942acaf574821aaa99cf1ad>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-6a3d1f33c6cbf3efe5f892e64fe9f692"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-6a3d1f33c6cbf3efe5f892e64fe9f692"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_6a3d1f33c6cbf3efe5f892e64fe9f692>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_6a3d1f33c6cbf3efe5f892e64fe9f692>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-80788f509c3a4df1534e8891dcda3096"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-80788f509c3a4df1534e8891dcda3096"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_80788f509c3a4df1534e8891dcda3096>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_80788f509c3a4df1534e8891dcda3096>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-561de59b7805bdb21e2646c582f78dfe"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-561de59b7805bdb21e2646c582f78dfe"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_561de59b7805bdb21e2646c582f78dfe>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_561de59b7805bdb21e2646c582f78dfe>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"containervalidation-assignvalidationdelegates-l12-lambda-cab0653dadf048ef221190874c930768"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containervalidation-assignvalidationdelegates-l12-lambda-cab0653dadf048ef221190874c930768"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerValidation::assignValidationDelegates::__l12::<lambda_cab0653dadf048ef221190874c930768>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerValidation::assignValidationDelegates::__l12::<lambda_cab0653dadf048ef221190874c930768>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"container-sameitemandauxcomparator-l2-lambda-bc92f6dd1e60a290da569381c0bbc2a9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#container-sameitemandauxcomparator-l2-lambda-bc92f6dd1e60a290da569381c0bbc2a9"}},[t._v("#")]),t._v(" "),c("code",[t._v("Container::sameItemAndAuxComparator::__l2::<lambda_bc92f6dd1e60a290da569381c0bbc2a9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj Container::sameItemAndAuxComparator::__l2::<lambda_bc92f6dd1e60a290da569381c0bbc2a9>\n{\n  const ItemDescriptor descriptor;\n};\n\n")])])]),c("h3",{attrs:{id:"craftableelements"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftableelements"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftableElements")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftableElements\n{\n  CraftableElements_vtbl *__vftable /*VFT*/;\n  std::unordered_map<unsigned int,enum ElementType> mCraftableElements;\n  std::unordered_map<unsigned char,unsigned int> mElementKeyToParticleKey;\n};\n\n")])])]),c("h3",{attrs:{id:"craftableelements-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftableelements-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftableElements_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftableElements_vtbl\n{\n  void (__fastcall *~CraftableElements)(CraftableElements *this);\n  void (__fastcall *registerElements)(CraftableElements *this);\n  void (__fastcall *_registerElement)(CraftableElements *this, int, int, ElementType);\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagercontroller-getrecipesforitem-l2-lambda-6caeab14354bdd5c84e4ab8c2ea764bf"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagercontroller-getrecipesforitem-l2-lambda-6caeab14354bdd5c84e4ab8c2ea764bf"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerController::_getRecipesForItem::__l2::<lambda_6caeab14354bdd5c84e4ab8c2ea764bf>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerController::_getRecipesForItem::__l2::<lambda_6caeab14354bdd5c84e4ab8c2ea764bf>\n{\n  std::vector<std::reference_wrapper<Recipe const >> *allRecipesForItem;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagercontroller-filterrecipes-l2-lambda-cdb5314bee1f97240ba0cd908eecf8e9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagercontroller-filterrecipes-l2-lambda-cdb5314bee1f97240ba0cd908eecf8e9"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerController::_filterRecipes::__l2::<lambda_cdb5314bee1f97240ba0cd908eecf8e9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerController::_filterRecipes::__l2::<lambda_cdb5314bee1f97240ba0cd908eecf8e9>\n{\n  std::vector<std::reference_wrapper<Recipe const >> *allRecipes;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagercontroller-craftitem-l21-lambda-3c63015ccb477dfee5c6c66864ee0dc0"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagercontroller-craftitem-l21-lambda-3c63015ccb477dfee5c6c66864ee0dc0"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerController::_craftItem::__l21::<lambda_3c63015ccb477dfee5c6c66864ee0dc0>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerController::_craftItem::__l21::<lambda_3c63015ccb477dfee5c6c66864ee0dc0>\n{\n  std::string *craftedRecipeIdentifier;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagercontroller-getcraftablecount-l2-lambda-aa96b04be3948fd8222e3f0611ad44d0"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagercontroller-getcraftablecount-l2-lambda-aa96b04be3948fd8222e3f0611ad44d0"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerController::getCraftableCount::__l2::<lambda_aa96b04be3948fd8222e3f0611ad44d0>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerController::getCraftableCount::__l2::<lambda_aa96b04be3948fd8222e3f0611ad44d0>\n{\n  std::vector<std::reference_wrapper<Recipe const >> *recipes;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagercontroller-setupcallbacks-l2-lambda-d90798886221ba8ec068417f5dff86e6"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagercontroller-setupcallbacks-l2-lambda-d90798886221ba8ec068417f5dff86e6"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerController::_setupCallbacks::__l2::<lambda_d90798886221ba8ec068417f5dff86e6>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerController::_setupCallbacks::__l2::<lambda_d90798886221ba8ec068417f5dff86e6>\n{\n  CraftingContainerManagerController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagercontroller-ctor-l2-lambda-800ba8d7ddb3e3161c5f891001bcfb9c"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagercontroller-ctor-l2-lambda-800ba8d7ddb3e3161c5f891001bcfb9c"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerController::{ctor}::__l2::<lambda_800ba8d7ddb3e3161c5f891001bcfb9c>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerController::{ctor}::__l2::<lambda_800ba8d7ddb3e3161c5f891001bcfb9c>\n{\n  CraftingContainerManagerController *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"containermanagercontroller-registercontainercallbacks-l12-lambda-ffe46bfded42ef6cce34996a89535ed2"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containermanagercontroller-registercontainercallbacks-l12-lambda-ffe46bfded42ef6cce34996a89535ed2"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerManagerController::registerContainerCallbacks::__l12::<lambda_ffe46bfded42ef6cce34996a89535ed2>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerManagerController::registerContainerCallbacks::__l12::<lambda_ffe46bfded42ef6cce34996a89535ed2>\n{\n  std::weak_ptr<ContainerManagerController> weak_this;\n};\n\n")])])]),c("h3",{attrs:{id:"containermanagercontroller-registercontainercallbacks-l9-lambda-dc250ab7902177dc8a7fb2a2aa1b1d5e"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containermanagercontroller-registercontainercallbacks-l9-lambda-dc250ab7902177dc8a7fb2a2aa1b1d5e"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerManagerController::registerContainerCallbacks::__l9::<lambda_dc250ab7902177dc8a7fb2a2aa1b1d5e>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerManagerController::registerContainerCallbacks::__l9::<lambda_dc250ab7902177dc8a7fb2a2aa1b1d5e>\n{\n  std::weak_ptr<ContainerManagerController> weak_this;\n};\n\n")])])]),c("h3",{attrs:{id:"craftinginputuicontainermodel"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftinginputuicontainermodel"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingInputUIContainerModel")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) CraftingInputUIContainerModel : PlayerUIContainerModelBase\n{\n  const bool mWorkBench;\n};\n\n")])])]),c("h3",{attrs:{id:"craftinginputuicontainermodel-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftinginputuicontainermodel-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingInputUIContainerModel_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftingInputUIContainerModel_vtbl\n{\n  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);\n  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);\n  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);\n  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);\n  void (__fastcall *postInit)(ContainerModel *this);\n  void (__fastcall *releaseResources)(ContainerModel *this);\n  int (__fastcall *getContainerSize)(ContainerModel *this);\n  int (__fastcall *getFilteredContainerSize)(ContainerModel *this);\n  void (__fastcall *tick)(ContainerModel *this, int);\n  ContainerWeakRef *(__fastcall *getContainerWeakRef)(ContainerModel *this, ContainerWeakRef *result);\n  const ItemStack *(__fastcall *getItemStack)(ContainerModel *this, int);\n  const std::vector<ItemStack> *(__fastcall *getItems)(ContainerModel *this);\n  const ItemInstance *(__fastcall *getItemInstance)(ContainerModel *this, int);\n  const ItemStackBase *(__fastcall *getItemStackBase)(ContainerModel *this, int);\n  bool (__fastcall *isItemInstanceBased)(ContainerModel *this);\n  void (__fastcall *setItem)(ContainerModel *this, int, const ItemStack *);\n  bool (__fastcall *isValid)(ContainerModel *this);\n  bool (__fastcall *isItemFiltered)(ContainerModel *this, const ItemStackBase *);\n  bool (__fastcall *isExpanableItemFiltered)(ContainerModel *this, int);\n  ContainerExpandStatus (__fastcall *getItemExpandStatus)(ContainerModel *this, int);\n  const std::string *(__fastcall *getItemGroupName)(ContainerModel *this, int);\n  void (__fastcall *switchItemExpando)(ContainerModel *this, int);\n  Container *(__fastcall *_getContainer)(ContainerModel *this);\n  int (__fastcall *_getContainerOffset)(ContainerModel *this);\n  void (__fastcall *_onItemChanged)(ContainerModel *this, int, const ItemStack *, const ItemStack *);\n};\n\n")])])]),c("h3",{attrs:{id:"containermodel-serverinititemstackids-l5-lambda-3ceb7baffe147371abb8ef0876d49f62"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containermodel-serverinititemstackids-l5-lambda-3ceb7baffe147371abb8ef0876d49f62"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerModel::serverInitItemStackIds::__l5::<lambda_3ceb7baffe147371abb8ef0876d49f62>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ContainerModel::serverInitItemStackIds::__l5::<lambda_3ceb7baffe147371abb8ef0876d49f62>\n{\n  ContainerModel *const __this;\n  Container **container;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagermodel-setisfiltering-l2-lambda-aa6cdefd030e9b17f5bf31429c7faed4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagermodel-setisfiltering-l2-lambda-aa6cdefd030e9b17f5bf31429c7faed4"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_aa6cdefd030e9b17f5bf31429c7faed4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_aa6cdefd030e9b17f5bf31429c7faed4>\n{\n  CraftingContainerManagerModel *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagermodel-setisfiltering-l2-lambda-aa6cdefd030e9b17f5bf31429c7faed4-l5-lambda-fcf8e0e085a275fe1caed95ccdf54f52"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagermodel-setisfiltering-l2-lambda-aa6cdefd030e9b17f5bf31429c7faed4-l5-lambda-fcf8e0e085a275fe1caed95ccdf54f52"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_aa6cdefd030e9b17f5bf31429c7faed4>::()::__l5::<lambda_fcf8e0e085a275fe1caed95ccdf54f52>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_aa6cdefd030e9b17f5bf31429c7faed4>::()::__l5::<lambda_fcf8e0e085a275fe1caed95ccdf54f52>\n{\n  std::vector<std::reference_wrapper<Recipe const >> *recipes;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagermodel-setisfiltering-l2-lambda-67395b7a0ffee627249620bb17590dfa"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagermodel-setisfiltering-l2-lambda-67395b7a0ffee627249620bb17590dfa"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_67395b7a0ffee627249620bb17590dfa>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_67395b7a0ffee627249620bb17590dfa>\n{\n  CraftingContainerManagerModel *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagermodel-setisfiltering-l2-lambda-d23c8612754ab7d5d860be95d2731fb5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagermodel-setisfiltering-l2-lambda-d23c8612754ab7d5d860be95d2731fb5"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_d23c8612754ab7d5d860be95d2731fb5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_d23c8612754ab7d5d860be95d2731fb5>\n{\n  CraftingContainerManagerModel *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagermodel-setisfiltering-l2-lambda-d23c8612754ab7d5d860be95d2731fb5-l5-lambda-1ce802a31af62b630ae423dca09bea4a"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagermodel-setisfiltering-l2-lambda-d23c8612754ab7d5d860be95d2731fb5-l5-lambda-1ce802a31af62b630ae423dca09bea4a"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_d23c8612754ab7d5d860be95d2731fb5>::()::__l5::<lambda_1ce802a31af62b630ae423dca09bea4a>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_d23c8612754ab7d5d860be95d2731fb5>::()::__l5::<lambda_1ce802a31af62b630ae423dca09bea4a>\n{\n  std::vector<std::reference_wrapper<Recipe const >> *recipes;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagermodel-setisfiltering-l2-lambda-d013e68ca17835317031a2aeceb600f4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagermodel-setisfiltering-l2-lambda-d013e68ca17835317031a2aeceb600f4"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_d013e68ca17835317031a2aeceb600f4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerModel::setIsFiltering::__l2::<lambda_d013e68ca17835317031a2aeceb600f4>\n{\n  CraftingContainerManagerModel *const __this;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagermodel-filterbyinventory-l5-lambda-f6b29bd3f04dbc18ccf3d2fd33e47d6c"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagermodel-filterbyinventory-l5-lambda-f6b29bd3f04dbc18ccf3d2fd33e47d6c"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerModel::_filterByInventory::__l5::<lambda_f6b29bd3f04dbc18ccf3d2fd33e47d6c>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerModel::_filterByInventory::__l5::<lambda_f6b29bd3f04dbc18ccf3d2fd33e47d6c>\n{\n  std::vector<std::reference_wrapper<Recipe const >> *allRecipesForItem;\n};\n\n")])])]),c("h3",{attrs:{id:"craftingcontainermanagermodel-postinit-l2-lambda-f9fa4eb62304d0425ba9cc315955a7b9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#craftingcontainermanagermodel-postinit-l2-lambda-f9fa4eb62304d0425ba9cc315955a7b9"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftingContainerManagerModel::_postInit::__l2::<lambda_f9fa4eb62304d0425ba9cc315955a7b9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftingContainerManagerModel::_postInit::__l2::<lambda_f9fa4eb62304d0425ba9cc315955a7b9>\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clientplayereventcoordinator-sendplayercreated-l2-lambda-cbb646d286c056753ea8bb17996e0baf"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientplayereventcoordinator-sendplayercreated-l2-lambda-cbb646d286c056753ea8bb17996e0baf"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientPlayerEventCoordinator::sendPlayerCreated::__l2::<lambda_cbb646d286c056753ea8bb17996e0baf>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientPlayerEventCoordinator::sendPlayerCreated::__l2::<lambda_cbb646d286c056753ea8bb17996e0baf>\n{\n  LocalPlayer *player;\n  const std::string *personaSlot;\n  const std::string *classicSkinId;\n  bool *usingClassicSkin;\n};\n\n")])])]),c("h3",{attrs:{id:"clientplayereventcoordinator-sendplayerstopriding-l2-lambda-d603610a604c5d778adc893eadca2b75"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientplayereventcoordinator-sendplayerstopriding-l2-lambda-d603610a604c5d778adc893eadca2b75"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientPlayerEventCoordinator::sendPlayerStopRiding::__l2::<lambda_d603610a604c5d778adc893eadca2b75>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientPlayerEventCoordinator::sendPlayerStopRiding::__l2::<lambda_d603610a604c5d778adc893eadca2b75>\n{\n  Player *player;\n  bool *exitFromRider;\n  bool *entityIsBeingDestroyed;\n  bool *switchingRides;\n};\n\n")])])]),c("h3",{attrs:{id:"clientplayereventcoordinator-sendplayerstartriding-l2-lambda-4f6468d189e6f140542d3caf9506a7b4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientplayereventcoordinator-sendplayerstartriding-l2-lambda-4f6468d189e6f140542d3caf9506a7b4"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientPlayerEventCoordinator::sendPlayerStartRiding::__l2::<lambda_4f6468d189e6f140542d3caf9506a7b4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientPlayerEventCoordinator::sendPlayerStartRiding::__l2::<lambda_4f6468d189e6f140542d3caf9506a7b4>\n{\n  Player *player;\n  Actor *ride;\n};\n\n")])])]),c("h3",{attrs:{id:"clientplayereventcoordinator-sendlocalplayerrespawn-l2-lambda-13e49c72a3fd0c359103c3c3e8752bfe"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientplayereventcoordinator-sendlocalplayerrespawn-l2-lambda-13e49c72a3fd0c359103c3c3e8752bfe"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientPlayerEventCoordinator::sendLocalPlayerRespawn::__l2::<lambda_13e49c72a3fd0c359103c3c3e8752bfe>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientPlayerEventCoordinator::sendLocalPlayerRespawn::__l2::<lambda_13e49c72a3fd0c359103c3c3e8752bfe>\n{\n  IClientInstance *client;\n  LocalPlayer *player;\n};\n\n")])])]),c("h3",{attrs:{id:"clientplayereventcoordinator-sendlocalplayerdeath-l2-lambda-957d1afedc287aa655fd9d822a5c66fd"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientplayereventcoordinator-sendlocalplayerdeath-l2-lambda-957d1afedc287aa655fd9d822a5c66fd"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientPlayerEventCoordinator::sendLocalPlayerDeath::__l2::<lambda_957d1afedc287aa655fd9d822a5c66fd>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientPlayerEventCoordinator::sendLocalPlayerDeath::__l2::<lambda_957d1afedc287aa655fd9d822a5c66fd>\n{\n  IClientInstance *client;\n  LocalPlayer *player;\n};\n\n")])])]),c("h3",{attrs:{id:"clientplayereventcoordinator-sendplayerdestroyedblock-l2-lambda-7de0e8b341ebea8a59785104915845ed"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientplayereventcoordinator-sendplayerdestroyedblock-l2-lambda-7de0e8b341ebea8a59785104915845ed"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientPlayerEventCoordinator::sendPlayerDestroyedBlock::__l2::<lambda_7de0e8b341ebea8a59785104915845ed>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientPlayerEventCoordinator::sendPlayerDestroyedBlock::__l2::<lambda_7de0e8b341ebea8a59785104915845ed>\n{\n  Player *player;\n  const BlockLegacy *blockType;\n};\n\n")])])]),c("h3",{attrs:{id:"clientplayereventcoordinator-sendstartdestroyblock-l2-lambda-306705e6c21dd23dbe7a62e736a559a5"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientplayereventcoordinator-sendstartdestroyblock-l2-lambda-306705e6c21dd23dbe7a62e736a559a5"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientPlayerEventCoordinator::sendStartDestroyBlock::__l2::<lambda_306705e6c21dd23dbe7a62e736a559a5>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientPlayerEventCoordinator::sendStartDestroyBlock::__l2::<lambda_306705e6c21dd23dbe7a62e736a559a5>\n{\n  Player *player;\n  const BlockPos *pos;\n  unsigned __int8 *face;\n};\n\n")])])]),c("h3",{attrs:{id:"clientplayereventcoordinator-sendplayerturn-l2-lambda-928c0980f93f358810417fb87f5a4a69"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientplayereventcoordinator-sendplayerturn-l2-lambda-928c0980f93f358810417fb87f5a4a69"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientPlayerEventCoordinator::sendPlayerTurn::__l2::<lambda_928c0980f93f358810417fb87f5a4a69>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientPlayerEventCoordinator::sendPlayerTurn::__l2::<lambda_928c0980f93f358810417fb87f5a4a69>\n{\n  Player *player;\n  Vec2 *turnDelta;\n};\n\n")])])]),c("h3",{attrs:{id:"clientplayereventcoordinator-sendplayerinput-l2-lambda-4b6575f26cb031f0d5a8936a9950dab3"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientplayereventcoordinator-sendplayerinput-l2-lambda-4b6575f26cb031f0d5a8936a9950dab3"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientPlayerEventCoordinator::sendPlayerInput::__l2::<lambda_4b6575f26cb031f0d5a8936a9950dab3>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientPlayerEventCoordinator::sendPlayerInput::__l2::<lambda_4b6575f26cb031f0d5a8936a9950dab3>\n{\n  IPlayerMovementProxy *player;\n  MoveInputHandler *input;\n};\n\n")])])]),c("h3",{attrs:{id:"clientinstanceeventcoordinator-sendstartleavegame-l2-lambda-8a82e27afbaa5b3ed078861894dbbaf7"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientinstanceeventcoordinator-sendstartleavegame-l2-lambda-8a82e27afbaa5b3ed078861894dbbaf7"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientInstanceEventCoordinator::sendStartLeaveGame::__l2::<lambda_8a82e27afbaa5b3ed078861894dbbaf7>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientInstanceEventCoordinator::sendStartLeaveGame::__l2::<lambda_8a82e27afbaa5b3ed078861894dbbaf7>\n{\n  ClientInstance *instance;\n};\n\n")])])]),c("h3",{attrs:{id:"clientinstanceeventcoordinator-sendcliententeredworld-l2-lambda-aa8bf0031d48e9bb7466024d647d8181"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientinstanceeventcoordinator-sendcliententeredworld-l2-lambda-aa8bf0031d48e9bb7466024d647d8181"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientInstanceEventCoordinator::sendClientEnteredWorld::__l2::<lambda_aa8bf0031d48e9bb7466024d647d8181>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientInstanceEventCoordinator::sendClientEnteredWorld::__l2::<lambda_aa8bf0031d48e9bb7466024d647d8181>\n{\n  ClientInstance *instance;\n};\n\n")])])]),c("h3",{attrs:{id:"clientinstanceeventcoordinator-sendclientsuspend-l2-lambda-3a59cd1777c222e9b7d72fcb4828994d"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientinstanceeventcoordinator-sendclientsuspend-l2-lambda-3a59cd1777c222e9b7d72fcb4828994d"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientInstanceEventCoordinator::sendClientSuspend::__l2::<lambda_3a59cd1777c222e9b7d72fcb4828994d>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientInstanceEventCoordinator::sendClientSuspend::__l2::<lambda_3a59cd1777c222e9b7d72fcb4828994d>\n{\n  ClientInstance *instance;\n};\n\n")])])]),c("h3",{attrs:{id:"clientinstanceeventcoordinator-sendclientupdateend-l2-lambda-5547db528708a9f123e39e444b1ce0c4"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientinstanceeventcoordinator-sendclientupdateend-l2-lambda-5547db528708a9f123e39e444b1ce0c4"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientInstanceEventCoordinator::sendClientUpdateEnd::__l2::<lambda_5547db528708a9f123e39e444b1ce0c4>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientInstanceEventCoordinator::sendClientUpdateEnd::__l2::<lambda_5547db528708a9f123e39e444b1ce0c4>\n{\n  ClientInstance *instance;\n};\n\n")])])]),c("h3",{attrs:{id:"clientinstanceeventcoordinator-sendclientupdatestart-l2-lambda-7fb2a44e2ccf295a22fc580a9edaa1e6"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientinstanceeventcoordinator-sendclientupdatestart-l2-lambda-7fb2a44e2ccf295a22fc580a9edaa1e6"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientInstanceEventCoordinator::sendClientUpdateStart::__l2::<lambda_7fb2a44e2ccf295a22fc580a9edaa1e6>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientInstanceEventCoordinator::sendClientUpdateStart::__l2::<lambda_7fb2a44e2ccf295a22fc580a9edaa1e6>\n{\n  ClientInstance *instance;\n};\n\n")])])]),c("h3",{attrs:{id:"clientinstanceeventcoordinator-sendclientcreatedlevel-l2-lambda-82e58d8e24e455a327e677fd8c43ed78"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientinstanceeventcoordinator-sendclientcreatedlevel-l2-lambda-82e58d8e24e455a327e677fd8c43ed78"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientInstanceEventCoordinator::sendClientCreatedLevel::__l2::<lambda_82e58d8e24e455a327e677fd8c43ed78>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientInstanceEventCoordinator::sendClientCreatedLevel::__l2::<lambda_82e58d8e24e455a327e677fd8c43ed78>\n{\n  ClientInstance *instance;\n  Level *level;\n};\n\n")])])]),c("h3",{attrs:{id:"clientinstanceeventcoordinator-sendclientminecraftinitialized-l2-lambda-ded5d68558497ba91b283686b43c5afc"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientinstanceeventcoordinator-sendclientminecraftinitialized-l2-lambda-ded5d68558497ba91b283686b43c5afc"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientInstanceEventCoordinator::sendClientMinecraftInitialized::__l2::<lambda_ded5d68558497ba91b283686b43c5afc>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientInstanceEventCoordinator::sendClientMinecraftInitialized::__l2::<lambda_ded5d68558497ba91b283686b43c5afc>\n{\n  ClientInstance *instance;\n  Minecraft *minecraft;\n};\n\n")])])]),c("h3",{attrs:{id:"clientinstanceeventcoordinator-sendclientinitializeend-l2-lambda-fae6b47936c8bd0d3d88c82eb8ab6250"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientinstanceeventcoordinator-sendclientinitializeend-l2-lambda-fae6b47936c8bd0d3d88c82eb8ab6250"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientInstanceEventCoordinator::sendClientInitializeEnd::__l2::<lambda_fae6b47936c8bd0d3d88c82eb8ab6250>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientInstanceEventCoordinator::sendClientInitializeEnd::__l2::<lambda_fae6b47936c8bd0d3d88c82eb8ab6250>\n{\n  ClientInstance *instance;\n};\n\n")])])]),c("h3",{attrs:{id:"clientinstanceeventcoordinator-sendclientinitializestart-l2-lambda-86c15645a56632f21ecc7d1e02c49df7"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clientinstanceeventcoordinator-sendclientinitializestart-l2-lambda-86c15645a56632f21ecc7d1e02c49df7"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientInstanceEventCoordinator::sendClientInitializeStart::__l2::<lambda_86c15645a56632f21ecc7d1e02c49df7>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientInstanceEventCoordinator::sendClientInitializeStart::__l2::<lambda_86c15645a56632f21ecc7d1e02c49df7>\n{\n  ClientInstance *instance;\n};\n\n")])])]),c("h3",{attrs:{id:"clienthitdetectcoordinator-sendcontinuouspickhitresult-l2-lambda-4cf05be3c943c8f3543e21b9a5f563b8"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clienthitdetectcoordinator-sendcontinuouspickhitresult-l2-lambda-4cf05be3c943c8f3543e21b9a5f563b8"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientHitDetectCoordinator::sendContinuousPickHitResult::__l2::<lambda_4cf05be3c943c8f3543e21b9a5f563b8>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientHitDetectCoordinator::sendContinuousPickHitResult::__l2::<lambda_4cf05be3c943c8f3543e21b9a5f563b8>\n{\n  HitResult *hitResult;\n};\n\n")])])]),c("h3",{attrs:{id:"clienthitdetectcoordinator-sendchangedpickhitresult-l2-lambda-b21f51f0655eacdc77738b23dbe4a069"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clienthitdetectcoordinator-sendchangedpickhitresult-l2-lambda-b21f51f0655eacdc77738b23dbe4a069"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientHitDetectCoordinator::sendChangedPickHitResult::__l2::<lambda_b21f51f0655eacdc77738b23dbe4a069>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientHitDetectCoordinator::sendChangedPickHitResult::__l2::<lambda_b21f51f0655eacdc77738b23dbe4a069>\n{\n  HitResult *hitResult;\n};\n\n")])])]),c("h3",{attrs:{id:"clienthitdetectcoordinator-sendcontinuoushitresult-l2-lambda-c2529579edb7345e3bf2ed9ad53c8428"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clienthitdetectcoordinator-sendcontinuoushitresult-l2-lambda-c2529579edb7345e3bf2ed9ad53c8428"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientHitDetectCoordinator::sendContinuousHitResult::__l2::<lambda_c2529579edb7345e3bf2ed9ad53c8428>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientHitDetectCoordinator::sendContinuousHitResult::__l2::<lambda_c2529579edb7345e3bf2ed9ad53c8428>\n{\n  HitResult *hitResult;\n};\n\n")])])]),c("h3",{attrs:{id:"clienthitdetectcoordinator-sendchangedhitresult-l2-lambda-3d6978abe3b73298ad5ac47b140c6cb9"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clienthitdetectcoordinator-sendchangedhitresult-l2-lambda-3d6978abe3b73298ad5ac47b140c6cb9"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClientHitDetectCoordinator::sendChangedHitResult::__l2::<lambda_3d6978abe3b73298ad5ac47b140c6cb9>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClientHitDetectCoordinator::sendChangedHitResult::__l2::<lambda_3d6978abe3b73298ad5ac47b140c6cb9>\n{\n  HitResult *hitResult;\n};\n\n")])])]),c("h3",{attrs:{id:"containermenu"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containermenu"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerMenu")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) ContainerMenu : BaseContainerMenu\n{\n  ActorUniqueID mEntityUniqueId;\n  BlockPos mPos;\n};\n\n")])])]),c("h3",{attrs:{id:"containermenu-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#containermenu-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ContainerMenu_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ContainerMenu_vtbl\n{\n  void (__fastcall *containerContentChanged)(ContainerContentChangeListener *this, int);\n  void (__fastcall *~ContainerContentChangeListener)(ContainerContentChangeListener *this);\n  void (__fastcall *containerAddCallback)(ContainerContentChangeListener *this, Container *);\n  void (__fastcall *containerRemoveCallback)(ContainerContentChangeListener *this, Container *);\n  void (__fastcall *removeSlot)(BaseContainerMenu *this, int, int);\n  bool (__fastcall *isSlotDirty)(BaseContainerMenu *this, int);\n  bool (__fastcall *isResultSlot)(BaseContainerMenu *this, int);\n  Container *(__fastcall *_getContainer)(BaseContainerMenu *this);\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlenonimplemented-deprecatedasktylaing"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlenonimplemented-deprecatedasktylaing"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandleNonImplemented_DEPRECATEDASKTYLAING")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftHandleNonImplemented_DEPRECATEDASKTYLAING : CraftHandlerBase\n{\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlenonimplemented-deprecatedasktylaing-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlenonimplemented-deprecatedasktylaing-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandleNonImplemented_DEPRECATEDASKTYLAING_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftHandleNonImplemented_DEPRECATEDASKTYLAING_vtbl\n{\n  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);\n  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);\n  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);\n  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlercrafting"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlercrafting"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerCrafting")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CraftHandlerCrafting : CraftHandlerBase\n{\n  bool mWorkbench;\n  Player *mPlayer;\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlercrafting-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlercrafting-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerCrafting_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftHandlerCrafting_vtbl\n{\n  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);\n  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);\n  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);\n  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlerenchant"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlerenchant"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerEnchant")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) CraftHandlerEnchant : CraftHandlerBase\n{\n  int mEnchantCost;\n  Player *mPlayer;\n  bool mRecalculateOptions;\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlerenchant-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlerenchant-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerEnchant_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftHandlerEnchant_vtbl\n{\n  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);\n  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);\n  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);\n  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlertrade"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlertrade"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerTrade")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) CraftHandlerTrade : CraftHandlerBase\n{\n  const ContainerScreenContext *mScreenContext;\n  bool mIsTrade2;\n};\n\n")])])]),c("h3",{attrs:{id:"crafthandlertrade-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crafthandlertrade-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CraftHandlerTrade_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CraftHandlerTrade_vtbl\n{\n  void (__fastcall *~CraftHandlerBase)(CraftHandlerBase *this);\n  void (__fastcall *endRequestBatch)(CraftHandlerBase *this);\n  ItemStackNetResult (__fastcall *_handleCraftAction)(CraftHandlerBase *this, const ItemStackRequestActionCraftBase *);\n  void (__fastcall *_postCraftRequest)(CraftHandlerBase *this, const bool);\n};\n\n")])])]),c("h3",{attrs:{id:"carrotonastickitem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#carrotonastickitem"}},[t._v("#")]),t._v(" "),c("code",[t._v("CarrotOnAStickItem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CarrotOnAStickItem : Item\n{\n};\n\n")])])]),c("h3",{attrs:{id:"chemistryblockitem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chemistryblockitem"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChemistryBlockItem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChemistryBlockItem : BlockItem\n{\n};\n\n")])])]),c("h3",{attrs:{id:"chemistryauxdatablockitem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chemistryauxdatablockitem"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChemistryAuxDataBlockItem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChemistryAuxDataBlockItem : AuxDataBlockItem\n{\n};\n\n")])])]),c("h3",{attrs:{id:"coralfanblockitem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#coralfanblockitem"}},[t._v("#")]),t._v(" "),c("code",[t._v("CoralFanBlockItem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CoralFanBlockItem : BlockItem\n{\n};\n\n")])])]),c("h3",{attrs:{id:"coralfanblockitem-useon-l72-lambda-1e855bb0deac619b44ec09dd5754848c"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#coralfanblockitem-useon-l72-lambda-1e855bb0deac619b44ec09dd5754848c"}},[t._v("#")]),t._v(" "),c("code",[t._v("CoralFanBlockItem::_useOn::__l72::<lambda_1e855bb0deac619b44ec09dd5754848c>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CoralFanBlockItem::_useOn::__l72::<lambda_1e855bb0deac619b44ec09dd5754848c>\n{\n  BlockPos *pos;\n  const Block **finalBlock;\n  const CompoundTag *dataID;\n  Actor *entity;\n  unsigned __int8 *face;\n  bool *canceled;\n};\n\n")])])]),c("h3",{attrs:{id:"chemistryrecipes"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chemistryrecipes"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChemistryRecipes")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChemistryRecipes\n{\n};\n\n")])])]),c("h3",{attrs:{id:"coloredtorchblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#coloredtorchblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ColoredTorchBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) ColoredTorchBlock : TorchBlock\n{\n  ColoredTorchColor mBaseColor;\n};\n\n")])])]),c("h3",{attrs:{id:"coloredtorchblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#coloredtorchblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ColoredTorchBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ColoredTorchBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"cocoablock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cocoablock"}},[t._v("#")]),t._v(" "),c("code",[t._v("CocoaBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CocoaBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cocoablock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cocoablock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CocoaBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CocoaBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"crossbowenchant"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crossbowenchant"}},[t._v("#")]),t._v(" "),c("code",[t._v("CrossbowEnchant")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CrossbowEnchant : Enchant\n{\n};\n\n")])])]),c("h3",{attrs:{id:"crossbowenchant-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#crossbowenchant-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CrossbowEnchant_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CrossbowEnchant_vtbl\n{\n  void (__fastcall *~Enchant)(Enchant *this);\n  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);\n  int (__fastcall *getMinCost)(Enchant *this, int);\n  int (__fastcall *getMaxCost)(Enchant *this, int);\n  int (__fastcall *getMinLevel)(Enchant *this);\n  int (__fastcall *getMaxLevel)(Enchant *this);\n  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);\n  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);\n  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);\n  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);\n  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);\n  bool (__fastcall *isProtectionEnchant)(Enchant *this);\n  bool (__fastcall *isTreasureOnly)(Enchant *this);\n  bool (__fastcall *isDiscoverable)(Enchant *this);\n};\n\n")])])]),c("h3",{attrs:{id:"cursebindingenchant"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cursebindingenchant"}},[t._v("#")]),t._v(" "),c("code",[t._v("CurseBindingEnchant")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CurseBindingEnchant : Enchant\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cursebindingenchant-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cursebindingenchant-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CurseBindingEnchant_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CurseBindingEnchant_vtbl\n{\n  void (__fastcall *~Enchant)(Enchant *this);\n  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);\n  int (__fastcall *getMinCost)(Enchant *this, int);\n  int (__fastcall *getMaxCost)(Enchant *this, int);\n  int (__fastcall *getMinLevel)(Enchant *this);\n  int (__fastcall *getMaxLevel)(Enchant *this);\n  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);\n  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);\n  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);\n  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);\n  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);\n  bool (__fastcall *isProtectionEnchant)(Enchant *this);\n  bool (__fastcall *isTreasureOnly)(Enchant *this);\n  bool (__fastcall *isDiscoverable)(Enchant *this);\n};\n\n")])])]),c("h3",{attrs:{id:"cursevanishingenchant"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cursevanishingenchant"}},[t._v("#")]),t._v(" "),c("code",[t._v("CurseVanishingEnchant")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CurseVanishingEnchant : Enchant\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cursevanishingenchant-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cursevanishingenchant-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CurseVanishingEnchant_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CurseVanishingEnchant_vtbl\n{\n  void (__fastcall *~Enchant)(Enchant *this);\n  bool (__fastcall *isCompatibleWith)(Enchant *this, Enchant::Type);\n  int (__fastcall *getMinCost)(Enchant *this, int);\n  int (__fastcall *getMaxCost)(Enchant *this, int);\n  int (__fastcall *getMinLevel)(Enchant *this);\n  int (__fastcall *getMaxLevel)(Enchant *this);\n  int (__fastcall *getDamageProtection)(Enchant *this, int, const ActorDamageSource *);\n  float (__fastcall *getDamageBonus)(Enchant *this, int, const Actor *);\n  void (__fastcall *doPostAttack)(Enchant *this, Actor *, Actor *, int);\n  void (__fastcall *doPostHurt)(Enchant *this, ItemInstance *, Actor *, Actor *, int);\n  bool (__fastcall *isMeleeDamageEnchant)(Enchant *this);\n  bool (__fastcall *isProtectionEnchant)(Enchant *this);\n  bool (__fastcall *isTreasureOnly)(Enchant *this);\n  bool (__fastcall *isDiscoverable)(Enchant *this);\n};\n\n")])])]),c("h3",{attrs:{id:"cameraitem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cameraitem"}},[t._v("#")]),t._v(" "),c("code",[t._v("CameraItem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CameraItem : Item\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clothblockitem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clothblockitem"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClothBlockItem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClothBlockItem : BlockItem\n{\n};\n\n")])])]),c("h3",{attrs:{id:"coalitem"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#coalitem"}},[t._v("#")]),t._v(" "),c("code",[t._v("CoalItem")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) CoalItem : Item\n{\n  TextureUVCoordinateSet m_charoalUV;\n  CoalItem::Type mType;\n};\n\n")])])]),c("h3",{attrs:{id:"chemistrytableblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chemistrytableblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChemistryTableBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChemistryTableBlock : ActorBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"chemistrytableblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chemistrytableblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChemistryTableBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ChemistryTableBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),c("h3",{attrs:{id:"customskycolorattributes"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#customskycolorattributes"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomSkyColorAttributes")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CustomSkyColorAttributes\n{\n  mce::Color mSkyColor;\n};\n\n")])])]),c("h3",{attrs:{id:"customfoliagecolorattributes"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#customfoliagecolorattributes"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomFoliageColorAttributes")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct CustomFoliageColorAttributes\n{\n  int mFoliageColor;\n};\n\n")])])]),c("h3",{attrs:{id:"colorpaletteattributes"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#colorpaletteattributes"}},[t._v("#")]),t._v(" "),c("code",[t._v("ColorPaletteAttributes")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct ColorPaletteAttributes\n{\n  _BYTE mPaletteName[8];\n};\n\n")])])]),c("h3",{attrs:{id:"custommapfoliagecolorattributes"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#custommapfoliagecolorattributes"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomMapFoliageColorAttributes")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct CustomMapFoliageColorAttributes\n{\n  int mMapFoliageColor;\n};\n\n")])])]),c("h3",{attrs:{id:"customgrasscolorattributes"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#customgrasscolorattributes"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomGrassColorAttributes")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct CustomGrassColorAttributes\n{\n  int mGrassColor;\n};\n\n")])])]),c("h3",{attrs:{id:"custommapgrasscolorattributes"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#custommapgrasscolorattributes"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomMapGrassColorAttributes")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct CustomMapGrassColorAttributes\n{\n  int mMapGrassColor;\n};\n\n")])])]),c("h3",{attrs:{id:"customdebugmapcolorattributes"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#customdebugmapcolorattributes"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomDebugMapColorAttributes")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct CustomDebugMapColorAttributes\n{\n  int mDebugMapColor;\n};\n\n")])])]),c("h3",{attrs:{id:"customdebugmapcoloroddattributes"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#customdebugmapcoloroddattributes"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomDebugMapColorOddAttributes")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct CustomDebugMapColorOddAttributes\n{\n  int mDebugMapOddColor;\n};\n\n")])])]),c("h3",{attrs:{id:"customtemperaturecategoryattributes"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#customtemperaturecategoryattributes"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomTemperatureCategoryAttributes")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct CustomTemperatureCategoryAttributes\n{\n  Biome::BiomeTempCategory mTemperatureCategory;\n};\n\n")])])]),c("h3",{attrs:{id:"customhumidityattributes"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#customhumidityattributes"}},[t._v("#")]),t._v(" "),c("code",[t._v("CustomHumidityAttributes")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct CustomHumidityAttributes\n{\n  bool mIsHumid;\n};\n\n")])])]),c("h3",{attrs:{id:"comparatorblockactor"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#comparatorblockactor"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComparatorBlockActor")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) ComparatorBlockActor : BlockActor\n{\n  int mOutput;\n};\n\n")])])]),c("h3",{attrs:{id:"comparatorblockactor-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#comparatorblockactor-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComparatorBlockActor_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ComparatorBlockActor_vtbl\n{\n  void (__fastcall *~BlockActor)(BlockActor *this);\n  void (__fastcall *load)(BlockActor *this, Level *, const CompoundTag *, DataLoadHelper *);\n  bool (__fastcall *save)(BlockActor *this, CompoundTag *);\n  bool (__fastcall *saveItemInstanceData)(BlockActor *this, CompoundTag *);\n  void (__fastcall *saveBlockData)(BlockActor *this, CompoundTag *, BlockSource *);\n  void (__fastcall *loadBlockData)(BlockActor *this, const CompoundTag *, BlockSource *, DataLoadHelper *);\n  void (__fastcall *onCustomTagLoadDone)(BlockActor *this, BlockSource *);\n  void (__fastcall *tick)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isFinished)(BlockActor *this);\n  void (__fastcall *onChanged)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isMovable)(BlockActor *this, BlockSource *);\n  bool (__fastcall *isCustomNameSaved)(BlockActor *this);\n  bool (__fastcall *onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *, const Player *);\n  void (__fastcall *onPlace)(BlockActor *this, BlockSource *);\n  void (__fastcall *onMove)(BlockActor *this);\n  void (__fastcall *onRemoved)(BlockActor *this, BlockSource *);\n  void (__fastcall *triggerEvent)(BlockActor *this, int, int);\n  void (__fastcall *clearCache)(BlockActor *this);\n  void (__fastcall *onNeighborChanged)(BlockActor *this, BlockSource *, const BlockPos *);\n  float (__fastcall *getShadowRadius)(BlockActor *this, BlockSource *);\n  bool (__fastcall *hasAlphaLayer)(BlockActor *this);\n  BlockActor *(__fastcall *getCrackEntity)(BlockActor *this, BlockSource *, const BlockPos *);\n  void (__fastcall *getDebugText)(BlockActor *this, std::vector<std::string> *, const BlockPos *);\n  const std::string *(__fastcall *getCustomName)(BlockActor *this);\n  const std::string *(__fastcall *getFilteredCustomName)(BlockActor *this, const UIProfanityContext *);\n  std::string *(__fastcall *getName)(BlockActor *this, std::string *result);\n  void (__fastcall *setCustomName)(BlockActor *this, const std::string *);\n  std::string *(__fastcall *getImmersiveReaderText)(BlockActor *this, std::string *result, BlockSource *);\n  int (__fastcall *getRepairCost)(BlockActor *this);\n  PistonBlockActor *(__fastcall *getOwningPiston)(BlockActor *this, BlockSource *);\n  const Container *(__fastcall *getContainer)(BlockActor *this);\n  Container *(__fastcall *getContainer)(BlockActor *this);\n  float (__fastcall *getDeletionDelayTimeSeconds)(BlockActor *this);\n  void (__fastcall *checkWordsOnChunkLoad)(BlockActor *this, LevelChunk *);\n  void (__fastcall *checkWordsOnUpdate)(BlockActor *this, Player *);\n  void (__fastcall *onChunkLoaded)(BlockActor *this, LevelChunk *);\n  void (__fastcall *onChunkUnloaded)(BlockActor *this, LevelChunk *);\n  std::unique_ptr<BlockActorDataPacket> *(__fastcall *_getUpdatePacket)(BlockActor *this, std::unique_ptr<BlockActorDataPacket> *result, BlockSource *);\n  void (__fastcall *_onUpdatePacket)(BlockActor *this, const CompoundTag *, BlockSource *);\n  bool (__fastcall *_playerCanUpdate)(BlockActor *this, const Player *);\n  int (__fastcall *getOutputSignal)(ComparatorBlockActor *this);\n  void (__fastcall *setOutputSignal)(ComparatorBlockActor *this, int);\n};\n\n")])])]),c("h3",{attrs:{id:"chestblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chestblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChestBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) ChestBlock : ActorBlock\n{\n  ChestBlock::ChestType mType;\n};\n\n")])])]),c("h3",{attrs:{id:"chestblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chestblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChestBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ChestBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),c("h3",{attrs:{id:"capacitorcomponent"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#capacitorcomponent"}},[t._v("#")]),t._v(" "),c("code",[t._v("CapacitorComponent")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CapacitorComponent : ProducerComponent\n{\n};\n\n")])])]),c("h3",{attrs:{id:"capacitorcomponent-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#capacitorcomponent-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CapacitorComponent_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CapacitorComponent_vtbl\n{\n  void (__fastcall *~BaseCircuitComponent)(BaseCircuitComponent *this);\n  int (__fastcall *getStrength)(BaseCircuitComponent *this);\n  int (__fastcall *getDirection)(BaseCircuitComponent *this);\n  void (__fastcall *setStrength)(BaseCircuitComponent *this, int);\n  void (__fastcall *setDirection)(BaseCircuitComponent *this, unsigned __int8);\n  bool (__fastcall *consumePowerAnyDirection)(BaseCircuitComponent *this);\n  bool (__fastcall *canConsumerPower)(BaseCircuitComponent *this);\n  bool (__fastcall *canStopPower)(BaseCircuitComponent *this);\n  void (__fastcall *setStopPower)(BaseCircuitComponent *this, bool);\n  unsigned __int64 (__fastcall *getBaseType)(BaseCircuitComponent *this);\n  unsigned __int64 (__fastcall *getInstanceType)(BaseCircuitComponent *this);\n  bool (__fastcall *removeSource)(BaseCircuitComponent *this, const BlockPos *, const BaseCircuitComponent *);\n  bool (__fastcall *addSource)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, int *, bool *);\n  bool (__fastcall *allowConnection)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, bool *);\n  void (__fastcall *checkLock)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);\n  bool (__fastcall *evaluate)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);\n  void (__fastcall *cacheValues)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);\n  void (__fastcall *updateDependencies)(BaseCircuitComponent *this, CircuitSceneGraph *, const BlockPos *);\n  bool (__fastcall *allowIndirect)(BaseCircuitComponent *this);\n  bool (__fastcall *isHalfPulse)(BaseCircuitComponent *this);\n  bool (__fastcall *hasSource)(BaseCircuitComponent *this, BaseCircuitComponent *);\n  bool (__fastcall *hasChildrenSource)(BaseCircuitComponent *this);\n  bool (__fastcall *isSecondaryPowered)(BaseCircuitComponent *this);\n  unsigned __int8 (__fastcall *getPoweroutDirection)(CapacitorComponent *this);\n};\n\n")])])]),c("h3",{attrs:{id:"comparatorcapacitor"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#comparatorcapacitor"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComparatorCapacitor")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ComparatorCapacitor : CapacitorComponent\n{\n  int mRearAnalogStrength;\n  int mSideAnalogStrengthRight;\n  int mSideAnalogStrengthLeft;\n  int mOldStrength;\n  ComparatorCapacitor::Mode mMode;\n  int mRearStrength;\n  int mSideStrengths;\n  bool mHasAnalogBeenSet;\n  CircuitComponentList mSideComponents;\n};\n\n")])])]),c("h3",{attrs:{id:"comparatorcapacitor-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#comparatorcapacitor-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComparatorCapacitor_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ComparatorCapacitor_vtbl\n{\n  void (__fastcall *~BaseCircuitComponent)(BaseCircuitComponent *this);\n  int (__fastcall *getStrength)(BaseCircuitComponent *this);\n  int (__fastcall *getDirection)(BaseCircuitComponent *this);\n  void (__fastcall *setStrength)(BaseCircuitComponent *this, int);\n  void (__fastcall *setDirection)(BaseCircuitComponent *this, unsigned __int8);\n  bool (__fastcall *consumePowerAnyDirection)(BaseCircuitComponent *this);\n  bool (__fastcall *canConsumerPower)(BaseCircuitComponent *this);\n  bool (__fastcall *canStopPower)(BaseCircuitComponent *this);\n  void (__fastcall *setStopPower)(BaseCircuitComponent *this, bool);\n  unsigned __int64 (__fastcall *getBaseType)(BaseCircuitComponent *this);\n  unsigned __int64 (__fastcall *getInstanceType)(BaseCircuitComponent *this);\n  bool (__fastcall *removeSource)(BaseCircuitComponent *this, const BlockPos *, const BaseCircuitComponent *);\n  bool (__fastcall *addSource)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, int *, bool *);\n  bool (__fastcall *allowConnection)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, bool *);\n  void (__fastcall *checkLock)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);\n  bool (__fastcall *evaluate)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);\n  void (__fastcall *cacheValues)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);\n  void (__fastcall *updateDependencies)(BaseCircuitComponent *this, CircuitSceneGraph *, const BlockPos *);\n  bool (__fastcall *allowIndirect)(BaseCircuitComponent *this);\n  bool (__fastcall *isHalfPulse)(BaseCircuitComponent *this);\n  bool (__fastcall *hasSource)(BaseCircuitComponent *this, BaseCircuitComponent *);\n  bool (__fastcall *hasChildrenSource)(BaseCircuitComponent *this);\n  bool (__fastcall *isSecondaryPowered)(BaseCircuitComponent *this);\n  unsigned __int8 (__fastcall *getPoweroutDirection)(CapacitorComponent *this);\n};\n\n")])])]),c("h3",{attrs:{id:"conduitblockactor-applyeffects-l8-lambda-b0b76dacb6f6d005bd21b9d622471658"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#conduitblockactor-applyeffects-l8-lambda-b0b76dacb6f6d005bd21b9d622471658"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConduitBlockActor::_applyEffects::__l8::<lambda_b0b76dacb6f6d005bd21b9d622471658>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ConduitBlockActor::_applyEffects::__l8::<lambda_b0b76dacb6f6d005bd21b9d622471658>\n{\n  const Vec3 *posNautilus;\n  const float *halfExtent;\n  const MobEffectInstance *effectInst;\n};\n\n")])])]),c("h3",{attrs:{id:"conduitblockactor-checkshape-l71-lambda-b28f6ce02576140d0e92aeec4d4fffc7"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#conduitblockactor-checkshape-l71-lambda-b28f6ce02576140d0e92aeec4d4fffc7"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConduitBlockActor::_checkShape::__l71::<lambda_b28f6ce02576140d0e92aeec4d4fffc7>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ConduitBlockActor::_checkShape::__l71::<lambda_b28f6ce02576140d0e92aeec4d4fffc7>\n{\n  const Vec3 *posNautilus;\n  const float *halfExtent;\n};\n\n")])])]),c("h3",{attrs:{id:"chestblockactor-serverinititemstackids-l40-lambda-2e8d0c4f468d46e7194921aff72bdf51"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chestblockactor-serverinititemstackids-l40-lambda-2e8d0c4f468d46e7194921aff72bdf51"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChestBlockActor::serverInitItemStackIds::__l40::<lambda_2e8d0c4f468d46e7194921aff72bdf51>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChestBlockActor::serverInitItemStackIds::__l40::<lambda_2e8d0c4f468d46e7194921aff72bdf51>\n{\n  std::function<void __cdecl(int,ItemStack const &)> *onNetIdChanged;\n};\n\n")])])]),c("h3",{attrs:{id:"consumercomponent"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#consumercomponent"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConsumerComponent")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(4)) ConsumerComponent : BaseCircuitComponent\n{\n  bool mSecondaryPowered;\n  bool mPropagatePower;\n  bool mPromotedToProducer;\n  bool mAcceptHalfPulse;\n  bool mAcceptSameDirection;\n};\n\n")])])]),c("h3",{attrs:{id:"consumercomponent-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#consumercomponent-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConsumerComponent_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ConsumerComponent_vtbl\n{\n  void (__fastcall *~BaseCircuitComponent)(BaseCircuitComponent *this);\n  int (__fastcall *getStrength)(BaseCircuitComponent *this);\n  int (__fastcall *getDirection)(BaseCircuitComponent *this);\n  void (__fastcall *setStrength)(BaseCircuitComponent *this, int);\n  void (__fastcall *setDirection)(BaseCircuitComponent *this, unsigned __int8);\n  bool (__fastcall *consumePowerAnyDirection)(BaseCircuitComponent *this);\n  bool (__fastcall *canConsumerPower)(BaseCircuitComponent *this);\n  bool (__fastcall *canStopPower)(BaseCircuitComponent *this);\n  void (__fastcall *setStopPower)(BaseCircuitComponent *this, bool);\n  unsigned __int64 (__fastcall *getBaseType)(BaseCircuitComponent *this);\n  unsigned __int64 (__fastcall *getInstanceType)(BaseCircuitComponent *this);\n  bool (__fastcall *removeSource)(BaseCircuitComponent *this, const BlockPos *, const BaseCircuitComponent *);\n  bool (__fastcall *addSource)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, int *, bool *);\n  bool (__fastcall *allowConnection)(BaseCircuitComponent *this, CircuitSceneGraph *, const CircuitTrackingInfo *, bool *);\n  void (__fastcall *checkLock)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);\n  bool (__fastcall *evaluate)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);\n  void (__fastcall *cacheValues)(BaseCircuitComponent *this, CircuitSystem *, const BlockPos *);\n  void (__fastcall *updateDependencies)(BaseCircuitComponent *this, CircuitSceneGraph *, const BlockPos *);\n  bool (__fastcall *allowIndirect)(BaseCircuitComponent *this);\n  bool (__fastcall *isHalfPulse)(BaseCircuitComponent *this);\n  bool (__fastcall *hasSource)(BaseCircuitComponent *this, BaseCircuitComponent *);\n  bool (__fastcall *hasChildrenSource)(BaseCircuitComponent *this);\n  bool (__fastcall *isSecondaryPowered)(BaseCircuitComponent *this);\n};\n\n")])])]),c("h3",{attrs:{id:"connectioncomponentdescription"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#connectioncomponentdescription"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConnectionComponentDescription")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ConnectionComponentDescription : BlockComponentDescription\n{\n  std::vector<std::string> mConnection;\n};\n\n")])])]),c("h3",{attrs:{id:"connectioncomponentdescription-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#connectioncomponentdescription-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConnectionComponentDescription_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ConnectionComponentDescription_vtbl\n{\n  void (__fastcall *~BlockComponentDescription)(BlockComponentDescription *this);\n  const std::string *(__fastcall *getName)(BlockComponentDescription *this);\n  void (__fastcall *initializeComponent)(BlockComponentDescription *this, EntityContext *);\n  void (__fastcall *buildSchema)(BlockComponentDescription *this, std::shared_ptr<JsonUtil::JsonSchemaObjectNode<JsonUtil::EmptyClass,BlockComponentGroupDescription> > *, const BlockComponentFactory *);\n  bool (__fastcall *isNetworkComponent)(BlockComponentDescription *this);\n  std::unique_ptr<CompoundTag> *(__fastcall *buildNetworkTag)(BlockComponentDescription *this, std::unique_ptr<CompoundTag> *result);\n  void (__fastcall *initializeFromNetwork)(BlockComponentDescription *this, const CompoundTag *);\n};\n\n")])])]),c("h3",{attrs:{id:"cactusblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cactusblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("CactusBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CactusBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cactusblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cactusblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CactusBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CactusBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"cakeblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cakeblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("CakeBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CakeBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cakeblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cakeblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CakeBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CakeBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"camerablock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#camerablock"}},[t._v("#")]),t._v(" "),c("code",[t._v("CameraBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CameraBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"camerablock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#camerablock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CameraBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CameraBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"carrotblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#carrotblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("CarrotBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CarrotBlock : CropBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"carrotblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#carrotblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CarrotBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CarrotBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *checkAlive)(BushBlock *this, BlockSource *, const BlockPos *);\n  const ItemInstance *(__fastcall *getBaseSeed)(CropBlock *this, const ItemInstance *result);\n  const ItemInstance *(__fastcall *getBaseCrop)(CropBlock *this, const ItemInstance *result);\n  int (__fastcall *getSeedNum)(CropBlock *this, Random *, int, int, bool);\n  int (__fastcall *getCropNum)(CropBlock *this, Random *, int, int, bool);\n};\n\n")])])]),c("h3",{attrs:{id:"cartographytableblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cartographytableblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("CartographyTableBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CartographyTableBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"cartographytableblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#cartographytableblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("CartographyTableBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ CartographyTableBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"chemicalheatblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chemicalheatblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChemicalHeatBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ChemicalHeatBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"chemicalheatblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#chemicalheatblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ChemicalHeatBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ChemicalHeatBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"clayblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clayblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClayBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClayBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clayblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clayblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClayBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ClayBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"clothblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clothblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClothBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ClothBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"clothblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clothblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ClothBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ClothBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"coloredblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#coloredblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ColoredBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ColoredBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"coloredblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#coloredblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ColoredBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ColoredBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"commandblock-updateblock-l8-lambda-6680b22252abc8a807bb3d1916695fb2"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#commandblock-updateblock-l8-lambda-6680b22252abc8a807bb3d1916695fb2"}},[t._v("#")]),t._v(" "),c("code",[t._v("CommandBlock::updateBlock::__l8::<lambda_6680b22252abc8a807bb3d1916695fb2>")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj CommandBlock::updateBlock::__l8::<lambda_6680b22252abc8a807bb3d1916695fb2>\n{\n  gsl::not_null<Block const *> *newBlock;\n  const Block *currentBlock;\n};\n\n")])])]),c("h3",{attrs:{id:"comparatorblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#comparatorblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComparatorBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj __declspec(align(8)) ComparatorBlock : ActorBlock\n{\n  bool mOn;\n};\n\n")])])]),c("h3",{attrs:{id:"comparatorblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#comparatorblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ComparatorBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ComparatorBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])]),c("h3",{attrs:{id:"concreteblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#concreteblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConcreteBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ConcreteBlock : BlockLegacy\n{\n};\n\n")])])]),c("h3",{attrs:{id:"concreteblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#concreteblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConcreteBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ConcreteBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n};\n\n")])])]),c("h3",{attrs:{id:"concretepowderblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#concretepowderblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConcretePowderBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ConcretePowderBlock : HeavyBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"concretepowderblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#concretepowderblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConcretePowderBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ConcretePowderBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  mce::Color *(__fastcall *getDustColor)(HeavyBlock *this, mce::Color *result, const Block *);\n  std::string *(__fastcall *getDustParticleName)(HeavyBlock *this, std::string *result, const Block *);\n  bool (__fastcall *falling)(HeavyBlock *this);\n  void (__fastcall *onLand)(HeavyBlock *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isFreeToFall)(HeavyBlock *this, BlockSource *, const BlockPos *);\n  void (__fastcall *startFalling)(HeavyBlock *this, BlockSource *, const BlockPos *, const Block *, bool);\n};\n\n")])])]),c("h3",{attrs:{id:"conduitblock"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#conduitblock"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConduitBlock")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct __cppobj ConduitBlock : ActorBlock\n{\n};\n\n")])])]),c("h3",{attrs:{id:"conduitblock-vtbl"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#conduitblock-vtbl"}},[t._v("#")]),t._v(" "),c("code",[t._v("ConduitBlock_vtbl")])]),t._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[t._v("struct /*VFT*/ ConduitBlock_vtbl\n{\n  void (__fastcall *~BlockLegacy)(BlockLegacy *this);\n  const Block *(__fastcall *getStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  const Block *(__fastcall *getModBlockStateFromLegacyData)(BlockLegacy *this, unsigned __int16);\n  std::shared_ptr<BlockActor> *(__fastcall *newBlockEntity)(BlockLegacy *this, std::shared_ptr<BlockActor> *result, const BlockPos *, const Block *);\n  const Block *(__fastcall *getNextBlockPermutation)(BlockLegacy *this, const Block *);\n  bool (__fastcall *hasTag)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *);\n  bool (__fastcall *getCollisionShape)(BlockLegacy *this, AABB *, const Block *, BlockSource *, const BlockPos *, Actor *);\n  bool (__fastcall *isObstructingChests)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *);\n  Vec3 *(__fastcall *randomlyModifyPosition)(BlockLegacy *this, Vec3 *result, const BlockPos *, int *);\n  void (__fastcall *addAABBs)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *);\n  const AABB *(__fastcall *getAABB)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, AABB *, bool);\n  bool (__fastcall *addCollisionShapes)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, const AABB *, std::vector<AABB> *, Actor *);\n  const AABB *(__fastcall *getOutline)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  bool (__fastcall *getLiquidClipVolume)(BlockLegacy *this, BlockSource *, const BlockPos *, AABB *);\n  void (__fastcall *onProjectileHit)(BlockLegacy *this, BlockSource *, const BlockPos *, const Actor *);\n  bool (__fastcall *liquidCanFlowIntoFromDirection)(BlockLegacy *this, unsigned __int8, const std::function<Block const & __cdecl(BlockPos const &)> *, const BlockPos *);\n  bool (__fastcall *hasVariableLighting)(BlockLegacy *this);\n  bool (__fastcall *isStrippable)(BlockLegacy *this, const Block *);\n  const Block *(__fastcall *getStrippedBlock)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canProvideSupport)(BlockLegacy *this, const Block *, unsigned __int8, BlockSupportType);\n  bool (__fastcall *canConnect)(BlockLegacy *this, const Block *, unsigned __int8, const Block *);\n  void (__fastcall *getConnectedDirections)(BlockLegacy *this, const Block *, const BlockPos *, BlockSource *, bool *, bool *, bool *, bool *);\n  bool (__fastcall *isStemBlock)(BlockLegacy *this);\n  bool (__fastcall *isContainerBlock)(BlockLegacy *this);\n  bool (__fastcall *isCraftingBlock)(BlockLegacy *this);\n  bool (__fastcall *isWaterBlocking)(BlockLegacy *this);\n  bool (__fastcall *isHurtableBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isFenceGateBlock)(BlockLegacy *this);\n  bool (__fastcall *isThinFenceBlock)(BlockLegacy *this);\n  bool (__fastcall *isWallBlock)(BlockLegacy *this);\n  bool (__fastcall *isStairBlock)(BlockLegacy *this);\n  bool (__fastcall *isSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoubleSlabBlock)(BlockLegacy *this);\n  bool (__fastcall *isDoorBlock)(BlockLegacy *this);\n  bool (__fastcall *isRailBlock)(BlockLegacy *this);\n  bool (__fastcall *isButtonBlock)(BlockLegacy *this);\n  bool (__fastcall *canHurtAndBreakItem)(BlockLegacy *this);\n  bool (__fastcall *isSignalSource)(BlockLegacy *this);\n  bool (__fastcall *canBeOriginalSurface)(BlockLegacy *this);\n  bool (__fastcall *isValidAuxValue)(BlockLegacy *this, int);\n  void (__fastcall *setTargetLandBlocks)(BlockLegacy *this, const std::vector<std::string> *);\n  bool (__fastcall *canFillAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  const Block *(__fastcall *sanitizeFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *onFillBlock)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getDirectSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  bool (__fastcall *waterSpreadCausesSpawn)(BlockLegacy *this);\n  bool (__fastcall *canContainLiquid)(BlockLegacy *this);\n  bool (__fastcall *shouldConnectToRedstone)(BlockLegacy *this, BlockSource *, const BlockPos *, int);\n  void (__fastcall *handleRain)(BlockLegacy *this, BlockSource *, const BlockPos *, float);\n  bool (__fastcall *canBeUsedInCommands)(BlockLegacy *this, const BaseGameVersion *);\n  float (__fastcall *getThickness)(BlockLegacy *this);\n  float (__fastcall *getFlexibility)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *checkIsPathable)(BlockLegacy *this, Actor *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *shouldDispense)(BlockLegacy *this, BlockSource *, Container *);\n  bool (__fastcall *dispense)(BlockLegacy *this, BlockSource *, Container *, int, const Vec3 *, unsigned __int8);\n  void (__fastcall *transformOnFall)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *onRedstoneUpdate)(BlockLegacy *this, BlockSource *, const BlockPos *, int, bool);\n  void (__fastcall *onMove)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *detachesOnPistonMove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *movedByPiston)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onStructureNeighborBlockPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *setupRedstoneComponent)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *specialUse)(BlockLegacy *this, Player *, const BlockPos *, ItemStack *);\n  BlockProperty (__fastcall *getRedstoneProperty)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *updateEntityAfterFallOn)(BlockLegacy *this, IActorMovementProxy *);\n  bool (__fastcall *isBounceBlock)(BlockLegacy *this);\n  bool (__fastcall *ignoreEntitiesOnPistonMove)(BlockLegacy *this, const Block *);\n  bool (__fastcall *onFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, FertilizerType);\n  bool (__fastcall *mayConsumeFertilizer)(BlockLegacy *this, BlockSource *);\n  bool (__fastcall *canBeFertilized)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *mayPick)(BlockLegacy *this, BlockSource *, const Block *, bool);\n  bool (__fastcall *mayPick)(BlockLegacy *this);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *mayPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *mayPlaceOn)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *tryToPlace)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const ActorBlockSyncMessage *);\n  bool (__fastcall *breaksFallingBlocks)(BlockLegacy *this, const Block *);\n  void (__fastcall *destroy)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, Actor *);\n  bool (__fastcall *playerWillDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  bool (__fastcall *getIgnoresDestroyPermissions)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *neighborChanged)(BlockLegacy *this, BlockSource *, const BlockPos *, const BlockPos *);\n  bool (__fastcall *getSecondPart)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  int (__fastcall *getResourceCount)(BlockLegacy *this, Random *, const Block *, int, bool);\n  ItemInstance *(__fastcall *getResourceItem)(BlockLegacy *this, ItemInstance *result, Random *, const Block *, int);\n  ItemInstance *(__fastcall *asItemInstance)(BlockLegacy *this, ItemInstance *result, BlockSource *, const BlockPos *, const Block *);\n  void (__fastcall *spawnResources)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  void (__fastcall *trySpawnResourcesOnExplosion)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, std::vector<Item const *> *, float, int, bool);\n  bool (__fastcall *spawnBurnResources)(BlockLegacy *this, BlockSource *, float, float, float);\n  const Block *(__fastcall *getPlacementBlock)(BlockLegacy *this, Actor *, const BlockPos *, unsigned __int8, const Vec3 *, int);\n  int (__fastcall *calcVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *isAttachedTo)(BlockLegacy *this, BlockSource *, const BlockPos *, BlockPos *);\n  bool (__fastcall *attack)(BlockLegacy *this, Player *, const BlockPos *);\n  void (__fastcall *handleEntityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, Vec3 *);\n  void (__fastcall *entityInside)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  int (__fastcall *getExperienceDrop)(BlockLegacy *this, Random *);\n  bool (__fastcall *canBeBuiltOver)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *triggerEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, int, int);\n  void (__fastcall *executeEvent)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, const std::string *, Actor *);\n  void (__fastcall *executeEvent)(BlockLegacy *this, const std::string *, RenderParams *);\n  bool (__fastcall *executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  bool (__fastcall *executeTriggerChain)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, RenderParams *);\n  const MobSpawnerData *(__fastcall *getMobToSpawn)(BlockLegacy *this, const SpawnConditions *, BlockSource *);\n  bool (__fastcall *shouldStopFalling)(BlockLegacy *this, Actor *);\n  bool (__fastcall *pushesUpFallingBlocks)(BlockLegacy *this);\n  float (__fastcall *calcGroundFriction)(BlockLegacy *this, Mob *, const BlockPos *);\n  bool (__fastcall *canHaveExtraData)(BlockLegacy *this);\n  bool (__fastcall *hasComparatorSignal)(BlockLegacy *this);\n  int (__fastcall *getComparatorSignal)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *, unsigned __int8);\n  bool (__fastcall *onDig)(BlockLegacy *this, const Block *, Actor *, ItemStack *, const BlockPos *);\n  bool (__fastcall *canSlide)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  bool (__fastcall *canSpawnAt)(BlockLegacy *this, const BlockSource *, const BlockPos *);\n  void (__fastcall *notifySpawnedAt)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getIconYOffset)(BlockLegacy *this);\n  std::string *(__fastcall *buildDescriptionId)(BlockLegacy *this, std::string *result, const Block *);\n  bool (__fastcall *isAuxValueRelevantForPicking)(BlockLegacy *this);\n  int (__fastcall *getColor)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  int (__fastcall *getColor)(BlockLegacy *this, const Block *);\n  int (__fastcall *getColorAtPos)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getColorForParticle)(BlockLegacy *this, BlockSource *, const BlockPos *, const Block *);\n  bool (__fastcall *isSeasonTinted)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  void (__fastcall *onGraphicsModeChanged)(BlockLegacy *this, const BlockGraphicsModeChangeContext *);\n  float (__fastcall *getShadeBrightness)(BlockLegacy *this, const Block *);\n  const AABB *(__fastcall *getVisualShapeInWorld)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *, AABB *, bool);\n  const AABB *(__fastcall *getVisualShape)(BlockLegacy *this, const Block *, AABB *, bool);\n  const AABB *(__fastcall *getUIShape)(BlockLegacy *this, const Block *, AABB *);\n  int (__fastcall *telemetryVariant)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  int (__fastcall *getVariant)(BlockLegacy *this, const Block *);\n  bool (__fastcall *canSpawnOn)(BlockLegacy *this);\n  const Block *(__fastcall *getRenderBlock)(BlockLegacy *this);\n  unsigned __int8 (__fastcall *getMappedFace)(BlockLegacy *this, unsigned __int8, const Block *);\n  bool (__fastcall *renderTwoFaced)(BlockLegacy *this);\n  Flip (__fastcall *getFaceFlip)(BlockLegacy *this, unsigned __int8, const Block *);\n  void (__fastcall *animateTick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  BlockLegacy *(__fastcall *init)(BlockLegacy *this);\n  BlockLegacy *(__fastcall *setLightBlock)(BlockLegacy *this, Brightness);\n  BlockLegacy *(__fastcall *setLightEmission)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setExplodeable)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFlammable)(BlockLegacy *this, FlameOdds, BurnOdds);\n  BlockLegacy *(__fastcall *setDestroyTime)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *setFriction)(BlockLegacy *this, float);\n  BlockLegacy *(__fastcall *addProperty)(BlockLegacy *this, BlockProperty);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *, unsigned __int64);\n  BlockLegacy *(__fastcall *addState)(BlockLegacy *this, const ItemState *);\n  BlockLegacy *(__fastcall *setAllowsRunes)(BlockLegacy *this, bool);\n  BlockLegacy *(__fastcall *setMapColor)(BlockLegacy *this, const mce::Color *);\n  bool (__fastcall *canBeSilkTouched)(BlockLegacy *this);\n  ItemInstance *(__fastcall *getSilkTouchItemInstance)(BlockLegacy *this, ItemInstance *result, const Block *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const Vec3 *, const Vec3 *);\n  void (__fastcall *setVisualShape)(BlockLegacy *this, const AABB *);\n  const Block *(__fastcall *tryLegacyUpgrade)(BlockLegacy *this, unsigned __int16);\n  bool (__fastcall *dealsContactDamage)(BlockLegacy *this, const Actor *, const Block *, bool);\n  void (__fastcall *onRemove)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onExploded)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *);\n  void (__fastcall *onStandOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOn)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onStepOff)(BlockLegacy *this, Actor *, const BlockPos *);\n  void (__fastcall *onPlayerPlacing)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, unsigned __int8);\n  void (__fastcall *onPlace)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  void (__fastcall *onFallOn)(BlockLegacy *this, BlockSource *, const BlockPos *, Actor *, float);\n  void (__fastcall *playerDestroy)(BlockLegacy *this, Player *, const BlockPos *, const Block *);\n  void (__fastcall *tick)(BlockLegacy *this, BlockSource *, const BlockPos *, Random *);\n  bool (__fastcall *shouldRandomTick)(BlockLegacy *this);\n  bool (__fastcall *isInteractiveBlock)(BlockLegacy *this);\n  HitResult *(__fastcall *clip)(BlockLegacy *this, HitResult *result, BlockSource *, const BlockPos *, const Vec3 *, const Vec3 *, bool);\n  bool (__fastcall *use)(BlockLegacy *this, Player *, const BlockPos *, unsigned __int8);\n  bool (__fastcall *canSurvive)(BlockLegacy *this, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this, const Block *, BlockSource *, const BlockPos *);\n  BlockRenderLayer (__fastcall *getRenderLayer)(BlockLegacy *this);\n  int (__fastcall *getExtraRenderLayers)(BlockLegacy *this);\n  float (__fastcall *getExplosionResistance)(BlockLegacy *this, Actor *);\n  Brightness *(__fastcall *getLightEmission)(BlockLegacy *this, Brightness *result, const Block *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result, BlockSource *, const BlockPos *);\n  mce::Color *(__fastcall *getMapColor)(BlockLegacy *this, mce::Color *result);\n  bool (__fastcall *isCropBlock)(BlockLegacy *this);\n  void (__fastcall *_executeEvent)(BlockLegacy *this, const std::string *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  bool (__fastcall *_executeTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  void (__fastcall *_forceExecuteTrigger)(BlockLegacy *this, const DefinitionTrigger *, std::vector<std::pair<std::string const ,std::string const >> *, RenderParams *);\n  ItemInstance *(__fastcall *getEntityResourceItem)(ActorBlock *this, ItemInstance *result, Random *, const BlockActor *, int);\n};\n\n")])])])])}),[],!1,null,null,null);c.default=e.exports}}]);